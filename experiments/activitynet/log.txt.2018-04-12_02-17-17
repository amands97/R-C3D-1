Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 02:17:19.116245 25560 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 02:17:19.116276 25560 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 02:17:19.116986 25560 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 02:17:19.117281 25560 layer_factory.hpp:77] Creating layer data
I0412 02:17:19.130089 25560 net.cpp:100] Creating Layer data
I0412 02:17:19.130112 25560 net.cpp:408] data -> data
I0412 02:17:19.130125 25560 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 02:17:19.140442 25560 net.cpp:150] Setting up data
I0412 02:17:19.140475 25560 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 02:17:19.140481 25560 net.cpp:157] Top shape: 1 3 (3)
I0412 02:17:19.140486 25560 net.cpp:165] Memory required for data: 115605516
I0412 02:17:19.140494 25560 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 02:17:19.140511 25560 net.cpp:100] Creating Layer data_data_0_split
I0412 02:17:19.140542 25560 net.cpp:434] data_data_0_split <- data
I0412 02:17:19.140571 25560 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 02:17:19.140600 25560 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 02:17:19.140669 25560 net.cpp:150] Setting up data_data_0_split
I0412 02:17:19.140684 25560 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 02:17:19.140692 25560 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 02:17:19.140702 25560 net.cpp:165] Memory required for data: 346816524
I0412 02:17:19.140709 25560 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 02:17:19.140781 25560 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 02:17:19.140826 25560 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 02:17:19.140848 25560 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 02:17:19.140905 25560 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 02:17:19.141057 25560 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 02:17:19.141069 25560 net.cpp:157] Top shape: 1 3 (3)
I0412 02:17:19.141074 25560 net.cpp:157] Top shape: 1 3 (3)
I0412 02:17:19.141077 25560 net.cpp:165] Memory required for data: 346816548
I0412 02:17:19.141083 25560 layer_factory.hpp:77] Creating layer conv1a
I0412 02:17:19.141104 25560 net.cpp:100] Creating Layer conv1a
I0412 02:17:19.141113 25560 net.cpp:434] conv1a <- data_data_0_split_0
I0412 02:17:19.141140 25560 net.cpp:408] conv1a -> conv1a
I0412 02:17:19.163867 25560 net.cpp:150] Setting up conv1a
I0412 02:17:19.163898 25560 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 02:17:19.163902 25560 net.cpp:165] Memory required for data: 2813067300
I0412 02:17:19.163920 25560 layer_factory.hpp:77] Creating layer relu1a
I0412 02:17:19.163935 25560 net.cpp:100] Creating Layer relu1a
I0412 02:17:19.163944 25560 net.cpp:434] relu1a <- conv1a
I0412 02:17:19.163950 25560 net.cpp:395] relu1a -> conv1a (in-place)
I0412 02:17:19.163965 25560 net.cpp:150] Setting up relu1a
I0412 02:17:19.163974 25560 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 02:17:19.163976 25560 net.cpp:165] Memory required for data: 5279318052
I0412 02:17:19.163980 25560 layer_factory.hpp:77] Creating layer pool1
I0412 02:17:19.163990 25560 net.cpp:100] Creating Layer pool1
I0412 02:17:19.163996 25560 net.cpp:434] pool1 <- conv1a
I0412 02:17:19.164003 25560 net.cpp:408] pool1 -> pool1
I0412 02:17:19.164110 25560 net.cpp:150] Setting up pool1
I0412 02:17:19.164119 25560 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 02:17:19.164124 25560 net.cpp:165] Memory required for data: 5895880740
I0412 02:17:19.164129 25560 layer_factory.hpp:77] Creating layer conv2a
I0412 02:17:19.164144 25560 net.cpp:100] Creating Layer conv2a
I0412 02:17:19.164149 25560 net.cpp:434] conv2a <- pool1
I0412 02:17:19.164156 25560 net.cpp:408] conv2a -> conv2a
I0412 02:17:19.172782 25560 net.cpp:150] Setting up conv2a
I0412 02:17:19.172817 25560 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 02:17:19.172822 25560 net.cpp:165] Memory required for data: 7129006116
I0412 02:17:19.172842 25560 layer_factory.hpp:77] Creating layer relu2a
I0412 02:17:19.172857 25560 net.cpp:100] Creating Layer relu2a
I0412 02:17:19.172863 25560 net.cpp:434] relu2a <- conv2a
I0412 02:17:19.172875 25560 net.cpp:395] relu2a -> conv2a (in-place)
I0412 02:17:19.172888 25560 net.cpp:150] Setting up relu2a
I0412 02:17:19.172894 25560 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 02:17:19.172897 25560 net.cpp:165] Memory required for data: 8362131492
I0412 02:17:19.172900 25560 layer_factory.hpp:77] Creating layer pool2
I0412 02:17:19.172914 25560 net.cpp:100] Creating Layer pool2
I0412 02:17:19.172919 25560 net.cpp:434] pool2 <- conv2a
I0412 02:17:19.172924 25560 net.cpp:408] pool2 -> pool2
I0412 02:17:19.173040 25560 net.cpp:150] Setting up pool2
I0412 02:17:19.173049 25560 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 02:17:19.173053 25560 net.cpp:165] Memory required for data: 8516272164
I0412 02:17:19.173058 25560 layer_factory.hpp:77] Creating layer conv3a
I0412 02:17:19.173074 25560 net.cpp:100] Creating Layer conv3a
I0412 02:17:19.173080 25560 net.cpp:434] conv3a <- pool2
I0412 02:17:19.173089 25560 net.cpp:408] conv3a -> conv3a
I0412 02:17:19.182153 25560 net.cpp:150] Setting up conv3a
I0412 02:17:19.182180 25560 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 02:17:19.182185 25560 net.cpp:165] Memory required for data: 8824553508
I0412 02:17:19.182202 25560 layer_factory.hpp:77] Creating layer relu3a
I0412 02:17:19.182214 25560 net.cpp:100] Creating Layer relu3a
I0412 02:17:19.182220 25560 net.cpp:434] relu3a <- conv3a
I0412 02:17:19.182230 25560 net.cpp:395] relu3a -> conv3a (in-place)
I0412 02:17:19.182241 25560 net.cpp:150] Setting up relu3a
I0412 02:17:19.182248 25560 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 02:17:19.182252 25560 net.cpp:165] Memory required for data: 9132834852
I0412 02:17:19.182256 25560 layer_factory.hpp:77] Creating layer conv3b
I0412 02:17:19.182266 25560 net.cpp:100] Creating Layer conv3b
I0412 02:17:19.182271 25560 net.cpp:434] conv3b <- conv3a
I0412 02:17:19.182281 25560 net.cpp:408] conv3b -> conv3b
I0412 02:17:19.200856 25560 net.cpp:150] Setting up conv3b
I0412 02:17:19.200939 25560 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 02:17:19.200963 25560 net.cpp:165] Memory required for data: 9441116196
I0412 02:17:19.200989 25560 layer_factory.hpp:77] Creating layer relu3b
I0412 02:17:19.201016 25560 net.cpp:100] Creating Layer relu3b
I0412 02:17:19.201025 25560 net.cpp:434] relu3b <- conv3b
I0412 02:17:19.201042 25560 net.cpp:395] relu3b -> conv3b (in-place)
I0412 02:17:19.201056 25560 net.cpp:150] Setting up relu3b
I0412 02:17:19.201068 25560 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 02:17:19.201072 25560 net.cpp:165] Memory required for data: 9749397540
I0412 02:17:19.201076 25560 layer_factory.hpp:77] Creating layer pool3
I0412 02:17:19.201094 25560 net.cpp:100] Creating Layer pool3
I0412 02:17:19.201100 25560 net.cpp:434] pool3 <- conv3b
I0412 02:17:19.201112 25560 net.cpp:408] pool3 -> pool3
I0412 02:17:19.201205 25560 net.cpp:150] Setting up pool3
I0412 02:17:19.201215 25560 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 02:17:19.201220 25560 net.cpp:165] Memory required for data: 9787932708
I0412 02:17:19.201223 25560 layer_factory.hpp:77] Creating layer conv4a
I0412 02:17:19.201242 25560 net.cpp:100] Creating Layer conv4a
I0412 02:17:19.201249 25560 net.cpp:434] conv4a <- pool3
I0412 02:17:19.201259 25560 net.cpp:408] conv4a -> conv4a
I0412 02:17:19.237138 25560 net.cpp:150] Setting up conv4a
I0412 02:17:19.237164 25560 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 02:17:19.237167 25560 net.cpp:165] Memory required for data: 9865003044
I0412 02:17:19.237181 25560 layer_factory.hpp:77] Creating layer relu4a
I0412 02:17:19.237190 25560 net.cpp:100] Creating Layer relu4a
I0412 02:17:19.237197 25560 net.cpp:434] relu4a <- conv4a
I0412 02:17:19.237205 25560 net.cpp:395] relu4a -> conv4a (in-place)
I0412 02:17:19.237213 25560 net.cpp:150] Setting up relu4a
I0412 02:17:19.237217 25560 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 02:17:19.237221 25560 net.cpp:165] Memory required for data: 9942073380
I0412 02:17:19.237222 25560 layer_factory.hpp:77] Creating layer conv4b
I0412 02:17:19.237236 25560 net.cpp:100] Creating Layer conv4b
I0412 02:17:19.237241 25560 net.cpp:434] conv4b <- conv4a
I0412 02:17:19.237246 25560 net.cpp:408] conv4b -> conv4b
I0412 02:17:19.299790 25560 net.cpp:150] Setting up conv4b
I0412 02:17:19.299825 25560 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 02:17:19.299830 25560 net.cpp:165] Memory required for data: 10019143716
I0412 02:17:19.299840 25560 layer_factory.hpp:77] Creating layer relu4b
I0412 02:17:19.299852 25560 net.cpp:100] Creating Layer relu4b
I0412 02:17:19.299859 25560 net.cpp:434] relu4b <- conv4b
I0412 02:17:19.299867 25560 net.cpp:395] relu4b -> conv4b (in-place)
I0412 02:17:19.299878 25560 net.cpp:150] Setting up relu4b
I0412 02:17:19.299885 25560 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 02:17:19.299888 25560 net.cpp:165] Memory required for data: 10096214052
I0412 02:17:19.299892 25560 layer_factory.hpp:77] Creating layer pool4
I0412 02:17:19.299901 25560 net.cpp:100] Creating Layer pool4
I0412 02:17:19.299909 25560 net.cpp:434] pool4 <- conv4b
I0412 02:17:19.299916 25560 net.cpp:408] pool4 -> pool4
I0412 02:17:19.299983 25560 net.cpp:150] Setting up pool4
I0412 02:17:19.299993 25560 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:17:19.299995 25560 net.cpp:165] Memory required for data: 10105847844
I0412 02:17:19.300000 25560 layer_factory.hpp:77] Creating layer conv5a
I0412 02:17:19.300014 25560 net.cpp:100] Creating Layer conv5a
I0412 02:17:19.300019 25560 net.cpp:434] conv5a <- pool4
I0412 02:17:19.300029 25560 net.cpp:408] conv5a -> conv5a
I0412 02:17:19.369949 25560 net.cpp:150] Setting up conv5a
I0412 02:17:19.370019 25560 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:17:19.370038 25560 net.cpp:165] Memory required for data: 10115481636
I0412 02:17:19.370060 25560 layer_factory.hpp:77] Creating layer relu5a
I0412 02:17:19.370085 25560 net.cpp:100] Creating Layer relu5a
I0412 02:17:19.370105 25560 net.cpp:434] relu5a <- conv5a
I0412 02:17:19.370131 25560 net.cpp:395] relu5a -> conv5a (in-place)
I0412 02:17:19.370158 25560 net.cpp:150] Setting up relu5a
I0412 02:17:19.370182 25560 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:17:19.370198 25560 net.cpp:165] Memory required for data: 10125115428
I0412 02:17:19.370214 25560 layer_factory.hpp:77] Creating layer conv5b
I0412 02:17:19.370241 25560 net.cpp:100] Creating Layer conv5b
I0412 02:17:19.370261 25560 net.cpp:434] conv5b <- conv5a
I0412 02:17:19.370282 25560 net.cpp:408] conv5b -> conv5b
I0412 02:17:19.438138 25560 net.cpp:150] Setting up conv5b
I0412 02:17:19.438165 25560 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:17:19.438169 25560 net.cpp:165] Memory required for data: 10134749220
I0412 02:17:19.438179 25560 layer_factory.hpp:77] Creating layer relu5b
I0412 02:17:19.438190 25560 net.cpp:100] Creating Layer relu5b
I0412 02:17:19.438196 25560 net.cpp:434] relu5b <- conv5b
I0412 02:17:19.438205 25560 net.cpp:395] relu5b -> conv5b (in-place)
I0412 02:17:19.438215 25560 net.cpp:150] Setting up relu5b
I0412 02:17:19.438220 25560 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:17:19.438223 25560 net.cpp:165] Memory required for data: 10144383012
I0412 02:17:19.438230 25560 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 02:17:19.438237 25560 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 02:17:19.438241 25560 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 02:17:19.438246 25560 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 02:17:19.438256 25560 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 02:17:19.438303 25560 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 02:17:19.438310 25560 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:17:19.438315 25560 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:17:19.438321 25560 net.cpp:165] Memory required for data: 10163650596
I0412 02:17:19.438324 25560 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 02:17:19.438338 25560 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 02:17:19.438344 25560 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 02:17:19.438350 25560 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 02:17:19.503796 25560 net.cpp:150] Setting up rpn_conv/3x3
I0412 02:17:19.503820 25560 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 02:17:19.503823 25560 net.cpp:165] Memory required for data: 10166796324
I0412 02:17:19.503844 25560 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 02:17:19.503856 25560 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 02:17:19.503864 25560 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 02:17:19.503871 25560 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 02:17:19.503883 25560 net.cpp:150] Setting up rpn_relu/3x3
I0412 02:17:19.503890 25560 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 02:17:19.503893 25560 net.cpp:165] Memory required for data: 10169942052
I0412 02:17:19.503898 25560 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 02:17:19.503912 25560 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 02:17:19.503918 25560 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 02:17:19.503926 25560 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 02:17:19.595255 25560 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 02:17:19.595322 25560 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 02:17:19.595331 25560 net.cpp:165] Memory required for data: 10170728484
I0412 02:17:19.595343 25560 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 02:17:19.595356 25560 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 02:17:19.595365 25560 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 02:17:19.595373 25560 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 02:17:19.595386 25560 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 02:17:19.595396 25560 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 02:17:19.595402 25560 net.cpp:165] Memory required for data: 10171514916
I0412 02:17:19.595405 25560 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 02:17:19.595415 25560 net.cpp:100] Creating Layer rpn/output_pool
I0412 02:17:19.595423 25560 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 02:17:19.595432 25560 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 02:17:19.595505 25560 net.cpp:150] Setting up rpn/output_pool
I0412 02:17:19.595541 25560 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 02:17:19.595561 25560 net.cpp:165] Memory required for data: 10171711524
I0412 02:17:19.595577 25560 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 02:17:19.595602 25560 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 02:17:19.595621 25560 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 02:17:19.595643 25560 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 02:17:19.595666 25560 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 02:17:19.595748 25560 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 02:17:19.595762 25560 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 02:17:19.595768 25560 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 02:17:19.595773 25560 net.cpp:165] Memory required for data: 10172104740
I0412 02:17:19.595777 25560 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 02:17:19.595791 25560 net.cpp:100] Creating Layer rpn_cls_score
I0412 02:17:19.595815 25560 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 02:17:19.595829 25560 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 02:17:19.596767 25560 net.cpp:150] Setting up rpn_cls_score
I0412 02:17:19.596782 25560 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:17:19.596787 25560 net.cpp:165] Memory required for data: 10172133156
I0412 02:17:19.596796 25560 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 02:17:19.596803 25560 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 02:17:19.596808 25560 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 02:17:19.596817 25560 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 02:17:19.596827 25560 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 02:17:19.596896 25560 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 02:17:19.596909 25560 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:17:19.596915 25560 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:17:19.596920 25560 net.cpp:165] Memory required for data: 10172189988
I0412 02:17:19.596925 25560 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 02:17:19.596946 25560 net.cpp:100] Creating Layer rpn_twin_pred
I0412 02:17:19.596953 25560 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 02:17:19.596961 25560 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 02:17:19.597841 25560 net.cpp:150] Setting up rpn_twin_pred
I0412 02:17:19.597856 25560 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:17:19.597862 25560 net.cpp:165] Memory required for data: 10172218404
I0412 02:17:19.597872 25560 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 02:17:19.597900 25560 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 02:17:19.597923 25560 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 02:17:19.597949 25560 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 02:17:19.597960 25560 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 02:17:19.598028 25560 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 02:17:19.598052 25560 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:17:19.598059 25560 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:17:19.598063 25560 net.cpp:165] Memory required for data: 10172275236
I0412 02:17:19.598067 25560 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 02:17:19.598078 25560 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 02:17:19.598083 25560 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 02:17:19.598093 25560 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 02:17:19.598137 25560 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 02:17:19.598150 25560 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:17:19.598155 25560 net.cpp:165] Memory required for data: 10172303652
I0412 02:17:19.598160 25560 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 02:17:19.598165 25560 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 02:17:19.598172 25560 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 02:17:19.598179 25560 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 02:17:19.598198 25560 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 02:17:19.598209 25560 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 02:17:19.598300 25560 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 02:17:19.598311 25560 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:17:19.598318 25560 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:17:19.598325 25560 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:17:19.598330 25560 net.cpp:165] Memory required for data: 10172388900
I0412 02:17:19.598333 25560 layer_factory.hpp:77] Creating layer rpn-data
I0412 02:17:19.598855 25560 net.cpp:100] Creating Layer rpn-data
I0412 02:17:19.598886 25560 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 02:17:19.598911 25560 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 02:17:19.598932 25560 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 02:17:19.598956 25560 net.cpp:408] rpn-data -> rpn_labels
I0412 02:17:19.598984 25560 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 02:17:19.599011 25560 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 02:17:19.599045 25560 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 02:17:19.602854 25560 net.cpp:150] Setting up rpn-data
I0412 02:17:19.602869 25560 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 02:17:19.602875 25560 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:17:19.602880 25560 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:17:19.602886 25560 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:17:19.602891 25560 net.cpp:165] Memory required for data: 10172488356
I0412 02:17:19.602896 25560 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 02:17:19.602907 25560 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 02:17:19.602916 25560 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 02:17:19.602923 25560 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 02:17:19.602932 25560 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 02:17:19.602973 25560 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 02:17:19.602982 25560 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 02:17:19.602986 25560 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 02:17:19.602990 25560 net.cpp:165] Memory required for data: 10172516772
I0412 02:17:19.602995 25560 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 02:17:19.603008 25560 net.cpp:100] Creating Layer rpn_loss_cls
I0412 02:17:19.603013 25560 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 02:17:19.603019 25560 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 02:17:19.603029 25560 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 02:17:19.603042 25560 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 02:17:19.603154 25560 net.cpp:150] Setting up rpn_loss_cls
I0412 02:17:19.603163 25560 net.cpp:157] Top shape: (1)
I0412 02:17:19.603166 25560 net.cpp:160]     with loss weight 1
I0412 02:17:19.603186 25560 net.cpp:165] Memory required for data: 10172516776
I0412 02:17:19.603191 25560 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 02:17:19.603200 25560 net.cpp:100] Creating Layer rpn_loss_twin
I0412 02:17:19.603206 25560 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 02:17:19.603212 25560 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 02:17:19.603219 25560 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 02:17:19.603226 25560 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 02:17:19.603232 25560 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 02:17:19.603324 25560 net.cpp:150] Setting up rpn_loss_twin
I0412 02:17:19.603332 25560 net.cpp:157] Top shape: (1)
I0412 02:17:19.603335 25560 net.cpp:160]     with loss weight 1
I0412 02:17:19.603343 25560 net.cpp:165] Memory required for data: 10172516780
I0412 02:17:19.603348 25560 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 02:17:19.603355 25560 net.cpp:100] Creating Layer rpn_accuarcy
I0412 02:17:19.603363 25560 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 02:17:19.603368 25560 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 02:17:19.603376 25560 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 02:17:19.603386 25560 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 02:17:19.603435 25560 net.cpp:150] Setting up rpn_accuarcy
I0412 02:17:19.603441 25560 net.cpp:157] Top shape: (1)
I0412 02:17:19.603447 25560 net.cpp:157] Top shape: 2 (2)
I0412 02:17:19.603451 25560 net.cpp:165] Memory required for data: 10172516792
I0412 02:17:19.603457 25560 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 02:17:19.603464 25560 net.cpp:100] Creating Layer rpn_cls_prob
I0412 02:17:19.603472 25560 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 02:17:19.603480 25560 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 02:17:19.603554 25560 net.cpp:150] Setting up rpn_cls_prob
I0412 02:17:19.603560 25560 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:17:19.603564 25560 net.cpp:165] Memory required for data: 10172545208
I0412 02:17:19.603569 25560 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 02:17:19.603579 25560 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 02:17:19.603585 25560 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 02:17:19.603591 25560 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 02:17:19.603626 25560 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 02:17:19.603634 25560 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:17:19.603638 25560 net.cpp:165] Memory required for data: 10172573624
I0412 02:17:19.603642 25560 layer_factory.hpp:77] Creating layer proposal
I0412 02:17:19.604157 25560 net.cpp:100] Creating Layer proposal
I0412 02:17:19.604169 25560 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 02:17:19.604176 25560 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 02:17:19.604184 25560 net.cpp:408] proposal -> rpn_rois
I0412 02:17:19.608512 25560 net.cpp:150] Setting up proposal
I0412 02:17:19.608526 25560 net.cpp:157] Top shape: 1 3 (3)
I0412 02:17:19.608530 25560 net.cpp:165] Memory required for data: 10172573636
I0412 02:17:19.608536 25560 layer_factory.hpp:77] Creating layer roi-data
I0412 02:17:19.608662 25560 net.cpp:100] Creating Layer roi-data
I0412 02:17:19.608671 25560 net.cpp:434] roi-data <- rpn_rois
I0412 02:17:19.608678 25560 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 02:17:19.608686 25560 net.cpp:408] roi-data -> rois
I0412 02:17:19.608696 25560 net.cpp:408] roi-data -> labels
I0412 02:17:19.608705 25560 net.cpp:408] roi-data -> twin_targets
I0412 02:17:19.608712 25560 net.cpp:408] roi-data -> twin_inside_weights
I0412 02:17:19.608721 25560 net.cpp:408] roi-data -> twin_outside_weights
I0412 02:17:19.609030 25560 net.cpp:150] Setting up roi-data
I0412 02:17:19.609042 25560 net.cpp:157] Top shape: 1 3 (3)
I0412 02:17:19.609048 25560 net.cpp:157] Top shape: 1 1 (1)
I0412 02:17:19.609053 25560 net.cpp:157] Top shape: 1 402 (402)
I0412 02:17:19.609058 25560 net.cpp:157] Top shape: 1 402 (402)
I0412 02:17:19.609062 25560 net.cpp:157] Top shape: 1 402 (402)
I0412 02:17:19.609066 25560 net.cpp:165] Memory required for data: 10172578476
I0412 02:17:19.609071 25560 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 02:17:19.609078 25560 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 02:17:19.609086 25560 net.cpp:434] labels_roi-data_1_split <- labels
I0412 02:17:19.609092 25560 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 02:17:19.609103 25560 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 02:17:19.609145 25560 net.cpp:150] Setting up labels_roi-data_1_split
I0412 02:17:19.609153 25560 net.cpp:157] Top shape: 1 1 (1)
I0412 02:17:19.609158 25560 net.cpp:157] Top shape: 1 1 (1)
I0412 02:17:19.609161 25560 net.cpp:165] Memory required for data: 10172578484
I0412 02:17:19.609165 25560 layer_factory.hpp:77] Creating layer roi_pool5
I0412 02:17:19.609175 25560 net.cpp:100] Creating Layer roi_pool5
I0412 02:17:19.609182 25560 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 02:17:19.609189 25560 net.cpp:434] roi_pool5 <- rois
I0412 02:17:19.609194 25560 net.cpp:408] roi_pool5 -> pool5
I0412 02:17:19.609203 25560 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 02:17:19.609212 25560 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 02:17:19.609258 25560 net.cpp:150] Setting up roi_pool5
I0412 02:17:19.609266 25560 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 02:17:19.609269 25560 net.cpp:165] Memory required for data: 10172611252
I0412 02:17:19.609273 25560 layer_factory.hpp:77] Creating layer fc6
I0412 02:17:19.609282 25560 net.cpp:100] Creating Layer fc6
I0412 02:17:19.609287 25560 net.cpp:434] fc6 <- pool5
I0412 02:17:19.609294 25560 net.cpp:408] fc6 -> fc6
I0412 02:17:19.985553 25560 net.cpp:150] Setting up fc6
I0412 02:17:19.985632 25560 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:17:19.985642 25560 net.cpp:165] Memory required for data: 10172627636
I0412 02:17:19.985658 25560 layer_factory.hpp:77] Creating layer relu6
I0412 02:17:19.985673 25560 net.cpp:100] Creating Layer relu6
I0412 02:17:19.985683 25560 net.cpp:434] relu6 <- fc6
I0412 02:17:19.985695 25560 net.cpp:395] relu6 -> fc6 (in-place)
I0412 02:17:19.985709 25560 net.cpp:150] Setting up relu6
I0412 02:17:19.985718 25560 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:17:19.985725 25560 net.cpp:165] Memory required for data: 10172644020
I0412 02:17:19.985731 25560 layer_factory.hpp:77] Creating layer drop6
I0412 02:17:19.985744 25560 net.cpp:100] Creating Layer drop6
I0412 02:17:19.985751 25560 net.cpp:434] drop6 <- fc6
I0412 02:17:19.985759 25560 net.cpp:395] drop6 -> fc6 (in-place)
I0412 02:17:19.985803 25560 net.cpp:150] Setting up drop6
I0412 02:17:19.985815 25560 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:17:19.985821 25560 net.cpp:165] Memory required for data: 10172660404
I0412 02:17:19.985826 25560 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 02:17:19.985838 25560 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 02:17:19.985847 25560 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 02:17:19.985857 25560 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 02:17:19.985869 25560 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 02:17:19.985936 25560 net.cpp:150] Setting up fc6_drop6_0_split
I0412 02:17:19.985947 25560 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:17:19.985957 25560 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:17:19.985965 25560 net.cpp:165] Memory required for data: 10172693172
I0412 02:17:19.985970 25560 layer_factory.hpp:77] Creating layer cls_score
I0412 02:17:19.985983 25560 net.cpp:100] Creating Layer cls_score
I0412 02:17:19.985991 25560 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 02:17:19.986003 25560 net.cpp:408] cls_score -> cls_score
I0412 02:17:20.005646 25560 net.cpp:150] Setting up cls_score
I0412 02:17:20.005677 25560 net.cpp:157] Top shape: 1 201 (201)
I0412 02:17:20.005682 25560 net.cpp:165] Memory required for data: 10172693976
I0412 02:17:20.005694 25560 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 02:17:20.005707 25560 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 02:17:20.005712 25560 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 02:17:20.005720 25560 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 02:17:20.005735 25560 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 02:17:20.005784 25560 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 02:17:20.005792 25560 net.cpp:157] Top shape: 1 201 (201)
I0412 02:17:20.005798 25560 net.cpp:157] Top shape: 1 201 (201)
I0412 02:17:20.005802 25560 net.cpp:165] Memory required for data: 10172695584
I0412 02:17:20.005807 25560 layer_factory.hpp:77] Creating layer twin_pred
I0412 02:17:20.005816 25560 net.cpp:100] Creating Layer twin_pred
I0412 02:17:20.005821 25560 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 02:17:20.005833 25560 net.cpp:408] twin_pred -> twin_pred
I0412 02:17:20.020965 25560 net.cpp:150] Setting up twin_pred
I0412 02:17:20.020998 25560 net.cpp:157] Top shape: 1 402 (402)
I0412 02:17:20.021003 25560 net.cpp:165] Memory required for data: 10172697192
I0412 02:17:20.021015 25560 layer_factory.hpp:77] Creating layer loss_cls
I0412 02:17:20.021029 25560 net.cpp:100] Creating Layer loss_cls
I0412 02:17:20.021036 25560 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 02:17:20.021045 25560 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 02:17:20.021052 25560 net.cpp:408] loss_cls -> loss_cls
I0412 02:17:20.021067 25560 layer_factory.hpp:77] Creating layer loss_cls
I0412 02:17:20.021183 25560 net.cpp:150] Setting up loss_cls
I0412 02:17:20.021193 25560 net.cpp:157] Top shape: (1)
I0412 02:17:20.021198 25560 net.cpp:160]     with loss weight 1
I0412 02:17:20.021210 25560 net.cpp:165] Memory required for data: 10172697196
I0412 02:17:20.021215 25560 layer_factory.hpp:77] Creating layer loss_twin
I0412 02:17:20.021222 25560 net.cpp:100] Creating Layer loss_twin
I0412 02:17:20.021229 25560 net.cpp:434] loss_twin <- twin_pred
I0412 02:17:20.021234 25560 net.cpp:434] loss_twin <- twin_targets
I0412 02:17:20.021239 25560 net.cpp:434] loss_twin <- twin_inside_weights
I0412 02:17:20.021245 25560 net.cpp:434] loss_twin <- twin_outside_weights
I0412 02:17:20.021250 25560 net.cpp:408] loss_twin -> loss_twin
I0412 02:17:20.021356 25560 net.cpp:150] Setting up loss_twin
I0412 02:17:20.021366 25560 net.cpp:157] Top shape: (1)
I0412 02:17:20.021370 25560 net.cpp:160]     with loss weight 1
I0412 02:17:20.021378 25560 net.cpp:165] Memory required for data: 10172697200
I0412 02:17:20.021381 25560 layer_factory.hpp:77] Creating layer accuarcy
I0412 02:17:20.021390 25560 net.cpp:100] Creating Layer accuarcy
I0412 02:17:20.021395 25560 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 02:17:20.021401 25560 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 02:17:20.021411 25560 net.cpp:408] accuarcy -> accuarcy
I0412 02:17:20.021422 25560 net.cpp:150] Setting up accuarcy
I0412 02:17:20.021430 25560 net.cpp:157] Top shape: (1)
I0412 02:17:20.021433 25560 net.cpp:165] Memory required for data: 10172697204
I0412 02:17:20.021440 25560 net.cpp:228] accuarcy does not need backward computation.
I0412 02:17:20.021445 25560 net.cpp:226] loss_twin needs backward computation.
I0412 02:17:20.021450 25560 net.cpp:226] loss_cls needs backward computation.
I0412 02:17:20.021456 25560 net.cpp:226] twin_pred needs backward computation.
I0412 02:17:20.021463 25560 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 02:17:20.021468 25560 net.cpp:226] cls_score needs backward computation.
I0412 02:17:20.021473 25560 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 02:17:20.021478 25560 net.cpp:226] drop6 needs backward computation.
I0412 02:17:20.021486 25560 net.cpp:226] relu6 needs backward computation.
I0412 02:17:20.021489 25560 net.cpp:226] fc6 needs backward computation.
I0412 02:17:20.021493 25560 net.cpp:226] roi_pool5 needs backward computation.
I0412 02:17:20.021499 25560 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 02:17:20.021504 25560 net.cpp:226] roi-data needs backward computation.
I0412 02:17:20.021510 25560 net.cpp:226] proposal needs backward computation.
I0412 02:17:20.021517 25560 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 02:17:20.021522 25560 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 02:17:20.021528 25560 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 02:17:20.021533 25560 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 02:17:20.021543 25560 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 02:17:20.021549 25560 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 02:17:20.021555 25560 net.cpp:226] rpn-data needs backward computation.
I0412 02:17:20.021561 25560 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 02:17:20.021566 25560 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 02:17:20.021574 25560 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 02:17:20.021579 25560 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 02:17:20.021584 25560 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 02:17:20.021589 25560 net.cpp:226] rpn_cls_score needs backward computation.
I0412 02:17:20.021595 25560 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 02:17:20.021600 25560 net.cpp:226] rpn/output_pool needs backward computation.
I0412 02:17:20.021608 25560 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 02:17:20.021613 25560 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 02:17:20.021618 25560 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 02:17:20.021623 25560 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 02:17:20.021630 25560 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 02:17:20.021634 25560 net.cpp:226] relu5b needs backward computation.
I0412 02:17:20.021639 25560 net.cpp:226] conv5b needs backward computation.
I0412 02:17:20.021643 25560 net.cpp:226] relu5a needs backward computation.
I0412 02:17:20.021647 25560 net.cpp:226] conv5a needs backward computation.
I0412 02:17:20.021652 25560 net.cpp:226] pool4 needs backward computation.
I0412 02:17:20.021657 25560 net.cpp:226] relu4b needs backward computation.
I0412 02:17:20.021662 25560 net.cpp:226] conv4b needs backward computation.
I0412 02:17:20.021667 25560 net.cpp:226] relu4a needs backward computation.
I0412 02:17:20.021672 25560 net.cpp:226] conv4a needs backward computation.
I0412 02:17:20.021677 25560 net.cpp:226] pool3 needs backward computation.
I0412 02:17:20.021682 25560 net.cpp:226] relu3b needs backward computation.
I0412 02:17:20.021687 25560 net.cpp:226] conv3b needs backward computation.
I0412 02:17:20.021690 25560 net.cpp:226] relu3a needs backward computation.
I0412 02:17:20.021697 25560 net.cpp:226] conv3a needs backward computation.
I0412 02:17:20.021700 25560 net.cpp:228] pool2 does not need backward computation.
I0412 02:17:20.021708 25560 net.cpp:228] relu2a does not need backward computation.
I0412 02:17:20.021713 25560 net.cpp:228] conv2a does not need backward computation.
I0412 02:17:20.021718 25560 net.cpp:228] pool1 does not need backward computation.
I0412 02:17:20.021723 25560 net.cpp:228] relu1a does not need backward computation.
I0412 02:17:20.021729 25560 net.cpp:228] conv1a does not need backward computation.
I0412 02:17:20.021734 25560 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 02:17:20.021741 25560 net.cpp:228] data_data_0_split does not need backward computation.
I0412 02:17:20.021746 25560 net.cpp:228] data does not need backward computation.
I0412 02:17:20.021752 25560 net.cpp:270] This network produces output accuarcy
I0412 02:17:20.021759 25560 net.cpp:270] This network produces output loss_cls
I0412 02:17:20.021764 25560 net.cpp:270] This network produces output loss_twin
I0412 02:17:20.021769 25560 net.cpp:270] This network produces output rpn_accuarcy
I0412 02:17:20.021775 25560 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 02:17:20.021780 25560 net.cpp:270] This network produces output rpn_cls_loss
I0412 02:17:20.021783 25560 net.cpp:270] This network produces output rpn_loss_twin
I0412 02:17:20.021824 25560 net.cpp:283] Network initialization done.
I0412 02:17:20.021950 25560 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 02:17:20.203169 25560 net.cpp:761] Ignoring source layer pool5
I0412 02:17:20.230806 25560 net.cpp:761] Ignoring source layer fc7
I0412 02:17:20.230836 25560 net.cpp:761] Ignoring source layer relu7
I0412 02:17:20.230840 25560 net.cpp:761] Ignoring source layer drop7
I0412 02:17:20.230844 25560 net.cpp:761] Ignoring source layer fc8-200
I0412 02:17:20.230847 25560 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
99
(array([0]), array([97]))
{'gt_windows': (array([[3.1250000e-02, 3.8569803e+02]], dtype=float32), array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 0.]], dtype=float32)), 'data': array([[[[[-57.,   9., -31., ...,  32.,  52.,  55.],
          [-50., -17.,   4., ..., -44., -43., -24.],
          [-59.,  17.,  -3., ..., -49., -51., -53.],
          ...,
          [ 85.,  96.,  97., ...,  76.,  79.,  77.],
          [ 86.,  97., 101., ...,  76.,  79.,  77.],
          [ 86.,  96.,  96., ...,  76.,  78.,  75.]],

         [[ 10.,   2.,  11., ...,  66.,  64.,  63.],
          [ -2.,  -5.,   0., ...,  60.,  61.,  64.],
          [ -8., -11.,   0., ...,  61.,  57.,  58.],
          ...,
          [ 94.,  91.,  89., ...,  81.,  77.,  72.],
          [ 88.,  85.,  84., ...,  81.,  77.,  73.],
          [ 84.,  81.,  83., ...,  79.,  78.,  75.]],

         [[ 16.,  26.,  -6., ...,  62.,  62.,  61.],
          [ -9., -44., -23., ...,  64.,  63.,  62.],
          [ 39., -23.,  -5., ...,  65.,  64.,  62.],
          ...,
          [113., 109., 102., ...,  73.,  73.,  73.],
          [110., 108., 102., ...,  74.,  73.,  73.],
          [107., 105., 101., ...,  74.,  72.,  72.]],

         ...,

         [[-12., -13., -16., ..., -12., -15., -15.],
          [-16., -16., -16., ..., -11., -13., -14.],
          [-18., -18., -18., ...,  -6.,  -8.,  -9.],
          ...,
          [ 39.,  43.,  43., ...,  85.,  80.,  74.],
          [ 41.,  37.,  27., ...,  79.,  73.,  68.],
          [ 36.,  25.,  21., ...,  80.,  76.,  73.]],

         [[-12., -13., -16., ..., -12., -15., -15.],
          [-16., -16., -16., ..., -11., -13., -14.],
          [-18., -18., -18., ...,  -6.,  -8.,  -9.],
          ...,
          [ 39.,  43.,  43., ...,  85.,  80.,  74.],
          [ 41.,  37.,  27., ...,  79.,  73.,  68.],
          [ 36.,  25.,  21., ...,  80.,  76.,  73.]],

         [[-12., -13., -16., ..., -12., -15., -15.],
          [-16., -16., -16., ..., -11., -13., -14.],
          [-18., -18., -18., ...,  -6.,  -8.,  -9.],
          ...,
          [ 39.,  43.,  43., ...,  85.,  80.,  74.],
          [ 41.,  37.,  27., ...,  79.,  73.,  68.],
          [ 36.,  25.,  21., ...,  80.,  76.,  73.]]],


        [[[ 40., 105.,  70., ...,  25.,  45.,  48.],
          [ 41.,  73., 108., ..., -51., -50., -31.],
          [ 38., 121., 121., ..., -57., -59., -61.],
          ...,
          [ 19.,  34.,  37., ...,  73.,  74.,  72.],
          [ 19.,  34.,  40., ...,  73.,  74.,  72.],
          [ 18.,  30.,  35., ...,  73.,  73.,  70.]],

         [[123., 120., 117., ...,  59.,  57.,  56.],
          [121., 123., 116., ...,  53.,  54.,  57.],
          [121., 121., 117., ...,  54.,  50.,  51.],
          ...,
          [ 15.,  17.,  18., ...,  76.,  72.,  67.],
          [ 16.,  17.,  19., ...,  76.,  72.,  68.],
          [ 16.,  17.,  23., ...,  74.,  73.,  70.]],

         [[104., 116.,  99., ...,  55.,  55.,  54.],
          [ 75.,  43.,  83., ...,  57.,  56.,  55.],
          [127.,  70., 111., ...,  58.,  57.,  55.],
          ...,
          [ 19.,  19.,  19., ...,  70.,  70.,  70.],
          [ 18.,  18.,  20., ...,  71.,  70.,  70.],
          [ 17.,  19.,  20., ...,  71.,  69.,  69.]],

         ...,

         [[ 36.,  35.,  32., ...,  35.,  35.,  33.],
          [ 32.,  32.,  32., ...,  38.,  37.,  36.],
          [ 28.,  28.,  29., ...,  40.,  39.,  38.],
          ...,
          [ 40.,  44.,  44., ...,  89.,  85.,  79.],
          [ 43.,  39.,  29., ...,  86.,  80.,  75.],
          [ 38.,  27.,  23., ...,  87.,  83.,  80.]],

         [[ 36.,  35.,  32., ...,  35.,  35.,  33.],
          [ 32.,  32.,  32., ...,  38.,  37.,  36.],
          [ 28.,  28.,  29., ...,  40.,  39.,  38.],
          ...,
          [ 40.,  44.,  44., ...,  89.,  85.,  79.],
          [ 43.,  39.,  29., ...,  86.,  80.,  75.],
          [ 38.,  27.,  23., ...,  87.,  83.,  80.]],

         [[ 36.,  35.,  32., ...,  35.,  35.,  33.],
          [ 32.,  32.,  32., ...,  38.,  37.,  36.],
          [ 28.,  28.,  29., ...,  40.,  39.,  38.],
          ...,
          [ 40.,  44.,  44., ...,  89.,  85.,  79.],
          [ 43.,  39.,  29., ...,  86.,  80.,  75.],
          [ 38.,  27.,  23., ...,  87.,  83.,  80.]]],


        [[[ 79., 144., 110., ...,  19.,  39.,  42.],
          [ 81., 115., 147., ..., -57., -56., -37.],
          [ 77., 153., 153., ..., -61., -63., -65.],
          ...,
          [-37., -23., -20., ...,  67.,  68.,  66.],
          [-35., -21., -15., ...,  67.,  68.,  66.],
          [-38., -23., -19., ...,  67.,  67.,  64.]],

         [[151., 151., 153., ...,  51.,  49.,  48.],
          [150., 153., 153., ...,  45.,  46.,  49.],
          [149., 153., 153., ...,  48.,  44.,  45.],
          ...,
          [-57., -52., -47., ...,  70.,  66.,  61.],
          [-52., -47., -41., ...,  70.,  66.,  62.],
          [-47., -42., -34., ...,  68.,  67.,  64.]],

         [[140., 153., 135., ...,  47.,  47.,  46.],
          [114.,  83., 120., ...,  49.,  48.,  47.],
          [153., 111., 147., ...,  50.,  49.,  47.],
          ...,
          [-67., -63., -59., ...,  65.,  64.,  64.],
          [-62., -58., -56., ...,  65.,  64.,  64.],
          [-59., -54., -52., ...,  65.,  63.,  63.]],

         ...,

         [[ -9., -10., -13., ...,   4.,   2.,   0.],
          [-15., -15., -15., ...,   9.,   5.,   4.],
          [-19., -19., -20., ...,  13.,  10.,   9.],
          ...,
          [ 45.,  49.,  49., ..., 103.,  97.,  91.],
          [ 49.,  45.,  35., ...,  98.,  92.,  87.],
          [ 44.,  33.,  29., ...,  99.,  95.,  92.]],

         [[ -9., -10., -13., ...,   4.,   2.,   0.],
          [-15., -15., -15., ...,   9.,   5.,   4.],
          [-19., -19., -20., ...,  13.,  10.,   9.],
          ...,
          [ 45.,  49.,  49., ..., 103.,  97.,  91.],
          [ 49.,  45.,  35., ...,  98.,  92.,  87.],
          [ 44.,  33.,  29., ...,  99.,  95.,  92.]],

         [[ -9., -10., -13., ...,   4.,   2.,   0.],
          [-15., -15., -15., ...,   9.,   5.,   4.],
          [-19., -19., -20., ...,  13.,  10.,   9.],
          ...,
          [ 45.,  49.,  49., ..., 103.,  97.,  91.],
          [ 49.,  45.,  35., ...,  98.,  92.,  87.],
          [ 44.,  33.,  29., ...,  99.,  95.,  92.]]]]], dtype=float32)}
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 95, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 130, in forward
    blob1, blob2 = blob
ValueError: need more than 1 value to unpack
Terminating BlobFetcher
