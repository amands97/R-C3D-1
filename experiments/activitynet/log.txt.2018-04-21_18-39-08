Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=0, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 0,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': False,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
44988 roidb entries
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
precimputed
twin target means:
twin target stdevs:
NOT normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0421 18:39:13.580785 12224 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0421 18:39:13.581163 12224 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0421 18:39:13.601546 12224 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 200"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 200"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 200
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 400
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SigmoidCrossEntropyLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuracy"
  type: "Python"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuracy"
  python_param {
    module: "utils.accuracy_layer"
    layer: "AccuracyLayer"
    param_str: "{\"top_k\": 2}"
  }
}
I0421 18:39:13.601994 12224 layer_factory.hpp:77] Creating layer data
I0421 18:39:13.673960 12224 net.cpp:100] Creating Layer data
I0421 18:39:13.673983 12224 net.cpp:408] data -> data
I0421 18:39:13.673997 12224 net.cpp:408] data -> gt_boxes
setting up
has rpn
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0421 18:39:13.748426 12224 net.cpp:150] Setting up data
I0421 18:39:13.748457 12224 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0421 18:39:13.748468 12224 net.cpp:157] Top shape: 1 101 (101)
I0421 18:39:13.748487 12224 net.cpp:165] Memory required for data: 115605908
I0421 18:39:13.748499 12224 layer_factory.hpp:77] Creating layer data_data_0_split
I0421 18:39:13.748517 12224 net.cpp:100] Creating Layer data_data_0_split
I0421 18:39:13.748527 12224 net.cpp:434] data_data_0_split <- data
I0421 18:39:13.748538 12224 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0421 18:39:13.748555 12224 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0421 18:39:13.748596 12224 net.cpp:150] Setting up data_data_0_split
I0421 18:39:13.748606 12224 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0421 18:39:13.748613 12224 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0421 18:39:13.748618 12224 net.cpp:165] Memory required for data: 346816916
I0421 18:39:13.748623 12224 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0421 18:39:13.748632 12224 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0421 18:39:13.748641 12224 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0421 18:39:13.748648 12224 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0421 18:39:13.748662 12224 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0421 18:39:13.748692 12224 net.cpp:150] Setting up gt_boxes_data_1_split
I0421 18:39:13.748699 12224 net.cpp:157] Top shape: 1 101 (101)
I0421 18:39:13.748703 12224 net.cpp:157] Top shape: 1 101 (101)
I0421 18:39:13.748706 12224 net.cpp:165] Memory required for data: 346817724
I0421 18:39:13.748715 12224 layer_factory.hpp:77] Creating layer conv1a
I0421 18:39:13.748736 12224 net.cpp:100] Creating Layer conv1a
I0421 18:39:13.748744 12224 net.cpp:434] conv1a <- data_data_0_split_0
I0421 18:39:13.748754 12224 net.cpp:408] conv1a -> conv1a
I0421 18:39:14.905419 12224 net.cpp:150] Setting up conv1a
I0421 18:39:14.905460 12224 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0421 18:39:14.905467 12224 net.cpp:165] Memory required for data: 2813068476
I0421 18:39:14.905491 12224 layer_factory.hpp:77] Creating layer relu1a
I0421 18:39:14.905539 12224 net.cpp:100] Creating Layer relu1a
I0421 18:39:14.905563 12224 net.cpp:434] relu1a <- conv1a
I0421 18:39:14.905575 12224 net.cpp:395] relu1a -> conv1a (in-place)
I0421 18:39:14.906195 12224 net.cpp:150] Setting up relu1a
I0421 18:39:14.906213 12224 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0421 18:39:14.906219 12224 net.cpp:165] Memory required for data: 5279319228
I0421 18:39:14.906224 12224 layer_factory.hpp:77] Creating layer pool1
I0421 18:39:14.906237 12224 net.cpp:100] Creating Layer pool1
I0421 18:39:14.906265 12224 net.cpp:434] pool1 <- conv1a
I0421 18:39:14.906288 12224 net.cpp:408] pool1 -> pool1
I0421 18:39:14.906533 12224 net.cpp:150] Setting up pool1
I0421 18:39:14.906549 12224 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0421 18:39:14.906574 12224 net.cpp:165] Memory required for data: 5895881916
I0421 18:39:14.906584 12224 layer_factory.hpp:77] Creating layer conv2a
I0421 18:39:14.906599 12224 net.cpp:100] Creating Layer conv2a
I0421 18:39:14.906606 12224 net.cpp:434] conv2a <- pool1
I0421 18:39:14.906615 12224 net.cpp:408] conv2a -> conv2a
I0421 18:39:14.922567 12224 net.cpp:150] Setting up conv2a
I0421 18:39:14.922610 12224 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0421 18:39:14.922616 12224 net.cpp:165] Memory required for data: 7129007292
I0421 18:39:14.922636 12224 layer_factory.hpp:77] Creating layer relu2a
I0421 18:39:14.922649 12224 net.cpp:100] Creating Layer relu2a
I0421 18:39:14.922683 12224 net.cpp:434] relu2a <- conv2a
I0421 18:39:14.922708 12224 net.cpp:395] relu2a -> conv2a (in-place)
I0421 18:39:14.923243 12224 net.cpp:150] Setting up relu2a
I0421 18:39:14.923259 12224 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0421 18:39:14.923265 12224 net.cpp:165] Memory required for data: 8362132668
I0421 18:39:14.923271 12224 layer_factory.hpp:77] Creating layer pool2
I0421 18:39:14.923285 12224 net.cpp:100] Creating Layer pool2
I0421 18:39:14.923312 12224 net.cpp:434] pool2 <- conv2a
I0421 18:39:14.923324 12224 net.cpp:408] pool2 -> pool2
I0421 18:39:14.923581 12224 net.cpp:150] Setting up pool2
I0421 18:39:14.923596 12224 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0421 18:39:14.923621 12224 net.cpp:165] Memory required for data: 8516273340
I0421 18:39:14.923630 12224 layer_factory.hpp:77] Creating layer conv3a
I0421 18:39:14.923645 12224 net.cpp:100] Creating Layer conv3a
I0421 18:39:14.923652 12224 net.cpp:434] conv3a <- pool2
I0421 18:39:14.923661 12224 net.cpp:408] conv3a -> conv3a
I0421 18:39:14.952400 12224 net.cpp:150] Setting up conv3a
I0421 18:39:14.952430 12224 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0421 18:39:14.952435 12224 net.cpp:165] Memory required for data: 8824554684
I0421 18:39:14.952450 12224 layer_factory.hpp:77] Creating layer relu3a
I0421 18:39:14.952459 12224 net.cpp:100] Creating Layer relu3a
I0421 18:39:14.952464 12224 net.cpp:434] relu3a <- conv3a
I0421 18:39:14.952471 12224 net.cpp:395] relu3a -> conv3a (in-place)
I0421 18:39:14.952829 12224 net.cpp:150] Setting up relu3a
I0421 18:39:14.952842 12224 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0421 18:39:14.952845 12224 net.cpp:165] Memory required for data: 9132836028
I0421 18:39:14.952850 12224 layer_factory.hpp:77] Creating layer conv3b
I0421 18:39:14.952862 12224 net.cpp:100] Creating Layer conv3b
I0421 18:39:14.952870 12224 net.cpp:434] conv3b <- conv3a
I0421 18:39:14.952877 12224 net.cpp:408] conv3b -> conv3b
I0421 18:39:15.010325 12224 net.cpp:150] Setting up conv3b
I0421 18:39:15.010354 12224 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0421 18:39:15.010360 12224 net.cpp:165] Memory required for data: 9441117372
I0421 18:39:15.010370 12224 layer_factory.hpp:77] Creating layer relu3b
I0421 18:39:15.010381 12224 net.cpp:100] Creating Layer relu3b
I0421 18:39:15.010391 12224 net.cpp:434] relu3b <- conv3b
I0421 18:39:15.010401 12224 net.cpp:395] relu3b -> conv3b (in-place)
I0421 18:39:15.010828 12224 net.cpp:150] Setting up relu3b
I0421 18:39:15.010845 12224 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0421 18:39:15.010854 12224 net.cpp:165] Memory required for data: 9749398716
I0421 18:39:15.010881 12224 layer_factory.hpp:77] Creating layer pool3
I0421 18:39:15.010896 12224 net.cpp:100] Creating Layer pool3
I0421 18:39:15.010916 12224 net.cpp:434] pool3 <- conv3b
I0421 18:39:15.010931 12224 net.cpp:408] pool3 -> pool3
I0421 18:39:15.012253 12224 net.cpp:150] Setting up pool3
I0421 18:39:15.012267 12224 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0421 18:39:15.012274 12224 net.cpp:165] Memory required for data: 9787933884
I0421 18:39:15.012279 12224 layer_factory.hpp:77] Creating layer conv4a
I0421 18:39:15.012310 12224 net.cpp:100] Creating Layer conv4a
I0421 18:39:15.012320 12224 net.cpp:434] conv4a <- pool3
I0421 18:39:15.012331 12224 net.cpp:408] conv4a -> conv4a
I0421 18:39:15.108400 12224 net.cpp:150] Setting up conv4a
I0421 18:39:15.108425 12224 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0421 18:39:15.108436 12224 net.cpp:165] Memory required for data: 9865004220
I0421 18:39:15.108450 12224 layer_factory.hpp:77] Creating layer relu4a
I0421 18:39:15.108467 12224 net.cpp:100] Creating Layer relu4a
I0421 18:39:15.108474 12224 net.cpp:434] relu4a <- conv4a
I0421 18:39:15.108484 12224 net.cpp:395] relu4a -> conv4a (in-place)
I0421 18:39:15.108866 12224 net.cpp:150] Setting up relu4a
I0421 18:39:15.108880 12224 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0421 18:39:15.108886 12224 net.cpp:165] Memory required for data: 9942074556
I0421 18:39:15.108891 12224 layer_factory.hpp:77] Creating layer conv4b
I0421 18:39:15.108906 12224 net.cpp:100] Creating Layer conv4b
I0421 18:39:15.108909 12224 net.cpp:434] conv4b <- conv4a
I0421 18:39:15.108914 12224 net.cpp:408] conv4b -> conv4b
I0421 18:39:15.297947 12224 net.cpp:150] Setting up conv4b
I0421 18:39:15.297972 12224 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0421 18:39:15.297976 12224 net.cpp:165] Memory required for data: 10019144892
I0421 18:39:15.297986 12224 layer_factory.hpp:77] Creating layer relu4b
I0421 18:39:15.297994 12224 net.cpp:100] Creating Layer relu4b
I0421 18:39:15.297998 12224 net.cpp:434] relu4b <- conv4b
I0421 18:39:15.298007 12224 net.cpp:395] relu4b -> conv4b (in-place)
I0421 18:39:15.298159 12224 net.cpp:150] Setting up relu4b
I0421 18:39:15.298171 12224 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0421 18:39:15.298174 12224 net.cpp:165] Memory required for data: 10096215228
I0421 18:39:15.298178 12224 layer_factory.hpp:77] Creating layer pool4
I0421 18:39:15.298187 12224 net.cpp:100] Creating Layer pool4
I0421 18:39:15.298190 12224 net.cpp:434] pool4 <- conv4b
I0421 18:39:15.298195 12224 net.cpp:408] pool4 -> pool4
I0421 18:39:15.298570 12224 net.cpp:150] Setting up pool4
I0421 18:39:15.298583 12224 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0421 18:39:15.298588 12224 net.cpp:165] Memory required for data: 10105849020
I0421 18:39:15.298591 12224 layer_factory.hpp:77] Creating layer conv5a
I0421 18:39:15.298602 12224 net.cpp:100] Creating Layer conv5a
I0421 18:39:15.298606 12224 net.cpp:434] conv5a <- pool4
I0421 18:39:15.298614 12224 net.cpp:408] conv5a -> conv5a
I0421 18:39:15.487577 12224 net.cpp:150] Setting up conv5a
I0421 18:39:15.487608 12224 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0421 18:39:15.487614 12224 net.cpp:165] Memory required for data: 10115482812
I0421 18:39:15.487627 12224 layer_factory.hpp:77] Creating layer relu5a
I0421 18:39:15.487642 12224 net.cpp:100] Creating Layer relu5a
I0421 18:39:15.487651 12224 net.cpp:434] relu5a <- conv5a
I0421 18:39:15.487663 12224 net.cpp:395] relu5a -> conv5a (in-place)
I0421 18:39:15.488351 12224 net.cpp:150] Setting up relu5a
I0421 18:39:15.488365 12224 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0421 18:39:15.488371 12224 net.cpp:165] Memory required for data: 10125116604
I0421 18:39:15.488376 12224 layer_factory.hpp:77] Creating layer conv5b
I0421 18:39:15.488395 12224 net.cpp:100] Creating Layer conv5b
I0421 18:39:15.488402 12224 net.cpp:434] conv5b <- conv5a
I0421 18:39:15.488412 12224 net.cpp:408] conv5b -> conv5b
I0421 18:39:15.678016 12224 net.cpp:150] Setting up conv5b
I0421 18:39:15.678046 12224 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0421 18:39:15.678052 12224 net.cpp:165] Memory required for data: 10134750396
I0421 18:39:15.678064 12224 layer_factory.hpp:77] Creating layer relu5b
I0421 18:39:15.678077 12224 net.cpp:100] Creating Layer relu5b
I0421 18:39:15.678087 12224 net.cpp:434] relu5b <- conv5b
I0421 18:39:15.678098 12224 net.cpp:395] relu5b -> conv5b (in-place)
I0421 18:39:15.678264 12224 net.cpp:150] Setting up relu5b
I0421 18:39:15.678277 12224 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0421 18:39:15.678282 12224 net.cpp:165] Memory required for data: 10144384188
I0421 18:39:15.678287 12224 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0421 18:39:15.678298 12224 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0421 18:39:15.678304 12224 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0421 18:39:15.678314 12224 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0421 18:39:15.678323 12224 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0421 18:39:15.678364 12224 net.cpp:150] Setting up conv5b_relu5b_0_split
I0421 18:39:15.678372 12224 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0421 18:39:15.678376 12224 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0421 18:39:15.678383 12224 net.cpp:165] Memory required for data: 10163651772
I0421 18:39:15.678391 12224 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0421 18:39:15.678406 12224 net.cpp:100] Creating Layer rpn_conv/3x3
I0421 18:39:15.678416 12224 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0421 18:39:15.678427 12224 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0421 18:39:15.876927 12224 net.cpp:150] Setting up rpn_conv/3x3
I0421 18:39:15.876955 12224 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0421 18:39:15.876961 12224 net.cpp:165] Memory required for data: 10166797500
I0421 18:39:15.876989 12224 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0421 18:39:15.877020 12224 net.cpp:100] Creating Layer rpn_relu/3x3
I0421 18:39:15.877029 12224 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0421 18:39:15.877043 12224 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0421 18:39:15.877418 12224 net.cpp:150] Setting up rpn_relu/3x3
I0421 18:39:15.877432 12224 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0421 18:39:15.877440 12224 net.cpp:165] Memory required for data: 10169943228
I0421 18:39:15.877446 12224 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0421 18:39:15.877478 12224 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0421 18:39:15.877486 12224 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0421 18:39:15.877497 12224 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0421 18:39:16.071246 12224 net.cpp:150] Setting up rpn_conv/3x3_2
I0421 18:39:16.071279 12224 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0421 18:39:16.071285 12224 net.cpp:165] Memory required for data: 10170729660
I0421 18:39:16.071296 12224 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0421 18:39:16.071310 12224 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0421 18:39:16.071334 12224 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0421 18:39:16.071350 12224 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0421 18:39:16.071740 12224 net.cpp:150] Setting up rpn_relu/3x3_2
I0421 18:39:16.071754 12224 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0421 18:39:16.071760 12224 net.cpp:165] Memory required for data: 10171516092
I0421 18:39:16.071766 12224 layer_factory.hpp:77] Creating layer rpn/output_pool
I0421 18:39:16.071796 12224 net.cpp:100] Creating Layer rpn/output_pool
I0421 18:39:16.071805 12224 net.cpp:434] rpn/output_pool <- rpn/output_2
I0421 18:39:16.071816 12224 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0421 18:39:16.072021 12224 net.cpp:150] Setting up rpn/output_pool
I0421 18:39:16.072034 12224 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0421 18:39:16.072041 12224 net.cpp:165] Memory required for data: 10171712700
I0421 18:39:16.072046 12224 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0421 18:39:16.072069 12224 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0421 18:39:16.072082 12224 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0421 18:39:16.072093 12224 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0421 18:39:16.072101 12224 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0421 18:39:16.072156 12224 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0421 18:39:16.072168 12224 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0421 18:39:16.072175 12224 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0421 18:39:16.072180 12224 net.cpp:165] Memory required for data: 10172105916
I0421 18:39:16.072199 12224 layer_factory.hpp:77] Creating layer rpn_cls_score
I0421 18:39:16.072217 12224 net.cpp:100] Creating Layer rpn_cls_score
I0421 18:39:16.072227 12224 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0421 18:39:16.072239 12224 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0421 18:39:16.074492 12224 net.cpp:150] Setting up rpn_cls_score
I0421 18:39:16.074506 12224 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0421 18:39:16.074512 12224 net.cpp:165] Memory required for data: 10172134332
I0421 18:39:16.074522 12224 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0421 18:39:16.074548 12224 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0421 18:39:16.074556 12224 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0421 18:39:16.074564 12224 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0421 18:39:16.074574 12224 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0421 18:39:16.074638 12224 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0421 18:39:16.074651 12224 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0421 18:39:16.074657 12224 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0421 18:39:16.074662 12224 net.cpp:165] Memory required for data: 10172191164
I0421 18:39:16.074682 12224 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0421 18:39:16.074704 12224 net.cpp:100] Creating Layer rpn_twin_pred
I0421 18:39:16.074713 12224 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0421 18:39:16.074723 12224 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0421 18:39:16.076836 12224 net.cpp:150] Setting up rpn_twin_pred
I0421 18:39:16.076853 12224 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0421 18:39:16.076859 12224 net.cpp:165] Memory required for data: 10172219580
I0421 18:39:16.076869 12224 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0421 18:39:16.076877 12224 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0421 18:39:16.076901 12224 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0421 18:39:16.076912 12224 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0421 18:39:16.076922 12224 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0421 18:39:16.076973 12224 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0421 18:39:16.076983 12224 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0421 18:39:16.076990 12224 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0421 18:39:16.077009 12224 net.cpp:165] Memory required for data: 10172276412
I0421 18:39:16.077018 12224 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0421 18:39:16.077033 12224 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0421 18:39:16.077041 12224 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0421 18:39:16.077066 12224 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0421 18:39:16.077109 12224 net.cpp:150] Setting up rpn_cls_score_reshape
I0421 18:39:16.077119 12224 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0421 18:39:16.077124 12224 net.cpp:165] Memory required for data: 10172304828
I0421 18:39:16.077131 12224 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0421 18:39:16.077152 12224 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0421 18:39:16.077162 12224 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0421 18:39:16.077170 12224 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0421 18:39:16.077198 12224 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0421 18:39:16.077208 12224 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0421 18:39:16.077262 12224 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0421 18:39:16.077275 12224 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0421 18:39:16.077280 12224 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0421 18:39:16.077301 12224 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0421 18:39:16.077307 12224 net.cpp:165] Memory required for data: 10172390076
I0421 18:39:16.077316 12224 layer_factory.hpp:77] Creating layer rpn-data
I0421 18:39:16.085198 12224 net.cpp:100] Creating Layer rpn-data
I0421 18:39:16.085216 12224 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0421 18:39:16.085227 12224 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0421 18:39:16.085254 12224 net.cpp:434] rpn-data <- data_data_0_split_1
I0421 18:39:16.085276 12224 net.cpp:408] rpn-data -> rpn_labels
I0421 18:39:16.085291 12224 net.cpp:408] rpn-data -> rpn_twin_targets
I0421 18:39:16.085302 12224 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0421 18:39:16.085314 12224 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0421 18:39:16.089557 12224 net.cpp:150] Setting up rpn-data
I0421 18:39:16.089578 12224 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0421 18:39:16.089586 12224 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0421 18:39:16.089594 12224 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0421 18:39:16.089601 12224 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0421 18:39:16.089606 12224 net.cpp:165] Memory required for data: 10172489532
I0421 18:39:16.089612 12224 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0421 18:39:16.089623 12224 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0421 18:39:16.089632 12224 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0421 18:39:16.089640 12224 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0421 18:39:16.089653 12224 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0421 18:39:16.089699 12224 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0421 18:39:16.089743 12224 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0421 18:39:16.089766 12224 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0421 18:39:16.089785 12224 net.cpp:165] Memory required for data: 10172517948
I0421 18:39:16.089807 12224 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0421 18:39:16.089833 12224 net.cpp:100] Creating Layer rpn_loss_cls
I0421 18:39:16.089854 12224 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0421 18:39:16.089875 12224 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0421 18:39:16.089898 12224 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0421 18:39:16.089928 12224 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0421 18:39:16.090634 12224 net.cpp:150] Setting up rpn_loss_cls
I0421 18:39:16.090651 12224 net.cpp:157] Top shape: (1)
I0421 18:39:16.090657 12224 net.cpp:160]     with loss weight 1
I0421 18:39:16.090673 12224 net.cpp:165] Memory required for data: 10172517952
I0421 18:39:16.090679 12224 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0421 18:39:16.090692 12224 net.cpp:100] Creating Layer rpn_loss_twin
I0421 18:39:16.090698 12224 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0421 18:39:16.090704 12224 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0421 18:39:16.090711 12224 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0421 18:39:16.090718 12224 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0421 18:39:16.090725 12224 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0421 18:39:16.090867 12224 net.cpp:150] Setting up rpn_loss_twin
I0421 18:39:16.090880 12224 net.cpp:157] Top shape: (1)
I0421 18:39:16.090886 12224 net.cpp:160]     with loss weight 1
I0421 18:39:16.090893 12224 net.cpp:165] Memory required for data: 10172517956
I0421 18:39:16.090899 12224 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0421 18:39:16.090912 12224 net.cpp:100] Creating Layer rpn_accuarcy
I0421 18:39:16.090919 12224 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0421 18:39:16.090925 12224 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0421 18:39:16.090935 12224 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0421 18:39:16.090948 12224 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0421 18:39:16.090998 12224 net.cpp:150] Setting up rpn_accuarcy
I0421 18:39:16.091008 12224 net.cpp:157] Top shape: (1)
I0421 18:39:16.091014 12224 net.cpp:157] Top shape: 2 (2)
I0421 18:39:16.091020 12224 net.cpp:165] Memory required for data: 10172517968
I0421 18:39:16.091025 12224 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0421 18:39:16.091034 12224 net.cpp:100] Creating Layer rpn_cls_prob
I0421 18:39:16.091040 12224 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0421 18:39:16.091048 12224 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0421 18:39:16.091348 12224 net.cpp:150] Setting up rpn_cls_prob
I0421 18:39:16.091362 12224 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0421 18:39:16.091367 12224 net.cpp:165] Memory required for data: 10172546384
I0421 18:39:16.091374 12224 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0421 18:39:16.091385 12224 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0421 18:39:16.091390 12224 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0421 18:39:16.091398 12224 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0421 18:39:16.091434 12224 net.cpp:150] Setting up rpn_cls_prob_reshape
I0421 18:39:16.091445 12224 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0421 18:39:16.091451 12224 net.cpp:165] Memory required for data: 10172574800
I0421 18:39:16.091457 12224 layer_factory.hpp:77] Creating layer proposal
I0421 18:39:16.137292 12224 net.cpp:100] Creating Layer proposal
I0421 18:39:16.137318 12224 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0421 18:39:16.137329 12224 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0421 18:39:16.137338 12224 net.cpp:408] proposal -> rpn_rois
I0421 18:39:16.180505 12224 net.cpp:150] Setting up proposal
I0421 18:39:16.180536 12224 net.cpp:157] Top shape: 1 3 (3)
I0421 18:39:16.180542 12224 net.cpp:165] Memory required for data: 10172574812
I0421 18:39:16.180550 12224 layer_factory.hpp:77] Creating layer roi-data
I0421 18:39:16.186087 12224 net.cpp:100] Creating Layer roi-data
I0421 18:39:16.186125 12224 net.cpp:434] roi-data <- rpn_rois
I0421 18:39:16.186148 12224 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0421 18:39:16.186177 12224 net.cpp:408] roi-data -> rois
I0421 18:39:16.186249 12224 net.cpp:408] roi-data -> labels
I0421 18:39:16.186271 12224 net.cpp:408] roi-data -> twin_targets
I0421 18:39:16.186296 12224 net.cpp:408] roi-data -> twin_inside_weights
I0421 18:39:16.186318 12224 net.cpp:408] roi-data -> twin_outside_weights
I0421 18:39:16.187166 12224 net.cpp:150] Setting up roi-data
I0421 18:39:16.187199 12224 net.cpp:157] Top shape: 1 3 (3)
I0421 18:39:16.187216 12224 net.cpp:157] Top shape: 1 200 (200)
I0421 18:39:16.187260 12224 net.cpp:157] Top shape: 1 400 (400)
I0421 18:39:16.187280 12224 net.cpp:157] Top shape: 1 400 (400)
I0421 18:39:16.187294 12224 net.cpp:157] Top shape: 1 400 (400)
I0421 18:39:16.187306 12224 net.cpp:165] Memory required for data: 10172580424
I0421 18:39:16.187324 12224 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0421 18:39:16.187345 12224 net.cpp:100] Creating Layer labels_roi-data_1_split
I0421 18:39:16.187360 12224 net.cpp:434] labels_roi-data_1_split <- labels
I0421 18:39:16.187381 12224 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0421 18:39:16.187404 12224 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0421 18:39:16.187489 12224 net.cpp:150] Setting up labels_roi-data_1_split
I0421 18:39:16.187507 12224 net.cpp:157] Top shape: 1 200 (200)
I0421 18:39:16.187525 12224 net.cpp:157] Top shape: 1 200 (200)
I0421 18:39:16.187538 12224 net.cpp:165] Memory required for data: 10172582024
I0421 18:39:16.187551 12224 layer_factory.hpp:77] Creating layer roi_pool5
I0421 18:39:16.187577 12224 net.cpp:100] Creating Layer roi_pool5
I0421 18:39:16.187590 12224 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0421 18:39:16.187608 12224 net.cpp:434] roi_pool5 <- rois
I0421 18:39:16.187626 12224 net.cpp:408] roi_pool5 -> pool5
I0421 18:39:16.187654 12224 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0421 18:39:16.187672 12224 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0421 18:39:16.187762 12224 net.cpp:150] Setting up roi_pool5
I0421 18:39:16.187779 12224 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0421 18:39:16.187793 12224 net.cpp:165] Memory required for data: 10172614792
I0421 18:39:16.187805 12224 layer_factory.hpp:77] Creating layer fc6
I0421 18:39:16.187831 12224 net.cpp:100] Creating Layer fc6
I0421 18:39:16.187844 12224 net.cpp:434] fc6 <- pool5
I0421 18:39:16.187861 12224 net.cpp:408] fc6 -> fc6
I0421 18:39:17.123836 12224 net.cpp:150] Setting up fc6
I0421 18:39:17.123864 12224 net.cpp:157] Top shape: 1 4096 (4096)
I0421 18:39:17.123868 12224 net.cpp:165] Memory required for data: 10172631176
I0421 18:39:17.123878 12224 layer_factory.hpp:77] Creating layer relu6
I0421 18:39:17.123888 12224 net.cpp:100] Creating Layer relu6
I0421 18:39:17.123893 12224 net.cpp:434] relu6 <- fc6
I0421 18:39:17.123899 12224 net.cpp:395] relu6 -> fc6 (in-place)
I0421 18:39:17.124364 12224 net.cpp:150] Setting up relu6
I0421 18:39:17.124377 12224 net.cpp:157] Top shape: 1 4096 (4096)
I0421 18:39:17.124382 12224 net.cpp:165] Memory required for data: 10172647560
I0421 18:39:17.124384 12224 layer_factory.hpp:77] Creating layer drop6
I0421 18:39:17.124397 12224 net.cpp:100] Creating Layer drop6
I0421 18:39:17.124402 12224 net.cpp:434] drop6 <- fc6
I0421 18:39:17.124406 12224 net.cpp:395] drop6 -> fc6 (in-place)
I0421 18:39:17.124433 12224 net.cpp:150] Setting up drop6
I0421 18:39:17.124442 12224 net.cpp:157] Top shape: 1 4096 (4096)
I0421 18:39:17.124445 12224 net.cpp:165] Memory required for data: 10172663944
I0421 18:39:17.124449 12224 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0421 18:39:17.124455 12224 net.cpp:100] Creating Layer fc6_drop6_0_split
I0421 18:39:17.124459 12224 net.cpp:434] fc6_drop6_0_split <- fc6
I0421 18:39:17.124464 12224 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0421 18:39:17.124470 12224 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0421 18:39:17.124503 12224 net.cpp:150] Setting up fc6_drop6_0_split
I0421 18:39:17.124510 12224 net.cpp:157] Top shape: 1 4096 (4096)
I0421 18:39:17.124512 12224 net.cpp:157] Top shape: 1 4096 (4096)
I0421 18:39:17.124516 12224 net.cpp:165] Memory required for data: 10172696712
I0421 18:39:17.124518 12224 layer_factory.hpp:77] Creating layer cls_score
I0421 18:39:17.124526 12224 net.cpp:100] Creating Layer cls_score
I0421 18:39:17.124531 12224 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0421 18:39:17.124536 12224 net.cpp:408] cls_score -> cls_score
I0421 18:39:17.145964 12224 net.cpp:150] Setting up cls_score
I0421 18:39:17.145978 12224 net.cpp:157] Top shape: 1 200 (200)
I0421 18:39:17.145982 12224 net.cpp:165] Memory required for data: 10172697512
I0421 18:39:17.145989 12224 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0421 18:39:17.145995 12224 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0421 18:39:17.145999 12224 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0421 18:39:17.146005 12224 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0421 18:39:17.146011 12224 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0421 18:39:17.146045 12224 net.cpp:150] Setting up cls_score_cls_score_0_split
I0421 18:39:17.146054 12224 net.cpp:157] Top shape: 1 200 (200)
I0421 18:39:17.146057 12224 net.cpp:157] Top shape: 1 200 (200)
I0421 18:39:17.146060 12224 net.cpp:165] Memory required for data: 10172699112
I0421 18:39:17.146064 12224 layer_factory.hpp:77] Creating layer twin_pred
I0421 18:39:17.146070 12224 net.cpp:100] Creating Layer twin_pred
I0421 18:39:17.146075 12224 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0421 18:39:17.146080 12224 net.cpp:408] twin_pred -> twin_pred
I0421 18:39:17.188740 12224 net.cpp:150] Setting up twin_pred
I0421 18:39:17.188762 12224 net.cpp:157] Top shape: 1 400 (400)
I0421 18:39:17.188766 12224 net.cpp:165] Memory required for data: 10172700712
I0421 18:39:17.188776 12224 layer_factory.hpp:77] Creating layer loss_cls
I0421 18:39:17.188791 12224 net.cpp:100] Creating Layer loss_cls
I0421 18:39:17.188796 12224 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0421 18:39:17.188803 12224 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0421 18:39:17.188812 12224 net.cpp:408] loss_cls -> loss_cls
I0421 18:39:17.188871 12224 net.cpp:150] Setting up loss_cls
I0421 18:39:17.188880 12224 net.cpp:157] Top shape: (1)
I0421 18:39:17.188884 12224 net.cpp:160]     with loss weight 1
I0421 18:39:17.188890 12224 net.cpp:165] Memory required for data: 10172700716
I0421 18:39:17.188894 12224 layer_factory.hpp:77] Creating layer loss_twin
I0421 18:39:17.188901 12224 net.cpp:100] Creating Layer loss_twin
I0421 18:39:17.188906 12224 net.cpp:434] loss_twin <- twin_pred
I0421 18:39:17.188911 12224 net.cpp:434] loss_twin <- twin_targets
I0421 18:39:17.188915 12224 net.cpp:434] loss_twin <- twin_inside_weights
I0421 18:39:17.188920 12224 net.cpp:434] loss_twin <- twin_outside_weights
I0421 18:39:17.188925 12224 net.cpp:408] loss_twin -> loss_twin
I0421 18:39:17.188997 12224 net.cpp:150] Setting up loss_twin
I0421 18:39:17.189005 12224 net.cpp:157] Top shape: (1)
I0421 18:39:17.189009 12224 net.cpp:160]     with loss weight 1
I0421 18:39:17.189013 12224 net.cpp:165] Memory required for data: 10172700720
I0421 18:39:17.189016 12224 layer_factory.hpp:77] Creating layer accuracy
I0421 18:39:17.219604 12224 net.cpp:100] Creating Layer accuracy
I0421 18:39:17.219619 12224 net.cpp:434] accuracy <- cls_score_cls_score_0_split_1
I0421 18:39:17.219624 12224 net.cpp:434] accuracy <- labels_roi-data_1_split_1
I0421 18:39:17.219630 12224 net.cpp:408] accuracy -> accuracy
I0421 18:39:17.219718 12224 net.cpp:150] Setting up accuracy
I0421 18:39:17.219732 12224 net.cpp:157] Top shape: 1 (1)
I0421 18:39:17.219734 12224 net.cpp:165] Memory required for data: 10172700724
I0421 18:39:17.219738 12224 net.cpp:228] accuracy does not need backward computation.
I0421 18:39:17.219743 12224 net.cpp:226] loss_twin needs backward computation.
I0421 18:39:17.219745 12224 net.cpp:226] loss_cls needs backward computation.
I0421 18:39:17.219749 12224 net.cpp:226] twin_pred needs backward computation.
I0421 18:39:17.219753 12224 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0421 18:39:17.219756 12224 net.cpp:226] cls_score needs backward computation.
I0421 18:39:17.219760 12224 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0421 18:39:17.219764 12224 net.cpp:226] drop6 needs backward computation.
I0421 18:39:17.219768 12224 net.cpp:226] relu6 needs backward computation.
I0421 18:39:17.219770 12224 net.cpp:226] fc6 needs backward computation.
I0421 18:39:17.219774 12224 net.cpp:226] roi_pool5 needs backward computation.
I0421 18:39:17.219779 12224 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0421 18:39:17.219782 12224 net.cpp:226] roi-data needs backward computation.
I0421 18:39:17.219786 12224 net.cpp:226] proposal needs backward computation.
I0421 18:39:17.219790 12224 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0421 18:39:17.219794 12224 net.cpp:226] rpn_cls_prob needs backward computation.
I0421 18:39:17.219799 12224 net.cpp:228] rpn_accuarcy does not need backward computation.
I0421 18:39:17.219801 12224 net.cpp:226] rpn_loss_twin needs backward computation.
I0421 18:39:17.219806 12224 net.cpp:226] rpn_loss_cls needs backward computation.
I0421 18:39:17.219811 12224 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0421 18:39:17.219815 12224 net.cpp:226] rpn-data needs backward computation.
I0421 18:39:17.219820 12224 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0421 18:39:17.219823 12224 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0421 18:39:17.219826 12224 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0421 18:39:17.219830 12224 net.cpp:226] rpn_twin_pred needs backward computation.
I0421 18:39:17.219835 12224 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0421 18:39:17.219837 12224 net.cpp:226] rpn_cls_score needs backward computation.
I0421 18:39:17.219841 12224 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0421 18:39:17.219846 12224 net.cpp:226] rpn/output_pool needs backward computation.
I0421 18:39:17.219848 12224 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0421 18:39:17.219851 12224 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0421 18:39:17.219856 12224 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0421 18:39:17.219858 12224 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0421 18:39:17.219862 12224 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0421 18:39:17.219866 12224 net.cpp:226] relu5b needs backward computation.
I0421 18:39:17.219868 12224 net.cpp:226] conv5b needs backward computation.
I0421 18:39:17.219872 12224 net.cpp:226] relu5a needs backward computation.
I0421 18:39:17.219877 12224 net.cpp:226] conv5a needs backward computation.
I0421 18:39:17.219879 12224 net.cpp:226] pool4 needs backward computation.
I0421 18:39:17.219882 12224 net.cpp:226] relu4b needs backward computation.
I0421 18:39:17.219887 12224 net.cpp:226] conv4b needs backward computation.
I0421 18:39:17.219889 12224 net.cpp:226] relu4a needs backward computation.
I0421 18:39:17.219893 12224 net.cpp:226] conv4a needs backward computation.
I0421 18:39:17.219897 12224 net.cpp:226] pool3 needs backward computation.
I0421 18:39:17.219900 12224 net.cpp:226] relu3b needs backward computation.
I0421 18:39:17.219903 12224 net.cpp:226] conv3b needs backward computation.
I0421 18:39:17.219907 12224 net.cpp:226] relu3a needs backward computation.
I0421 18:39:17.219909 12224 net.cpp:226] conv3a needs backward computation.
I0421 18:39:17.219913 12224 net.cpp:228] pool2 does not need backward computation.
I0421 18:39:17.219916 12224 net.cpp:228] relu2a does not need backward computation.
I0421 18:39:17.219919 12224 net.cpp:228] conv2a does not need backward computation.
I0421 18:39:17.219923 12224 net.cpp:228] pool1 does not need backward computation.
I0421 18:39:17.219926 12224 net.cpp:228] relu1a does not need backward computation.
I0421 18:39:17.219929 12224 net.cpp:228] conv1a does not need backward computation.
I0421 18:39:17.219933 12224 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0421 18:39:17.219938 12224 net.cpp:228] data_data_0_split does not need backward computation.
I0421 18:39:17.219943 12224 net.cpp:228] data does not need backward computation.
I0421 18:39:17.219945 12224 net.cpp:270] This network produces output accuracy
I0421 18:39:17.219949 12224 net.cpp:270] This network produces output loss_cls
I0421 18:39:17.219954 12224 net.cpp:270] This network produces output loss_twin
I0421 18:39:17.219956 12224 net.cpp:270] This network produces output rpn_accuarcy
I0421 18:39:17.219959 12224 net.cpp:270] This network produces output rpn_accuarcy_class
I0421 18:39:17.219964 12224 net.cpp:270] This network produces output rpn_cls_loss
I0421 18:39:17.219966 12224 net.cpp:270] This network produces output rpn_loss_twin
I0421 18:39:17.220001 12224 net.cpp:283] Network initialization done.
I0421 18:39:17.220134 12224 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0421 18:39:23.871021 12224 net.cpp:761] Ignoring source layer pool5
I0421 18:39:23.891332 12224 net.cpp:761] Ignoring source layer fc7
I0421 18:39:23.891351 12224 net.cpp:761] Ignoring source layer relu7
I0421 18:39:23.891355 12224 net.cpp:761] Ignoring source layer drop7
I0421 18:39:23.891358 12224 net.cpp:761] Ignoring source layer fc8-200
I0421 18:39:23.891361 12224 net.cpp:761] Ignoring source layer loss
Solving...
rpn: num_positive 6
rpn: num_negative 58
I0421 18:39:26.808375 12224 accuracy_layer.cpp:96] Accuracy: 0.296875
I0421 18:39:26.808398 12224 accuracy_layer.cpp:101] Class 0 accuracy : 0.275862
I0421 18:39:26.808403 12224 accuracy_layer.cpp:101] Class 1 accuracy : 0.5
TRAIN
num fg: 8
num bg: 20
('accuracy: ', 0.0)
I0421 18:39:26.915897 12224 solver.cpp:228] Iteration 0, loss = 165.527
I0421 18:39:26.915921 12224 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 18:39:26.915930 12224 solver.cpp:244]     Train net output #1: loss_cls = 164.779 (* 1 = 164.779 loss)
I0421 18:39:26.915935 12224 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 18:39:26.915940 12224 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.296875
I0421 18:39:26.915944 12224 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.275862
I0421 18:39:26.915947 12224 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.5
I0421 18:39:26.915952 12224 solver.cpp:244]     Train net output #6: rpn_cls_loss = 0.730293 (* 1 = 0.730293 loss)
I0421 18:39:26.915961 12224 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.0174326 (* 1 = 0.0174326 loss)
I0421 18:39:26.915969 12224 sgd_solver.cpp:106] Iteration 0, lr = 0.0001
rpn: num_positive 6
rpn: num_negative 58
I0421 18:39:31.523135 12224 accuracy_layer.cpp:96] Accuracy: 0.671875
I0421 18:39:31.523156 12224 accuracy_layer.cpp:101] Class 0 accuracy : 0.689655
I0421 18:39:31.523161 12224 accuracy_layer.cpp:101] Class 1 accuracy : 0.5
TRAIN
num fg: 11
num bg: 25
('accuracy: ', 0.0)
I0421 18:39:31.547204 12224 solver.cpp:228] Iteration 1, loss = 145.761
I0421 18:39:31.547228 12224 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 18:39:31.547237 12224 solver.cpp:244]     Train net output #1: loss_cls = 145.056 (* 1 = 145.056 loss)
I0421 18:39:31.547243 12224 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 18:39:31.547247 12224 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.671875
I0421 18:39:31.547252 12224 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.689655
I0421 18:39:31.547256 12224 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.5
I0421 18:39:31.547260 12224 solver.cpp:244]     Train net output #6: rpn_cls_loss = 0.683361 (* 1 = 0.683361 loss)
I0421 18:39:31.547266 12224 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.0218582 (* 1 = 0.0218582 loss)
I0421 18:39:31.547272 12224 sgd_solver.cpp:106] Iteration 1, lr = 0.0001
rpn: num_positive 6
rpn: num_negative 58
I0421 18:39:36.066375 12224 accuracy_layer.cpp:96] Accuracy: 0.5
I0421 18:39:36.066397 12224 accuracy_layer.cpp:101] Class 0 accuracy : 0.465517
I0421 18:39:36.066402 12224 accuracy_layer.cpp:101] Class 1 accuracy : 0.833333
TRAIN
num fg: 11
num bg: 24
('accuracy: ', 0.0)
I0421 18:39:36.084156 12224 solver.cpp:228] Iteration 2, loss = 125.079
I0421 18:39:36.084177 12224 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 18:39:36.084187 12224 solver.cpp:244]     Train net output #1: loss_cls = 124.359 (* 1 = 124.359 loss)
I0421 18:39:36.084192 12224 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 18:39:36.084197 12224 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.5
I0421 18:39:36.084200 12224 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.465517
I0421 18:39:36.084204 12224 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.833333
I0421 18:39:36.084213 12224 solver.cpp:244]     Train net output #6: rpn_cls_loss = 0.689827 (* 1 = 0.689827 loss)
I0421 18:39:36.084218 12224 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.0302918 (* 1 = 0.0302918 loss)
I0421 18:39:36.084223 12224 sgd_solver.cpp:106] Iteration 2, lr = 0.0001
rpn: num_positive 6
rpn: num_negative 58
I0421 18:39:40.766825 12224 accuracy_layer.cpp:96] Accuracy: 0.4375
I0421 18:39:40.766881 12224 accuracy_layer.cpp:101] Class 0 accuracy : 0.431034
I0421 18:39:40.766908 12224 accuracy_layer.cpp:101] Class 1 accuracy : 0.5
TRAIN
num fg: 10
num bg: 26
('accuracy: ', 0.0)
I0421 18:39:40.786034 12224 solver.cpp:228] Iteration 3, loss = 96.5295
I0421 18:39:40.786068 12224 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 18:39:40.786077 12224 solver.cpp:244]     Train net output #1: loss_cls = 95.8045 (* 1 = 95.8045 loss)
I0421 18:39:40.786083 12224 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 18:39:40.786087 12224 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.4375
I0421 18:39:40.786092 12224 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.431034
I0421 18:39:40.786095 12224 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.5
I0421 18:39:40.786100 12224 solver.cpp:244]     Train net output #6: rpn_cls_loss = 0.698976 (* 1 = 0.698976 loss)
I0421 18:39:40.786105 12224 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.0260679 (* 1 = 0.0260679 loss)
I0421 18:39:40.786111 12224 sgd_solver.cpp:106] Iteration 3, lr = 0.0001
rpn: num_positive 6
rpn: num_negative 58
I0421 18:39:45.316952 12224 accuracy_layer.cpp:96] Accuracy: 0.53125
I0421 18:39:45.316974 12224 accuracy_layer.cpp:101] Class 0 accuracy : 0.517241
I0421 18:39:45.316979 12224 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
num fg: 10
num bg: 25
('accuracy: ', 0.0)
I0421 18:39:45.335631 12224 solver.cpp:228] Iteration 4, loss = 44.9205
I0421 18:39:45.335654 12224 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 18:39:45.335662 12224 solver.cpp:244]     Train net output #1: loss_cls = 44.1957 (* 1 = 44.1957 loss)
I0421 18:39:45.335667 12224 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 18:39:45.335671 12224 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.53125
I0421 18:39:45.335676 12224 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.517241
I0421 18:39:45.335680 12224 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.666667
I0421 18:39:45.335685 12224 solver.cpp:244]     Train net output #6: rpn_cls_loss = 0.682719 (* 1 = 0.682719 loss)
I0421 18:39:45.335690 12224 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.0420466 (* 1 = 0.0420466 loss)
I0421 18:39:45.335695 12224 sgd_solver.cpp:106] Iteration 4, lr = 0.0001
rpn: num_positive 1
rpn: num_negative 63
I0421 18:39:50.152922 12224 accuracy_layer.cpp:96] Accuracy: 0.46875
I0421 18:39:50.152945 12224 accuracy_layer.cpp:101] Class 0 accuracy : 0.47619
I0421 18:39:50.152951 12224 accuracy_layer.cpp:101] Class 1 accuracy : 0
TRAIN
num fg: 2
num bg: 17
('accuracy: ', 0.0)
I0421 18:39:50.169203 12224 solver.cpp:228] Iteration 5, loss = 6.61927
I0421 18:39:50.169226 12224 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 18:39:50.169234 12224 solver.cpp:244]     Train net output #1: loss_cls = 5.47893 (* 1 = 5.47893 loss)
I0421 18:39:50.169240 12224 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 18:39:50.169246 12224 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.46875
I0421 18:39:50.169251 12224 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.47619
I0421 18:39:50.169255 12224 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0
I0421 18:39:50.169260 12224 solver.cpp:244]     Train net output #6: rpn_cls_loss = 1.11299 (* 1 = 1.11299 loss)
I0421 18:39:50.169265 12224 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.027348 (* 1 = 0.027348 loss)
I0421 18:39:50.169270 12224 sgd_solver.cpp:106] Iteration 5, lr = 0.0001
rpn: num_positive 6
rpn: num_negative 58
I0421 18:39:54.708151 12224 accuracy_layer.cpp:96] Accuracy: 0.59375
I0421 18:39:54.708174 12224 accuracy_layer.cpp:101] Class 0 accuracy : 0.603448
I0421 18:39:54.708179 12224 accuracy_layer.cpp:101] Class 1 accuracy : 0.5
TRAIN
num fg: 5
num bg: 16
('accuracy: ', 0.0)
I0421 18:39:54.725597 12224 solver.cpp:228] Iteration 6, loss = 15.471
I0421 18:39:54.725621 12224 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 18:39:54.725630 12224 solver.cpp:244]     Train net output #1: loss_cls = 11.7584 (* 1 = 11.7584 loss)
I0421 18:39:54.725636 12224 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 18:39:54.725641 12224 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.59375
I0421 18:39:54.725644 12224 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.603448
I0421 18:39:54.725648 12224 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.5
I0421 18:39:54.725652 12224 solver.cpp:244]     Train net output #6: rpn_cls_loss = 2.83126 (* 1 = 2.83126 loss)
I0421 18:39:54.725657 12224 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.881354 (* 1 = 0.881354 loss)
I0421 18:39:54.725663 12224 sgd_solver.cpp:106] Iteration 6, lr = 0.0001
rpn: num_positive 4
rpn: num_negative 60
I0421 18:39:59.672487 12224 accuracy_layer.cpp:96] Accuracy: 0.640625
I0421 18:39:59.672509 12224 accuracy_layer.cpp:101] Class 0 accuracy : 0.65
I0421 18:39:59.672513 12224 accuracy_layer.cpp:101] Class 1 accuracy : 0.5
TRAIN
num fg: 8
num bg: 21
('accuracy: ', 0.0)
I0421 18:39:59.691521 12224 solver.cpp:228] Iteration 7, loss = 49.2862
I0421 18:39:59.691540 12224 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 18:39:59.691550 12224 solver.cpp:244]     Train net output #1: loss_cls = 46.5302 (* 1 = 46.5302 loss)
I0421 18:39:59.691555 12224 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 18:39:59.691558 12224 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.640625
I0421 18:39:59.691563 12224 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.65
I0421 18:39:59.691566 12224 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.5
I0421 18:39:59.691571 12224 solver.cpp:244]     Train net output #6: rpn_cls_loss = 2.27857 (* 1 = 2.27857 loss)
I0421 18:39:59.691576 12224 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.477387 (* 1 = 0.477387 loss)
I0421 18:39:59.691581 12224 sgd_solver.cpp:106] Iteration 7, lr = 0.0001
rpn: num_positive 6
rpn: num_negative 58
I0421 18:40:04.561491 12224 accuracy_layer.cpp:96] Accuracy: 0.8125
I0421 18:40:04.561519 12224 accuracy_layer.cpp:101] Class 0 accuracy : 0.844828
I0421 18:40:04.561523 12224 accuracy_layer.cpp:101] Class 1 accuracy : 0.5
TRAIN
num fg: 7
num bg: 18
('accuracy: ', 0.0)
I0421 18:40:04.605947 12224 solver.cpp:228] Iteration 8, loss = 78.7835
I0421 18:40:04.605974 12224 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 18:40:04.605988 12224 solver.cpp:244]     Train net output #1: loss_cls = 77.6105 (* 1 = 77.6105 loss)
I0421 18:40:04.605996 12224 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 18:40:04.606003 12224 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.8125
I0421 18:40:04.606014 12224 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.844828
I0421 18:40:04.606020 12224 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.5
I0421 18:40:04.606027 12224 solver.cpp:244]     Train net output #6: rpn_cls_loss = 0.739595 (* 1 = 0.739595 loss)
I0421 18:40:04.606032 12224 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.433384 (* 1 = 0.433384 loss)
I0421 18:40:04.606039 12224 sgd_solver.cpp:106] Iteration 8, lr = 0.0001
rpn: num_positive 6
rpn: num_negative 58
I0421 18:40:09.554805 12224 accuracy_layer.cpp:96] Accuracy: 0.71875
I0421 18:40:09.554826 12224 accuracy_layer.cpp:101] Class 0 accuracy : 0.724138
I0421 18:40:09.554831 12224 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
num fg: 8
num bg: 30
('accuracy: ', 0.0)
I0421 18:40:09.581104 12224 solver.cpp:228] Iteration 9, loss = 7.45888
I0421 18:40:09.581126 12224 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 18:40:09.581135 12224 solver.cpp:244]     Train net output #1: loss_cls = 6.87551 (* 1 = 6.87551 loss)
I0421 18:40:09.581140 12224 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 18:40:09.581145 12224 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.71875
I0421 18:40:09.581149 12224 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.724138
I0421 18:40:09.581153 12224 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.666667
I0421 18:40:09.581158 12224 solver.cpp:244]     Train net output #6: rpn_cls_loss = 0.514342 (* 1 = 0.514342 loss)
I0421 18:40:09.581164 12224 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.0690233 (* 1 = 0.0690233 loss)
I0421 18:40:09.581171 12224 sgd_solver.cpp:106] Iteration 9, lr = 0.0001
speed: 4.567s / iter
rpn: num_positive 1
rpn: num_negative 63
I0421 18:40:14.557682 12224 accuracy_layer.cpp:96] Accuracy: 0.515625
I0421 18:40:14.557703 12224 accuracy_layer.cpp:101] Class 0 accuracy : 0.52381
I0421 18:40:14.557718 12224 accuracy_layer.cpp:101] Class 1 accuracy : 0
TRAIN
num fg: 5
num bg: 9
('accuracy: ', 0.0)
I0421 18:40:14.573765 12224 solver.cpp:228] Iteration 10, loss = 9.65455
I0421 18:40:14.573781 12224 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 18:40:14.573801 12224 solver.cpp:244]     Train net output #1: loss_cls = 8.9849 (* 1 = 8.9849 loss)
I0421 18:40:14.573807 12224 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 18:40:14.573810 12224 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.515625
I0421 18:40:14.573815 12224 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.52381
I0421 18:40:14.573819 12224 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0
I0421 18:40:14.573823 12224 solver.cpp:244]     Train net output #6: rpn_cls_loss = 0.661221 (* 1 = 0.661221 loss)
I0421 18:40:14.573828 12224 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.0084349 (* 1 = 0.0084349 loss)
I0421 18:40:14.573834 12224 sgd_solver.cpp:106] Iteration 10, lr = 0.0001
rpn: num_positive 6
rpn: num_negative 58
I0421 18:40:19.230660 12224 accuracy_layer.cpp:96] Accuracy: 0.828125
I0421 18:40:19.230682 12224 accuracy_layer.cpp:101] Class 0 accuracy : 0.844828
I0421 18:40:19.230687 12224 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
num fg: 8
num bg: 27
('accuracy: ', 0.0)
I0421 18:40:19.249440 12224 solver.cpp:228] Iteration 11, loss = 8.42528
I0421 18:40:19.249464 12224 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 18:40:19.249472 12224 solver.cpp:244]     Train net output #1: loss_cls = 7.76643 (* 1 = 7.76643 loss)
I0421 18:40:19.249477 12224 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 18:40:19.249482 12224 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.828125
I0421 18:40:19.249486 12224 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.844828
I0421 18:40:19.249490 12224 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.666667
I0421 18:40:19.249495 12224 solver.cpp:244]     Train net output #6: rpn_cls_loss = 0.638422 (* 1 = 0.638422 loss)
I0421 18:40:19.249500 12224 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.0204262 (* 1 = 0.0204262 loss)
I0421 18:40:19.249505 12224 sgd_solver.cpp:106] Iteration 11, lr = 0.0001
rpn: num_positive 6
rpn: num_negative 58
I0421 18:40:24.163117 12224 accuracy_layer.cpp:96] Accuracy: 0.78125
I0421 18:40:24.163144 12224 accuracy_layer.cpp:101] Class 0 accuracy : 0.793103
I0421 18:40:24.163151 12224 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
num fg: 7
num bg: 25
('accuracy: ', 0.0)
I0421 18:40:24.182224 12224 solver.cpp:228] Iteration 12, loss = 2.87675
I0421 18:40:24.182251 12224 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 18:40:24.182265 12224 solver.cpp:244]     Train net output #1: loss_cls = 2.29882 (* 1 = 2.29882 loss)
I0421 18:40:24.182273 12224 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 18:40:24.182301 12224 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.78125
I0421 18:40:24.182312 12224 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.793103
I0421 18:40:24.182318 12224 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.666667
I0421 18:40:24.182338 12224 solver.cpp:244]     Train net output #6: rpn_cls_loss = 0.552788 (* 1 = 0.552788 loss)
I0421 18:40:24.182360 12224 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.0251367 (* 1 = 0.0251367 loss)
I0421 18:40:24.182370 12224 sgd_solver.cpp:106] Iteration 12, lr = 0.0001
rpn: num_positive 1
rpn: num_negative 63
I0421 18:40:28.849977 12224 accuracy_layer.cpp:96] Accuracy: 0.8125
I0421 18:40:28.849998 12224 accuracy_layer.cpp:101] Class 0 accuracy : 0.809524
I0421 18:40:28.850004 12224 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
num fg: 7
num bg: 15
('accuracy: ', 0.0)
I0421 18:40:28.868327 12224 solver.cpp:228] Iteration 13, loss = 3.88682
I0421 18:40:28.868356 12224 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 18:40:28.868366 12224 solver.cpp:244]     Train net output #1: loss_cls = 3.42289 (* 1 = 3.42289 loss)
I0421 18:40:28.868371 12224 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 18:40:28.868374 12224 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.8125
I0421 18:40:28.868378 12224 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.809524
I0421 18:40:28.868382 12224 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 1
I0421 18:40:28.868386 12224 solver.cpp:244]     Train net output #6: rpn_cls_loss = 0.442638 (* 1 = 0.442638 loss)
I0421 18:40:28.868391 12224 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.0212915 (* 1 = 0.0212915 loss)
I0421 18:40:28.868397 12224 sgd_solver.cpp:106] Iteration 13, lr = 0.0001
rpn: num_positive 6
rpn: num_negative 58
I0421 18:40:33.814666 12224 accuracy_layer.cpp:96] Accuracy: 0.828125
I0421 18:40:33.814688 12224 accuracy_layer.cpp:101] Class 0 accuracy : 0.827586
I0421 18:40:33.814693 12224 accuracy_layer.cpp:101] Class 1 accuracy : 0.833333
TRAIN
num fg: 7
num bg: 30
('accuracy: ', 0.0)
I0421 18:40:33.833600 12224 solver.cpp:228] Iteration 14, loss = 3.89065
I0421 18:40:33.833623 12224 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 18:40:33.833632 12224 solver.cpp:244]     Train net output #1: loss_cls = 3.30738 (* 1 = 3.30738 loss)
I0421 18:40:33.833642 12224 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 18:40:33.833648 12224 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.828125
I0421 18:40:33.833653 12224 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.827586
I0421 18:40:33.833657 12224 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.833333
I0421 18:40:33.833662 12224 solver.cpp:244]     Train net output #6: rpn_cls_loss = 0.496525 (* 1 = 0.496525 loss)
I0421 18:40:33.833667 12224 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.0867441 (* 1 = 0.0867441 loss)
I0421 18:40:33.833673 12224 sgd_solver.cpp:106] Iteration 14, lr = 0.0001
