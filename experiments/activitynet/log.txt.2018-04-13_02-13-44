Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=3, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 3,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
0 roidb entries
print done
[]
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0413 02:13:51.323995 31459 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0413 02:13:51.324157 31459 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0413 02:13:51.325155 31459 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 100"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0413 02:13:51.329643 31459 layer_factory.hpp:77] Creating layer data
I0413 02:13:51.479972 31459 net.cpp:100] Creating Layer data
I0413 02:13:51.481058 31459 net.cpp:408] data -> data
I0413 02:13:51.481171 31459 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0413 02:13:51.569192 31459 net.cpp:150] Setting up data
I0413 02:13:51.569226 31459 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0413 02:13:51.569232 31459 net.cpp:157] Top shape: 1 3 (3)
I0413 02:13:51.569236 31459 net.cpp:165] Memory required for data: 115605516
I0413 02:13:51.569244 31459 layer_factory.hpp:77] Creating layer data_data_0_split
I0413 02:13:51.569260 31459 net.cpp:100] Creating Layer data_data_0_split
I0413 02:13:51.569265 31459 net.cpp:434] data_data_0_split <- data
I0413 02:13:51.569274 31459 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0413 02:13:51.569288 31459 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0413 02:13:51.569380 31459 net.cpp:150] Setting up data_data_0_split
I0413 02:13:51.569391 31459 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0413 02:13:51.569396 31459 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0413 02:13:51.569401 31459 net.cpp:165] Memory required for data: 346816524
I0413 02:13:51.569404 31459 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0413 02:13:51.569411 31459 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0413 02:13:51.569416 31459 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0413 02:13:51.569422 31459 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0413 02:13:51.569430 31459 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0413 02:13:51.569475 31459 net.cpp:150] Setting up gt_boxes_data_1_split
I0413 02:13:51.569481 31459 net.cpp:157] Top shape: 1 3 (3)
I0413 02:13:51.569485 31459 net.cpp:157] Top shape: 1 3 (3)
I0413 02:13:51.569489 31459 net.cpp:165] Memory required for data: 346816548
I0413 02:13:51.569494 31459 layer_factory.hpp:77] Creating layer conv1a
I0413 02:13:51.569509 31459 net.cpp:100] Creating Layer conv1a
I0413 02:13:51.569512 31459 net.cpp:434] conv1a <- data_data_0_split_0
I0413 02:13:51.569519 31459 net.cpp:408] conv1a -> conv1a
I0413 02:13:51.613689 31459 net.cpp:150] Setting up conv1a
I0413 02:13:51.613778 31459 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0413 02:13:51.613797 31459 net.cpp:165] Memory required for data: 2813067300
I0413 02:13:51.613827 31459 layer_factory.hpp:77] Creating layer relu1a
I0413 02:13:51.613862 31459 net.cpp:100] Creating Layer relu1a
I0413 02:13:51.613880 31459 net.cpp:434] relu1a <- conv1a
I0413 02:13:51.613901 31459 net.cpp:395] relu1a -> conv1a (in-place)
I0413 02:13:51.613926 31459 net.cpp:150] Setting up relu1a
I0413 02:13:51.613945 31459 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0413 02:13:51.613960 31459 net.cpp:165] Memory required for data: 5279318052
I0413 02:13:51.613976 31459 layer_factory.hpp:77] Creating layer pool1
I0413 02:13:51.613997 31459 net.cpp:100] Creating Layer pool1
I0413 02:13:51.614014 31459 net.cpp:434] pool1 <- conv1a
I0413 02:13:51.614032 31459 net.cpp:408] pool1 -> pool1
I0413 02:13:51.614168 31459 net.cpp:150] Setting up pool1
I0413 02:13:51.614190 31459 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0413 02:13:51.614207 31459 net.cpp:165] Memory required for data: 5895880740
I0413 02:13:51.614222 31459 layer_factory.hpp:77] Creating layer conv2a
I0413 02:13:51.614248 31459 net.cpp:100] Creating Layer conv2a
I0413 02:13:51.614264 31459 net.cpp:434] conv2a <- pool1
I0413 02:13:51.614286 31459 net.cpp:408] conv2a -> conv2a
I0413 02:13:51.635965 31459 net.cpp:150] Setting up conv2a
I0413 02:13:51.636049 31459 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0413 02:13:51.636066 31459 net.cpp:165] Memory required for data: 7129006116
I0413 02:13:51.636096 31459 layer_factory.hpp:77] Creating layer relu2a
I0413 02:13:51.636121 31459 net.cpp:100] Creating Layer relu2a
I0413 02:13:51.636142 31459 net.cpp:434] relu2a <- conv2a
I0413 02:13:51.636164 31459 net.cpp:395] relu2a -> conv2a (in-place)
I0413 02:13:51.636189 31459 net.cpp:150] Setting up relu2a
I0413 02:13:51.636207 31459 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0413 02:13:51.636221 31459 net.cpp:165] Memory required for data: 8362131492
I0413 02:13:51.636235 31459 layer_factory.hpp:77] Creating layer pool2
I0413 02:13:51.636260 31459 net.cpp:100] Creating Layer pool2
I0413 02:13:51.636276 31459 net.cpp:434] pool2 <- conv2a
I0413 02:13:51.636294 31459 net.cpp:408] pool2 -> pool2
I0413 02:13:51.636466 31459 net.cpp:150] Setting up pool2
I0413 02:13:51.636490 31459 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0413 02:13:51.636507 31459 net.cpp:165] Memory required for data: 8516272164
I0413 02:13:51.636523 31459 layer_factory.hpp:77] Creating layer conv3a
I0413 02:13:51.636550 31459 net.cpp:100] Creating Layer conv3a
I0413 02:13:51.636567 31459 net.cpp:434] conv3a <- pool2
I0413 02:13:51.636587 31459 net.cpp:408] conv3a -> conv3a
I0413 02:13:51.650496 31459 net.cpp:150] Setting up conv3a
I0413 02:13:51.650573 31459 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0413 02:13:51.650590 31459 net.cpp:165] Memory required for data: 8824553508
I0413 02:13:51.650616 31459 layer_factory.hpp:77] Creating layer relu3a
I0413 02:13:51.650655 31459 net.cpp:100] Creating Layer relu3a
I0413 02:13:51.650673 31459 net.cpp:434] relu3a <- conv3a
I0413 02:13:51.650694 31459 net.cpp:395] relu3a -> conv3a (in-place)
I0413 02:13:51.650717 31459 net.cpp:150] Setting up relu3a
I0413 02:13:51.650735 31459 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0413 02:13:51.650750 31459 net.cpp:165] Memory required for data: 9132834852
I0413 02:13:51.650765 31459 layer_factory.hpp:77] Creating layer conv3b
I0413 02:13:51.650790 31459 net.cpp:100] Creating Layer conv3b
I0413 02:13:51.650806 31459 net.cpp:434] conv3b <- conv3a
I0413 02:13:51.650827 31459 net.cpp:408] conv3b -> conv3b
I0413 02:13:51.676614 31459 net.cpp:150] Setting up conv3b
I0413 02:13:51.676682 31459 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0413 02:13:51.676698 31459 net.cpp:165] Memory required for data: 9441116196
I0413 02:13:51.676722 31459 layer_factory.hpp:77] Creating layer relu3b
I0413 02:13:51.676749 31459 net.cpp:100] Creating Layer relu3b
I0413 02:13:51.676769 31459 net.cpp:434] relu3b <- conv3b
I0413 02:13:51.676789 31459 net.cpp:395] relu3b -> conv3b (in-place)
I0413 02:13:51.676815 31459 net.cpp:150] Setting up relu3b
I0413 02:13:51.676833 31459 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0413 02:13:51.676848 31459 net.cpp:165] Memory required for data: 9749397540
I0413 02:13:51.676862 31459 layer_factory.hpp:77] Creating layer pool3
I0413 02:13:51.676882 31459 net.cpp:100] Creating Layer pool3
I0413 02:13:51.676898 31459 net.cpp:434] pool3 <- conv3b
I0413 02:13:51.676914 31459 net.cpp:408] pool3 -> pool3
I0413 02:13:51.677007 31459 net.cpp:150] Setting up pool3
I0413 02:13:51.677032 31459 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0413 02:13:51.677048 31459 net.cpp:165] Memory required for data: 9787932708
I0413 02:13:51.677063 31459 layer_factory.hpp:77] Creating layer conv4a
I0413 02:13:51.677088 31459 net.cpp:100] Creating Layer conv4a
I0413 02:13:51.677104 31459 net.cpp:434] conv4a <- pool3
I0413 02:13:51.677124 31459 net.cpp:408] conv4a -> conv4a
I0413 02:13:51.730283 31459 net.cpp:150] Setting up conv4a
I0413 02:13:51.730474 31459 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0413 02:13:51.730525 31459 net.cpp:165] Memory required for data: 9865003044
I0413 02:13:51.730588 31459 layer_factory.hpp:77] Creating layer relu4a
I0413 02:13:51.730646 31459 net.cpp:100] Creating Layer relu4a
I0413 02:13:51.730689 31459 net.cpp:434] relu4a <- conv4a
I0413 02:13:51.730733 31459 net.cpp:395] relu4a -> conv4a (in-place)
I0413 02:13:51.730782 31459 net.cpp:150] Setting up relu4a
I0413 02:13:51.730824 31459 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0413 02:13:51.730865 31459 net.cpp:165] Memory required for data: 9942073380
I0413 02:13:51.730902 31459 layer_factory.hpp:77] Creating layer conv4b
I0413 02:13:51.730958 31459 net.cpp:100] Creating Layer conv4b
I0413 02:13:51.730998 31459 net.cpp:434] conv4b <- conv4a
I0413 02:13:51.731040 31459 net.cpp:408] conv4b -> conv4b
I0413 02:13:51.918505 31459 net.cpp:150] Setting up conv4b
I0413 02:13:51.918697 31459 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0413 02:13:51.918738 31459 net.cpp:165] Memory required for data: 10019143716
I0413 02:13:51.918781 31459 layer_factory.hpp:77] Creating layer relu4b
I0413 02:13:51.918824 31459 net.cpp:100] Creating Layer relu4b
I0413 02:13:51.918860 31459 net.cpp:434] relu4b <- conv4b
I0413 02:13:51.918900 31459 net.cpp:395] relu4b -> conv4b (in-place)
I0413 02:13:51.918941 31459 net.cpp:150] Setting up relu4b
I0413 02:13:51.918977 31459 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0413 02:13:51.919009 31459 net.cpp:165] Memory required for data: 10096214052
I0413 02:13:51.919041 31459 layer_factory.hpp:77] Creating layer pool4
I0413 02:13:51.919077 31459 net.cpp:100] Creating Layer pool4
I0413 02:13:51.919111 31459 net.cpp:434] pool4 <- conv4b
I0413 02:13:51.919162 31459 net.cpp:408] pool4 -> pool4
I0413 02:13:51.919277 31459 net.cpp:150] Setting up pool4
I0413 02:13:51.919343 31459 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0413 02:13:51.919389 31459 net.cpp:165] Memory required for data: 10105847844
I0413 02:13:51.919436 31459 layer_factory.hpp:77] Creating layer conv5a
I0413 02:13:51.919483 31459 net.cpp:100] Creating Layer conv5a
I0413 02:13:51.919522 31459 net.cpp:434] conv5a <- pool4
I0413 02:13:51.919564 31459 net.cpp:408] conv5a -> conv5a
I0413 02:13:52.383087 31459 net.cpp:150] Setting up conv5a
I0413 02:13:52.383388 31459 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0413 02:13:52.383399 31459 net.cpp:165] Memory required for data: 10115481636
I0413 02:13:52.383415 31459 layer_factory.hpp:77] Creating layer relu5a
I0413 02:13:52.383430 31459 net.cpp:100] Creating Layer relu5a
I0413 02:13:52.383436 31459 net.cpp:434] relu5a <- conv5a
I0413 02:13:52.383448 31459 net.cpp:395] relu5a -> conv5a (in-place)
I0413 02:13:52.383461 31459 net.cpp:150] Setting up relu5a
I0413 02:13:52.383469 31459 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0413 02:13:52.383473 31459 net.cpp:165] Memory required for data: 10125115428
I0413 02:13:52.383477 31459 layer_factory.hpp:77] Creating layer conv5b
I0413 02:13:52.383499 31459 net.cpp:100] Creating Layer conv5b
I0413 02:13:52.383504 31459 net.cpp:434] conv5b <- conv5a
I0413 02:13:52.383510 31459 net.cpp:408] conv5b -> conv5b
I0413 02:13:52.599522 31459 net.cpp:150] Setting up conv5b
I0413 02:13:52.604084 31459 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0413 02:13:52.604151 31459 net.cpp:165] Memory required for data: 10134749220
I0413 02:13:52.604203 31459 layer_factory.hpp:77] Creating layer relu5b
I0413 02:13:52.604240 31459 net.cpp:100] Creating Layer relu5b
I0413 02:13:52.604269 31459 net.cpp:434] relu5b <- conv5b
I0413 02:13:52.604310 31459 net.cpp:395] relu5b -> conv5b (in-place)
I0413 02:13:52.604379 31459 net.cpp:150] Setting up relu5b
I0413 02:13:52.604403 31459 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0413 02:13:52.604420 31459 net.cpp:165] Memory required for data: 10144383012
I0413 02:13:52.604437 31459 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0413 02:13:52.604466 31459 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0413 02:13:52.604485 31459 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0413 02:13:52.604509 31459 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0413 02:13:52.604535 31459 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0413 02:13:52.604701 31459 net.cpp:150] Setting up conv5b_relu5b_0_split
I0413 02:13:52.604725 31459 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0413 02:13:52.604740 31459 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0413 02:13:52.604754 31459 net.cpp:165] Memory required for data: 10163650596
I0413 02:13:52.604768 31459 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0413 02:13:52.604794 31459 net.cpp:100] Creating Layer rpn_conv/3x3
I0413 02:13:52.604811 31459 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0413 02:13:52.604831 31459 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0413 02:13:53.119112 31459 net.cpp:150] Setting up rpn_conv/3x3
I0413 02:13:53.119343 31459 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0413 02:13:53.119390 31459 net.cpp:165] Memory required for data: 10166796324
I0413 02:13:53.119460 31459 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0413 02:13:53.119518 31459 net.cpp:100] Creating Layer rpn_relu/3x3
I0413 02:13:53.119559 31459 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0413 02:13:53.119598 31459 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0413 02:13:53.119645 31459 net.cpp:150] Setting up rpn_relu/3x3
I0413 02:13:53.119683 31459 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0413 02:13:53.119715 31459 net.cpp:165] Memory required for data: 10169942052
I0413 02:13:53.119747 31459 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0413 02:13:53.119797 31459 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0413 02:13:53.119832 31459 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0413 02:13:53.119873 31459 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0413 02:13:53.471485 31459 net.cpp:150] Setting up rpn_conv/3x3_2
I0413 02:13:53.471660 31459 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0413 02:13:53.471716 31459 net.cpp:165] Memory required for data: 10170728484
I0413 02:13:53.471758 31459 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0413 02:13:53.471799 31459 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0413 02:13:53.471837 31459 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0413 02:13:53.471873 31459 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0413 02:13:53.471912 31459 net.cpp:150] Setting up rpn_relu/3x3_2
I0413 02:13:53.471946 31459 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0413 02:13:53.471976 31459 net.cpp:165] Memory required for data: 10171514916
I0413 02:13:53.472005 31459 layer_factory.hpp:77] Creating layer rpn/output_pool
I0413 02:13:53.472041 31459 net.cpp:100] Creating Layer rpn/output_pool
I0413 02:13:53.472072 31459 net.cpp:434] rpn/output_pool <- rpn/output_2
I0413 02:13:53.472105 31459 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0413 02:13:53.472200 31459 net.cpp:150] Setting up rpn/output_pool
I0413 02:13:53.472247 31459 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0413 02:13:53.472280 31459 net.cpp:165] Memory required for data: 10171711524
I0413 02:13:53.472311 31459 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0413 02:13:53.472380 31459 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0413 02:13:53.472414 31459 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0413 02:13:53.472450 31459 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0413 02:13:53.472487 31459 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0413 02:13:53.472574 31459 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0413 02:13:53.472627 31459 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0413 02:13:53.472661 31459 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0413 02:13:53.472689 31459 net.cpp:165] Memory required for data: 10172104740
I0413 02:13:53.472718 31459 layer_factory.hpp:77] Creating layer rpn_cls_score
I0413 02:13:53.472757 31459 net.cpp:100] Creating Layer rpn_cls_score
I0413 02:13:53.472795 31459 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0413 02:13:53.472834 31459 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0413 02:13:53.473665 31459 net.cpp:150] Setting up rpn_cls_score
I0413 02:13:53.473737 31459 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0413 02:13:53.473775 31459 net.cpp:165] Memory required for data: 10172133156
I0413 02:13:53.473811 31459 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0413 02:13:53.473845 31459 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0413 02:13:53.473876 31459 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0413 02:13:53.473912 31459 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0413 02:13:53.473949 31459 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0413 02:13:53.474045 31459 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0413 02:13:53.474104 31459 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0413 02:13:53.474136 31459 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0413 02:13:53.474166 31459 net.cpp:165] Memory required for data: 10172189988
I0413 02:13:53.474195 31459 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0413 02:13:53.474239 31459 net.cpp:100] Creating Layer rpn_twin_pred
I0413 02:13:53.474272 31459 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0413 02:13:53.474305 31459 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0413 02:13:53.475100 31459 net.cpp:150] Setting up rpn_twin_pred
I0413 02:13:53.475167 31459 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0413 02:13:53.475205 31459 net.cpp:165] Memory required for data: 10172218404
I0413 02:13:53.475241 31459 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0413 02:13:53.475278 31459 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0413 02:13:53.475317 31459 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0413 02:13:53.475348 31459 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0413 02:13:53.475388 31459 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0413 02:13:53.475474 31459 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0413 02:13:53.475527 31459 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0413 02:13:53.475558 31459 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0413 02:13:53.475587 31459 net.cpp:165] Memory required for data: 10172275236
I0413 02:13:53.475617 31459 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0413 02:13:53.475653 31459 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0413 02:13:53.475685 31459 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0413 02:13:53.475720 31459 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0413 02:13:53.475790 31459 net.cpp:150] Setting up rpn_cls_score_reshape
I0413 02:13:53.475843 31459 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0413 02:13:53.475872 31459 net.cpp:165] Memory required for data: 10172303652
I0413 02:13:53.475901 31459 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0413 02:13:53.475935 31459 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0413 02:13:53.475967 31459 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0413 02:13:53.475999 31459 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0413 02:13:53.476043 31459 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0413 02:13:53.476081 31459 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0413 02:13:53.476181 31459 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0413 02:13:53.476233 31459 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0413 02:13:53.476265 31459 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0413 02:13:53.476300 31459 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0413 02:13:53.476361 31459 net.cpp:165] Memory required for data: 10172388900
I0413 02:13:53.476394 31459 layer_factory.hpp:77] Creating layer rpn-data
I0413 02:13:53.476972 31459 net.cpp:100] Creating Layer rpn-data
I0413 02:13:53.477056 31459 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0413 02:13:53.477102 31459 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0413 02:13:53.477141 31459 net.cpp:434] rpn-data <- data_data_0_split_1
I0413 02:13:53.477180 31459 net.cpp:408] rpn-data -> rpn_labels
I0413 02:13:53.477218 31459 net.cpp:408] rpn-data -> rpn_twin_targets
I0413 02:13:53.477257 31459 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0413 02:13:53.477294 31459 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0413 02:13:53.532300 31459 net.cpp:150] Setting up rpn-data
I0413 02:13:53.538161 31459 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0413 02:13:53.538285 31459 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0413 02:13:53.538352 31459 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0413 02:13:53.538417 31459 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0413 02:13:53.538481 31459 net.cpp:165] Memory required for data: 10172488356
I0413 02:13:53.538552 31459 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0413 02:13:53.538626 31459 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0413 02:13:53.538703 31459 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0413 02:13:53.538774 31459 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0413 02:13:53.538856 31459 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0413 02:13:53.538988 31459 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0413 02:13:53.539178 31459 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0413 02:13:53.539244 31459 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0413 02:13:53.539304 31459 net.cpp:165] Memory required for data: 10172516772
I0413 02:13:53.539358 31459 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0413 02:13:53.539422 31459 net.cpp:100] Creating Layer rpn_loss_cls
I0413 02:13:53.539489 31459 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0413 02:13:53.539551 31459 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0413 02:13:53.539618 31459 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0413 02:13:53.539686 31459 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0413 02:13:53.539919 31459 net.cpp:150] Setting up rpn_loss_cls
I0413 02:13:53.540302 31459 net.cpp:157] Top shape: (1)
I0413 02:13:53.540416 31459 net.cpp:160]     with loss weight 1
I0413 02:13:53.540500 31459 net.cpp:165] Memory required for data: 10172516776
I0413 02:13:53.540556 31459 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0413 02:13:53.540621 31459 net.cpp:100] Creating Layer rpn_loss_twin
I0413 02:13:53.540697 31459 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0413 02:13:53.540761 31459 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0413 02:13:53.540827 31459 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0413 02:13:53.540890 31459 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0413 02:13:53.540956 31459 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0413 02:13:53.541152 31459 net.cpp:150] Setting up rpn_loss_twin
I0413 02:13:53.541472 31459 net.cpp:157] Top shape: (1)
I0413 02:13:53.541533 31459 net.cpp:160]     with loss weight 1
I0413 02:13:53.541597 31459 net.cpp:165] Memory required for data: 10172516780
I0413 02:13:53.541656 31459 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0413 02:13:53.541718 31459 net.cpp:100] Creating Layer rpn_accuarcy
I0413 02:13:53.541786 31459 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0413 02:13:53.541846 31459 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0413 02:13:53.541915 31459 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0413 02:13:53.541981 31459 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0413 02:13:53.542104 31459 net.cpp:150] Setting up rpn_accuarcy
I0413 02:13:53.542286 31459 net.cpp:157] Top shape: (1)
I0413 02:13:53.542348 31459 net.cpp:157] Top shape: 2 (2)
I0413 02:13:53.542404 31459 net.cpp:165] Memory required for data: 10172516792
I0413 02:13:53.542459 31459 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0413 02:13:53.542515 31459 net.cpp:100] Creating Layer rpn_cls_prob
I0413 02:13:53.542579 31459 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0413 02:13:53.542635 31459 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0413 02:13:53.542785 31459 net.cpp:150] Setting up rpn_cls_prob
I0413 02:13:53.543048 31459 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0413 02:13:53.543129 31459 net.cpp:165] Memory required for data: 10172545208
I0413 02:13:53.543186 31459 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0413 02:13:53.543248 31459 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0413 02:13:53.543323 31459 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0413 02:13:53.543383 31459 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0413 02:13:53.543488 31459 net.cpp:150] Setting up rpn_cls_prob_reshape
I0413 02:13:53.543634 31459 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0413 02:13:53.543694 31459 net.cpp:165] Memory required for data: 10172573624
I0413 02:13:53.543751 31459 layer_factory.hpp:77] Creating layer proposal
I0413 02:13:53.545797 31459 net.cpp:100] Creating Layer proposal
I0413 02:13:53.546542 31459 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0413 02:13:53.546627 31459 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0413 02:13:53.546697 31459 net.cpp:408] proposal -> rpn_rois
I0413 02:13:53.582156 31459 net.cpp:150] Setting up proposal
I0413 02:13:53.582190 31459 net.cpp:157] Top shape: 1 3 (3)
I0413 02:13:53.582195 31459 net.cpp:165] Memory required for data: 10172573636
I0413 02:13:53.582201 31459 layer_factory.hpp:77] Creating layer roi-data
I0413 02:13:53.582469 31459 net.cpp:100] Creating Layer roi-data
I0413 02:13:53.584905 31459 net.cpp:434] roi-data <- rpn_rois
I0413 02:13:53.585050 31459 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0413 02:13:53.585175 31459 net.cpp:408] roi-data -> rois
I0413 02:13:53.585292 31459 net.cpp:408] roi-data -> labels
I0413 02:13:53.585420 31459 net.cpp:408] roi-data -> twin_targets
I0413 02:13:53.585541 31459 net.cpp:408] roi-data -> twin_inside_weights
I0413 02:13:53.585669 31459 net.cpp:408] roi-data -> twin_outside_weights
I0413 02:13:53.586414 31459 net.cpp:150] Setting up roi-data
I0413 02:13:53.589038 31459 net.cpp:157] Top shape: 1 3 (3)
I0413 02:13:53.589180 31459 net.cpp:157] Top shape: 1 1 (1)
I0413 02:13:53.589274 31459 net.cpp:157] Top shape: 1 402 (402)
I0413 02:13:53.589370 31459 net.cpp:157] Top shape: 1 402 (402)
I0413 02:13:53.589463 31459 net.cpp:157] Top shape: 1 402 (402)
I0413 02:13:53.589553 31459 net.cpp:165] Memory required for data: 10172578476
I0413 02:13:53.589640 31459 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0413 02:13:53.589745 31459 net.cpp:100] Creating Layer labels_roi-data_1_split
I0413 02:13:53.589857 31459 net.cpp:434] labels_roi-data_1_split <- labels
I0413 02:13:53.589958 31459 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0413 02:13:53.590092 31459 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0413 02:13:53.590301 31459 net.cpp:150] Setting up labels_roi-data_1_split
I0413 02:13:53.590668 31459 net.cpp:157] Top shape: 1 1 (1)
I0413 02:13:53.590768 31459 net.cpp:157] Top shape: 1 1 (1)
I0413 02:13:53.590867 31459 net.cpp:165] Memory required for data: 10172578484
I0413 02:13:53.590958 31459 layer_factory.hpp:77] Creating layer roi_pool5
I0413 02:13:53.591068 31459 net.cpp:100] Creating Layer roi_pool5
I0413 02:13:53.591204 31459 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0413 02:13:53.591301 31459 net.cpp:434] roi_pool5 <- rois
I0413 02:13:53.591450 31459 net.cpp:408] roi_pool5 -> pool5
I0413 02:13:53.591574 31459 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0413 02:13:53.591766 31459 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0413 02:13:53.591966 31459 net.cpp:150] Setting up roi_pool5
I0413 02:13:53.592439 31459 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0413 02:13:53.592540 31459 net.cpp:165] Memory required for data: 10172611252
I0413 02:13:53.592635 31459 layer_factory.hpp:77] Creating layer fc6
I0413 02:13:53.592759 31459 net.cpp:100] Creating Layer fc6
I0413 02:13:53.592916 31459 net.cpp:434] fc6 <- pool5
I0413 02:13:53.593061 31459 net.cpp:408] fc6 -> fc6
I0413 02:13:56.760978 31459 net.cpp:150] Setting up fc6
I0413 02:13:56.761353 31459 net.cpp:157] Top shape: 1 4096 (4096)
I0413 02:13:56.761447 31459 net.cpp:165] Memory required for data: 10172627636
I0413 02:13:56.761543 31459 layer_factory.hpp:77] Creating layer relu6
I0413 02:13:56.761631 31459 net.cpp:100] Creating Layer relu6
I0413 02:13:56.761732 31459 net.cpp:434] relu6 <- fc6
I0413 02:13:56.761801 31459 net.cpp:395] relu6 -> fc6 (in-place)
I0413 02:13:56.761873 31459 net.cpp:150] Setting up relu6
I0413 02:13:56.761946 31459 net.cpp:157] Top shape: 1 4096 (4096)
I0413 02:13:56.761991 31459 net.cpp:165] Memory required for data: 10172644020
I0413 02:13:56.762038 31459 layer_factory.hpp:77] Creating layer drop6
I0413 02:13:56.762130 31459 net.cpp:100] Creating Layer drop6
I0413 02:13:56.762203 31459 net.cpp:434] drop6 <- fc6
I0413 02:13:56.762261 31459 net.cpp:395] drop6 -> fc6 (in-place)
I0413 02:13:56.762576 31459 net.cpp:150] Setting up drop6
I0413 02:13:56.762653 31459 net.cpp:157] Top shape: 1 4096 (4096)
I0413 02:13:56.762703 31459 net.cpp:165] Memory required for data: 10172660404
I0413 02:13:56.762773 31459 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0413 02:13:56.762835 31459 net.cpp:100] Creating Layer fc6_drop6_0_split
I0413 02:13:56.762917 31459 net.cpp:434] fc6_drop6_0_split <- fc6
I0413 02:13:56.763001 31459 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0413 02:13:56.763079 31459 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0413 02:13:56.763679 31459 net.cpp:150] Setting up fc6_drop6_0_split
I0413 02:13:56.763756 31459 net.cpp:157] Top shape: 1 4096 (4096)
I0413 02:13:56.763792 31459 net.cpp:157] Top shape: 1 4096 (4096)
I0413 02:13:56.763816 31459 net.cpp:165] Memory required for data: 10172693172
I0413 02:13:56.763880 31459 layer_factory.hpp:77] Creating layer cls_score
I0413 02:13:56.763936 31459 net.cpp:100] Creating Layer cls_score
I0413 02:13:56.763985 31459 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0413 02:13:56.764040 31459 net.cpp:408] cls_score -> cls_score
I0413 02:13:56.783648 31459 net.cpp:150] Setting up cls_score
I0413 02:13:56.783933 31459 net.cpp:157] Top shape: 1 201 (201)
I0413 02:13:56.784003 31459 net.cpp:165] Memory required for data: 10172693976
I0413 02:13:56.784082 31459 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0413 02:13:56.784155 31459 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0413 02:13:56.784210 31459 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0413 02:13:56.784274 31459 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0413 02:13:56.784386 31459 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0413 02:13:56.784795 31459 net.cpp:150] Setting up cls_score_cls_score_0_split
I0413 02:13:56.784900 31459 net.cpp:157] Top shape: 1 201 (201)
I0413 02:13:56.784956 31459 net.cpp:157] Top shape: 1 201 (201)
I0413 02:13:56.785009 31459 net.cpp:165] Memory required for data: 10172695584
I0413 02:13:56.785061 31459 layer_factory.hpp:77] Creating layer twin_pred
I0413 02:13:56.785121 31459 net.cpp:100] Creating Layer twin_pred
I0413 02:13:56.785174 31459 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0413 02:13:56.785244 31459 net.cpp:408] twin_pred -> twin_pred
I0413 02:13:56.809365 31459 net.cpp:150] Setting up twin_pred
I0413 02:13:56.809593 31459 net.cpp:157] Top shape: 1 402 (402)
I0413 02:13:56.809648 31459 net.cpp:165] Memory required for data: 10172697192
I0413 02:13:56.809711 31459 layer_factory.hpp:77] Creating layer loss_cls
I0413 02:13:56.809780 31459 net.cpp:100] Creating Layer loss_cls
I0413 02:13:56.809834 31459 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0413 02:13:56.809895 31459 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0413 02:13:56.809958 31459 net.cpp:408] loss_cls -> loss_cls
I0413 02:13:56.810029 31459 layer_factory.hpp:77] Creating layer loss_cls
I0413 02:13:56.810415 31459 net.cpp:150] Setting up loss_cls
I0413 02:13:56.810493 31459 net.cpp:157] Top shape: (1)
I0413 02:13:56.810536 31459 net.cpp:160]     with loss weight 1
I0413 02:13:56.810595 31459 net.cpp:165] Memory required for data: 10172697196
I0413 02:13:56.810644 31459 layer_factory.hpp:77] Creating layer loss_twin
I0413 02:13:56.810709 31459 net.cpp:100] Creating Layer loss_twin
I0413 02:13:56.810794 31459 net.cpp:434] loss_twin <- twin_pred
I0413 02:13:56.810847 31459 net.cpp:434] loss_twin <- twin_targets
I0413 02:13:56.810899 31459 net.cpp:434] loss_twin <- twin_inside_weights
I0413 02:13:56.810946 31459 net.cpp:434] loss_twin <- twin_outside_weights
I0413 02:13:56.810995 31459 net.cpp:408] loss_twin -> loss_twin
I0413 02:13:56.811383 31459 net.cpp:150] Setting up loss_twin
I0413 02:13:56.811450 31459 net.cpp:157] Top shape: (1)
I0413 02:13:56.811487 31459 net.cpp:160]     with loss weight 1
I0413 02:13:56.811560 31459 net.cpp:165] Memory required for data: 10172697200
I0413 02:13:56.811607 31459 layer_factory.hpp:77] Creating layer accuarcy
I0413 02:13:56.811684 31459 net.cpp:100] Creating Layer accuarcy
I0413 02:13:56.811739 31459 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0413 02:13:56.811789 31459 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0413 02:13:56.811851 31459 net.cpp:408] accuarcy -> accuarcy
I0413 02:13:56.811919 31459 net.cpp:150] Setting up accuarcy
I0413 02:13:56.811991 31459 net.cpp:157] Top shape: (1)
I0413 02:13:56.812039 31459 net.cpp:165] Memory required for data: 10172697204
I0413 02:13:56.812083 31459 net.cpp:228] accuarcy does not need backward computation.
I0413 02:13:56.812140 31459 net.cpp:226] loss_twin needs backward computation.
I0413 02:13:56.812192 31459 net.cpp:226] loss_cls needs backward computation.
I0413 02:13:56.812244 31459 net.cpp:226] twin_pred needs backward computation.
I0413 02:13:56.812286 31459 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0413 02:13:56.812360 31459 net.cpp:226] cls_score needs backward computation.
I0413 02:13:56.812403 31459 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0413 02:13:56.812443 31459 net.cpp:226] drop6 needs backward computation.
I0413 02:13:56.812479 31459 net.cpp:226] relu6 needs backward computation.
I0413 02:13:56.812518 31459 net.cpp:226] fc6 needs backward computation.
I0413 02:13:56.812559 31459 net.cpp:226] roi_pool5 needs backward computation.
I0413 02:13:56.812602 31459 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0413 02:13:56.812642 31459 net.cpp:226] roi-data needs backward computation.
I0413 02:13:56.812681 31459 net.cpp:226] proposal needs backward computation.
I0413 02:13:56.812726 31459 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0413 02:13:56.812765 31459 net.cpp:226] rpn_cls_prob needs backward computation.
I0413 02:13:56.812821 31459 net.cpp:228] rpn_accuarcy does not need backward computation.
I0413 02:13:56.812867 31459 net.cpp:226] rpn_loss_twin needs backward computation.
I0413 02:13:56.812922 31459 net.cpp:226] rpn_loss_cls needs backward computation.
I0413 02:13:56.813004 31459 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0413 02:13:56.813057 31459 net.cpp:226] rpn-data needs backward computation.
I0413 02:13:56.813169 31459 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0413 02:13:56.813239 31459 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0413 02:13:56.813300 31459 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0413 02:13:56.813357 31459 net.cpp:226] rpn_twin_pred needs backward computation.
I0413 02:13:56.813400 31459 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0413 02:13:56.813446 31459 net.cpp:226] rpn_cls_score needs backward computation.
I0413 02:13:56.813522 31459 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0413 02:13:56.813597 31459 net.cpp:226] rpn/output_pool needs backward computation.
I0413 02:13:56.813655 31459 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0413 02:13:56.813702 31459 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0413 02:13:56.813742 31459 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0413 02:13:56.813783 31459 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0413 02:13:56.813824 31459 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0413 02:13:56.813887 31459 net.cpp:226] relu5b needs backward computation.
I0413 02:13:56.813956 31459 net.cpp:226] conv5b needs backward computation.
I0413 02:13:56.814008 31459 net.cpp:226] relu5a needs backward computation.
I0413 02:13:56.814050 31459 net.cpp:226] conv5a needs backward computation.
I0413 02:13:56.814108 31459 net.cpp:226] pool4 needs backward computation.
I0413 02:13:56.814152 31459 net.cpp:226] relu4b needs backward computation.
I0413 02:13:56.814205 31459 net.cpp:226] conv4b needs backward computation.
I0413 02:13:56.814245 31459 net.cpp:226] relu4a needs backward computation.
I0413 02:13:56.814327 31459 net.cpp:226] conv4a needs backward computation.
I0413 02:13:56.814368 31459 net.cpp:226] pool3 needs backward computation.
I0413 02:13:56.814406 31459 net.cpp:226] relu3b needs backward computation.
I0413 02:13:56.814442 31459 net.cpp:226] conv3b needs backward computation.
I0413 02:13:56.814477 31459 net.cpp:226] relu3a needs backward computation.
I0413 02:13:56.814528 31459 net.cpp:226] conv3a needs backward computation.
I0413 02:13:56.814568 31459 net.cpp:228] pool2 does not need backward computation.
I0413 02:13:56.814610 31459 net.cpp:228] relu2a does not need backward computation.
I0413 02:13:56.814648 31459 net.cpp:228] conv2a does not need backward computation.
I0413 02:13:56.814684 31459 net.cpp:228] pool1 does not need backward computation.
I0413 02:13:56.814723 31459 net.cpp:228] relu1a does not need backward computation.
I0413 02:13:56.814766 31459 net.cpp:228] conv1a does not need backward computation.
I0413 02:13:56.814808 31459 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0413 02:13:56.814858 31459 net.cpp:228] data_data_0_split does not need backward computation.
I0413 02:13:56.814908 31459 net.cpp:228] data does not need backward computation.
I0413 02:13:56.814950 31459 net.cpp:270] This network produces output accuarcy
I0413 02:13:56.814987 31459 net.cpp:270] This network produces output loss_cls
I0413 02:13:56.815029 31459 net.cpp:270] This network produces output loss_twin
I0413 02:13:56.815078 31459 net.cpp:270] This network produces output rpn_accuarcy
I0413 02:13:56.815120 31459 net.cpp:270] This network produces output rpn_accuarcy_class
I0413 02:13:56.815176 31459 net.cpp:270] This network produces output rpn_cls_loss
I0413 02:13:56.815213 31459 net.cpp:270] This network produces output rpn_loss_twin
I0413 02:13:56.815362 31459 net.cpp:283] Network initialization done.
I0413 02:13:56.815832 31459 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0413 02:14:03.901901 31459 net.cpp:761] Ignoring source layer pool5
I0413 02:14:03.979833 31459 net.cpp:761] Ignoring source layer fc7
I0413 02:14:03.980057 31459 net.cpp:761] Ignoring source layer relu7
I0413 02:14:03.980118 31459 net.cpp:761] Ignoring source layer drop7
I0413 02:14:03.980175 31459 net.cpp:761] Ignoring source layer fc8-200
I0413 02:14:03.980222 31459 net.cpp:761] Ignoring source layer loss
Solving...
('roidb', [])
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 96, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 124, in forward
    blobs = self._get_next_minibatch()
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 48, in _get_next_minibatch
    return get_minibatch(minibatch_db, self._num_classes)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/minibatch.py", line 25, in get_minibatch
    assert(cfg.TRAIN.BATCH_SIZE % num_videos == 0), \
ZeroDivisionError: integer division or modulo by zero
