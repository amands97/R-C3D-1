Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=0, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 0,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
print done
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}]
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 14:26:07.471634 30750 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 14:26:07.471694 30750 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 14:26:07.475955 30750 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 14:26:07.476506 30750 layer_factory.hpp:77] Creating layer data
I0412 14:26:07.516322 30750 net.cpp:100] Creating Layer data
I0412 14:26:07.516369 30750 net.cpp:408] data -> data
I0412 14:26:07.516387 30750 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 14:26:07.517055 30750 net.cpp:150] Setting up data
I0412 14:26:07.517076 30750 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 14:26:07.517086 30750 net.cpp:157] Top shape: 1 3 (3)
I0412 14:26:07.517092 30750 net.cpp:165] Memory required for data: 115605516
I0412 14:26:07.517099 30750 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 14:26:07.517115 30750 net.cpp:100] Creating Layer data_data_0_split
I0412 14:26:07.517125 30750 net.cpp:434] data_data_0_split <- data
I0412 14:26:07.517138 30750 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 14:26:07.517154 30750 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 14:26:07.517171 30750 net.cpp:150] Setting up data_data_0_split
I0412 14:26:07.517184 30750 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 14:26:07.517190 30750 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 14:26:07.517199 30750 net.cpp:165] Memory required for data: 346816524
I0412 14:26:07.517204 30750 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 14:26:07.517215 30750 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 14:26:07.517223 30750 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 14:26:07.517232 30750 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 14:26:07.517246 30750 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 14:26:07.517259 30750 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 14:26:07.517269 30750 net.cpp:157] Top shape: 1 3 (3)
I0412 14:26:07.517277 30750 net.cpp:157] Top shape: 1 3 (3)
I0412 14:26:07.517282 30750 net.cpp:165] Memory required for data: 346816548
I0412 14:26:07.517292 30750 layer_factory.hpp:77] Creating layer conv1a
I0412 14:26:07.517308 30750 net.cpp:100] Creating Layer conv1a
I0412 14:26:07.517315 30750 net.cpp:434] conv1a <- data_data_0_split_0
I0412 14:26:07.517326 30750 net.cpp:408] conv1a -> conv1a
I0412 14:26:07.533640 30750 net.cpp:150] Setting up conv1a
I0412 14:26:07.533674 30750 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 14:26:07.533679 30750 net.cpp:165] Memory required for data: 2813067300
I0412 14:26:07.533702 30750 layer_factory.hpp:77] Creating layer relu1a
I0412 14:26:07.533720 30750 net.cpp:100] Creating Layer relu1a
I0412 14:26:07.533728 30750 net.cpp:434] relu1a <- conv1a
I0412 14:26:07.533738 30750 net.cpp:395] relu1a -> conv1a (in-place)
I0412 14:26:07.533752 30750 net.cpp:150] Setting up relu1a
I0412 14:26:07.533762 30750 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 14:26:07.533767 30750 net.cpp:165] Memory required for data: 5279318052
I0412 14:26:07.533772 30750 layer_factory.hpp:77] Creating layer pool1
I0412 14:26:07.533782 30750 net.cpp:100] Creating Layer pool1
I0412 14:26:07.533792 30750 net.cpp:434] pool1 <- conv1a
I0412 14:26:07.533800 30750 net.cpp:408] pool1 -> pool1
I0412 14:26:07.533816 30750 net.cpp:150] Setting up pool1
I0412 14:26:07.533824 30750 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 14:26:07.533833 30750 net.cpp:165] Memory required for data: 5895880740
I0412 14:26:07.533838 30750 layer_factory.hpp:77] Creating layer conv2a
I0412 14:26:07.533850 30750 net.cpp:100] Creating Layer conv2a
I0412 14:26:07.533855 30750 net.cpp:434] conv2a <- pool1
I0412 14:26:07.533864 30750 net.cpp:408] conv2a -> conv2a
I0412 14:26:07.542452 30750 net.cpp:150] Setting up conv2a
I0412 14:26:07.542471 30750 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 14:26:07.542477 30750 net.cpp:165] Memory required for data: 7129006116
I0412 14:26:07.542490 30750 layer_factory.hpp:77] Creating layer relu2a
I0412 14:26:07.542498 30750 net.cpp:100] Creating Layer relu2a
I0412 14:26:07.542506 30750 net.cpp:434] relu2a <- conv2a
I0412 14:26:07.542513 30750 net.cpp:395] relu2a -> conv2a (in-place)
I0412 14:26:07.542524 30750 net.cpp:150] Setting up relu2a
I0412 14:26:07.542531 30750 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 14:26:07.542536 30750 net.cpp:165] Memory required for data: 8362131492
I0412 14:26:07.542541 30750 layer_factory.hpp:77] Creating layer pool2
I0412 14:26:07.542551 30750 net.cpp:100] Creating Layer pool2
I0412 14:26:07.542558 30750 net.cpp:434] pool2 <- conv2a
I0412 14:26:07.542567 30750 net.cpp:408] pool2 -> pool2
I0412 14:26:07.542580 30750 net.cpp:150] Setting up pool2
I0412 14:26:07.542589 30750 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 14:26:07.542594 30750 net.cpp:165] Memory required for data: 8516272164
I0412 14:26:07.542599 30750 layer_factory.hpp:77] Creating layer conv3a
I0412 14:26:07.542610 30750 net.cpp:100] Creating Layer conv3a
I0412 14:26:07.542618 30750 net.cpp:434] conv3a <- pool2
I0412 14:26:07.542628 30750 net.cpp:408] conv3a -> conv3a
I0412 14:26:07.557392 30750 net.cpp:150] Setting up conv3a
I0412 14:26:07.557407 30750 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 14:26:07.557413 30750 net.cpp:165] Memory required for data: 8824553508
I0412 14:26:07.557425 30750 layer_factory.hpp:77] Creating layer relu3a
I0412 14:26:07.557435 30750 net.cpp:100] Creating Layer relu3a
I0412 14:26:07.557442 30750 net.cpp:434] relu3a <- conv3a
I0412 14:26:07.557451 30750 net.cpp:395] relu3a -> conv3a (in-place)
I0412 14:26:07.557461 30750 net.cpp:150] Setting up relu3a
I0412 14:26:07.557468 30750 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 14:26:07.557473 30750 net.cpp:165] Memory required for data: 9132834852
I0412 14:26:07.557478 30750 layer_factory.hpp:77] Creating layer conv3b
I0412 14:26:07.557490 30750 net.cpp:100] Creating Layer conv3b
I0412 14:26:07.557497 30750 net.cpp:434] conv3b <- conv3a
I0412 14:26:07.557504 30750 net.cpp:408] conv3b -> conv3b
I0412 14:26:07.583629 30750 net.cpp:150] Setting up conv3b
I0412 14:26:07.583644 30750 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 14:26:07.583649 30750 net.cpp:165] Memory required for data: 9441116196
I0412 14:26:07.583657 30750 layer_factory.hpp:77] Creating layer relu3b
I0412 14:26:07.583667 30750 net.cpp:100] Creating Layer relu3b
I0412 14:26:07.583674 30750 net.cpp:434] relu3b <- conv3b
I0412 14:26:07.583683 30750 net.cpp:395] relu3b -> conv3b (in-place)
I0412 14:26:07.583689 30750 net.cpp:150] Setting up relu3b
I0412 14:26:07.583696 30750 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 14:26:07.583700 30750 net.cpp:165] Memory required for data: 9749397540
I0412 14:26:07.583705 30750 layer_factory.hpp:77] Creating layer pool3
I0412 14:26:07.583714 30750 net.cpp:100] Creating Layer pool3
I0412 14:26:07.583719 30750 net.cpp:434] pool3 <- conv3b
I0412 14:26:07.583724 30750 net.cpp:408] pool3 -> pool3
I0412 14:26:07.583735 30750 net.cpp:150] Setting up pool3
I0412 14:26:07.583744 30750 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 14:26:07.583748 30750 net.cpp:165] Memory required for data: 9787932708
I0412 14:26:07.583752 30750 layer_factory.hpp:77] Creating layer conv4a
I0412 14:26:07.583765 30750 net.cpp:100] Creating Layer conv4a
I0412 14:26:07.583771 30750 net.cpp:434] conv4a <- pool3
I0412 14:26:07.583778 30750 net.cpp:408] conv4a -> conv4a
I0412 14:26:07.626655 30750 net.cpp:150] Setting up conv4a
I0412 14:26:07.626678 30750 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 14:26:07.626682 30750 net.cpp:165] Memory required for data: 9865003044
I0412 14:26:07.626698 30750 layer_factory.hpp:77] Creating layer relu4a
I0412 14:26:07.626708 30750 net.cpp:100] Creating Layer relu4a
I0412 14:26:07.626716 30750 net.cpp:434] relu4a <- conv4a
I0412 14:26:07.626724 30750 net.cpp:395] relu4a -> conv4a (in-place)
I0412 14:26:07.626734 30750 net.cpp:150] Setting up relu4a
I0412 14:26:07.626739 30750 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 14:26:07.626742 30750 net.cpp:165] Memory required for data: 9942073380
I0412 14:26:07.626746 30750 layer_factory.hpp:77] Creating layer conv4b
I0412 14:26:07.626762 30750 net.cpp:100] Creating Layer conv4b
I0412 14:26:07.626768 30750 net.cpp:434] conv4b <- conv4a
I0412 14:26:07.626775 30750 net.cpp:408] conv4b -> conv4b
I0412 14:26:07.697820 30750 net.cpp:150] Setting up conv4b
I0412 14:26:07.697844 30750 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 14:26:07.697847 30750 net.cpp:165] Memory required for data: 10019143716
I0412 14:26:07.697855 30750 layer_factory.hpp:77] Creating layer relu4b
I0412 14:26:07.697865 30750 net.cpp:100] Creating Layer relu4b
I0412 14:26:07.697870 30750 net.cpp:434] relu4b <- conv4b
I0412 14:26:07.697877 30750 net.cpp:395] relu4b -> conv4b (in-place)
I0412 14:26:07.697885 30750 net.cpp:150] Setting up relu4b
I0412 14:26:07.697890 30750 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 14:26:07.697893 30750 net.cpp:165] Memory required for data: 10096214052
I0412 14:26:07.697897 30750 layer_factory.hpp:77] Creating layer pool4
I0412 14:26:07.697903 30750 net.cpp:100] Creating Layer pool4
I0412 14:26:07.697906 30750 net.cpp:434] pool4 <- conv4b
I0412 14:26:07.697913 30750 net.cpp:408] pool4 -> pool4
I0412 14:26:07.697923 30750 net.cpp:150] Setting up pool4
I0412 14:26:07.697929 30750 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 14:26:07.697932 30750 net.cpp:165] Memory required for data: 10105847844
I0412 14:26:07.697935 30750 layer_factory.hpp:77] Creating layer conv5a
I0412 14:26:07.697944 30750 net.cpp:100] Creating Layer conv5a
I0412 14:26:07.697950 30750 net.cpp:434] conv5a <- pool4
I0412 14:26:07.697957 30750 net.cpp:408] conv5a -> conv5a
I0412 14:26:07.757131 30750 net.cpp:150] Setting up conv5a
I0412 14:26:07.757159 30750 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 14:26:07.757163 30750 net.cpp:165] Memory required for data: 10115481636
I0412 14:26:07.757170 30750 layer_factory.hpp:77] Creating layer relu5a
I0412 14:26:07.757179 30750 net.cpp:100] Creating Layer relu5a
I0412 14:26:07.757184 30750 net.cpp:434] relu5a <- conv5a
I0412 14:26:07.757189 30750 net.cpp:395] relu5a -> conv5a (in-place)
I0412 14:26:07.757197 30750 net.cpp:150] Setting up relu5a
I0412 14:26:07.757201 30750 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 14:26:07.757205 30750 net.cpp:165] Memory required for data: 10125115428
I0412 14:26:07.757206 30750 layer_factory.hpp:77] Creating layer conv5b
I0412 14:26:07.757216 30750 net.cpp:100] Creating Layer conv5b
I0412 14:26:07.757220 30750 net.cpp:434] conv5b <- conv5a
I0412 14:26:07.757225 30750 net.cpp:408] conv5b -> conv5b
I0412 14:26:07.811836 30750 net.cpp:150] Setting up conv5b
I0412 14:26:07.811863 30750 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 14:26:07.811866 30750 net.cpp:165] Memory required for data: 10134749220
I0412 14:26:07.811875 30750 layer_factory.hpp:77] Creating layer relu5b
I0412 14:26:07.811883 30750 net.cpp:100] Creating Layer relu5b
I0412 14:26:07.811889 30750 net.cpp:434] relu5b <- conv5b
I0412 14:26:07.811895 30750 net.cpp:395] relu5b -> conv5b (in-place)
I0412 14:26:07.811903 30750 net.cpp:150] Setting up relu5b
I0412 14:26:07.811906 30750 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 14:26:07.811909 30750 net.cpp:165] Memory required for data: 10144383012
I0412 14:26:07.811913 30750 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 14:26:07.811918 30750 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 14:26:07.811920 30750 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 14:26:07.811925 30750 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 14:26:07.811931 30750 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 14:26:07.811938 30750 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 14:26:07.811941 30750 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 14:26:07.811944 30750 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 14:26:07.811947 30750 net.cpp:165] Memory required for data: 10163650596
I0412 14:26:07.811949 30750 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 14:26:07.811959 30750 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 14:26:07.811961 30750 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 14:26:07.811966 30750 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 14:26:07.865481 30750 net.cpp:150] Setting up rpn_conv/3x3
I0412 14:26:07.865504 30750 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 14:26:07.865507 30750 net.cpp:165] Memory required for data: 10166796324
I0412 14:26:07.865521 30750 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 14:26:07.865530 30750 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 14:26:07.865533 30750 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 14:26:07.865540 30750 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 14:26:07.865547 30750 net.cpp:150] Setting up rpn_relu/3x3
I0412 14:26:07.865551 30750 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 14:26:07.865555 30750 net.cpp:165] Memory required for data: 10169942052
I0412 14:26:07.865556 30750 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 14:26:07.865566 30750 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 14:26:07.865567 30750 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 14:26:07.865572 30750 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 14:26:07.919247 30750 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 14:26:07.919271 30750 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 14:26:07.919275 30750 net.cpp:165] Memory required for data: 10170728484
I0412 14:26:07.919281 30750 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 14:26:07.919291 30750 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 14:26:07.919296 30750 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 14:26:07.919301 30750 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 14:26:07.919307 30750 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 14:26:07.919312 30750 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 14:26:07.919314 30750 net.cpp:165] Memory required for data: 10171514916
I0412 14:26:07.919317 30750 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 14:26:07.919322 30750 net.cpp:100] Creating Layer rpn/output_pool
I0412 14:26:07.919325 30750 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 14:26:07.919329 30750 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 14:26:07.919338 30750 net.cpp:150] Setting up rpn/output_pool
I0412 14:26:07.919345 30750 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 14:26:07.919348 30750 net.cpp:165] Memory required for data: 10171711524
I0412 14:26:07.919350 30750 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 14:26:07.919356 30750 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 14:26:07.919359 30750 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 14:26:07.919363 30750 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 14:26:07.919368 30750 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 14:26:07.919374 30750 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 14:26:07.919378 30750 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 14:26:07.919380 30750 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 14:26:07.919384 30750 net.cpp:165] Memory required for data: 10172104740
I0412 14:26:07.919386 30750 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 14:26:07.919402 30750 net.cpp:100] Creating Layer rpn_cls_score
I0412 14:26:07.919405 30750 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 14:26:07.919411 30750 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 14:26:07.919739 30750 net.cpp:150] Setting up rpn_cls_score
I0412 14:26:07.919746 30750 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 14:26:07.919749 30750 net.cpp:165] Memory required for data: 10172133156
I0412 14:26:07.919754 30750 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 14:26:07.919759 30750 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 14:26:07.919761 30750 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 14:26:07.919765 30750 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 14:26:07.919771 30750 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 14:26:07.919776 30750 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 14:26:07.919780 30750 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 14:26:07.919783 30750 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 14:26:07.919786 30750 net.cpp:165] Memory required for data: 10172189988
I0412 14:26:07.919790 30750 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 14:26:07.919802 30750 net.cpp:100] Creating Layer rpn_twin_pred
I0412 14:26:07.919808 30750 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 14:26:07.919814 30750 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 14:26:07.920145 30750 net.cpp:150] Setting up rpn_twin_pred
I0412 14:26:07.920151 30750 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 14:26:07.920153 30750 net.cpp:165] Memory required for data: 10172218404
I0412 14:26:07.920157 30750 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 14:26:07.920166 30750 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 14:26:07.920169 30750 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 14:26:07.920174 30750 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 14:26:07.920178 30750 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 14:26:07.920186 30750 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 14:26:07.920188 30750 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 14:26:07.920192 30750 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 14:26:07.920194 30750 net.cpp:165] Memory required for data: 10172275236
I0412 14:26:07.920197 30750 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 14:26:07.920203 30750 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 14:26:07.920207 30750 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 14:26:07.920212 30750 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 14:26:07.920220 30750 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 14:26:07.920224 30750 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 14:26:07.920226 30750 net.cpp:165] Memory required for data: 10172303652
I0412 14:26:07.920229 30750 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 14:26:07.920234 30750 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 14:26:07.920236 30750 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 14:26:07.920243 30750 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 14:26:07.920251 30750 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 14:26:07.920258 30750 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 14:26:07.920264 30750 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 14:26:07.920269 30750 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 14:26:07.920272 30750 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 14:26:07.920276 30750 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 14:26:07.920279 30750 net.cpp:165] Memory required for data: 10172388900
I0412 14:26:07.920281 30750 layer_factory.hpp:77] Creating layer rpn-data
I0412 14:26:07.920965 30750 net.cpp:100] Creating Layer rpn-data
I0412 14:26:07.920977 30750 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 14:26:07.920984 30750 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 14:26:07.920987 30750 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 14:26:07.920994 30750 net.cpp:408] rpn-data -> rpn_labels
I0412 14:26:07.921000 30750 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 14:26:07.921006 30750 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 14:26:07.921011 30750 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 14:26:07.923271 30750 net.cpp:150] Setting up rpn-data
I0412 14:26:07.923285 30750 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 14:26:07.923288 30750 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 14:26:07.923291 30750 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 14:26:07.923295 30750 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 14:26:07.923300 30750 net.cpp:165] Memory required for data: 10172488356
I0412 14:26:07.923303 30750 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 14:26:07.923308 30750 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 14:26:07.923312 30750 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 14:26:07.923316 30750 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 14:26:07.923322 30750 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 14:26:07.923329 30750 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 14:26:07.923333 30750 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 14:26:07.923336 30750 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 14:26:07.923339 30750 net.cpp:165] Memory required for data: 10172516772
I0412 14:26:07.923342 30750 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 14:26:07.923347 30750 net.cpp:100] Creating Layer rpn_loss_cls
I0412 14:26:07.923351 30750 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 14:26:07.923354 30750 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 14:26:07.923358 30750 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 14:26:07.923365 30750 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 14:26:07.923380 30750 net.cpp:150] Setting up rpn_loss_cls
I0412 14:26:07.923386 30750 net.cpp:157] Top shape: (1)
I0412 14:26:07.923388 30750 net.cpp:160]     with loss weight 1
I0412 14:26:07.923400 30750 net.cpp:165] Memory required for data: 10172516776
I0412 14:26:07.923403 30750 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 14:26:07.923409 30750 net.cpp:100] Creating Layer rpn_loss_twin
I0412 14:26:07.923413 30750 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 14:26:07.923416 30750 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 14:26:07.923420 30750 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 14:26:07.923424 30750 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 14:26:07.923429 30750 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 14:26:07.923447 30750 net.cpp:150] Setting up rpn_loss_twin
I0412 14:26:07.923452 30750 net.cpp:157] Top shape: (1)
I0412 14:26:07.923454 30750 net.cpp:160]     with loss weight 1
I0412 14:26:07.923458 30750 net.cpp:165] Memory required for data: 10172516780
I0412 14:26:07.923462 30750 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 14:26:07.923466 30750 net.cpp:100] Creating Layer rpn_accuarcy
I0412 14:26:07.923470 30750 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 14:26:07.923473 30750 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 14:26:07.923477 30750 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 14:26:07.923483 30750 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 14:26:07.923488 30750 net.cpp:150] Setting up rpn_accuarcy
I0412 14:26:07.923492 30750 net.cpp:157] Top shape: (1)
I0412 14:26:07.923496 30750 net.cpp:157] Top shape: 2 (2)
I0412 14:26:07.923498 30750 net.cpp:165] Memory required for data: 10172516792
I0412 14:26:07.923501 30750 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 14:26:07.923506 30750 net.cpp:100] Creating Layer rpn_cls_prob
I0412 14:26:07.923509 30750 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 14:26:07.923513 30750 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 14:26:07.923518 30750 net.cpp:150] Setting up rpn_cls_prob
I0412 14:26:07.923522 30750 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 14:26:07.923524 30750 net.cpp:165] Memory required for data: 10172545208
I0412 14:26:07.923527 30750 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 14:26:07.923533 30750 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 14:26:07.923537 30750 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 14:26:07.923540 30750 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 14:26:07.923547 30750 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 14:26:07.923552 30750 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 14:26:07.923554 30750 net.cpp:165] Memory required for data: 10172573624
I0412 14:26:07.923557 30750 layer_factory.hpp:77] Creating layer proposal
I0412 14:26:07.924351 30750 net.cpp:100] Creating Layer proposal
I0412 14:26:07.924362 30750 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 14:26:07.924367 30750 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 14:26:07.924373 30750 net.cpp:408] proposal -> rpn_rois
I0412 14:26:07.926417 30750 net.cpp:150] Setting up proposal
I0412 14:26:07.926429 30750 net.cpp:157] Top shape: 1 3 (3)
I0412 14:26:07.926432 30750 net.cpp:165] Memory required for data: 10172573636
I0412 14:26:07.926436 30750 layer_factory.hpp:77] Creating layer roi-data
I0412 14:26:07.926640 30750 net.cpp:100] Creating Layer roi-data
I0412 14:26:07.926648 30750 net.cpp:434] roi-data <- rpn_rois
I0412 14:26:07.926654 30750 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 14:26:07.926661 30750 net.cpp:408] roi-data -> rois
I0412 14:26:07.926666 30750 net.cpp:408] roi-data -> labels
I0412 14:26:07.926671 30750 net.cpp:408] roi-data -> twin_targets
I0412 14:26:07.926676 30750 net.cpp:408] roi-data -> twin_inside_weights
I0412 14:26:07.926681 30750 net.cpp:408] roi-data -> twin_outside_weights
I0412 14:26:07.926905 30750 net.cpp:150] Setting up roi-data
I0412 14:26:07.926916 30750 net.cpp:157] Top shape: 1 3 (3)
I0412 14:26:07.926919 30750 net.cpp:157] Top shape: 1 1 (1)
I0412 14:26:07.926923 30750 net.cpp:157] Top shape: 1 402 (402)
I0412 14:26:07.926926 30750 net.cpp:157] Top shape: 1 402 (402)
I0412 14:26:07.926929 30750 net.cpp:157] Top shape: 1 402 (402)
I0412 14:26:07.926933 30750 net.cpp:165] Memory required for data: 10172578476
I0412 14:26:07.926936 30750 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 14:26:07.926941 30750 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 14:26:07.926945 30750 net.cpp:434] labels_roi-data_1_split <- labels
I0412 14:26:07.926949 30750 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 14:26:07.926955 30750 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 14:26:07.926961 30750 net.cpp:150] Setting up labels_roi-data_1_split
I0412 14:26:07.926964 30750 net.cpp:157] Top shape: 1 1 (1)
I0412 14:26:07.926968 30750 net.cpp:157] Top shape: 1 1 (1)
I0412 14:26:07.926970 30750 net.cpp:165] Memory required for data: 10172578484
I0412 14:26:07.926973 30750 layer_factory.hpp:77] Creating layer roi_pool5
I0412 14:26:07.926978 30750 net.cpp:100] Creating Layer roi_pool5
I0412 14:26:07.926981 30750 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 14:26:07.926985 30750 net.cpp:434] roi_pool5 <- rois
I0412 14:26:07.926990 30750 net.cpp:408] roi_pool5 -> pool5
I0412 14:26:07.926995 30750 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 14:26:07.927000 30750 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 14:26:07.927006 30750 net.cpp:150] Setting up roi_pool5
I0412 14:26:07.927009 30750 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 14:26:07.927012 30750 net.cpp:165] Memory required for data: 10172611252
I0412 14:26:07.927014 30750 layer_factory.hpp:77] Creating layer fc6
I0412 14:26:07.927021 30750 net.cpp:100] Creating Layer fc6
I0412 14:26:07.927024 30750 net.cpp:434] fc6 <- pool5
I0412 14:26:07.927028 30750 net.cpp:408] fc6 -> fc6
I0412 14:26:08.179138 30750 net.cpp:150] Setting up fc6
I0412 14:26:08.179167 30750 net.cpp:157] Top shape: 1 4096 (4096)
I0412 14:26:08.179169 30750 net.cpp:165] Memory required for data: 10172627636
I0412 14:26:08.179178 30750 layer_factory.hpp:77] Creating layer relu6
I0412 14:26:08.179188 30750 net.cpp:100] Creating Layer relu6
I0412 14:26:08.179191 30750 net.cpp:434] relu6 <- fc6
I0412 14:26:08.179198 30750 net.cpp:395] relu6 -> fc6 (in-place)
I0412 14:26:08.179205 30750 net.cpp:150] Setting up relu6
I0412 14:26:08.179209 30750 net.cpp:157] Top shape: 1 4096 (4096)
I0412 14:26:08.179211 30750 net.cpp:165] Memory required for data: 10172644020
I0412 14:26:08.179214 30750 layer_factory.hpp:77] Creating layer drop6
I0412 14:26:08.179220 30750 net.cpp:100] Creating Layer drop6
I0412 14:26:08.179222 30750 net.cpp:434] drop6 <- fc6
I0412 14:26:08.179227 30750 net.cpp:395] drop6 -> fc6 (in-place)
I0412 14:26:08.179234 30750 net.cpp:150] Setting up drop6
I0412 14:26:08.179236 30750 net.cpp:157] Top shape: 1 4096 (4096)
I0412 14:26:08.179239 30750 net.cpp:165] Memory required for data: 10172660404
I0412 14:26:08.179242 30750 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 14:26:08.179247 30750 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 14:26:08.179250 30750 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 14:26:08.179255 30750 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 14:26:08.179260 30750 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 14:26:08.179266 30750 net.cpp:150] Setting up fc6_drop6_0_split
I0412 14:26:08.179270 30750 net.cpp:157] Top shape: 1 4096 (4096)
I0412 14:26:08.179272 30750 net.cpp:157] Top shape: 1 4096 (4096)
I0412 14:26:08.179275 30750 net.cpp:165] Memory required for data: 10172693172
I0412 14:26:08.179278 30750 layer_factory.hpp:77] Creating layer cls_score
I0412 14:26:08.179283 30750 net.cpp:100] Creating Layer cls_score
I0412 14:26:08.179286 30750 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 14:26:08.179291 30750 net.cpp:408] cls_score -> cls_score
I0412 14:26:08.185699 30750 net.cpp:150] Setting up cls_score
I0412 14:26:08.185708 30750 net.cpp:157] Top shape: 1 201 (201)
I0412 14:26:08.185710 30750 net.cpp:165] Memory required for data: 10172693976
I0412 14:26:08.185715 30750 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 14:26:08.185719 30750 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 14:26:08.185722 30750 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 14:26:08.185729 30750 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 14:26:08.185734 30750 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 14:26:08.185739 30750 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 14:26:08.185744 30750 net.cpp:157] Top shape: 1 201 (201)
I0412 14:26:08.185746 30750 net.cpp:157] Top shape: 1 201 (201)
I0412 14:26:08.185748 30750 net.cpp:165] Memory required for data: 10172695584
I0412 14:26:08.185751 30750 layer_factory.hpp:77] Creating layer twin_pred
I0412 14:26:08.185758 30750 net.cpp:100] Creating Layer twin_pred
I0412 14:26:08.185761 30750 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 14:26:08.185767 30750 net.cpp:408] twin_pred -> twin_pred
I0412 14:26:08.198532 30750 net.cpp:150] Setting up twin_pred
I0412 14:26:08.198541 30750 net.cpp:157] Top shape: 1 402 (402)
I0412 14:26:08.198544 30750 net.cpp:165] Memory required for data: 10172697192
I0412 14:26:08.198549 30750 layer_factory.hpp:77] Creating layer loss_cls
I0412 14:26:08.198556 30750 net.cpp:100] Creating Layer loss_cls
I0412 14:26:08.198559 30750 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 14:26:08.198563 30750 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 14:26:08.198568 30750 net.cpp:408] loss_cls -> loss_cls
I0412 14:26:08.198575 30750 layer_factory.hpp:77] Creating layer loss_cls
I0412 14:26:08.198586 30750 net.cpp:150] Setting up loss_cls
I0412 14:26:08.198591 30750 net.cpp:157] Top shape: (1)
I0412 14:26:08.198593 30750 net.cpp:160]     with loss weight 1
I0412 14:26:08.198604 30750 net.cpp:165] Memory required for data: 10172697196
I0412 14:26:08.198607 30750 layer_factory.hpp:77] Creating layer loss_twin
I0412 14:26:08.198613 30750 net.cpp:100] Creating Layer loss_twin
I0412 14:26:08.198617 30750 net.cpp:434] loss_twin <- twin_pred
I0412 14:26:08.198621 30750 net.cpp:434] loss_twin <- twin_targets
I0412 14:26:08.198624 30750 net.cpp:434] loss_twin <- twin_inside_weights
I0412 14:26:08.198628 30750 net.cpp:434] loss_twin <- twin_outside_weights
I0412 14:26:08.198632 30750 net.cpp:408] loss_twin -> loss_twin
I0412 14:26:08.198652 30750 net.cpp:150] Setting up loss_twin
I0412 14:26:08.198657 30750 net.cpp:157] Top shape: (1)
I0412 14:26:08.198659 30750 net.cpp:160]     with loss weight 1
I0412 14:26:08.198663 30750 net.cpp:165] Memory required for data: 10172697200
I0412 14:26:08.198667 30750 layer_factory.hpp:77] Creating layer accuarcy
I0412 14:26:08.198673 30750 net.cpp:100] Creating Layer accuarcy
I0412 14:26:08.198675 30750 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 14:26:08.198680 30750 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 14:26:08.198684 30750 net.cpp:408] accuarcy -> accuarcy
I0412 14:26:08.198690 30750 net.cpp:150] Setting up accuarcy
I0412 14:26:08.198694 30750 net.cpp:157] Top shape: (1)
I0412 14:26:08.198698 30750 net.cpp:165] Memory required for data: 10172697204
I0412 14:26:08.198700 30750 net.cpp:228] accuarcy does not need backward computation.
I0412 14:26:08.198704 30750 net.cpp:226] loss_twin needs backward computation.
I0412 14:26:08.198707 30750 net.cpp:226] loss_cls needs backward computation.
I0412 14:26:08.198710 30750 net.cpp:226] twin_pred needs backward computation.
I0412 14:26:08.198714 30750 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 14:26:08.198716 30750 net.cpp:226] cls_score needs backward computation.
I0412 14:26:08.198719 30750 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 14:26:08.198724 30750 net.cpp:226] drop6 needs backward computation.
I0412 14:26:08.198726 30750 net.cpp:226] relu6 needs backward computation.
I0412 14:26:08.198729 30750 net.cpp:226] fc6 needs backward computation.
I0412 14:26:08.198732 30750 net.cpp:226] roi_pool5 needs backward computation.
I0412 14:26:08.198738 30750 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 14:26:08.198741 30750 net.cpp:226] roi-data needs backward computation.
I0412 14:26:08.198745 30750 net.cpp:226] proposal needs backward computation.
I0412 14:26:08.198750 30750 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 14:26:08.198752 30750 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 14:26:08.198756 30750 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 14:26:08.198760 30750 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 14:26:08.198765 30750 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 14:26:08.198768 30750 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 14:26:08.198773 30750 net.cpp:226] rpn-data needs backward computation.
I0412 14:26:08.198779 30750 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 14:26:08.198783 30750 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 14:26:08.198786 30750 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 14:26:08.198791 30750 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 14:26:08.198793 30750 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 14:26:08.198796 30750 net.cpp:226] rpn_cls_score needs backward computation.
I0412 14:26:08.198801 30750 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 14:26:08.198803 30750 net.cpp:226] rpn/output_pool needs backward computation.
I0412 14:26:08.198807 30750 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 14:26:08.198809 30750 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 14:26:08.198813 30750 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 14:26:08.198817 30750 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 14:26:08.198819 30750 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 14:26:08.198823 30750 net.cpp:226] relu5b needs backward computation.
I0412 14:26:08.198827 30750 net.cpp:226] conv5b needs backward computation.
I0412 14:26:08.198830 30750 net.cpp:226] relu5a needs backward computation.
I0412 14:26:08.198833 30750 net.cpp:226] conv5a needs backward computation.
I0412 14:26:08.198837 30750 net.cpp:226] pool4 needs backward computation.
I0412 14:26:08.198840 30750 net.cpp:226] relu4b needs backward computation.
I0412 14:26:08.198843 30750 net.cpp:226] conv4b needs backward computation.
I0412 14:26:08.198846 30750 net.cpp:226] relu4a needs backward computation.
I0412 14:26:08.198848 30750 net.cpp:226] conv4a needs backward computation.
I0412 14:26:08.198853 30750 net.cpp:226] pool3 needs backward computation.
I0412 14:26:08.198856 30750 net.cpp:226] relu3b needs backward computation.
I0412 14:26:08.198859 30750 net.cpp:226] conv3b needs backward computation.
I0412 14:26:08.198861 30750 net.cpp:226] relu3a needs backward computation.
I0412 14:26:08.198864 30750 net.cpp:226] conv3a needs backward computation.
I0412 14:26:08.198868 30750 net.cpp:228] pool2 does not need backward computation.
I0412 14:26:08.198871 30750 net.cpp:228] relu2a does not need backward computation.
I0412 14:26:08.198873 30750 net.cpp:228] conv2a does not need backward computation.
I0412 14:26:08.198878 30750 net.cpp:228] pool1 does not need backward computation.
I0412 14:26:08.198881 30750 net.cpp:228] relu1a does not need backward computation.
I0412 14:26:08.198884 30750 net.cpp:228] conv1a does not need backward computation.
I0412 14:26:08.198887 30750 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 14:26:08.198892 30750 net.cpp:228] data_data_0_split does not need backward computation.
I0412 14:26:08.198895 30750 net.cpp:228] data does not need backward computation.
I0412 14:26:08.198899 30750 net.cpp:270] This network produces output accuarcy
I0412 14:26:08.198901 30750 net.cpp:270] This network produces output loss_cls
I0412 14:26:08.198905 30750 net.cpp:270] This network produces output loss_twin
I0412 14:26:08.198909 30750 net.cpp:270] This network produces output rpn_accuarcy
I0412 14:26:08.198911 30750 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 14:26:08.198915 30750 net.cpp:270] This network produces output rpn_cls_loss
I0412 14:26:08.198918 30750 net.cpp:270] This network produces output rpn_loss_twin
I0412 14:26:08.198956 30750 net.cpp:283] Network initialization done.
I0412 14:26:08.199074 30750 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 14:26:09.880952 30750 net.cpp:761] Ignoring source layer pool5
I0412 14:26:09.916160 30750 net.cpp:761] Ignoring source layer fc7
I0412 14:26:09.916188 30750 net.cpp:761] Ignoring source layer relu7
I0412 14:26:09.916193 30750 net.cpp:761] Ignoring source layer drop7
I0412 14:26:09.916199 30750 net.cpp:761] Ignoring source layer fc8-200
I0412 14:26:09.916204 30750 net.cpp:761] Ignoring source layer loss
Solving...
F0412 14:26:37.387147 30750 blob.hpp:140] Check failed: num_axes() <= 4 (5 vs. 4) Cannot use legacy accessors on Blobs with > 4 axes.
*** Check failure stack trace: ***
