Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 01:54:27.269862 25008 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 01:54:27.270109 25008 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 01:54:27.271081 25008 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 01:54:27.273718 25008 layer_factory.hpp:77] Creating layer data
I0412 01:54:27.291733 25008 net.cpp:100] Creating Layer data
I0412 01:54:27.291810 25008 net.cpp:408] data -> data
I0412 01:54:27.291852 25008 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 01:54:27.305482 25008 net.cpp:150] Setting up data
I0412 01:54:27.305524 25008 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:54:27.305546 25008 net.cpp:157] Top shape: 1 3 (3)
I0412 01:54:27.305564 25008 net.cpp:165] Memory required for data: 115605516
I0412 01:54:27.305586 25008 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 01:54:27.305614 25008 net.cpp:100] Creating Layer data_data_0_split
I0412 01:54:27.305635 25008 net.cpp:434] data_data_0_split <- data
I0412 01:54:27.305662 25008 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 01:54:27.305692 25008 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 01:54:27.305779 25008 net.cpp:150] Setting up data_data_0_split
I0412 01:54:27.305805 25008 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:54:27.305826 25008 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:54:27.305841 25008 net.cpp:165] Memory required for data: 346816524
I0412 01:54:27.305858 25008 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 01:54:27.305884 25008 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 01:54:27.305903 25008 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 01:54:27.305925 25008 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 01:54:27.305951 25008 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 01:54:27.306033 25008 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 01:54:27.306061 25008 net.cpp:157] Top shape: 1 3 (3)
I0412 01:54:27.306082 25008 net.cpp:157] Top shape: 1 3 (3)
I0412 01:54:27.306098 25008 net.cpp:165] Memory required for data: 346816548
I0412 01:54:27.306114 25008 layer_factory.hpp:77] Creating layer conv1a
I0412 01:54:27.306140 25008 net.cpp:100] Creating Layer conv1a
I0412 01:54:27.306159 25008 net.cpp:434] conv1a <- data_data_0_split_0
I0412 01:54:27.306183 25008 net.cpp:408] conv1a -> conv1a
I0412 01:54:27.330693 25008 net.cpp:150] Setting up conv1a
I0412 01:54:27.330953 25008 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 01:54:27.330977 25008 net.cpp:165] Memory required for data: 2813067300
I0412 01:54:27.331007 25008 layer_factory.hpp:77] Creating layer relu1a
I0412 01:54:27.331035 25008 net.cpp:100] Creating Layer relu1a
I0412 01:54:27.331056 25008 net.cpp:434] relu1a <- conv1a
I0412 01:54:27.331080 25008 net.cpp:395] relu1a -> conv1a (in-place)
I0412 01:54:27.331109 25008 net.cpp:150] Setting up relu1a
I0412 01:54:27.331136 25008 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 01:54:27.331153 25008 net.cpp:165] Memory required for data: 5279318052
I0412 01:54:27.331171 25008 layer_factory.hpp:77] Creating layer pool1
I0412 01:54:27.331195 25008 net.cpp:100] Creating Layer pool1
I0412 01:54:27.331220 25008 net.cpp:434] pool1 <- conv1a
I0412 01:54:27.331241 25008 net.cpp:408] pool1 -> pool1
I0412 01:54:27.331378 25008 net.cpp:150] Setting up pool1
I0412 01:54:27.331403 25008 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 01:54:27.331419 25008 net.cpp:165] Memory required for data: 5895880740
I0412 01:54:27.331436 25008 layer_factory.hpp:77] Creating layer conv2a
I0412 01:54:27.331465 25008 net.cpp:100] Creating Layer conv2a
I0412 01:54:27.331483 25008 net.cpp:434] conv2a <- pool1
I0412 01:54:27.331504 25008 net.cpp:408] conv2a -> conv2a
I0412 01:54:27.342340 25008 net.cpp:150] Setting up conv2a
I0412 01:54:27.342417 25008 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 01:54:27.342433 25008 net.cpp:165] Memory required for data: 7129006116
I0412 01:54:27.342459 25008 layer_factory.hpp:77] Creating layer relu2a
I0412 01:54:27.342487 25008 net.cpp:100] Creating Layer relu2a
I0412 01:54:27.342516 25008 net.cpp:434] relu2a <- conv2a
I0412 01:54:27.342535 25008 net.cpp:395] relu2a -> conv2a (in-place)
I0412 01:54:27.342556 25008 net.cpp:150] Setting up relu2a
I0412 01:54:27.342572 25008 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 01:54:27.342586 25008 net.cpp:165] Memory required for data: 8362131492
I0412 01:54:27.342607 25008 layer_factory.hpp:77] Creating layer pool2
I0412 01:54:27.342631 25008 net.cpp:100] Creating Layer pool2
I0412 01:54:27.342646 25008 net.cpp:434] pool2 <- conv2a
I0412 01:54:27.342663 25008 net.cpp:408] pool2 -> pool2
I0412 01:54:27.342797 25008 net.cpp:150] Setting up pool2
I0412 01:54:27.342819 25008 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 01:54:27.342831 25008 net.cpp:165] Memory required for data: 8516272164
I0412 01:54:27.342844 25008 layer_factory.hpp:77] Creating layer conv3a
I0412 01:54:27.342876 25008 net.cpp:100] Creating Layer conv3a
I0412 01:54:27.342891 25008 net.cpp:434] conv3a <- pool2
I0412 01:54:27.342911 25008 net.cpp:408] conv3a -> conv3a
I0412 01:54:27.359098 25008 net.cpp:150] Setting up conv3a
I0412 01:54:27.359171 25008 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:54:27.359187 25008 net.cpp:165] Memory required for data: 8824553508
I0412 01:54:27.359216 25008 layer_factory.hpp:77] Creating layer relu3a
I0412 01:54:27.359244 25008 net.cpp:100] Creating Layer relu3a
I0412 01:54:27.359264 25008 net.cpp:434] relu3a <- conv3a
I0412 01:54:27.359288 25008 net.cpp:395] relu3a -> conv3a (in-place)
I0412 01:54:27.359313 25008 net.cpp:150] Setting up relu3a
I0412 01:54:27.359334 25008 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:54:27.359350 25008 net.cpp:165] Memory required for data: 9132834852
I0412 01:54:27.359369 25008 layer_factory.hpp:77] Creating layer conv3b
I0412 01:54:27.359390 25008 net.cpp:100] Creating Layer conv3b
I0412 01:54:27.359405 25008 net.cpp:434] conv3b <- conv3a
I0412 01:54:27.359423 25008 net.cpp:408] conv3b -> conv3b
I0412 01:54:27.383769 25008 net.cpp:150] Setting up conv3b
I0412 01:54:27.383836 25008 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:54:27.383854 25008 net.cpp:165] Memory required for data: 9441116196
I0412 01:54:27.383878 25008 layer_factory.hpp:77] Creating layer relu3b
I0412 01:54:27.383901 25008 net.cpp:100] Creating Layer relu3b
I0412 01:54:27.383919 25008 net.cpp:434] relu3b <- conv3b
I0412 01:54:27.383941 25008 net.cpp:395] relu3b -> conv3b (in-place)
I0412 01:54:27.383966 25008 net.cpp:150] Setting up relu3b
I0412 01:54:27.383985 25008 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:54:27.384001 25008 net.cpp:165] Memory required for data: 9749397540
I0412 01:54:27.384014 25008 layer_factory.hpp:77] Creating layer pool3
I0412 01:54:27.384034 25008 net.cpp:100] Creating Layer pool3
I0412 01:54:27.384049 25008 net.cpp:434] pool3 <- conv3b
I0412 01:54:27.384070 25008 net.cpp:408] pool3 -> pool3
I0412 01:54:27.384171 25008 net.cpp:150] Setting up pool3
I0412 01:54:27.384196 25008 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 01:54:27.384210 25008 net.cpp:165] Memory required for data: 9787932708
I0412 01:54:27.384224 25008 layer_factory.hpp:77] Creating layer conv4a
I0412 01:54:27.384249 25008 net.cpp:100] Creating Layer conv4a
I0412 01:54:27.384268 25008 net.cpp:434] conv4a <- pool3
I0412 01:54:27.384289 25008 net.cpp:408] conv4a -> conv4a
I0412 01:54:27.418159 25008 net.cpp:150] Setting up conv4a
I0412 01:54:27.418185 25008 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:54:27.418190 25008 net.cpp:165] Memory required for data: 9865003044
I0412 01:54:27.418207 25008 layer_factory.hpp:77] Creating layer relu4a
I0412 01:54:27.418218 25008 net.cpp:100] Creating Layer relu4a
I0412 01:54:27.418225 25008 net.cpp:434] relu4a <- conv4a
I0412 01:54:27.418236 25008 net.cpp:395] relu4a -> conv4a (in-place)
I0412 01:54:27.418264 25008 net.cpp:150] Setting up relu4a
I0412 01:54:27.418272 25008 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:54:27.418277 25008 net.cpp:165] Memory required for data: 9942073380
I0412 01:54:27.418280 25008 layer_factory.hpp:77] Creating layer conv4b
I0412 01:54:27.418300 25008 net.cpp:100] Creating Layer conv4b
I0412 01:54:27.418305 25008 net.cpp:434] conv4b <- conv4a
I0412 01:54:27.418315 25008 net.cpp:408] conv4b -> conv4b
I0412 01:54:27.477847 25008 net.cpp:150] Setting up conv4b
I0412 01:54:27.477880 25008 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:54:27.477885 25008 net.cpp:165] Memory required for data: 10019143716
I0412 01:54:27.477895 25008 layer_factory.hpp:77] Creating layer relu4b
I0412 01:54:27.477905 25008 net.cpp:100] Creating Layer relu4b
I0412 01:54:27.477911 25008 net.cpp:434] relu4b <- conv4b
I0412 01:54:27.477921 25008 net.cpp:395] relu4b -> conv4b (in-place)
I0412 01:54:27.477931 25008 net.cpp:150] Setting up relu4b
I0412 01:54:27.477936 25008 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:54:27.477939 25008 net.cpp:165] Memory required for data: 10096214052
I0412 01:54:27.477942 25008 layer_factory.hpp:77] Creating layer pool4
I0412 01:54:27.477952 25008 net.cpp:100] Creating Layer pool4
I0412 01:54:27.477955 25008 net.cpp:434] pool4 <- conv4b
I0412 01:54:27.477962 25008 net.cpp:408] pool4 -> pool4
I0412 01:54:27.478027 25008 net.cpp:150] Setting up pool4
I0412 01:54:27.478036 25008 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:54:27.478040 25008 net.cpp:165] Memory required for data: 10105847844
I0412 01:54:27.478044 25008 layer_factory.hpp:77] Creating layer conv5a
I0412 01:54:27.478058 25008 net.cpp:100] Creating Layer conv5a
I0412 01:54:27.478065 25008 net.cpp:434] conv5a <- pool4
I0412 01:54:27.478073 25008 net.cpp:408] conv5a -> conv5a
I0412 01:54:27.561899 25008 net.cpp:150] Setting up conv5a
I0412 01:54:27.562093 25008 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:54:27.562146 25008 net.cpp:165] Memory required for data: 10115481636
I0412 01:54:27.562206 25008 layer_factory.hpp:77] Creating layer relu5a
I0412 01:54:27.562258 25008 net.cpp:100] Creating Layer relu5a
I0412 01:54:27.562300 25008 net.cpp:434] relu5a <- conv5a
I0412 01:54:27.562343 25008 net.cpp:395] relu5a -> conv5a (in-place)
I0412 01:54:27.562391 25008 net.cpp:150] Setting up relu5a
I0412 01:54:27.562433 25008 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:54:27.562471 25008 net.cpp:165] Memory required for data: 10125115428
I0412 01:54:27.562507 25008 layer_factory.hpp:77] Creating layer conv5b
I0412 01:54:27.562556 25008 net.cpp:100] Creating Layer conv5b
I0412 01:54:27.562593 25008 net.cpp:434] conv5b <- conv5a
I0412 01:54:27.562635 25008 net.cpp:408] conv5b -> conv5b
I0412 01:54:27.657575 25008 net.cpp:150] Setting up conv5b
I0412 01:54:27.657613 25008 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:54:27.657618 25008 net.cpp:165] Memory required for data: 10134749220
I0412 01:54:27.657629 25008 layer_factory.hpp:77] Creating layer relu5b
I0412 01:54:27.657639 25008 net.cpp:100] Creating Layer relu5b
I0412 01:54:27.657645 25008 net.cpp:434] relu5b <- conv5b
I0412 01:54:27.657654 25008 net.cpp:395] relu5b -> conv5b (in-place)
I0412 01:54:27.657663 25008 net.cpp:150] Setting up relu5b
I0412 01:54:27.657670 25008 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:54:27.657675 25008 net.cpp:165] Memory required for data: 10144383012
I0412 01:54:27.657678 25008 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 01:54:27.657686 25008 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 01:54:27.657692 25008 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 01:54:27.657698 25008 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 01:54:27.657706 25008 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 01:54:27.657764 25008 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 01:54:27.657773 25008 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:54:27.657779 25008 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:54:27.657783 25008 net.cpp:165] Memory required for data: 10163650596
I0412 01:54:27.657788 25008 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 01:54:27.657802 25008 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 01:54:27.657809 25008 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 01:54:27.657816 25008 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 01:54:27.735908 25008 net.cpp:150] Setting up rpn_conv/3x3
I0412 01:54:27.735931 25008 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 01:54:27.735934 25008 net.cpp:165] Memory required for data: 10166796324
I0412 01:54:27.735950 25008 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 01:54:27.735960 25008 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 01:54:27.735963 25008 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 01:54:27.735970 25008 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 01:54:27.735980 25008 net.cpp:150] Setting up rpn_relu/3x3
I0412 01:54:27.735985 25008 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 01:54:27.735988 25008 net.cpp:165] Memory required for data: 10169942052
I0412 01:54:27.735991 25008 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 01:54:27.736001 25008 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 01:54:27.736004 25008 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 01:54:27.736011 25008 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 01:54:27.794497 25008 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 01:54:27.794528 25008 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 01:54:27.794531 25008 net.cpp:165] Memory required for data: 10170728484
I0412 01:54:27.794543 25008 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 01:54:27.794554 25008 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 01:54:27.794561 25008 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 01:54:27.794569 25008 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 01:54:27.794579 25008 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 01:54:27.794585 25008 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 01:54:27.794589 25008 net.cpp:165] Memory required for data: 10171514916
I0412 01:54:27.794595 25008 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 01:54:27.794605 25008 net.cpp:100] Creating Layer rpn/output_pool
I0412 01:54:27.794620 25008 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 01:54:27.794627 25008 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 01:54:27.794694 25008 net.cpp:150] Setting up rpn/output_pool
I0412 01:54:27.794704 25008 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:54:27.794708 25008 net.cpp:165] Memory required for data: 10171711524
I0412 01:54:27.794713 25008 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 01:54:27.794723 25008 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 01:54:27.794728 25008 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 01:54:27.794734 25008 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 01:54:27.794744 25008 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 01:54:27.794816 25008 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 01:54:27.794826 25008 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:54:27.794831 25008 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:54:27.794836 25008 net.cpp:165] Memory required for data: 10172104740
I0412 01:54:27.794840 25008 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 01:54:27.794854 25008 net.cpp:100] Creating Layer rpn_cls_score
I0412 01:54:27.794870 25008 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 01:54:27.794893 25008 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 01:54:27.795500 25008 net.cpp:150] Setting up rpn_cls_score
I0412 01:54:27.795511 25008 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:54:27.795513 25008 net.cpp:165] Memory required for data: 10172133156
I0412 01:54:27.795521 25008 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 01:54:27.795529 25008 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 01:54:27.795533 25008 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 01:54:27.795542 25008 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 01:54:27.795550 25008 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 01:54:27.795636 25008 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 01:54:27.795647 25008 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:54:27.795652 25008 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:54:27.795656 25008 net.cpp:165] Memory required for data: 10172189988
I0412 01:54:27.795661 25008 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 01:54:27.795680 25008 net.cpp:100] Creating Layer rpn_twin_pred
I0412 01:54:27.795699 25008 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 01:54:27.795722 25008 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 01:54:27.796283 25008 net.cpp:150] Setting up rpn_twin_pred
I0412 01:54:27.796293 25008 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:54:27.796298 25008 net.cpp:165] Memory required for data: 10172218404
I0412 01:54:27.796305 25008 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:54:27.796313 25008 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:54:27.796317 25008 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 01:54:27.796355 25008 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 01:54:27.796365 25008 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 01:54:27.796424 25008 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:54:27.796435 25008 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:54:27.796440 25008 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:54:27.796444 25008 net.cpp:165] Memory required for data: 10172275236
I0412 01:54:27.796448 25008 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 01:54:27.796460 25008 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 01:54:27.796478 25008 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 01:54:27.796497 25008 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 01:54:27.796550 25008 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 01:54:27.796561 25008 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:54:27.796566 25008 net.cpp:165] Memory required for data: 10172303652
I0412 01:54:27.796571 25008 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:54:27.796576 25008 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:54:27.796581 25008 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 01:54:27.796591 25008 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 01:54:27.796605 25008 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 01:54:27.796627 25008 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 01:54:27.796706 25008 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:54:27.796717 25008 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:54:27.796722 25008 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:54:27.796727 25008 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:54:27.796731 25008 net.cpp:165] Memory required for data: 10172388900
I0412 01:54:27.796736 25008 layer_factory.hpp:77] Creating layer rpn-data
I0412 01:54:27.797237 25008 net.cpp:100] Creating Layer rpn-data
I0412 01:54:27.797266 25008 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 01:54:27.797289 25008 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 01:54:27.797308 25008 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 01:54:27.797330 25008 net.cpp:408] rpn-data -> rpn_labels
I0412 01:54:27.797354 25008 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 01:54:27.797379 25008 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 01:54:27.797408 25008 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 01:54:27.799835 25008 net.cpp:150] Setting up rpn-data
I0412 01:54:27.799865 25008 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:54:27.799885 25008 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:54:27.799903 25008 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:54:27.799922 25008 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:54:27.799937 25008 net.cpp:165] Memory required for data: 10172488356
I0412 01:54:27.799955 25008 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 01:54:27.799974 25008 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 01:54:27.799991 25008 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 01:54:27.800011 25008 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 01:54:27.800032 25008 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 01:54:27.800107 25008 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 01:54:27.800133 25008 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:54:27.800153 25008 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:54:27.800168 25008 net.cpp:165] Memory required for data: 10172516772
I0412 01:54:27.800182 25008 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 01:54:27.800204 25008 net.cpp:100] Creating Layer rpn_loss_cls
I0412 01:54:27.800221 25008 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 01:54:27.800240 25008 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 01:54:27.800258 25008 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 01:54:27.800283 25008 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 01:54:27.800468 25008 net.cpp:150] Setting up rpn_loss_cls
I0412 01:54:27.800492 25008 net.cpp:157] Top shape: (1)
I0412 01:54:27.800508 25008 net.cpp:160]     with loss weight 1
I0412 01:54:27.800534 25008 net.cpp:165] Memory required for data: 10172516776
I0412 01:54:27.800550 25008 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 01:54:27.800570 25008 net.cpp:100] Creating Layer rpn_loss_twin
I0412 01:54:27.800588 25008 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 01:54:27.800606 25008 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 01:54:27.800623 25008 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 01:54:27.800640 25008 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 01:54:27.800650 25008 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 01:54:27.800757 25008 net.cpp:150] Setting up rpn_loss_twin
I0412 01:54:27.800767 25008 net.cpp:157] Top shape: (1)
I0412 01:54:27.800770 25008 net.cpp:160]     with loss weight 1
I0412 01:54:27.800777 25008 net.cpp:165] Memory required for data: 10172516780
I0412 01:54:27.800782 25008 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 01:54:27.800791 25008 net.cpp:100] Creating Layer rpn_accuarcy
I0412 01:54:27.800796 25008 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 01:54:27.800801 25008 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 01:54:27.800808 25008 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 01:54:27.800817 25008 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 01:54:27.800887 25008 net.cpp:150] Setting up rpn_accuarcy
I0412 01:54:27.800896 25008 net.cpp:157] Top shape: (1)
I0412 01:54:27.800901 25008 net.cpp:157] Top shape: 2 (2)
I0412 01:54:27.800905 25008 net.cpp:165] Memory required for data: 10172516792
I0412 01:54:27.800909 25008 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 01:54:27.800915 25008 net.cpp:100] Creating Layer rpn_cls_prob
I0412 01:54:27.800921 25008 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 01:54:27.800927 25008 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 01:54:27.801012 25008 net.cpp:150] Setting up rpn_cls_prob
I0412 01:54:27.801021 25008 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:54:27.801025 25008 net.cpp:165] Memory required for data: 10172545208
I0412 01:54:27.801029 25008 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 01:54:27.801038 25008 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 01:54:27.801043 25008 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 01:54:27.801051 25008 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 01:54:27.801091 25008 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 01:54:27.801101 25008 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:54:27.801105 25008 net.cpp:165] Memory required for data: 10172573624
I0412 01:54:27.801110 25008 layer_factory.hpp:77] Creating layer proposal
I0412 01:54:27.801650 25008 net.cpp:100] Creating Layer proposal
I0412 01:54:27.801661 25008 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 01:54:27.801667 25008 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 01:54:27.801676 25008 net.cpp:408] proposal -> rpn_rois
I0412 01:54:27.805452 25008 net.cpp:150] Setting up proposal
I0412 01:54:27.805466 25008 net.cpp:157] Top shape: 1 3 (3)
I0412 01:54:27.805505 25008 net.cpp:165] Memory required for data: 10172573636
I0412 01:54:27.805516 25008 layer_factory.hpp:77] Creating layer roi-data
I0412 01:54:27.805691 25008 net.cpp:100] Creating Layer roi-data
I0412 01:54:27.805701 25008 net.cpp:434] roi-data <- rpn_rois
I0412 01:54:27.805735 25008 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 01:54:27.805771 25008 net.cpp:408] roi-data -> rois
I0412 01:54:27.805806 25008 net.cpp:408] roi-data -> labels
I0412 01:54:27.805835 25008 net.cpp:408] roi-data -> twin_targets
I0412 01:54:27.805869 25008 net.cpp:408] roi-data -> twin_inside_weights
I0412 01:54:27.805898 25008 net.cpp:408] roi-data -> twin_outside_weights
I0412 01:54:27.806238 25008 net.cpp:150] Setting up roi-data
I0412 01:54:27.806252 25008 net.cpp:157] Top shape: 1 3 (3)
I0412 01:54:27.806288 25008 net.cpp:157] Top shape: 1 1 (1)
I0412 01:54:27.806299 25008 net.cpp:157] Top shape: 1 402 (402)
I0412 01:54:27.806349 25008 net.cpp:157] Top shape: 1 402 (402)
I0412 01:54:27.806358 25008 net.cpp:157] Top shape: 1 402 (402)
I0412 01:54:27.806382 25008 net.cpp:165] Memory required for data: 10172578476
I0412 01:54:27.806412 25008 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 01:54:27.806454 25008 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 01:54:27.806462 25008 net.cpp:434] labels_roi-data_1_split <- labels
I0412 01:54:27.806506 25008 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 01:54:27.806535 25008 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 01:54:27.806605 25008 net.cpp:150] Setting up labels_roi-data_1_split
I0412 01:54:27.806614 25008 net.cpp:157] Top shape: 1 1 (1)
I0412 01:54:27.806645 25008 net.cpp:157] Top shape: 1 1 (1)
I0412 01:54:27.806668 25008 net.cpp:165] Memory required for data: 10172578484
I0412 01:54:27.806694 25008 layer_factory.hpp:77] Creating layer roi_pool5
I0412 01:54:27.806742 25008 net.cpp:100] Creating Layer roi_pool5
I0412 01:54:27.806751 25008 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 01:54:27.806792 25008 net.cpp:434] roi_pool5 <- rois
I0412 01:54:27.806818 25008 net.cpp:408] roi_pool5 -> pool5
I0412 01:54:27.806849 25008 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 01:54:27.806859 25008 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 01:54:27.806955 25008 net.cpp:150] Setting up roi_pool5
I0412 01:54:27.806965 25008 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 01:54:27.806995 25008 net.cpp:165] Memory required for data: 10172611252
I0412 01:54:27.807018 25008 layer_factory.hpp:77] Creating layer fc6
I0412 01:54:27.807070 25008 net.cpp:100] Creating Layer fc6
I0412 01:54:27.807082 25008 net.cpp:434] fc6 <- pool5
I0412 01:54:27.807123 25008 net.cpp:408] fc6 -> fc6
I0412 01:54:28.179745 25008 net.cpp:150] Setting up fc6
I0412 01:54:28.179795 25008 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:54:28.179798 25008 net.cpp:165] Memory required for data: 10172627636
I0412 01:54:28.179813 25008 layer_factory.hpp:77] Creating layer relu6
I0412 01:54:28.179826 25008 net.cpp:100] Creating Layer relu6
I0412 01:54:28.179832 25008 net.cpp:434] relu6 <- fc6
I0412 01:54:28.179838 25008 net.cpp:395] relu6 -> fc6 (in-place)
I0412 01:54:28.179849 25008 net.cpp:150] Setting up relu6
I0412 01:54:28.179852 25008 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:54:28.179855 25008 net.cpp:165] Memory required for data: 10172644020
I0412 01:54:28.179857 25008 layer_factory.hpp:77] Creating layer drop6
I0412 01:54:28.179867 25008 net.cpp:100] Creating Layer drop6
I0412 01:54:28.179869 25008 net.cpp:434] drop6 <- fc6
I0412 01:54:28.179872 25008 net.cpp:395] drop6 -> fc6 (in-place)
I0412 01:54:28.179898 25008 net.cpp:150] Setting up drop6
I0412 01:54:28.179903 25008 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:54:28.179905 25008 net.cpp:165] Memory required for data: 10172660404
I0412 01:54:28.179908 25008 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 01:54:28.179919 25008 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 01:54:28.179922 25008 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 01:54:28.179927 25008 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 01:54:28.179934 25008 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 01:54:28.179970 25008 net.cpp:150] Setting up fc6_drop6_0_split
I0412 01:54:28.179978 25008 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:54:28.179983 25008 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:54:28.179987 25008 net.cpp:165] Memory required for data: 10172693172
I0412 01:54:28.179991 25008 layer_factory.hpp:77] Creating layer cls_score
I0412 01:54:28.179999 25008 net.cpp:100] Creating Layer cls_score
I0412 01:54:28.180004 25008 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 01:54:28.180013 25008 net.cpp:408] cls_score -> cls_score
I0412 01:54:28.187650 25008 net.cpp:150] Setting up cls_score
I0412 01:54:28.187681 25008 net.cpp:157] Top shape: 1 201 (201)
I0412 01:54:28.187686 25008 net.cpp:165] Memory required for data: 10172693976
I0412 01:54:28.187698 25008 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 01:54:28.187711 25008 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 01:54:28.187716 25008 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 01:54:28.187724 25008 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 01:54:28.187737 25008 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 01:54:28.187795 25008 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 01:54:28.187804 25008 net.cpp:157] Top shape: 1 201 (201)
I0412 01:54:28.187809 25008 net.cpp:157] Top shape: 1 201 (201)
I0412 01:54:28.187814 25008 net.cpp:165] Memory required for data: 10172695584
I0412 01:54:28.187819 25008 layer_factory.hpp:77] Creating layer twin_pred
I0412 01:54:28.187829 25008 net.cpp:100] Creating Layer twin_pred
I0412 01:54:28.187834 25008 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 01:54:28.187844 25008 net.cpp:408] twin_pred -> twin_pred
I0412 01:54:28.202045 25008 net.cpp:150] Setting up twin_pred
I0412 01:54:28.202072 25008 net.cpp:157] Top shape: 1 402 (402)
I0412 01:54:28.202076 25008 net.cpp:165] Memory required for data: 10172697192
I0412 01:54:28.202090 25008 layer_factory.hpp:77] Creating layer loss_cls
I0412 01:54:28.202103 25008 net.cpp:100] Creating Layer loss_cls
I0412 01:54:28.202111 25008 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 01:54:28.202119 25008 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 01:54:28.202127 25008 net.cpp:408] loss_cls -> loss_cls
I0412 01:54:28.202139 25008 layer_factory.hpp:77] Creating layer loss_cls
I0412 01:54:28.202293 25008 net.cpp:150] Setting up loss_cls
I0412 01:54:28.202303 25008 net.cpp:157] Top shape: (1)
I0412 01:54:28.202307 25008 net.cpp:160]     with loss weight 1
I0412 01:54:28.202320 25008 net.cpp:165] Memory required for data: 10172697196
I0412 01:54:28.202325 25008 layer_factory.hpp:77] Creating layer loss_twin
I0412 01:54:28.202333 25008 net.cpp:100] Creating Layer loss_twin
I0412 01:54:28.202339 25008 net.cpp:434] loss_twin <- twin_pred
I0412 01:54:28.202345 25008 net.cpp:434] loss_twin <- twin_targets
I0412 01:54:28.202350 25008 net.cpp:434] loss_twin <- twin_inside_weights
I0412 01:54:28.202355 25008 net.cpp:434] loss_twin <- twin_outside_weights
I0412 01:54:28.202363 25008 net.cpp:408] loss_twin -> loss_twin
I0412 01:54:28.202481 25008 net.cpp:150] Setting up loss_twin
I0412 01:54:28.202492 25008 net.cpp:157] Top shape: (1)
I0412 01:54:28.202497 25008 net.cpp:160]     with loss weight 1
I0412 01:54:28.202502 25008 net.cpp:165] Memory required for data: 10172697200
I0412 01:54:28.202507 25008 layer_factory.hpp:77] Creating layer accuarcy
I0412 01:54:28.202515 25008 net.cpp:100] Creating Layer accuarcy
I0412 01:54:28.202520 25008 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 01:54:28.202527 25008 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 01:54:28.202535 25008 net.cpp:408] accuarcy -> accuarcy
I0412 01:54:28.202545 25008 net.cpp:150] Setting up accuarcy
I0412 01:54:28.202553 25008 net.cpp:157] Top shape: (1)
I0412 01:54:28.202558 25008 net.cpp:165] Memory required for data: 10172697204
I0412 01:54:28.202561 25008 net.cpp:228] accuarcy does not need backward computation.
I0412 01:54:28.202566 25008 net.cpp:226] loss_twin needs backward computation.
I0412 01:54:28.202570 25008 net.cpp:226] loss_cls needs backward computation.
I0412 01:54:28.202576 25008 net.cpp:226] twin_pred needs backward computation.
I0412 01:54:28.202581 25008 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 01:54:28.202585 25008 net.cpp:226] cls_score needs backward computation.
I0412 01:54:28.202590 25008 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 01:54:28.202594 25008 net.cpp:226] drop6 needs backward computation.
I0412 01:54:28.202599 25008 net.cpp:226] relu6 needs backward computation.
I0412 01:54:28.202603 25008 net.cpp:226] fc6 needs backward computation.
I0412 01:54:28.202607 25008 net.cpp:226] roi_pool5 needs backward computation.
I0412 01:54:28.202613 25008 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 01:54:28.202617 25008 net.cpp:226] roi-data needs backward computation.
I0412 01:54:28.202622 25008 net.cpp:226] proposal needs backward computation.
I0412 01:54:28.202627 25008 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 01:54:28.202632 25008 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 01:54:28.202637 25008 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 01:54:28.202644 25008 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 01:54:28.202651 25008 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 01:54:28.202657 25008 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 01:54:28.202662 25008 net.cpp:226] rpn-data needs backward computation.
I0412 01:54:28.202668 25008 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 01:54:28.202673 25008 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 01:54:28.202679 25008 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 01:54:28.202683 25008 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 01:54:28.202688 25008 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 01:54:28.202693 25008 net.cpp:226] rpn_cls_score needs backward computation.
I0412 01:54:28.202700 25008 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 01:54:28.202705 25008 net.cpp:226] rpn/output_pool needs backward computation.
I0412 01:54:28.202710 25008 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 01:54:28.202714 25008 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 01:54:28.202718 25008 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 01:54:28.202723 25008 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 01:54:28.202728 25008 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 01:54:28.202733 25008 net.cpp:226] relu5b needs backward computation.
I0412 01:54:28.202738 25008 net.cpp:226] conv5b needs backward computation.
I0412 01:54:28.202741 25008 net.cpp:226] relu5a needs backward computation.
I0412 01:54:28.202745 25008 net.cpp:226] conv5a needs backward computation.
I0412 01:54:28.202749 25008 net.cpp:226] pool4 needs backward computation.
I0412 01:54:28.202754 25008 net.cpp:226] relu4b needs backward computation.
I0412 01:54:28.202759 25008 net.cpp:226] conv4b needs backward computation.
I0412 01:54:28.202764 25008 net.cpp:226] relu4a needs backward computation.
I0412 01:54:28.202767 25008 net.cpp:226] conv4a needs backward computation.
I0412 01:54:28.202772 25008 net.cpp:226] pool3 needs backward computation.
I0412 01:54:28.202777 25008 net.cpp:226] relu3b needs backward computation.
I0412 01:54:28.202781 25008 net.cpp:226] conv3b needs backward computation.
I0412 01:54:28.202785 25008 net.cpp:226] relu3a needs backward computation.
I0412 01:54:28.202790 25008 net.cpp:226] conv3a needs backward computation.
I0412 01:54:28.202795 25008 net.cpp:228] pool2 does not need backward computation.
I0412 01:54:28.202800 25008 net.cpp:228] relu2a does not need backward computation.
I0412 01:54:28.202805 25008 net.cpp:228] conv2a does not need backward computation.
I0412 01:54:28.202810 25008 net.cpp:228] pool1 does not need backward computation.
I0412 01:54:28.202814 25008 net.cpp:228] relu1a does not need backward computation.
I0412 01:54:28.202819 25008 net.cpp:228] conv1a does not need backward computation.
I0412 01:54:28.202826 25008 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 01:54:28.202831 25008 net.cpp:228] data_data_0_split does not need backward computation.
I0412 01:54:28.202838 25008 net.cpp:228] data does not need backward computation.
I0412 01:54:28.202843 25008 net.cpp:270] This network produces output accuarcy
I0412 01:54:28.202848 25008 net.cpp:270] This network produces output loss_cls
I0412 01:54:28.202853 25008 net.cpp:270] This network produces output loss_twin
I0412 01:54:28.202857 25008 net.cpp:270] This network produces output rpn_accuarcy
I0412 01:54:28.202863 25008 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 01:54:28.202867 25008 net.cpp:270] This network produces output rpn_cls_loss
I0412 01:54:28.202872 25008 net.cpp:270] This network produces output rpn_loss_twin
I0412 01:54:28.202926 25008 net.cpp:283] Network initialization done.
I0412 01:54:28.203075 25008 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 01:54:28.376993 25008 net.cpp:761] Ignoring source layer pool5
I0412 01:54:28.401969 25008 net.cpp:761] Ignoring source layer fc7
I0412 01:54:28.401996 25008 net.cpp:761] Ignoring source layer relu7
I0412 01:54:28.402001 25008 net.cpp:761] Ignoring source layer drop7
I0412 01:54:28.402004 25008 net.cpp:761] Ignoring source layer fc8-200
I0412 01:54:28.402009 25008 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
99
(array([0]), array([97]))
(array([[3.1250000e-02, 3.8569803e+02]], dtype=float32), array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 0.]], dtype=float32))
(1, 101)
[[3.1250000e-02 3.8569803e+02]]
[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0.]]
[[3.1250000e-02 3.8569803e+02 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
  0.0000000e+00]]
[[[[[-57.   9. -31. ...  32.  52.  55.]
    [-50. -17.   4. ... -44. -43. -24.]
    [-59.  17.  -3. ... -49. -51. -53.]
    ...
    [ 85.  96.  97. ...  76.  79.  77.]
    [ 86.  97. 101. ...  76.  79.  77.]
    [ 86.  96.  96. ...  76.  78.  75.]]

   [[ 10.   2.  11. ...  66.  64.  63.]
    [ -2.  -5.   0. ...  60.  61.  64.]
    [ -8. -11.   0. ...  61.  57.  58.]
    ...
    [ 94.  91.  89. ...  81.  77.  72.]
    [ 88.  85.  84. ...  81.  77.  73.]
    [ 84.  81.  83. ...  79.  78.  75.]]

   [[ 16.  26.  -6. ...  62.  62.  61.]
    [ -9. -44. -23. ...  64.  63.  62.]
    [ 39. -23.  -5. ...  65.  64.  62.]
    ...
    [113. 109. 102. ...  73.  73.  73.]
    [110. 108. 102. ...  74.  73.  73.]
    [107. 105. 101. ...  74.  72.  72.]]

   ...

   [[-12. -13. -16. ... -12. -15. -15.]
    [-16. -16. -16. ... -11. -13. -14.]
    [-18. -18. -18. ...  -6.  -8.  -9.]
    ...
    [ 39.  43.  43. ...  85.  80.  74.]
    [ 41.  37.  27. ...  79.  73.  68.]
    [ 36.  25.  21. ...  80.  76.  73.]]

   [[-12. -13. -16. ... -12. -15. -15.]
    [-16. -16. -16. ... -11. -13. -14.]
    [-18. -18. -18. ...  -6.  -8.  -9.]
    ...
    [ 39.  43.  43. ...  85.  80.  74.]
    [ 41.  37.  27. ...  79.  73.  68.]
    [ 36.  25.  21. ...  80.  76.  73.]]

   [[-12. -13. -16. ... -12. -15. -15.]
    [-16. -16. -16. ... -11. -13. -14.]
    [-18. -18. -18. ...  -6.  -8.  -9.]
    ...
    [ 39.  43.  43. ...  85.  80.  74.]
    [ 41.  37.  27. ...  79.  73.  68.]
    [ 36.  25.  21. ...  80.  76.  73.]]]


  [[[ 40. 105.  70. ...  25.  45.  48.]
    [ 41.  73. 108. ... -51. -50. -31.]
    [ 38. 121. 121. ... -57. -59. -61.]
    ...
    [ 19.  34.  37. ...  73.  74.  72.]
    [ 19.  34.  40. ...  73.  74.  72.]
    [ 18.  30.  35. ...  73.  73.  70.]]

   [[123. 120. 117. ...  59.  57.  56.]
    [121. 123. 116. ...  53.  54.  57.]
    [121. 121. 117. ...  54.  50.  51.]
    ...
    [ 15.  17.  18. ...  76.  72.  67.]
    [ 16.  17.  19. ...  76.  72.  68.]
    [ 16.  17.  23. ...  74.  73.  70.]]

   [[104. 116.  99. ...  55.  55.  54.]
    [ 75.  43.  83. ...  57.  56.  55.]
    [127.  70. 111. ...  58.  57.  55.]
    ...
    [ 19.  19.  19. ...  70.  70.  70.]
    [ 18.  18.  20. ...  71.  70.  70.]
    [ 17.  19.  20. ...  71.  69.  69.]]

   ...

   [[ 36.  35.  32. ...  35.  35.  33.]
    [ 32.  32.  32. ...  38.  37.  36.]
    [ 28.  28.  29. ...  40.  39.  38.]
    ...
    [ 40.  44.  44. ...  89.  85.  79.]
    [ 43.  39.  29. ...  86.  80.  75.]
    [ 38.  27.  23. ...  87.  83.  80.]]

   [[ 36.  35.  32. ...  35.  35.  33.]
    [ 32.  32.  32. ...  38.  37.  36.]
    [ 28.  28.  29. ...  40.  39.  38.]
    ...
    [ 40.  44.  44. ...  89.  85.  79.]
    [ 43.  39.  29. ...  86.  80.  75.]
    [ 38.  27.  23. ...  87.  83.  80.]]

   [[ 36.  35.  32. ...  35.  35.  33.]
    [ 32.  32.  32. ...  38.  37.  36.]
    [ 28.  28.  29. ...  40.  39.  38.]
    ...
    [ 40.  44.  44. ...  89.  85.  79.]
    [ 43.  39.  29. ...  86.  80.  75.]
    [ 38.  27.  23. ...  87.  83.  80.]]]


  [[[ 79. 144. 110. ...  19.  39.  42.]
    [ 81. 115. 147. ... -57. -56. -37.]
    [ 77. 153. 153. ... -61. -63. -65.]
    ...
    [-37. -23. -20. ...  67.  68.  66.]
    [-35. -21. -15. ...  67.  68.  66.]
    [-38. -23. -19. ...  67.  67.  64.]]

   [[151. 151. 153. ...  51.  49.  48.]
    [150. 153. 153. ...  45.  46.  49.]
    [149. 153. 153. ...  48.  44.  45.]
    ...
    [-57. -52. -47. ...  70.  66.  61.]
    [-52. -47. -41. ...  70.  66.  62.]
    [-47. -42. -34. ...  68.  67.  64.]]

   [[140. 153. 135. ...  47.  47.  46.]
    [114.  83. 120. ...  49.  48.  47.]
    [153. 111. 147. ...  50.  49.  47.]
    ...
    [-67. -63. -59. ...  65.  64.  64.]
    [-62. -58. -56. ...  65.  64.  64.]
    [-59. -54. -52. ...  65.  63.  63.]]

   ...

   [[ -9. -10. -13. ...   4.   2.   0.]
    [-15. -15. -15. ...   9.   5.   4.]
    [-19. -19. -20. ...  13.  10.   9.]
    ...
    [ 45.  49.  49. ... 103.  97.  91.]
    [ 49.  45.  35. ...  98.  92.  87.]
    [ 44.  33.  29. ...  99.  95.  92.]]

   [[ -9. -10. -13. ...   4.   2.   0.]
    [-15. -15. -15. ...   9.   5.   4.]
    [-19. -19. -20. ...  13.  10.   9.]
    ...
    [ 45.  49.  49. ... 103.  97.  91.]
    [ 49.  45.  35. ...  98.  92.  87.]
    [ 44.  33.  29. ...  99.  95.  92.]]

   [[ -9. -10. -13. ...   4.   2.   0.]
    [-15. -15. -15. ...   9.   5.   4.]
    [-19. -19. -20. ...  13.  10.   9.]
    ...
    [ 45.  49.  49. ... 103.  97.  91.]
    [ 49.  45.  35. ...  98.  92.  87.]
    [ 44.  33.  29. ...  99.  95.  92.]]]]]
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 95, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 129, in forward
    blob1, blob2 = blob
ValueError: need more than 1 value to unpack
Terminating BlobFetcher
