Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
print done
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}]
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 03:01:15.050400 14284 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 03:01:15.050428 14284 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 03:01:15.050984 14284 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 03:01:15.051259 14284 layer_factory.hpp:77] Creating layer data
I0412 03:01:15.062515 14284 net.cpp:100] Creating Layer data
I0412 03:01:15.062538 14284 net.cpp:408] data -> data
I0412 03:01:15.062548 14284 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 03:01:15.071162 14284 net.cpp:150] Setting up data
I0412 03:01:15.071187 14284 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 03:01:15.071195 14284 net.cpp:157] Top shape: 1 3 (3)
I0412 03:01:15.071199 14284 net.cpp:165] Memory required for data: 115605516
I0412 03:01:15.071207 14284 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 03:01:15.071228 14284 net.cpp:100] Creating Layer data_data_0_split
I0412 03:01:15.071234 14284 net.cpp:434] data_data_0_split <- data
I0412 03:01:15.071244 14284 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 03:01:15.071259 14284 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 03:01:15.071307 14284 net.cpp:150] Setting up data_data_0_split
I0412 03:01:15.071316 14284 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 03:01:15.071326 14284 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 03:01:15.071331 14284 net.cpp:165] Memory required for data: 346816524
I0412 03:01:15.071336 14284 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 03:01:15.071342 14284 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 03:01:15.071348 14284 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 03:01:15.071355 14284 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 03:01:15.071368 14284 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 03:01:15.071419 14284 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 03:01:15.071429 14284 net.cpp:157] Top shape: 1 3 (3)
I0412 03:01:15.071432 14284 net.cpp:157] Top shape: 1 3 (3)
I0412 03:01:15.071436 14284 net.cpp:165] Memory required for data: 346816548
I0412 03:01:15.071441 14284 layer_factory.hpp:77] Creating layer conv1a
I0412 03:01:15.071457 14284 net.cpp:100] Creating Layer conv1a
I0412 03:01:15.071462 14284 net.cpp:434] conv1a <- data_data_0_split_0
I0412 03:01:15.071471 14284 net.cpp:408] conv1a -> conv1a
I0412 03:01:15.089645 14284 net.cpp:150] Setting up conv1a
I0412 03:01:15.089678 14284 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 03:01:15.089682 14284 net.cpp:165] Memory required for data: 2813067300
I0412 03:01:15.089701 14284 layer_factory.hpp:77] Creating layer relu1a
I0412 03:01:15.089716 14284 net.cpp:100] Creating Layer relu1a
I0412 03:01:15.089722 14284 net.cpp:434] relu1a <- conv1a
I0412 03:01:15.089732 14284 net.cpp:395] relu1a -> conv1a (in-place)
I0412 03:01:15.089746 14284 net.cpp:150] Setting up relu1a
I0412 03:01:15.089752 14284 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 03:01:15.089756 14284 net.cpp:165] Memory required for data: 5279318052
I0412 03:01:15.089761 14284 layer_factory.hpp:77] Creating layer pool1
I0412 03:01:15.089768 14284 net.cpp:100] Creating Layer pool1
I0412 03:01:15.089773 14284 net.cpp:434] pool1 <- conv1a
I0412 03:01:15.089782 14284 net.cpp:408] pool1 -> pool1
I0412 03:01:15.089880 14284 net.cpp:150] Setting up pool1
I0412 03:01:15.089887 14284 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 03:01:15.089892 14284 net.cpp:165] Memory required for data: 5895880740
I0412 03:01:15.089896 14284 layer_factory.hpp:77] Creating layer conv2a
I0412 03:01:15.089910 14284 net.cpp:100] Creating Layer conv2a
I0412 03:01:15.089916 14284 net.cpp:434] conv2a <- pool1
I0412 03:01:15.089923 14284 net.cpp:408] conv2a -> conv2a
I0412 03:01:15.097146 14284 net.cpp:150] Setting up conv2a
I0412 03:01:15.097177 14284 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 03:01:15.097182 14284 net.cpp:165] Memory required for data: 7129006116
I0412 03:01:15.097201 14284 layer_factory.hpp:77] Creating layer relu2a
I0412 03:01:15.097214 14284 net.cpp:100] Creating Layer relu2a
I0412 03:01:15.097220 14284 net.cpp:434] relu2a <- conv2a
I0412 03:01:15.097229 14284 net.cpp:395] relu2a -> conv2a (in-place)
I0412 03:01:15.097244 14284 net.cpp:150] Setting up relu2a
I0412 03:01:15.097250 14284 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 03:01:15.097254 14284 net.cpp:165] Memory required for data: 8362131492
I0412 03:01:15.097257 14284 layer_factory.hpp:77] Creating layer pool2
I0412 03:01:15.097270 14284 net.cpp:100] Creating Layer pool2
I0412 03:01:15.097275 14284 net.cpp:434] pool2 <- conv2a
I0412 03:01:15.097283 14284 net.cpp:408] pool2 -> pool2
I0412 03:01:15.097368 14284 net.cpp:150] Setting up pool2
I0412 03:01:15.097376 14284 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 03:01:15.097381 14284 net.cpp:165] Memory required for data: 8516272164
I0412 03:01:15.097385 14284 layer_factory.hpp:77] Creating layer conv3a
I0412 03:01:15.097400 14284 net.cpp:100] Creating Layer conv3a
I0412 03:01:15.097406 14284 net.cpp:434] conv3a <- pool2
I0412 03:01:15.097414 14284 net.cpp:408] conv3a -> conv3a
I0412 03:01:15.105821 14284 net.cpp:150] Setting up conv3a
I0412 03:01:15.105846 14284 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 03:01:15.105851 14284 net.cpp:165] Memory required for data: 8824553508
I0412 03:01:15.105865 14284 layer_factory.hpp:77] Creating layer relu3a
I0412 03:01:15.105877 14284 net.cpp:100] Creating Layer relu3a
I0412 03:01:15.105885 14284 net.cpp:434] relu3a <- conv3a
I0412 03:01:15.105892 14284 net.cpp:395] relu3a -> conv3a (in-place)
I0412 03:01:15.105901 14284 net.cpp:150] Setting up relu3a
I0412 03:01:15.105908 14284 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 03:01:15.105912 14284 net.cpp:165] Memory required for data: 9132834852
I0412 03:01:15.105917 14284 layer_factory.hpp:77] Creating layer conv3b
I0412 03:01:15.105931 14284 net.cpp:100] Creating Layer conv3b
I0412 03:01:15.105935 14284 net.cpp:434] conv3b <- conv3a
I0412 03:01:15.105942 14284 net.cpp:408] conv3b -> conv3b
I0412 03:01:15.122694 14284 net.cpp:150] Setting up conv3b
I0412 03:01:15.122720 14284 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 03:01:15.122723 14284 net.cpp:165] Memory required for data: 9441116196
I0412 03:01:15.122735 14284 layer_factory.hpp:77] Creating layer relu3b
I0412 03:01:15.122748 14284 net.cpp:100] Creating Layer relu3b
I0412 03:01:15.122761 14284 net.cpp:434] relu3b <- conv3b
I0412 03:01:15.122768 14284 net.cpp:395] relu3b -> conv3b (in-place)
I0412 03:01:15.122781 14284 net.cpp:150] Setting up relu3b
I0412 03:01:15.122786 14284 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 03:01:15.122790 14284 net.cpp:165] Memory required for data: 9749397540
I0412 03:01:15.122795 14284 layer_factory.hpp:77] Creating layer pool3
I0412 03:01:15.122807 14284 net.cpp:100] Creating Layer pool3
I0412 03:01:15.122812 14284 net.cpp:434] pool3 <- conv3b
I0412 03:01:15.122817 14284 net.cpp:408] pool3 -> pool3
I0412 03:01:15.122871 14284 net.cpp:150] Setting up pool3
I0412 03:01:15.122879 14284 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 03:01:15.122882 14284 net.cpp:165] Memory required for data: 9787932708
I0412 03:01:15.122887 14284 layer_factory.hpp:77] Creating layer conv4a
I0412 03:01:15.122903 14284 net.cpp:100] Creating Layer conv4a
I0412 03:01:15.122908 14284 net.cpp:434] conv4a <- pool3
I0412 03:01:15.122917 14284 net.cpp:408] conv4a -> conv4a
I0412 03:01:15.156563 14284 net.cpp:150] Setting up conv4a
I0412 03:01:15.156587 14284 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 03:01:15.156592 14284 net.cpp:165] Memory required for data: 9865003044
I0412 03:01:15.156610 14284 layer_factory.hpp:77] Creating layer relu4a
I0412 03:01:15.156623 14284 net.cpp:100] Creating Layer relu4a
I0412 03:01:15.156630 14284 net.cpp:434] relu4a <- conv4a
I0412 03:01:15.156638 14284 net.cpp:395] relu4a -> conv4a (in-place)
I0412 03:01:15.156651 14284 net.cpp:150] Setting up relu4a
I0412 03:01:15.156656 14284 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 03:01:15.156666 14284 net.cpp:165] Memory required for data: 9942073380
I0412 03:01:15.156671 14284 layer_factory.hpp:77] Creating layer conv4b
I0412 03:01:15.156688 14284 net.cpp:100] Creating Layer conv4b
I0412 03:01:15.156692 14284 net.cpp:434] conv4b <- conv4a
I0412 03:01:15.156700 14284 net.cpp:408] conv4b -> conv4b
I0412 03:01:15.258795 14284 net.cpp:150] Setting up conv4b
I0412 03:01:15.258824 14284 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 03:01:15.258828 14284 net.cpp:165] Memory required for data: 10019143716
I0412 03:01:15.258837 14284 layer_factory.hpp:77] Creating layer relu4b
I0412 03:01:15.258852 14284 net.cpp:100] Creating Layer relu4b
I0412 03:01:15.258859 14284 net.cpp:434] relu4b <- conv4b
I0412 03:01:15.258869 14284 net.cpp:395] relu4b -> conv4b (in-place)
I0412 03:01:15.258882 14284 net.cpp:150] Setting up relu4b
I0412 03:01:15.258888 14284 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 03:01:15.258894 14284 net.cpp:165] Memory required for data: 10096214052
I0412 03:01:15.258899 14284 layer_factory.hpp:77] Creating layer pool4
I0412 03:01:15.258910 14284 net.cpp:100] Creating Layer pool4
I0412 03:01:15.258916 14284 net.cpp:434] pool4 <- conv4b
I0412 03:01:15.258924 14284 net.cpp:408] pool4 -> pool4
I0412 03:01:15.258990 14284 net.cpp:150] Setting up pool4
I0412 03:01:15.258997 14284 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 03:01:15.259001 14284 net.cpp:165] Memory required for data: 10105847844
I0412 03:01:15.259003 14284 layer_factory.hpp:77] Creating layer conv5a
I0412 03:01:15.259017 14284 net.cpp:100] Creating Layer conv5a
I0412 03:01:15.259023 14284 net.cpp:434] conv5a <- pool4
I0412 03:01:15.259032 14284 net.cpp:408] conv5a -> conv5a
I0412 03:01:15.320503 14284 net.cpp:150] Setting up conv5a
I0412 03:01:15.320538 14284 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 03:01:15.320542 14284 net.cpp:165] Memory required for data: 10115481636
I0412 03:01:15.320554 14284 layer_factory.hpp:77] Creating layer relu5a
I0412 03:01:15.320565 14284 net.cpp:100] Creating Layer relu5a
I0412 03:01:15.320571 14284 net.cpp:434] relu5a <- conv5a
I0412 03:01:15.320580 14284 net.cpp:395] relu5a -> conv5a (in-place)
I0412 03:01:15.320600 14284 net.cpp:150] Setting up relu5a
I0412 03:01:15.320611 14284 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 03:01:15.320614 14284 net.cpp:165] Memory required for data: 10125115428
I0412 03:01:15.320618 14284 layer_factory.hpp:77] Creating layer conv5b
I0412 03:01:15.320633 14284 net.cpp:100] Creating Layer conv5b
I0412 03:01:15.320638 14284 net.cpp:434] conv5b <- conv5a
I0412 03:01:15.320647 14284 net.cpp:408] conv5b -> conv5b
I0412 03:01:15.387436 14284 net.cpp:150] Setting up conv5b
I0412 03:01:15.387509 14284 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 03:01:15.387532 14284 net.cpp:165] Memory required for data: 10134749220
I0412 03:01:15.387559 14284 layer_factory.hpp:77] Creating layer relu5b
I0412 03:01:15.387586 14284 net.cpp:100] Creating Layer relu5b
I0412 03:01:15.387606 14284 net.cpp:434] relu5b <- conv5b
I0412 03:01:15.387630 14284 net.cpp:395] relu5b -> conv5b (in-place)
I0412 03:01:15.387658 14284 net.cpp:150] Setting up relu5b
I0412 03:01:15.387681 14284 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 03:01:15.387697 14284 net.cpp:165] Memory required for data: 10144383012
I0412 03:01:15.387706 14284 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 03:01:15.387713 14284 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 03:01:15.387718 14284 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 03:01:15.387728 14284 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 03:01:15.387738 14284 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 03:01:15.387791 14284 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 03:01:15.387800 14284 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 03:01:15.387805 14284 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 03:01:15.387809 14284 net.cpp:165] Memory required for data: 10163650596
I0412 03:01:15.387814 14284 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 03:01:15.387826 14284 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 03:01:15.387831 14284 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 03:01:15.387840 14284 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 03:01:15.453848 14284 net.cpp:150] Setting up rpn_conv/3x3
I0412 03:01:15.453872 14284 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 03:01:15.453876 14284 net.cpp:165] Memory required for data: 10166796324
I0412 03:01:15.453896 14284 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 03:01:15.453908 14284 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 03:01:15.453914 14284 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 03:01:15.453924 14284 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 03:01:15.453938 14284 net.cpp:150] Setting up rpn_relu/3x3
I0412 03:01:15.453946 14284 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 03:01:15.453950 14284 net.cpp:165] Memory required for data: 10169942052
I0412 03:01:15.453955 14284 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 03:01:15.453970 14284 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 03:01:15.453975 14284 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 03:01:15.453984 14284 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 03:01:15.518188 14284 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 03:01:15.518218 14284 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 03:01:15.518224 14284 net.cpp:165] Memory required for data: 10170728484
I0412 03:01:15.518234 14284 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 03:01:15.518244 14284 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 03:01:15.518250 14284 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 03:01:15.518260 14284 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 03:01:15.518270 14284 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 03:01:15.518275 14284 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 03:01:15.518280 14284 net.cpp:165] Memory required for data: 10171514916
I0412 03:01:15.518283 14284 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 03:01:15.518291 14284 net.cpp:100] Creating Layer rpn/output_pool
I0412 03:01:15.518296 14284 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 03:01:15.518301 14284 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 03:01:15.518368 14284 net.cpp:150] Setting up rpn/output_pool
I0412 03:01:15.518378 14284 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 03:01:15.518381 14284 net.cpp:165] Memory required for data: 10171711524
I0412 03:01:15.518386 14284 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 03:01:15.518393 14284 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 03:01:15.518399 14284 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 03:01:15.518407 14284 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 03:01:15.518416 14284 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 03:01:15.518477 14284 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 03:01:15.518487 14284 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 03:01:15.518492 14284 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 03:01:15.518496 14284 net.cpp:165] Memory required for data: 10172104740
I0412 03:01:15.518501 14284 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 03:01:15.518515 14284 net.cpp:100] Creating Layer rpn_cls_score
I0412 03:01:15.518520 14284 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 03:01:15.518529 14284 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 03:01:15.519239 14284 net.cpp:150] Setting up rpn_cls_score
I0412 03:01:15.519253 14284 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 03:01:15.519256 14284 net.cpp:165] Memory required for data: 10172133156
I0412 03:01:15.519265 14284 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 03:01:15.519273 14284 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 03:01:15.519279 14284 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 03:01:15.519287 14284 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 03:01:15.519296 14284 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 03:01:15.519366 14284 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 03:01:15.519393 14284 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 03:01:15.519412 14284 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 03:01:15.519428 14284 net.cpp:165] Memory required for data: 10172189988
I0412 03:01:15.519443 14284 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 03:01:15.519470 14284 net.cpp:100] Creating Layer rpn_twin_pred
I0412 03:01:15.519477 14284 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 03:01:15.519485 14284 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 03:01:15.520033 14284 net.cpp:150] Setting up rpn_twin_pred
I0412 03:01:15.520043 14284 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 03:01:15.520047 14284 net.cpp:165] Memory required for data: 10172218404
I0412 03:01:15.520056 14284 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 03:01:15.520064 14284 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 03:01:15.520069 14284 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 03:01:15.520076 14284 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 03:01:15.520084 14284 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 03:01:15.520141 14284 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 03:01:15.520150 14284 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 03:01:15.520155 14284 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 03:01:15.520159 14284 net.cpp:165] Memory required for data: 10172275236
I0412 03:01:15.520164 14284 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 03:01:15.520174 14284 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 03:01:15.520179 14284 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 03:01:15.520187 14284 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 03:01:15.520229 14284 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 03:01:15.520237 14284 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 03:01:15.520241 14284 net.cpp:165] Memory required for data: 10172303652
I0412 03:01:15.520246 14284 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 03:01:15.520253 14284 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 03:01:15.520258 14284 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 03:01:15.520267 14284 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 03:01:15.520282 14284 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 03:01:15.520306 14284 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 03:01:15.520416 14284 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 03:01:15.520426 14284 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 03:01:15.520432 14284 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 03:01:15.520437 14284 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 03:01:15.520440 14284 net.cpp:165] Memory required for data: 10172388900
I0412 03:01:15.520445 14284 layer_factory.hpp:77] Creating layer rpn-data
I0412 03:01:15.520875 14284 net.cpp:100] Creating Layer rpn-data
I0412 03:01:15.520886 14284 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 03:01:15.520893 14284 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 03:01:15.520900 14284 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 03:01:15.520910 14284 net.cpp:408] rpn-data -> rpn_labels
I0412 03:01:15.520926 14284 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 03:01:15.520936 14284 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 03:01:15.520961 14284 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 03:01:15.523545 14284 net.cpp:150] Setting up rpn-data
I0412 03:01:15.523557 14284 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 03:01:15.523561 14284 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 03:01:15.523564 14284 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 03:01:15.523568 14284 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 03:01:15.523571 14284 net.cpp:165] Memory required for data: 10172488356
I0412 03:01:15.523573 14284 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 03:01:15.523579 14284 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 03:01:15.523586 14284 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 03:01:15.523591 14284 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 03:01:15.523597 14284 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 03:01:15.523633 14284 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 03:01:15.523639 14284 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 03:01:15.523643 14284 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 03:01:15.523645 14284 net.cpp:165] Memory required for data: 10172516772
I0412 03:01:15.523648 14284 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 03:01:15.523654 14284 net.cpp:100] Creating Layer rpn_loss_cls
I0412 03:01:15.523659 14284 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 03:01:15.523663 14284 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 03:01:15.523667 14284 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 03:01:15.523675 14284 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 03:01:15.523779 14284 net.cpp:150] Setting up rpn_loss_cls
I0412 03:01:15.523785 14284 net.cpp:157] Top shape: (1)
I0412 03:01:15.523787 14284 net.cpp:160]     with loss weight 1
I0412 03:01:15.523802 14284 net.cpp:165] Memory required for data: 10172516776
I0412 03:01:15.523805 14284 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 03:01:15.523811 14284 net.cpp:100] Creating Layer rpn_loss_twin
I0412 03:01:15.523816 14284 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 03:01:15.523820 14284 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 03:01:15.523823 14284 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 03:01:15.523828 14284 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 03:01:15.523831 14284 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 03:01:15.523916 14284 net.cpp:150] Setting up rpn_loss_twin
I0412 03:01:15.523921 14284 net.cpp:157] Top shape: (1)
I0412 03:01:15.523924 14284 net.cpp:160]     with loss weight 1
I0412 03:01:15.523929 14284 net.cpp:165] Memory required for data: 10172516780
I0412 03:01:15.523932 14284 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 03:01:15.523938 14284 net.cpp:100] Creating Layer rpn_accuarcy
I0412 03:01:15.523941 14284 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 03:01:15.523946 14284 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 03:01:15.523952 14284 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 03:01:15.523957 14284 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 03:01:15.523994 14284 net.cpp:150] Setting up rpn_accuarcy
I0412 03:01:15.524000 14284 net.cpp:157] Top shape: (1)
I0412 03:01:15.524003 14284 net.cpp:157] Top shape: 2 (2)
I0412 03:01:15.524006 14284 net.cpp:165] Memory required for data: 10172516792
I0412 03:01:15.524010 14284 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 03:01:15.524014 14284 net.cpp:100] Creating Layer rpn_cls_prob
I0412 03:01:15.524018 14284 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 03:01:15.524022 14284 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 03:01:15.524087 14284 net.cpp:150] Setting up rpn_cls_prob
I0412 03:01:15.524094 14284 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 03:01:15.524096 14284 net.cpp:165] Memory required for data: 10172545208
I0412 03:01:15.524101 14284 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 03:01:15.524106 14284 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 03:01:15.524111 14284 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 03:01:15.524117 14284 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 03:01:15.524142 14284 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 03:01:15.524148 14284 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 03:01:15.524152 14284 net.cpp:165] Memory required for data: 10172573624
I0412 03:01:15.524154 14284 layer_factory.hpp:77] Creating layer proposal
I0412 03:01:15.524768 14284 net.cpp:100] Creating Layer proposal
I0412 03:01:15.524780 14284 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 03:01:15.524785 14284 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 03:01:15.524794 14284 net.cpp:408] proposal -> rpn_rois
I0412 03:01:15.528575 14284 net.cpp:150] Setting up proposal
I0412 03:01:15.528589 14284 net.cpp:157] Top shape: 1 3 (3)
I0412 03:01:15.528592 14284 net.cpp:165] Memory required for data: 10172573636
I0412 03:01:15.528601 14284 layer_factory.hpp:77] Creating layer roi-data
I0412 03:01:15.528738 14284 net.cpp:100] Creating Layer roi-data
I0412 03:01:15.528748 14284 net.cpp:434] roi-data <- rpn_rois
I0412 03:01:15.528751 14284 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 03:01:15.528758 14284 net.cpp:408] roi-data -> rois
I0412 03:01:15.528764 14284 net.cpp:408] roi-data -> labels
I0412 03:01:15.528769 14284 net.cpp:408] roi-data -> twin_targets
I0412 03:01:15.528774 14284 net.cpp:408] roi-data -> twin_inside_weights
I0412 03:01:15.528779 14284 net.cpp:408] roi-data -> twin_outside_weights
I0412 03:01:15.529100 14284 net.cpp:150] Setting up roi-data
I0412 03:01:15.529111 14284 net.cpp:157] Top shape: 1 3 (3)
I0412 03:01:15.529114 14284 net.cpp:157] Top shape: 1 1 (1)
I0412 03:01:15.529119 14284 net.cpp:157] Top shape: 1 402 (402)
I0412 03:01:15.529121 14284 net.cpp:157] Top shape: 1 402 (402)
I0412 03:01:15.529124 14284 net.cpp:157] Top shape: 1 402 (402)
I0412 03:01:15.529126 14284 net.cpp:165] Memory required for data: 10172578476
I0412 03:01:15.529129 14284 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 03:01:15.529134 14284 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 03:01:15.529137 14284 net.cpp:434] labels_roi-data_1_split <- labels
I0412 03:01:15.529142 14284 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 03:01:15.529148 14284 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 03:01:15.529186 14284 net.cpp:150] Setting up labels_roi-data_1_split
I0412 03:01:15.529193 14284 net.cpp:157] Top shape: 1 1 (1)
I0412 03:01:15.529198 14284 net.cpp:157] Top shape: 1 1 (1)
I0412 03:01:15.529202 14284 net.cpp:165] Memory required for data: 10172578484
I0412 03:01:15.529206 14284 layer_factory.hpp:77] Creating layer roi_pool5
I0412 03:01:15.529213 14284 net.cpp:100] Creating Layer roi_pool5
I0412 03:01:15.529220 14284 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 03:01:15.529227 14284 net.cpp:434] roi_pool5 <- rois
I0412 03:01:15.529233 14284 net.cpp:408] roi_pool5 -> pool5
I0412 03:01:15.529242 14284 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 03:01:15.529250 14284 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 03:01:15.529297 14284 net.cpp:150] Setting up roi_pool5
I0412 03:01:15.529304 14284 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 03:01:15.529309 14284 net.cpp:165] Memory required for data: 10172611252
I0412 03:01:15.529312 14284 layer_factory.hpp:77] Creating layer fc6
I0412 03:01:15.529322 14284 net.cpp:100] Creating Layer fc6
I0412 03:01:15.529327 14284 net.cpp:434] fc6 <- pool5
I0412 03:01:15.529335 14284 net.cpp:408] fc6 -> fc6
I0412 03:01:15.864511 14284 net.cpp:150] Setting up fc6
I0412 03:01:15.864542 14284 net.cpp:157] Top shape: 1 4096 (4096)
I0412 03:01:15.864547 14284 net.cpp:165] Memory required for data: 10172627636
I0412 03:01:15.864558 14284 layer_factory.hpp:77] Creating layer relu6
I0412 03:01:15.864569 14284 net.cpp:100] Creating Layer relu6
I0412 03:01:15.864575 14284 net.cpp:434] relu6 <- fc6
I0412 03:01:15.864590 14284 net.cpp:395] relu6 -> fc6 (in-place)
I0412 03:01:15.864603 14284 net.cpp:150] Setting up relu6
I0412 03:01:15.864608 14284 net.cpp:157] Top shape: 1 4096 (4096)
I0412 03:01:15.864611 14284 net.cpp:165] Memory required for data: 10172644020
I0412 03:01:15.864616 14284 layer_factory.hpp:77] Creating layer drop6
I0412 03:01:15.864624 14284 net.cpp:100] Creating Layer drop6
I0412 03:01:15.864629 14284 net.cpp:434] drop6 <- fc6
I0412 03:01:15.864636 14284 net.cpp:395] drop6 -> fc6 (in-place)
I0412 03:01:15.864667 14284 net.cpp:150] Setting up drop6
I0412 03:01:15.864675 14284 net.cpp:157] Top shape: 1 4096 (4096)
I0412 03:01:15.864678 14284 net.cpp:165] Memory required for data: 10172660404
I0412 03:01:15.864683 14284 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 03:01:15.864691 14284 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 03:01:15.864698 14284 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 03:01:15.864706 14284 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 03:01:15.864717 14284 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 03:01:15.864770 14284 net.cpp:150] Setting up fc6_drop6_0_split
I0412 03:01:15.864779 14284 net.cpp:157] Top shape: 1 4096 (4096)
I0412 03:01:15.864784 14284 net.cpp:157] Top shape: 1 4096 (4096)
I0412 03:01:15.864787 14284 net.cpp:165] Memory required for data: 10172693172
I0412 03:01:15.864791 14284 layer_factory.hpp:77] Creating layer cls_score
I0412 03:01:15.864805 14284 net.cpp:100] Creating Layer cls_score
I0412 03:01:15.864811 14284 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 03:01:15.864817 14284 net.cpp:408] cls_score -> cls_score
I0412 03:01:15.876421 14284 net.cpp:150] Setting up cls_score
I0412 03:01:15.876451 14284 net.cpp:157] Top shape: 1 201 (201)
I0412 03:01:15.876456 14284 net.cpp:165] Memory required for data: 10172693976
I0412 03:01:15.876466 14284 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 03:01:15.876477 14284 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 03:01:15.876482 14284 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 03:01:15.876492 14284 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 03:01:15.876504 14284 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 03:01:15.876559 14284 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 03:01:15.876567 14284 net.cpp:157] Top shape: 1 201 (201)
I0412 03:01:15.876572 14284 net.cpp:157] Top shape: 1 201 (201)
I0412 03:01:15.876579 14284 net.cpp:165] Memory required for data: 10172695584
I0412 03:01:15.876582 14284 layer_factory.hpp:77] Creating layer twin_pred
I0412 03:01:15.876592 14284 net.cpp:100] Creating Layer twin_pred
I0412 03:01:15.876598 14284 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 03:01:15.876606 14284 net.cpp:408] twin_pred -> twin_pred
I0412 03:01:15.897970 14284 net.cpp:150] Setting up twin_pred
I0412 03:01:15.898021 14284 net.cpp:157] Top shape: 1 402 (402)
I0412 03:01:15.898032 14284 net.cpp:165] Memory required for data: 10172697192
I0412 03:01:15.898046 14284 layer_factory.hpp:77] Creating layer loss_cls
I0412 03:01:15.898059 14284 net.cpp:100] Creating Layer loss_cls
I0412 03:01:15.898067 14284 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 03:01:15.898075 14284 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 03:01:15.898083 14284 net.cpp:408] loss_cls -> loss_cls
I0412 03:01:15.898098 14284 layer_factory.hpp:77] Creating layer loss_cls
I0412 03:01:15.898291 14284 net.cpp:150] Setting up loss_cls
I0412 03:01:15.898301 14284 net.cpp:157] Top shape: (1)
I0412 03:01:15.898305 14284 net.cpp:160]     with loss weight 1
I0412 03:01:15.898319 14284 net.cpp:165] Memory required for data: 10172697196
I0412 03:01:15.898324 14284 layer_factory.hpp:77] Creating layer loss_twin
I0412 03:01:15.898331 14284 net.cpp:100] Creating Layer loss_twin
I0412 03:01:15.898339 14284 net.cpp:434] loss_twin <- twin_pred
I0412 03:01:15.898344 14284 net.cpp:434] loss_twin <- twin_targets
I0412 03:01:15.898350 14284 net.cpp:434] loss_twin <- twin_inside_weights
I0412 03:01:15.898355 14284 net.cpp:434] loss_twin <- twin_outside_weights
I0412 03:01:15.898363 14284 net.cpp:408] loss_twin -> loss_twin
I0412 03:01:15.898504 14284 net.cpp:150] Setting up loss_twin
I0412 03:01:15.898514 14284 net.cpp:157] Top shape: (1)
I0412 03:01:15.898519 14284 net.cpp:160]     with loss weight 1
I0412 03:01:15.898527 14284 net.cpp:165] Memory required for data: 10172697200
I0412 03:01:15.898533 14284 layer_factory.hpp:77] Creating layer accuarcy
I0412 03:01:15.898548 14284 net.cpp:100] Creating Layer accuarcy
I0412 03:01:15.898558 14284 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 03:01:15.898569 14284 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 03:01:15.898579 14284 net.cpp:408] accuarcy -> accuarcy
I0412 03:01:15.898591 14284 net.cpp:150] Setting up accuarcy
I0412 03:01:15.898598 14284 net.cpp:157] Top shape: (1)
I0412 03:01:15.898603 14284 net.cpp:165] Memory required for data: 10172697204
I0412 03:01:15.898607 14284 net.cpp:228] accuarcy does not need backward computation.
I0412 03:01:15.898614 14284 net.cpp:226] loss_twin needs backward computation.
I0412 03:01:15.898619 14284 net.cpp:226] loss_cls needs backward computation.
I0412 03:01:15.898628 14284 net.cpp:226] twin_pred needs backward computation.
I0412 03:01:15.898634 14284 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 03:01:15.898639 14284 net.cpp:226] cls_score needs backward computation.
I0412 03:01:15.898645 14284 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 03:01:15.898651 14284 net.cpp:226] drop6 needs backward computation.
I0412 03:01:15.898658 14284 net.cpp:226] relu6 needs backward computation.
I0412 03:01:15.898663 14284 net.cpp:226] fc6 needs backward computation.
I0412 03:01:15.898669 14284 net.cpp:226] roi_pool5 needs backward computation.
I0412 03:01:15.898675 14284 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 03:01:15.898682 14284 net.cpp:226] roi-data needs backward computation.
I0412 03:01:15.898690 14284 net.cpp:226] proposal needs backward computation.
I0412 03:01:15.898699 14284 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 03:01:15.898705 14284 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 03:01:15.898710 14284 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 03:01:15.898716 14284 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 03:01:15.898725 14284 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 03:01:15.898731 14284 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 03:01:15.898739 14284 net.cpp:226] rpn-data needs backward computation.
I0412 03:01:15.898748 14284 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 03:01:15.898757 14284 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 03:01:15.898763 14284 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 03:01:15.898769 14284 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 03:01:15.898775 14284 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 03:01:15.898780 14284 net.cpp:226] rpn_cls_score needs backward computation.
I0412 03:01:15.898787 14284 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 03:01:15.898792 14284 net.cpp:226] rpn/output_pool needs backward computation.
I0412 03:01:15.898797 14284 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 03:01:15.898802 14284 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 03:01:15.898810 14284 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 03:01:15.898815 14284 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 03:01:15.898821 14284 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 03:01:15.898828 14284 net.cpp:226] relu5b needs backward computation.
I0412 03:01:15.898833 14284 net.cpp:226] conv5b needs backward computation.
I0412 03:01:15.898836 14284 net.cpp:226] relu5a needs backward computation.
I0412 03:01:15.898840 14284 net.cpp:226] conv5a needs backward computation.
I0412 03:01:15.898845 14284 net.cpp:226] pool4 needs backward computation.
I0412 03:01:15.898852 14284 net.cpp:226] relu4b needs backward computation.
I0412 03:01:15.898856 14284 net.cpp:226] conv4b needs backward computation.
I0412 03:01:15.898860 14284 net.cpp:226] relu4a needs backward computation.
I0412 03:01:15.898864 14284 net.cpp:226] conv4a needs backward computation.
I0412 03:01:15.898869 14284 net.cpp:226] pool3 needs backward computation.
I0412 03:01:15.898878 14284 net.cpp:226] relu3b needs backward computation.
I0412 03:01:15.898888 14284 net.cpp:226] conv3b needs backward computation.
I0412 03:01:15.898900 14284 net.cpp:226] relu3a needs backward computation.
I0412 03:01:15.898910 14284 net.cpp:226] conv3a needs backward computation.
I0412 03:01:15.898916 14284 net.cpp:228] pool2 does not need backward computation.
I0412 03:01:15.898926 14284 net.cpp:228] relu2a does not need backward computation.
I0412 03:01:15.898931 14284 net.cpp:228] conv2a does not need backward computation.
I0412 03:01:15.898937 14284 net.cpp:228] pool1 does not need backward computation.
I0412 03:01:15.898942 14284 net.cpp:228] relu1a does not need backward computation.
I0412 03:01:15.898948 14284 net.cpp:228] conv1a does not need backward computation.
I0412 03:01:15.898957 14284 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 03:01:15.898964 14284 net.cpp:228] data_data_0_split does not need backward computation.
I0412 03:01:15.898972 14284 net.cpp:228] data does not need backward computation.
I0412 03:01:15.898978 14284 net.cpp:270] This network produces output accuarcy
I0412 03:01:15.898983 14284 net.cpp:270] This network produces output loss_cls
I0412 03:01:15.898989 14284 net.cpp:270] This network produces output loss_twin
I0412 03:01:15.898994 14284 net.cpp:270] This network produces output rpn_accuarcy
I0412 03:01:15.899001 14284 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 03:01:15.899008 14284 net.cpp:270] This network produces output rpn_cls_loss
I0412 03:01:15.899013 14284 net.cpp:270] This network produces output rpn_loss_twin
I0412 03:01:15.899073 14284 net.cpp:283] Network initialization done.
I0412 03:01:15.899278 14284 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 03:01:16.070466 14284 net.cpp:761] Ignoring source layer pool5
I0412 03:01:16.093724 14284 net.cpp:761] Ignoring source layer fc7
I0412 03:01:16.093750 14284 net.cpp:761] Ignoring source layer relu7
I0412 03:01:16.093755 14284 net.cpp:761] Ignoring source layer drop7
I0412 03:01:16.093757 14284 net.cpp:761] Ignoring source layer fc8-200
I0412 03:01:16.093761 14284 net.cpp:761] Ignoring source layer loss
('tempppppppppppppppppppppppppppp', [{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}])
maaaaasdfdfdsfadf
Solving...
BlobFetcher started
99
(array([0]), array([97]))
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 96, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 132, in forward
    blob1, blob2 = blob
ValueError: need more than 1 value to unpack
Terminating BlobFetcher
