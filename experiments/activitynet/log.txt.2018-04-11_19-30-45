Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0411 19:30:47.224503 32762 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0411 19:30:47.224551 32762 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0411 19:30:47.225551 32762 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0411 19:30:47.225865 32762 layer_factory.hpp:77] Creating layer data
I0411 19:30:47.241104 32762 net.cpp:100] Creating Layer data
I0411 19:30:47.241137 32762 net.cpp:408] data -> data
I0411 19:30:47.241155 32762 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0411 19:30:47.251209 32762 net.cpp:150] Setting up data
I0411 19:30:47.251230 32762 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0411 19:30:47.251238 32762 net.cpp:157] Top shape: 1 3 (3)
I0411 19:30:47.251241 32762 net.cpp:165] Memory required for data: 115605516
I0411 19:30:47.251247 32762 layer_factory.hpp:77] Creating layer data_data_0_split
I0411 19:30:47.251260 32762 net.cpp:100] Creating Layer data_data_0_split
I0411 19:30:47.251266 32762 net.cpp:434] data_data_0_split <- data
I0411 19:30:47.251271 32762 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0411 19:30:47.251282 32762 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0411 19:30:47.251324 32762 net.cpp:150] Setting up data_data_0_split
I0411 19:30:47.251330 32762 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0411 19:30:47.251336 32762 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0411 19:30:47.251339 32762 net.cpp:165] Memory required for data: 346816524
I0411 19:30:47.251343 32762 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0411 19:30:47.251348 32762 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0411 19:30:47.251351 32762 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0411 19:30:47.251356 32762 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0411 19:30:47.251363 32762 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0411 19:30:47.251401 32762 net.cpp:150] Setting up gt_boxes_data_1_split
I0411 19:30:47.251407 32762 net.cpp:157] Top shape: 1 3 (3)
I0411 19:30:47.251410 32762 net.cpp:157] Top shape: 1 3 (3)
I0411 19:30:47.251413 32762 net.cpp:165] Memory required for data: 346816548
I0411 19:30:47.251416 32762 layer_factory.hpp:77] Creating layer conv1a
I0411 19:30:47.251427 32762 net.cpp:100] Creating Layer conv1a
I0411 19:30:47.251432 32762 net.cpp:434] conv1a <- data_data_0_split_0
I0411 19:30:47.251441 32762 net.cpp:408] conv1a -> conv1a
I0411 19:30:47.272440 32762 net.cpp:150] Setting up conv1a
I0411 19:30:47.272492 32762 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0411 19:30:47.272497 32762 net.cpp:165] Memory required for data: 2813067300
I0411 19:30:47.272517 32762 layer_factory.hpp:77] Creating layer relu1a
I0411 19:30:47.272536 32762 net.cpp:100] Creating Layer relu1a
I0411 19:30:47.272542 32762 net.cpp:434] relu1a <- conv1a
I0411 19:30:47.272552 32762 net.cpp:395] relu1a -> conv1a (in-place)
I0411 19:30:47.272565 32762 net.cpp:150] Setting up relu1a
I0411 19:30:47.272572 32762 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0411 19:30:47.272575 32762 net.cpp:165] Memory required for data: 5279318052
I0411 19:30:47.272580 32762 layer_factory.hpp:77] Creating layer pool1
I0411 19:30:47.272589 32762 net.cpp:100] Creating Layer pool1
I0411 19:30:47.272593 32762 net.cpp:434] pool1 <- conv1a
I0411 19:30:47.272601 32762 net.cpp:408] pool1 -> pool1
I0411 19:30:47.272717 32762 net.cpp:150] Setting up pool1
I0411 19:30:47.272724 32762 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0411 19:30:47.272728 32762 net.cpp:165] Memory required for data: 5895880740
I0411 19:30:47.272733 32762 layer_factory.hpp:77] Creating layer conv2a
I0411 19:30:47.272747 32762 net.cpp:100] Creating Layer conv2a
I0411 19:30:47.272752 32762 net.cpp:434] conv2a <- pool1
I0411 19:30:47.272760 32762 net.cpp:408] conv2a -> conv2a
I0411 19:30:47.283479 32762 net.cpp:150] Setting up conv2a
I0411 19:30:47.283520 32762 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0411 19:30:47.283525 32762 net.cpp:165] Memory required for data: 7129006116
I0411 19:30:47.283545 32762 layer_factory.hpp:77] Creating layer relu2a
I0411 19:30:47.283557 32762 net.cpp:100] Creating Layer relu2a
I0411 19:30:47.283562 32762 net.cpp:434] relu2a <- conv2a
I0411 19:30:47.283573 32762 net.cpp:395] relu2a -> conv2a (in-place)
I0411 19:30:47.283588 32762 net.cpp:150] Setting up relu2a
I0411 19:30:47.283594 32762 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0411 19:30:47.283598 32762 net.cpp:165] Memory required for data: 8362131492
I0411 19:30:47.283602 32762 layer_factory.hpp:77] Creating layer pool2
I0411 19:30:47.283612 32762 net.cpp:100] Creating Layer pool2
I0411 19:30:47.283618 32762 net.cpp:434] pool2 <- conv2a
I0411 19:30:47.283624 32762 net.cpp:408] pool2 -> pool2
I0411 19:30:47.283740 32762 net.cpp:150] Setting up pool2
I0411 19:30:47.283748 32762 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0411 19:30:47.283753 32762 net.cpp:165] Memory required for data: 8516272164
I0411 19:30:47.283757 32762 layer_factory.hpp:77] Creating layer conv3a
I0411 19:30:47.283771 32762 net.cpp:100] Creating Layer conv3a
I0411 19:30:47.283776 32762 net.cpp:434] conv3a <- pool2
I0411 19:30:47.283784 32762 net.cpp:408] conv3a -> conv3a
I0411 19:30:47.293192 32762 net.cpp:150] Setting up conv3a
I0411 19:30:47.293221 32762 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 19:30:47.293225 32762 net.cpp:165] Memory required for data: 8824553508
I0411 19:30:47.293236 32762 layer_factory.hpp:77] Creating layer relu3a
I0411 19:30:47.293247 32762 net.cpp:100] Creating Layer relu3a
I0411 19:30:47.293254 32762 net.cpp:434] relu3a <- conv3a
I0411 19:30:47.293260 32762 net.cpp:395] relu3a -> conv3a (in-place)
I0411 19:30:47.293269 32762 net.cpp:150] Setting up relu3a
I0411 19:30:47.293273 32762 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 19:30:47.293277 32762 net.cpp:165] Memory required for data: 9132834852
I0411 19:30:47.293279 32762 layer_factory.hpp:77] Creating layer conv3b
I0411 19:30:47.293288 32762 net.cpp:100] Creating Layer conv3b
I0411 19:30:47.293293 32762 net.cpp:434] conv3b <- conv3a
I0411 19:30:47.293299 32762 net.cpp:408] conv3b -> conv3b
I0411 19:30:47.309981 32762 net.cpp:150] Setting up conv3b
I0411 19:30:47.310009 32762 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 19:30:47.310011 32762 net.cpp:165] Memory required for data: 9441116196
I0411 19:30:47.310020 32762 layer_factory.hpp:77] Creating layer relu3b
I0411 19:30:47.310031 32762 net.cpp:100] Creating Layer relu3b
I0411 19:30:47.310035 32762 net.cpp:434] relu3b <- conv3b
I0411 19:30:47.310042 32762 net.cpp:395] relu3b -> conv3b (in-place)
I0411 19:30:47.310051 32762 net.cpp:150] Setting up relu3b
I0411 19:30:47.310055 32762 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 19:30:47.310058 32762 net.cpp:165] Memory required for data: 9749397540
I0411 19:30:47.310061 32762 layer_factory.hpp:77] Creating layer pool3
I0411 19:30:47.310070 32762 net.cpp:100] Creating Layer pool3
I0411 19:30:47.310075 32762 net.cpp:434] pool3 <- conv3b
I0411 19:30:47.310079 32762 net.cpp:408] pool3 -> pool3
I0411 19:30:47.310128 32762 net.cpp:150] Setting up pool3
I0411 19:30:47.310135 32762 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0411 19:30:47.310138 32762 net.cpp:165] Memory required for data: 9787932708
I0411 19:30:47.310142 32762 layer_factory.hpp:77] Creating layer conv4a
I0411 19:30:47.310151 32762 net.cpp:100] Creating Layer conv4a
I0411 19:30:47.310156 32762 net.cpp:434] conv4a <- pool3
I0411 19:30:47.310163 32762 net.cpp:408] conv4a -> conv4a
I0411 19:30:47.359788 32762 net.cpp:150] Setting up conv4a
I0411 19:30:47.359820 32762 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 19:30:47.359825 32762 net.cpp:165] Memory required for data: 9865003044
I0411 19:30:47.359848 32762 layer_factory.hpp:77] Creating layer relu4a
I0411 19:30:47.359860 32762 net.cpp:100] Creating Layer relu4a
I0411 19:30:47.359886 32762 net.cpp:434] relu4a <- conv4a
I0411 19:30:47.359895 32762 net.cpp:395] relu4a -> conv4a (in-place)
I0411 19:30:47.359908 32762 net.cpp:150] Setting up relu4a
I0411 19:30:47.359916 32762 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 19:30:47.359921 32762 net.cpp:165] Memory required for data: 9942073380
I0411 19:30:47.359925 32762 layer_factory.hpp:77] Creating layer conv4b
I0411 19:30:47.359944 32762 net.cpp:100] Creating Layer conv4b
I0411 19:30:47.359949 32762 net.cpp:434] conv4b <- conv4a
I0411 19:30:47.359956 32762 net.cpp:408] conv4b -> conv4b
I0411 19:30:47.452481 32762 net.cpp:150] Setting up conv4b
I0411 19:30:47.452520 32762 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 19:30:47.452524 32762 net.cpp:165] Memory required for data: 10019143716
I0411 19:30:47.452536 32762 layer_factory.hpp:77] Creating layer relu4b
I0411 19:30:47.452548 32762 net.cpp:100] Creating Layer relu4b
I0411 19:30:47.452553 32762 net.cpp:434] relu4b <- conv4b
I0411 19:30:47.452563 32762 net.cpp:395] relu4b -> conv4b (in-place)
I0411 19:30:47.452574 32762 net.cpp:150] Setting up relu4b
I0411 19:30:47.452581 32762 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 19:30:47.452586 32762 net.cpp:165] Memory required for data: 10096214052
I0411 19:30:47.452590 32762 layer_factory.hpp:77] Creating layer pool4
I0411 19:30:47.452601 32762 net.cpp:100] Creating Layer pool4
I0411 19:30:47.452607 32762 net.cpp:434] pool4 <- conv4b
I0411 19:30:47.452615 32762 net.cpp:408] pool4 -> pool4
I0411 19:30:47.452669 32762 net.cpp:150] Setting up pool4
I0411 19:30:47.452677 32762 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:30:47.452679 32762 net.cpp:165] Memory required for data: 10105847844
I0411 19:30:47.452682 32762 layer_factory.hpp:77] Creating layer conv5a
I0411 19:30:47.452694 32762 net.cpp:100] Creating Layer conv5a
I0411 19:30:47.452699 32762 net.cpp:434] conv5a <- pool4
I0411 19:30:47.452704 32762 net.cpp:408] conv5a -> conv5a
I0411 19:30:47.532102 32762 net.cpp:150] Setting up conv5a
I0411 19:30:47.532140 32762 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:30:47.532146 32762 net.cpp:165] Memory required for data: 10115481636
I0411 19:30:47.532156 32762 layer_factory.hpp:77] Creating layer relu5a
I0411 19:30:47.532169 32762 net.cpp:100] Creating Layer relu5a
I0411 19:30:47.532176 32762 net.cpp:434] relu5a <- conv5a
I0411 19:30:47.532183 32762 net.cpp:395] relu5a -> conv5a (in-place)
I0411 19:30:47.532196 32762 net.cpp:150] Setting up relu5a
I0411 19:30:47.532203 32762 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:30:47.532207 32762 net.cpp:165] Memory required for data: 10125115428
I0411 19:30:47.532210 32762 layer_factory.hpp:77] Creating layer conv5b
I0411 19:30:47.532222 32762 net.cpp:100] Creating Layer conv5b
I0411 19:30:47.532227 32762 net.cpp:434] conv5b <- conv5a
I0411 19:30:47.532235 32762 net.cpp:408] conv5b -> conv5b
I0411 19:30:47.607777 32762 net.cpp:150] Setting up conv5b
I0411 19:30:47.607808 32762 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:30:47.607812 32762 net.cpp:165] Memory required for data: 10134749220
I0411 19:30:47.607820 32762 layer_factory.hpp:77] Creating layer relu5b
I0411 19:30:47.607830 32762 net.cpp:100] Creating Layer relu5b
I0411 19:30:47.607833 32762 net.cpp:434] relu5b <- conv5b
I0411 19:30:47.607842 32762 net.cpp:395] relu5b -> conv5b (in-place)
I0411 19:30:47.607851 32762 net.cpp:150] Setting up relu5b
I0411 19:30:47.607854 32762 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:30:47.607856 32762 net.cpp:165] Memory required for data: 10144383012
I0411 19:30:47.607859 32762 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0411 19:30:47.607864 32762 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0411 19:30:47.607867 32762 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0411 19:30:47.607872 32762 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0411 19:30:47.607878 32762 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0411 19:30:47.607921 32762 net.cpp:150] Setting up conv5b_relu5b_0_split
I0411 19:30:47.607926 32762 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:30:47.607929 32762 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:30:47.607933 32762 net.cpp:165] Memory required for data: 10163650596
I0411 19:30:47.607935 32762 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0411 19:30:47.607945 32762 net.cpp:100] Creating Layer rpn_conv/3x3
I0411 19:30:47.607949 32762 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0411 19:30:47.607959 32762 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0411 19:30:47.668862 32762 net.cpp:150] Setting up rpn_conv/3x3
I0411 19:30:47.668887 32762 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0411 19:30:47.668890 32762 net.cpp:165] Memory required for data: 10166796324
I0411 19:30:47.668906 32762 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0411 19:30:47.668920 32762 net.cpp:100] Creating Layer rpn_relu/3x3
I0411 19:30:47.668926 32762 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0411 19:30:47.668933 32762 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0411 19:30:47.668944 32762 net.cpp:150] Setting up rpn_relu/3x3
I0411 19:30:47.668951 32762 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0411 19:30:47.668953 32762 net.cpp:165] Memory required for data: 10169942052
I0411 19:30:47.668957 32762 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0411 19:30:47.668972 32762 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0411 19:30:47.668990 32762 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0411 19:30:47.668998 32762 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0411 19:30:47.728121 32762 net.cpp:150] Setting up rpn_conv/3x3_2
I0411 19:30:47.728149 32762 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0411 19:30:47.728152 32762 net.cpp:165] Memory required for data: 10170728484
I0411 19:30:47.728160 32762 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0411 19:30:47.728171 32762 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0411 19:30:47.728178 32762 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0411 19:30:47.728186 32762 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0411 19:30:47.728196 32762 net.cpp:150] Setting up rpn_relu/3x3_2
I0411 19:30:47.728219 32762 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0411 19:30:47.728222 32762 net.cpp:165] Memory required for data: 10171514916
I0411 19:30:47.728226 32762 layer_factory.hpp:77] Creating layer rpn/output_pool
I0411 19:30:47.728235 32762 net.cpp:100] Creating Layer rpn/output_pool
I0411 19:30:47.728242 32762 net.cpp:434] rpn/output_pool <- rpn/output_2
I0411 19:30:47.728252 32762 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0411 19:30:47.728312 32762 net.cpp:150] Setting up rpn/output_pool
I0411 19:30:47.728318 32762 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0411 19:30:47.728322 32762 net.cpp:165] Memory required for data: 10171711524
I0411 19:30:47.728358 32762 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0411 19:30:47.728366 32762 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0411 19:30:47.728371 32762 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0411 19:30:47.728379 32762 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0411 19:30:47.728387 32762 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0411 19:30:47.728438 32762 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0411 19:30:47.728446 32762 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0411 19:30:47.728449 32762 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0411 19:30:47.728453 32762 net.cpp:165] Memory required for data: 10172104740
I0411 19:30:47.728457 32762 layer_factory.hpp:77] Creating layer rpn_cls_score
I0411 19:30:47.728469 32762 net.cpp:100] Creating Layer rpn_cls_score
I0411 19:30:47.728477 32762 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0411 19:30:47.728487 32762 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0411 19:30:47.729048 32762 net.cpp:150] Setting up rpn_cls_score
I0411 19:30:47.729058 32762 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:30:47.729060 32762 net.cpp:165] Memory required for data: 10172133156
I0411 19:30:47.729066 32762 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0411 19:30:47.729074 32762 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0411 19:30:47.729079 32762 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0411 19:30:47.729085 32762 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0411 19:30:47.729094 32762 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0411 19:30:47.729154 32762 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0411 19:30:47.729162 32762 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:30:47.729167 32762 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:30:47.729171 32762 net.cpp:165] Memory required for data: 10172189988
I0411 19:30:47.729176 32762 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0411 19:30:47.729192 32762 net.cpp:100] Creating Layer rpn_twin_pred
I0411 19:30:47.729199 32762 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0411 19:30:47.729208 32762 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0411 19:30:47.729750 32762 net.cpp:150] Setting up rpn_twin_pred
I0411 19:30:47.729758 32762 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:30:47.729761 32762 net.cpp:165] Memory required for data: 10172218404
I0411 19:30:47.729768 32762 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0411 19:30:47.729775 32762 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0411 19:30:47.729780 32762 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0411 19:30:47.729786 32762 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0411 19:30:47.729795 32762 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0411 19:30:47.729854 32762 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0411 19:30:47.729861 32762 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:30:47.729866 32762 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:30:47.729869 32762 net.cpp:165] Memory required for data: 10172275236
I0411 19:30:47.729873 32762 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0411 19:30:47.729884 32762 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0411 19:30:47.729892 32762 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0411 19:30:47.729900 32762 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0411 19:30:47.729934 32762 net.cpp:150] Setting up rpn_cls_score_reshape
I0411 19:30:47.729941 32762 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 19:30:47.729944 32762 net.cpp:165] Memory required for data: 10172303652
I0411 19:30:47.729948 32762 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 19:30:47.729955 32762 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 19:30:47.729961 32762 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0411 19:30:47.729967 32762 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0411 19:30:47.729984 32762 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0411 19:30:47.729993 32762 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0411 19:30:47.730049 32762 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 19:30:47.730057 32762 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 19:30:47.730062 32762 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 19:30:47.730065 32762 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 19:30:47.730069 32762 net.cpp:165] Memory required for data: 10172388900
I0411 19:30:47.730073 32762 layer_factory.hpp:77] Creating layer rpn-data
I0411 19:30:47.730464 32762 net.cpp:100] Creating Layer rpn-data
I0411 19:30:47.730474 32762 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0411 19:30:47.730479 32762 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0411 19:30:47.730484 32762 net.cpp:434] rpn-data <- data_data_0_split_1
I0411 19:30:47.730494 32762 net.cpp:408] rpn-data -> rpn_labels
I0411 19:30:47.730502 32762 net.cpp:408] rpn-data -> rpn_twin_targets
I0411 19:30:47.730515 32762 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0411 19:30:47.730525 32762 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0411 19:30:47.732815 32762 net.cpp:150] Setting up rpn-data
I0411 19:30:47.732828 32762 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0411 19:30:47.732832 32762 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:30:47.732836 32762 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:30:47.732841 32762 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:30:47.732846 32762 net.cpp:165] Memory required for data: 10172488356
I0411 19:30:47.732851 32762 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0411 19:30:47.732858 32762 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0411 19:30:47.732863 32762 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0411 19:30:47.732872 32762 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0411 19:30:47.732882 32762 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0411 19:30:47.732935 32762 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0411 19:30:47.732942 32762 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0411 19:30:47.732946 32762 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0411 19:30:47.732950 32762 net.cpp:165] Memory required for data: 10172516772
I0411 19:30:47.732954 32762 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0411 19:30:47.732964 32762 net.cpp:100] Creating Layer rpn_loss_cls
I0411 19:30:47.732969 32762 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0411 19:30:47.732975 32762 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0411 19:30:47.732982 32762 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0411 19:30:47.732993 32762 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0411 19:30:47.733108 32762 net.cpp:150] Setting up rpn_loss_cls
I0411 19:30:47.733115 32762 net.cpp:157] Top shape: (1)
I0411 19:30:47.733119 32762 net.cpp:160]     with loss weight 1
I0411 19:30:47.733139 32762 net.cpp:165] Memory required for data: 10172516776
I0411 19:30:47.733144 32762 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0411 19:30:47.733155 32762 net.cpp:100] Creating Layer rpn_loss_twin
I0411 19:30:47.733163 32762 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0411 19:30:47.733170 32762 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0411 19:30:47.733175 32762 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0411 19:30:47.733180 32762 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0411 19:30:47.733187 32762 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0411 19:30:47.733283 32762 net.cpp:150] Setting up rpn_loss_twin
I0411 19:30:47.733289 32762 net.cpp:157] Top shape: (1)
I0411 19:30:47.733292 32762 net.cpp:160]     with loss weight 1
I0411 19:30:47.733297 32762 net.cpp:165] Memory required for data: 10172516780
I0411 19:30:47.733302 32762 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0411 19:30:47.733312 32762 net.cpp:100] Creating Layer rpn_accuarcy
I0411 19:30:47.733319 32762 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0411 19:30:47.733325 32762 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0411 19:30:47.733331 32762 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0411 19:30:47.733340 32762 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0411 19:30:47.733392 32762 net.cpp:150] Setting up rpn_accuarcy
I0411 19:30:47.733398 32762 net.cpp:157] Top shape: (1)
I0411 19:30:47.733402 32762 net.cpp:157] Top shape: 2 (2)
I0411 19:30:47.733405 32762 net.cpp:165] Memory required for data: 10172516792
I0411 19:30:47.733409 32762 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0411 19:30:47.733415 32762 net.cpp:100] Creating Layer rpn_cls_prob
I0411 19:30:47.733422 32762 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0411 19:30:47.733428 32762 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0411 19:30:47.733500 32762 net.cpp:150] Setting up rpn_cls_prob
I0411 19:30:47.733507 32762 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 19:30:47.733510 32762 net.cpp:165] Memory required for data: 10172545208
I0411 19:30:47.733515 32762 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0411 19:30:47.733521 32762 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0411 19:30:47.733526 32762 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0411 19:30:47.733536 32762 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0411 19:30:47.733567 32762 net.cpp:150] Setting up rpn_cls_prob_reshape
I0411 19:30:47.733575 32762 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:30:47.733577 32762 net.cpp:165] Memory required for data: 10172573624
I0411 19:30:47.733582 32762 layer_factory.hpp:77] Creating layer proposal
I0411 19:30:47.734108 32762 net.cpp:100] Creating Layer proposal
I0411 19:30:47.734119 32762 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0411 19:30:47.734124 32762 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0411 19:30:47.734131 32762 net.cpp:408] proposal -> rpn_rois
I0411 19:30:47.737716 32762 net.cpp:150] Setting up proposal
I0411 19:30:47.737730 32762 net.cpp:157] Top shape: 1 3 (3)
I0411 19:30:47.737733 32762 net.cpp:165] Memory required for data: 10172573636
I0411 19:30:47.737738 32762 layer_factory.hpp:77] Creating layer roi-data
I0411 19:30:47.737875 32762 net.cpp:100] Creating Layer roi-data
I0411 19:30:47.737885 32762 net.cpp:434] roi-data <- rpn_rois
I0411 19:30:47.737891 32762 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0411 19:30:47.737898 32762 net.cpp:408] roi-data -> rois
I0411 19:30:47.737908 32762 net.cpp:408] roi-data -> labels
I0411 19:30:47.737920 32762 net.cpp:408] roi-data -> twin_targets
I0411 19:30:47.737931 32762 net.cpp:408] roi-data -> twin_inside_weights
I0411 19:30:47.737939 32762 net.cpp:408] roi-data -> twin_outside_weights
I0411 19:30:47.738257 32762 net.cpp:150] Setting up roi-data
I0411 19:30:47.738268 32762 net.cpp:157] Top shape: 1 3 (3)
I0411 19:30:47.738272 32762 net.cpp:157] Top shape: 1 1 (1)
I0411 19:30:47.738276 32762 net.cpp:157] Top shape: 1 402 (402)
I0411 19:30:47.738281 32762 net.cpp:157] Top shape: 1 402 (402)
I0411 19:30:47.738286 32762 net.cpp:157] Top shape: 1 402 (402)
I0411 19:30:47.738289 32762 net.cpp:165] Memory required for data: 10172578476
I0411 19:30:47.738294 32762 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0411 19:30:47.738301 32762 net.cpp:100] Creating Layer labels_roi-data_1_split
I0411 19:30:47.738306 32762 net.cpp:434] labels_roi-data_1_split <- labels
I0411 19:30:47.738314 32762 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0411 19:30:47.738325 32762 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0411 19:30:47.738373 32762 net.cpp:150] Setting up labels_roi-data_1_split
I0411 19:30:47.738380 32762 net.cpp:157] Top shape: 1 1 (1)
I0411 19:30:47.738384 32762 net.cpp:157] Top shape: 1 1 (1)
I0411 19:30:47.738387 32762 net.cpp:165] Memory required for data: 10172578484
I0411 19:30:47.738391 32762 layer_factory.hpp:77] Creating layer roi_pool5
I0411 19:30:47.738401 32762 net.cpp:100] Creating Layer roi_pool5
I0411 19:30:47.738407 32762 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0411 19:30:47.738415 32762 net.cpp:434] roi_pool5 <- rois
I0411 19:30:47.738420 32762 net.cpp:408] roi_pool5 -> pool5
I0411 19:30:47.738428 32762 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0411 19:30:47.738440 32762 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0411 19:30:47.738487 32762 net.cpp:150] Setting up roi_pool5
I0411 19:30:47.738494 32762 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0411 19:30:47.738497 32762 net.cpp:165] Memory required for data: 10172611252
I0411 19:30:47.738502 32762 layer_factory.hpp:77] Creating layer fc6
I0411 19:30:47.738512 32762 net.cpp:100] Creating Layer fc6
I0411 19:30:47.738518 32762 net.cpp:434] fc6 <- pool5
I0411 19:30:47.738526 32762 net.cpp:408] fc6 -> fc6
I0411 19:30:48.013187 32762 net.cpp:150] Setting up fc6
I0411 19:30:48.013211 32762 net.cpp:157] Top shape: 1 4096 (4096)
I0411 19:30:48.013216 32762 net.cpp:165] Memory required for data: 10172627636
I0411 19:30:48.013226 32762 layer_factory.hpp:77] Creating layer relu6
I0411 19:30:48.013236 32762 net.cpp:100] Creating Layer relu6
I0411 19:30:48.013242 32762 net.cpp:434] relu6 <- fc6
I0411 19:30:48.013248 32762 net.cpp:395] relu6 -> fc6 (in-place)
I0411 19:30:48.013258 32762 net.cpp:150] Setting up relu6
I0411 19:30:48.013264 32762 net.cpp:157] Top shape: 1 4096 (4096)
I0411 19:30:48.013267 32762 net.cpp:165] Memory required for data: 10172644020
I0411 19:30:48.013272 32762 layer_factory.hpp:77] Creating layer drop6
I0411 19:30:48.013278 32762 net.cpp:100] Creating Layer drop6
I0411 19:30:48.013283 32762 net.cpp:434] drop6 <- fc6
I0411 19:30:48.013290 32762 net.cpp:395] drop6 -> fc6 (in-place)
I0411 19:30:48.013324 32762 net.cpp:150] Setting up drop6
I0411 19:30:48.013334 32762 net.cpp:157] Top shape: 1 4096 (4096)
I0411 19:30:48.013337 32762 net.cpp:165] Memory required for data: 10172660404
I0411 19:30:48.013342 32762 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0411 19:30:48.013350 32762 net.cpp:100] Creating Layer fc6_drop6_0_split
I0411 19:30:48.013353 32762 net.cpp:434] fc6_drop6_0_split <- fc6
I0411 19:30:48.013362 32762 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0411 19:30:48.013372 32762 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0411 19:30:48.013422 32762 net.cpp:150] Setting up fc6_drop6_0_split
I0411 19:30:48.013428 32762 net.cpp:157] Top shape: 1 4096 (4096)
I0411 19:30:48.013432 32762 net.cpp:157] Top shape: 1 4096 (4096)
I0411 19:30:48.013435 32762 net.cpp:165] Memory required for data: 10172693172
I0411 19:30:48.013440 32762 layer_factory.hpp:77] Creating layer cls_score
I0411 19:30:48.013453 32762 net.cpp:100] Creating Layer cls_score
I0411 19:30:48.013458 32762 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0411 19:30:48.013468 32762 net.cpp:408] cls_score -> cls_score
I0411 19:30:48.024248 32762 net.cpp:150] Setting up cls_score
I0411 19:30:48.024274 32762 net.cpp:157] Top shape: 1 201 (201)
I0411 19:30:48.024277 32762 net.cpp:165] Memory required for data: 10172693976
I0411 19:30:48.024287 32762 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0411 19:30:48.024297 32762 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0411 19:30:48.024302 32762 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0411 19:30:48.024308 32762 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0411 19:30:48.024318 32762 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0411 19:30:48.024394 32762 net.cpp:150] Setting up cls_score_cls_score_0_split
I0411 19:30:48.024400 32762 net.cpp:157] Top shape: 1 201 (201)
I0411 19:30:48.024405 32762 net.cpp:157] Top shape: 1 201 (201)
I0411 19:30:48.024407 32762 net.cpp:165] Memory required for data: 10172695584
I0411 19:30:48.024410 32762 layer_factory.hpp:77] Creating layer twin_pred
I0411 19:30:48.024418 32762 net.cpp:100] Creating Layer twin_pred
I0411 19:30:48.024422 32762 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0411 19:30:48.024430 32762 net.cpp:408] twin_pred -> twin_pred
I0411 19:30:48.039391 32762 net.cpp:150] Setting up twin_pred
I0411 19:30:48.039417 32762 net.cpp:157] Top shape: 1 402 (402)
I0411 19:30:48.039419 32762 net.cpp:165] Memory required for data: 10172697192
I0411 19:30:48.039430 32762 layer_factory.hpp:77] Creating layer loss_cls
I0411 19:30:48.039441 32762 net.cpp:100] Creating Layer loss_cls
I0411 19:30:48.039448 32762 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0411 19:30:48.039454 32762 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0411 19:30:48.039460 32762 net.cpp:408] loss_cls -> loss_cls
I0411 19:30:48.039471 32762 layer_factory.hpp:77] Creating layer loss_cls
I0411 19:30:48.039579 32762 net.cpp:150] Setting up loss_cls
I0411 19:30:48.039587 32762 net.cpp:157] Top shape: (1)
I0411 19:30:48.039589 32762 net.cpp:160]     with loss weight 1
I0411 19:30:48.039600 32762 net.cpp:165] Memory required for data: 10172697196
I0411 19:30:48.039603 32762 layer_factory.hpp:77] Creating layer loss_twin
I0411 19:30:48.039611 32762 net.cpp:100] Creating Layer loss_twin
I0411 19:30:48.039618 32762 net.cpp:434] loss_twin <- twin_pred
I0411 19:30:48.039623 32762 net.cpp:434] loss_twin <- twin_targets
I0411 19:30:48.039626 32762 net.cpp:434] loss_twin <- twin_inside_weights
I0411 19:30:48.039630 32762 net.cpp:434] loss_twin <- twin_outside_weights
I0411 19:30:48.039635 32762 net.cpp:408] loss_twin -> loss_twin
I0411 19:30:48.039732 32762 net.cpp:150] Setting up loss_twin
I0411 19:30:48.039738 32762 net.cpp:157] Top shape: (1)
I0411 19:30:48.039741 32762 net.cpp:160]     with loss weight 1
I0411 19:30:48.039746 32762 net.cpp:165] Memory required for data: 10172697200
I0411 19:30:48.039748 32762 layer_factory.hpp:77] Creating layer accuarcy
I0411 19:30:48.039757 32762 net.cpp:100] Creating Layer accuarcy
I0411 19:30:48.039762 32762 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0411 19:30:48.039767 32762 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0411 19:30:48.039772 32762 net.cpp:408] accuarcy -> accuarcy
I0411 19:30:48.039778 32762 net.cpp:150] Setting up accuarcy
I0411 19:30:48.039784 32762 net.cpp:157] Top shape: (1)
I0411 19:30:48.039788 32762 net.cpp:165] Memory required for data: 10172697204
I0411 19:30:48.039791 32762 net.cpp:228] accuarcy does not need backward computation.
I0411 19:30:48.039795 32762 net.cpp:226] loss_twin needs backward computation.
I0411 19:30:48.039799 32762 net.cpp:226] loss_cls needs backward computation.
I0411 19:30:48.039803 32762 net.cpp:226] twin_pred needs backward computation.
I0411 19:30:48.039808 32762 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0411 19:30:48.039813 32762 net.cpp:226] cls_score needs backward computation.
I0411 19:30:48.039818 32762 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0411 19:30:48.039821 32762 net.cpp:226] drop6 needs backward computation.
I0411 19:30:48.039825 32762 net.cpp:226] relu6 needs backward computation.
I0411 19:30:48.039829 32762 net.cpp:226] fc6 needs backward computation.
I0411 19:30:48.039834 32762 net.cpp:226] roi_pool5 needs backward computation.
I0411 19:30:48.039837 32762 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0411 19:30:48.039842 32762 net.cpp:226] roi-data needs backward computation.
I0411 19:30:48.039847 32762 net.cpp:226] proposal needs backward computation.
I0411 19:30:48.039851 32762 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0411 19:30:48.039855 32762 net.cpp:226] rpn_cls_prob needs backward computation.
I0411 19:30:48.039860 32762 net.cpp:228] rpn_accuarcy does not need backward computation.
I0411 19:30:48.039865 32762 net.cpp:226] rpn_loss_twin needs backward computation.
I0411 19:30:48.039870 32762 net.cpp:226] rpn_loss_cls needs backward computation.
I0411 19:30:48.039875 32762 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0411 19:30:48.039885 32762 net.cpp:226] rpn-data needs backward computation.
I0411 19:30:48.039894 32762 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0411 19:30:48.039899 32762 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0411 19:30:48.039906 32762 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0411 19:30:48.039911 32762 net.cpp:226] rpn_twin_pred needs backward computation.
I0411 19:30:48.039914 32762 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0411 19:30:48.039918 32762 net.cpp:226] rpn_cls_score needs backward computation.
I0411 19:30:48.039921 32762 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0411 19:30:48.039925 32762 net.cpp:226] rpn/output_pool needs backward computation.
I0411 19:30:48.039930 32762 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0411 19:30:48.039934 32762 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0411 19:30:48.039938 32762 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0411 19:30:48.039942 32762 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0411 19:30:48.039947 32762 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0411 19:30:48.039950 32762 net.cpp:226] relu5b needs backward computation.
I0411 19:30:48.039955 32762 net.cpp:226] conv5b needs backward computation.
I0411 19:30:48.039958 32762 net.cpp:226] relu5a needs backward computation.
I0411 19:30:48.039963 32762 net.cpp:226] conv5a needs backward computation.
I0411 19:30:48.039965 32762 net.cpp:226] pool4 needs backward computation.
I0411 19:30:48.039971 32762 net.cpp:226] relu4b needs backward computation.
I0411 19:30:48.039976 32762 net.cpp:226] conv4b needs backward computation.
I0411 19:30:48.039979 32762 net.cpp:226] relu4a needs backward computation.
I0411 19:30:48.039983 32762 net.cpp:226] conv4a needs backward computation.
I0411 19:30:48.039988 32762 net.cpp:226] pool3 needs backward computation.
I0411 19:30:48.039990 32762 net.cpp:226] relu3b needs backward computation.
I0411 19:30:48.039994 32762 net.cpp:226] conv3b needs backward computation.
I0411 19:30:48.039999 32762 net.cpp:226] relu3a needs backward computation.
I0411 19:30:48.040004 32762 net.cpp:226] conv3a needs backward computation.
I0411 19:30:48.040007 32762 net.cpp:228] pool2 does not need backward computation.
I0411 19:30:48.040010 32762 net.cpp:228] relu2a does not need backward computation.
I0411 19:30:48.040014 32762 net.cpp:228] conv2a does not need backward computation.
I0411 19:30:48.040019 32762 net.cpp:228] pool1 does not need backward computation.
I0411 19:30:48.040024 32762 net.cpp:228] relu1a does not need backward computation.
I0411 19:30:48.040026 32762 net.cpp:228] conv1a does not need backward computation.
I0411 19:30:48.040031 32762 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0411 19:30:48.040038 32762 net.cpp:228] data_data_0_split does not need backward computation.
I0411 19:30:48.040042 32762 net.cpp:228] data does not need backward computation.
I0411 19:30:48.040045 32762 net.cpp:270] This network produces output accuarcy
I0411 19:30:48.040050 32762 net.cpp:270] This network produces output loss_cls
I0411 19:30:48.040053 32762 net.cpp:270] This network produces output loss_twin
I0411 19:30:48.040056 32762 net.cpp:270] This network produces output rpn_accuarcy
I0411 19:30:48.040061 32762 net.cpp:270] This network produces output rpn_accuarcy_class
I0411 19:30:48.040066 32762 net.cpp:270] This network produces output rpn_cls_loss
I0411 19:30:48.040069 32762 net.cpp:270] This network produces output rpn_loss_twin
I0411 19:30:48.040107 32762 net.cpp:283] Network initialization done.
I0411 19:30:48.040226 32762 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0411 19:30:48.425146 32762 net.cpp:761] Ignoring source layer pool5
I0411 19:30:48.447474 32762 net.cpp:761] Ignoring source layer fc7
I0411 19:30:48.447492 32762 net.cpp:761] Ignoring source layer relu7
I0411 19:30:48.447495 32762 net.cpp:761] Ignoring source layer drop7
I0411 19:30:48.447499 32762 net.cpp:761] Ignoring source layer fc8-200
I0411 19:30:48.447501 32762 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
99
(array([0]), array([97]))
(array([[3.1250000e-02, 3.8569803e+02]], dtype=float32), array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 0.]], dtype=float32))
(1, 101)
[[3.1250000e-02 3.8569803e+02]]
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 95, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 135, in forward
    print(np.concatenate(blob1, blob2))
TypeError: only integer scalar arrays can be converted to a scalar index
Terminating BlobFetcher
