Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 01:13:28.025740 23713 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 01:13:28.025820 23713 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 01:13:28.026743 23713 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 01:13:28.027577 23713 layer_factory.hpp:77] Creating layer data
I0412 01:13:28.042229 23713 net.cpp:100] Creating Layer data
I0412 01:13:28.042299 23713 net.cpp:408] data -> data
I0412 01:13:28.042337 23713 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 01:13:28.123270 23713 net.cpp:150] Setting up data
I0412 01:13:28.123302 23713 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:13:28.123311 23713 net.cpp:157] Top shape: 1 3 (3)
I0412 01:13:28.123314 23713 net.cpp:165] Memory required for data: 115605516
I0412 01:13:28.123328 23713 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 01:13:28.123345 23713 net.cpp:100] Creating Layer data_data_0_split
I0412 01:13:28.123353 23713 net.cpp:434] data_data_0_split <- data
I0412 01:13:28.123366 23713 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 01:13:28.123380 23713 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 01:13:28.123445 23713 net.cpp:150] Setting up data_data_0_split
I0412 01:13:28.123456 23713 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:13:28.123463 23713 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:13:28.123467 23713 net.cpp:165] Memory required for data: 346816524
I0412 01:13:28.123472 23713 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 01:13:28.123483 23713 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 01:13:28.123492 23713 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 01:13:28.123502 23713 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 01:13:28.123512 23713 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 01:13:28.123562 23713 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 01:13:28.123571 23713 net.cpp:157] Top shape: 1 3 (3)
I0412 01:13:28.123577 23713 net.cpp:157] Top shape: 1 3 (3)
I0412 01:13:28.123581 23713 net.cpp:165] Memory required for data: 346816548
I0412 01:13:28.123586 23713 layer_factory.hpp:77] Creating layer conv1a
I0412 01:13:28.123603 23713 net.cpp:100] Creating Layer conv1a
I0412 01:13:28.123611 23713 net.cpp:434] conv1a <- data_data_0_split_0
I0412 01:13:28.123622 23713 net.cpp:408] conv1a -> conv1a
I0412 01:13:28.145285 23713 net.cpp:150] Setting up conv1a
I0412 01:13:28.145328 23713 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 01:13:28.145334 23713 net.cpp:165] Memory required for data: 2813067300
I0412 01:13:28.145359 23713 layer_factory.hpp:77] Creating layer relu1a
I0412 01:13:28.145378 23713 net.cpp:100] Creating Layer relu1a
I0412 01:13:28.145385 23713 net.cpp:434] relu1a <- conv1a
I0412 01:13:28.145395 23713 net.cpp:395] relu1a -> conv1a (in-place)
I0412 01:13:28.145409 23713 net.cpp:150] Setting up relu1a
I0412 01:13:28.145417 23713 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 01:13:28.145422 23713 net.cpp:165] Memory required for data: 5279318052
I0412 01:13:28.145428 23713 layer_factory.hpp:77] Creating layer pool1
I0412 01:13:28.145436 23713 net.cpp:100] Creating Layer pool1
I0412 01:13:28.145442 23713 net.cpp:434] pool1 <- conv1a
I0412 01:13:28.145449 23713 net.cpp:408] pool1 -> pool1
I0412 01:13:28.145570 23713 net.cpp:150] Setting up pool1
I0412 01:13:28.145579 23713 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 01:13:28.145586 23713 net.cpp:165] Memory required for data: 5895880740
I0412 01:13:28.145591 23713 layer_factory.hpp:77] Creating layer conv2a
I0412 01:13:28.145608 23713 net.cpp:100] Creating Layer conv2a
I0412 01:13:28.145615 23713 net.cpp:434] conv2a <- pool1
I0412 01:13:28.145622 23713 net.cpp:408] conv2a -> conv2a
I0412 01:13:28.171155 23713 net.cpp:150] Setting up conv2a
I0412 01:13:28.171245 23713 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 01:13:28.171267 23713 net.cpp:165] Memory required for data: 7129006116
I0412 01:13:28.171299 23713 layer_factory.hpp:77] Creating layer relu2a
I0412 01:13:28.171329 23713 net.cpp:100] Creating Layer relu2a
I0412 01:13:28.171346 23713 net.cpp:434] relu2a <- conv2a
I0412 01:13:28.171365 23713 net.cpp:395] relu2a -> conv2a (in-place)
I0412 01:13:28.171389 23713 net.cpp:150] Setting up relu2a
I0412 01:13:28.171406 23713 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 01:13:28.171422 23713 net.cpp:165] Memory required for data: 8362131492
I0412 01:13:28.171447 23713 layer_factory.hpp:77] Creating layer pool2
I0412 01:13:28.171471 23713 net.cpp:100] Creating Layer pool2
I0412 01:13:28.171486 23713 net.cpp:434] pool2 <- conv2a
I0412 01:13:28.171505 23713 net.cpp:408] pool2 -> pool2
I0412 01:13:28.171667 23713 net.cpp:150] Setting up pool2
I0412 01:13:28.171692 23713 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 01:13:28.171707 23713 net.cpp:165] Memory required for data: 8516272164
I0412 01:13:28.171720 23713 layer_factory.hpp:77] Creating layer conv3a
I0412 01:13:28.171746 23713 net.cpp:100] Creating Layer conv3a
I0412 01:13:28.171761 23713 net.cpp:434] conv3a <- pool2
I0412 01:13:28.171778 23713 net.cpp:408] conv3a -> conv3a
I0412 01:13:28.185580 23713 net.cpp:150] Setting up conv3a
I0412 01:13:28.185662 23713 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:13:28.185690 23713 net.cpp:165] Memory required for data: 8824553508
I0412 01:13:28.185720 23713 layer_factory.hpp:77] Creating layer relu3a
I0412 01:13:28.185750 23713 net.cpp:100] Creating Layer relu3a
I0412 01:13:28.185771 23713 net.cpp:434] relu3a <- conv3a
I0412 01:13:28.185799 23713 net.cpp:395] relu3a -> conv3a (in-place)
I0412 01:13:28.185829 23713 net.cpp:150] Setting up relu3a
I0412 01:13:28.185850 23713 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:13:28.185866 23713 net.cpp:165] Memory required for data: 9132834852
I0412 01:13:28.185884 23713 layer_factory.hpp:77] Creating layer conv3b
I0412 01:13:28.185914 23713 net.cpp:100] Creating Layer conv3b
I0412 01:13:28.185932 23713 net.cpp:434] conv3b <- conv3a
I0412 01:13:28.185950 23713 net.cpp:408] conv3b -> conv3b
I0412 01:13:28.213668 23713 net.cpp:150] Setting up conv3b
I0412 01:13:28.213732 23713 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:13:28.213739 23713 net.cpp:165] Memory required for data: 9441116196
I0412 01:13:28.213752 23713 layer_factory.hpp:77] Creating layer relu3b
I0412 01:13:28.213764 23713 net.cpp:100] Creating Layer relu3b
I0412 01:13:28.213770 23713 net.cpp:434] relu3b <- conv3b
I0412 01:13:28.213781 23713 net.cpp:395] relu3b -> conv3b (in-place)
I0412 01:13:28.213794 23713 net.cpp:150] Setting up relu3b
I0412 01:13:28.213802 23713 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:13:28.213809 23713 net.cpp:165] Memory required for data: 9749397540
I0412 01:13:28.213812 23713 layer_factory.hpp:77] Creating layer pool3
I0412 01:13:28.213820 23713 net.cpp:100] Creating Layer pool3
I0412 01:13:28.213826 23713 net.cpp:434] pool3 <- conv3b
I0412 01:13:28.213835 23713 net.cpp:408] pool3 -> pool3
I0412 01:13:28.213912 23713 net.cpp:150] Setting up pool3
I0412 01:13:28.213922 23713 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 01:13:28.213927 23713 net.cpp:165] Memory required for data: 9787932708
I0412 01:13:28.213933 23713 layer_factory.hpp:77] Creating layer conv4a
I0412 01:13:28.213950 23713 net.cpp:100] Creating Layer conv4a
I0412 01:13:28.213955 23713 net.cpp:434] conv4a <- pool3
I0412 01:13:28.213966 23713 net.cpp:408] conv4a -> conv4a
I0412 01:13:28.255491 23713 net.cpp:150] Setting up conv4a
I0412 01:13:28.255519 23713 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:13:28.255523 23713 net.cpp:165] Memory required for data: 9865003044
I0412 01:13:28.255542 23713 layer_factory.hpp:77] Creating layer relu4a
I0412 01:13:28.255553 23713 net.cpp:100] Creating Layer relu4a
I0412 01:13:28.255560 23713 net.cpp:434] relu4a <- conv4a
I0412 01:13:28.255566 23713 net.cpp:395] relu4a -> conv4a (in-place)
I0412 01:13:28.255576 23713 net.cpp:150] Setting up relu4a
I0412 01:13:28.255581 23713 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:13:28.255584 23713 net.cpp:165] Memory required for data: 9942073380
I0412 01:13:28.255587 23713 layer_factory.hpp:77] Creating layer conv4b
I0412 01:13:28.255602 23713 net.cpp:100] Creating Layer conv4b
I0412 01:13:28.255606 23713 net.cpp:434] conv4b <- conv4a
I0412 01:13:28.255611 23713 net.cpp:408] conv4b -> conv4b
I0412 01:13:28.323520 23713 net.cpp:150] Setting up conv4b
I0412 01:13:28.323557 23713 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:13:28.323565 23713 net.cpp:165] Memory required for data: 10019143716
I0412 01:13:28.323577 23713 layer_factory.hpp:77] Creating layer relu4b
I0412 01:13:28.323593 23713 net.cpp:100] Creating Layer relu4b
I0412 01:13:28.323626 23713 net.cpp:434] relu4b <- conv4b
I0412 01:13:28.323652 23713 net.cpp:395] relu4b -> conv4b (in-place)
I0412 01:13:28.323679 23713 net.cpp:150] Setting up relu4b
I0412 01:13:28.323690 23713 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:13:28.323695 23713 net.cpp:165] Memory required for data: 10096214052
I0412 01:13:28.323700 23713 layer_factory.hpp:77] Creating layer pool4
I0412 01:13:28.323712 23713 net.cpp:100] Creating Layer pool4
I0412 01:13:28.323719 23713 net.cpp:434] pool4 <- conv4b
I0412 01:13:28.323730 23713 net.cpp:408] pool4 -> pool4
I0412 01:13:28.323809 23713 net.cpp:150] Setting up pool4
I0412 01:13:28.323822 23713 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:13:28.323828 23713 net.cpp:165] Memory required for data: 10105847844
I0412 01:13:28.323833 23713 layer_factory.hpp:77] Creating layer conv5a
I0412 01:13:28.323850 23713 net.cpp:100] Creating Layer conv5a
I0412 01:13:28.323858 23713 net.cpp:434] conv5a <- pool4
I0412 01:13:28.323868 23713 net.cpp:408] conv5a -> conv5a
I0412 01:13:28.405856 23713 net.cpp:150] Setting up conv5a
I0412 01:13:28.405889 23713 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:13:28.405894 23713 net.cpp:165] Memory required for data: 10115481636
I0412 01:13:28.405905 23713 layer_factory.hpp:77] Creating layer relu5a
I0412 01:13:28.405916 23713 net.cpp:100] Creating Layer relu5a
I0412 01:13:28.405922 23713 net.cpp:434] relu5a <- conv5a
I0412 01:13:28.405931 23713 net.cpp:395] relu5a -> conv5a (in-place)
I0412 01:13:28.405942 23713 net.cpp:150] Setting up relu5a
I0412 01:13:28.405949 23713 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:13:28.405954 23713 net.cpp:165] Memory required for data: 10125115428
I0412 01:13:28.405959 23713 layer_factory.hpp:77] Creating layer conv5b
I0412 01:13:28.405973 23713 net.cpp:100] Creating Layer conv5b
I0412 01:13:28.405979 23713 net.cpp:434] conv5b <- conv5a
I0412 01:13:28.405987 23713 net.cpp:408] conv5b -> conv5b
I0412 01:13:28.484407 23713 net.cpp:150] Setting up conv5b
I0412 01:13:28.484480 23713 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:13:28.484508 23713 net.cpp:165] Memory required for data: 10134749220
I0412 01:13:28.484539 23713 layer_factory.hpp:77] Creating layer relu5b
I0412 01:13:28.484575 23713 net.cpp:100] Creating Layer relu5b
I0412 01:13:28.484599 23713 net.cpp:434] relu5b <- conv5b
I0412 01:13:28.484627 23713 net.cpp:395] relu5b -> conv5b (in-place)
I0412 01:13:28.484659 23713 net.cpp:150] Setting up relu5b
I0412 01:13:28.484686 23713 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:13:28.484709 23713 net.cpp:165] Memory required for data: 10144383012
I0412 01:13:28.484731 23713 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 01:13:28.484760 23713 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 01:13:28.484783 23713 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 01:13:28.484809 23713 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 01:13:28.484839 23713 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 01:13:28.484930 23713 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 01:13:28.484962 23713 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:13:28.484988 23713 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:13:28.485010 23713 net.cpp:165] Memory required for data: 10163650596
I0412 01:13:28.485033 23713 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 01:13:28.485069 23713 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 01:13:28.485093 23713 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 01:13:28.485121 23713 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 01:13:28.581197 23713 net.cpp:150] Setting up rpn_conv/3x3
I0412 01:13:28.581234 23713 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 01:13:28.581243 23713 net.cpp:165] Memory required for data: 10166796324
I0412 01:13:28.581270 23713 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 01:13:28.581290 23713 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 01:13:28.581297 23713 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 01:13:28.581308 23713 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 01:13:28.581321 23713 net.cpp:150] Setting up rpn_relu/3x3
I0412 01:13:28.581329 23713 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 01:13:28.581333 23713 net.cpp:165] Memory required for data: 10169942052
I0412 01:13:28.581337 23713 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 01:13:28.581358 23713 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 01:13:28.581364 23713 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 01:13:28.581372 23713 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 01:13:28.670023 23713 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 01:13:28.670055 23713 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 01:13:28.670060 23713 net.cpp:165] Memory required for data: 10170728484
I0412 01:13:28.670071 23713 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 01:13:28.670083 23713 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 01:13:28.670089 23713 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 01:13:28.670097 23713 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 01:13:28.670117 23713 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 01:13:28.670125 23713 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 01:13:28.670130 23713 net.cpp:165] Memory required for data: 10171514916
I0412 01:13:28.670133 23713 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 01:13:28.670145 23713 net.cpp:100] Creating Layer rpn/output_pool
I0412 01:13:28.670167 23713 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 01:13:28.670176 23713 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 01:13:28.670236 23713 net.cpp:150] Setting up rpn/output_pool
I0412 01:13:28.670246 23713 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:13:28.670250 23713 net.cpp:165] Memory required for data: 10171711524
I0412 01:13:28.670258 23713 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 01:13:28.670271 23713 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 01:13:28.670279 23713 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 01:13:28.670284 23713 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 01:13:28.670295 23713 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 01:13:28.670344 23713 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 01:13:28.670357 23713 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:13:28.670364 23713 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:13:28.670368 23713 net.cpp:165] Memory required for data: 10172104740
I0412 01:13:28.670373 23713 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 01:13:28.670388 23713 net.cpp:100] Creating Layer rpn_cls_score
I0412 01:13:28.670395 23713 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 01:13:28.670403 23713 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 01:13:28.670963 23713 net.cpp:150] Setting up rpn_cls_score
I0412 01:13:28.670974 23713 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:13:28.670979 23713 net.cpp:165] Memory required for data: 10172133156
I0412 01:13:28.670987 23713 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 01:13:28.670996 23713 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 01:13:28.671003 23713 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 01:13:28.671011 23713 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 01:13:28.671020 23713 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 01:13:28.671083 23713 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 01:13:28.671092 23713 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:13:28.671097 23713 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:13:28.671103 23713 net.cpp:165] Memory required for data: 10172189988
I0412 01:13:28.671108 23713 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 01:13:28.671135 23713 net.cpp:100] Creating Layer rpn_twin_pred
I0412 01:13:28.671140 23713 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 01:13:28.671149 23713 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 01:13:28.671694 23713 net.cpp:150] Setting up rpn_twin_pred
I0412 01:13:28.671705 23713 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:13:28.671710 23713 net.cpp:165] Memory required for data: 10172218404
I0412 01:13:28.671718 23713 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:13:28.671726 23713 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:13:28.671730 23713 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 01:13:28.671742 23713 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 01:13:28.671752 23713 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 01:13:28.671806 23713 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:13:28.671815 23713 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:13:28.671821 23713 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:13:28.671825 23713 net.cpp:165] Memory required for data: 10172275236
I0412 01:13:28.671829 23713 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 01:13:28.671840 23713 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 01:13:28.671854 23713 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 01:13:28.671865 23713 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 01:13:28.671906 23713 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 01:13:28.671914 23713 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:13:28.671917 23713 net.cpp:165] Memory required for data: 10172303652
I0412 01:13:28.671922 23713 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:13:28.671933 23713 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:13:28.671941 23713 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 01:13:28.671960 23713 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 01:13:28.671975 23713 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 01:13:28.671983 23713 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 01:13:28.672045 23713 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:13:28.672055 23713 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:13:28.672060 23713 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:13:28.672065 23713 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:13:28.672072 23713 net.cpp:165] Memory required for data: 10172388900
I0412 01:13:28.672078 23713 layer_factory.hpp:77] Creating layer rpn-data
I0412 01:13:28.672500 23713 net.cpp:100] Creating Layer rpn-data
I0412 01:13:28.672513 23713 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 01:13:28.672519 23713 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 01:13:28.672526 23713 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 01:13:28.672535 23713 net.cpp:408] rpn-data -> rpn_labels
I0412 01:13:28.672546 23713 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 01:13:28.672555 23713 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 01:13:28.672564 23713 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 01:13:28.674837 23713 net.cpp:150] Setting up rpn-data
I0412 01:13:28.674854 23713 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:13:28.674860 23713 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:13:28.674866 23713 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:13:28.674873 23713 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:13:28.674877 23713 net.cpp:165] Memory required for data: 10172488356
I0412 01:13:28.674882 23713 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 01:13:28.674891 23713 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 01:13:28.674896 23713 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 01:13:28.674904 23713 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 01:13:28.674929 23713 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 01:13:28.674983 23713 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 01:13:28.674994 23713 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:13:28.675004 23713 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:13:28.675014 23713 net.cpp:165] Memory required for data: 10172516772
I0412 01:13:28.675020 23713 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 01:13:28.675032 23713 net.cpp:100] Creating Layer rpn_loss_cls
I0412 01:13:28.675041 23713 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 01:13:28.675050 23713 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 01:13:28.675065 23713 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 01:13:28.675078 23713 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 01:13:28.675205 23713 net.cpp:150] Setting up rpn_loss_cls
I0412 01:13:28.675218 23713 net.cpp:157] Top shape: (1)
I0412 01:13:28.675223 23713 net.cpp:160]     with loss weight 1
I0412 01:13:28.675240 23713 net.cpp:165] Memory required for data: 10172516776
I0412 01:13:28.675246 23713 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 01:13:28.675258 23713 net.cpp:100] Creating Layer rpn_loss_twin
I0412 01:13:28.675266 23713 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 01:13:28.675272 23713 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 01:13:28.675278 23713 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 01:13:28.675288 23713 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 01:13:28.675299 23713 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 01:13:28.675407 23713 net.cpp:150] Setting up rpn_loss_twin
I0412 01:13:28.675417 23713 net.cpp:157] Top shape: (1)
I0412 01:13:28.675420 23713 net.cpp:160]     with loss weight 1
I0412 01:13:28.675428 23713 net.cpp:165] Memory required for data: 10172516780
I0412 01:13:28.675437 23713 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 01:13:28.675449 23713 net.cpp:100] Creating Layer rpn_accuarcy
I0412 01:13:28.675458 23713 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 01:13:28.675465 23713 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 01:13:28.675474 23713 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 01:13:28.675483 23713 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 01:13:28.675534 23713 net.cpp:150] Setting up rpn_accuarcy
I0412 01:13:28.675544 23713 net.cpp:157] Top shape: (1)
I0412 01:13:28.675549 23713 net.cpp:157] Top shape: 2 (2)
I0412 01:13:28.675561 23713 net.cpp:165] Memory required for data: 10172516792
I0412 01:13:28.675572 23713 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 01:13:28.675582 23713 net.cpp:100] Creating Layer rpn_cls_prob
I0412 01:13:28.675593 23713 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 01:13:28.675602 23713 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 01:13:28.675689 23713 net.cpp:150] Setting up rpn_cls_prob
I0412 01:13:28.675700 23713 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:13:28.675706 23713 net.cpp:165] Memory required for data: 10172545208
I0412 01:13:28.675712 23713 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 01:13:28.675721 23713 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 01:13:28.675726 23713 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 01:13:28.675734 23713 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 01:13:28.675771 23713 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 01:13:28.675781 23713 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:13:28.675786 23713 net.cpp:165] Memory required for data: 10172573624
I0412 01:13:28.675791 23713 layer_factory.hpp:77] Creating layer proposal
I0412 01:13:28.676345 23713 net.cpp:100] Creating Layer proposal
I0412 01:13:28.676362 23713 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 01:13:28.676371 23713 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 01:13:28.676383 23713 net.cpp:408] proposal -> rpn_rois
I0412 01:13:28.680570 23713 net.cpp:150] Setting up proposal
I0412 01:13:28.680586 23713 net.cpp:157] Top shape: 1 3 (3)
I0412 01:13:28.680591 23713 net.cpp:165] Memory required for data: 10172573636
I0412 01:13:28.680598 23713 layer_factory.hpp:77] Creating layer roi-data
I0412 01:13:28.680727 23713 net.cpp:100] Creating Layer roi-data
I0412 01:13:28.680737 23713 net.cpp:434] roi-data <- rpn_rois
I0412 01:13:28.680744 23713 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 01:13:28.680752 23713 net.cpp:408] roi-data -> rois
I0412 01:13:28.680761 23713 net.cpp:408] roi-data -> labels
I0412 01:13:28.680770 23713 net.cpp:408] roi-data -> twin_targets
I0412 01:13:28.680781 23713 net.cpp:408] roi-data -> twin_inside_weights
I0412 01:13:28.680790 23713 net.cpp:408] roi-data -> twin_outside_weights
I0412 01:13:28.681229 23713 net.cpp:150] Setting up roi-data
I0412 01:13:28.681246 23713 net.cpp:157] Top shape: 1 3 (3)
I0412 01:13:28.681253 23713 net.cpp:157] Top shape: 1 1 (1)
I0412 01:13:28.681258 23713 net.cpp:157] Top shape: 1 402 (402)
I0412 01:13:28.681263 23713 net.cpp:157] Top shape: 1 402 (402)
I0412 01:13:28.681268 23713 net.cpp:157] Top shape: 1 402 (402)
I0412 01:13:28.681272 23713 net.cpp:165] Memory required for data: 10172578476
I0412 01:13:28.681278 23713 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 01:13:28.681285 23713 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 01:13:28.681291 23713 net.cpp:434] labels_roi-data_1_split <- labels
I0412 01:13:28.681299 23713 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 01:13:28.681308 23713 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 01:13:28.681368 23713 net.cpp:150] Setting up labels_roi-data_1_split
I0412 01:13:28.681381 23713 net.cpp:157] Top shape: 1 1 (1)
I0412 01:13:28.681386 23713 net.cpp:157] Top shape: 1 1 (1)
I0412 01:13:28.681391 23713 net.cpp:165] Memory required for data: 10172578484
I0412 01:13:28.681396 23713 layer_factory.hpp:77] Creating layer roi_pool5
I0412 01:13:28.681404 23713 net.cpp:100] Creating Layer roi_pool5
I0412 01:13:28.681411 23713 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 01:13:28.681416 23713 net.cpp:434] roi_pool5 <- rois
I0412 01:13:28.681426 23713 net.cpp:408] roi_pool5 -> pool5
I0412 01:13:28.681433 23713 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 01:13:28.681444 23713 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 01:13:28.681509 23713 net.cpp:150] Setting up roi_pool5
I0412 01:13:28.681519 23713 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 01:13:28.681525 23713 net.cpp:165] Memory required for data: 10172611252
I0412 01:13:28.681529 23713 layer_factory.hpp:77] Creating layer fc6
I0412 01:13:28.681543 23713 net.cpp:100] Creating Layer fc6
I0412 01:13:28.681550 23713 net.cpp:434] fc6 <- pool5
I0412 01:13:28.681556 23713 net.cpp:408] fc6 -> fc6
I0412 01:13:29.069697 23713 net.cpp:150] Setting up fc6
I0412 01:13:29.069736 23713 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:13:29.069742 23713 net.cpp:165] Memory required for data: 10172627636
I0412 01:13:29.069757 23713 layer_factory.hpp:77] Creating layer relu6
I0412 01:13:29.069775 23713 net.cpp:100] Creating Layer relu6
I0412 01:13:29.069787 23713 net.cpp:434] relu6 <- fc6
I0412 01:13:29.069800 23713 net.cpp:395] relu6 -> fc6 (in-place)
I0412 01:13:29.069815 23713 net.cpp:150] Setting up relu6
I0412 01:13:29.069824 23713 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:13:29.069833 23713 net.cpp:165] Memory required for data: 10172644020
I0412 01:13:29.069855 23713 layer_factory.hpp:77] Creating layer drop6
I0412 01:13:29.069870 23713 net.cpp:100] Creating Layer drop6
I0412 01:13:29.069877 23713 net.cpp:434] drop6 <- fc6
I0412 01:13:29.069885 23713 net.cpp:395] drop6 -> fc6 (in-place)
I0412 01:13:29.069944 23713 net.cpp:150] Setting up drop6
I0412 01:13:29.069959 23713 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:13:29.069964 23713 net.cpp:165] Memory required for data: 10172660404
I0412 01:13:29.069969 23713 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 01:13:29.069979 23713 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 01:13:29.069989 23713 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 01:13:29.070001 23713 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 01:13:29.070017 23713 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 01:13:29.070096 23713 net.cpp:150] Setting up fc6_drop6_0_split
I0412 01:13:29.070108 23713 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:13:29.070116 23713 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:13:29.070122 23713 net.cpp:165] Memory required for data: 10172693172
I0412 01:13:29.070127 23713 layer_factory.hpp:77] Creating layer cls_score
I0412 01:13:29.070142 23713 net.cpp:100] Creating Layer cls_score
I0412 01:13:29.070152 23713 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 01:13:29.070163 23713 net.cpp:408] cls_score -> cls_score
I0412 01:13:29.081759 23713 net.cpp:150] Setting up cls_score
I0412 01:13:29.081792 23713 net.cpp:157] Top shape: 1 201 (201)
I0412 01:13:29.081796 23713 net.cpp:165] Memory required for data: 10172693976
I0412 01:13:29.081810 23713 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 01:13:29.081827 23713 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 01:13:29.081835 23713 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 01:13:29.081845 23713 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 01:13:29.081857 23713 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 01:13:29.081924 23713 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 01:13:29.081935 23713 net.cpp:157] Top shape: 1 201 (201)
I0412 01:13:29.081948 23713 net.cpp:157] Top shape: 1 201 (201)
I0412 01:13:29.081953 23713 net.cpp:165] Memory required for data: 10172695584
I0412 01:13:29.081959 23713 layer_factory.hpp:77] Creating layer twin_pred
I0412 01:13:29.081970 23713 net.cpp:100] Creating Layer twin_pred
I0412 01:13:29.081976 23713 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 01:13:29.082000 23713 net.cpp:408] twin_pred -> twin_pred
I0412 01:13:29.104234 23713 net.cpp:150] Setting up twin_pred
I0412 01:13:29.104311 23713 net.cpp:157] Top shape: 1 402 (402)
I0412 01:13:29.104362 23713 net.cpp:165] Memory required for data: 10172697192
I0412 01:13:29.104390 23713 layer_factory.hpp:77] Creating layer loss_cls
I0412 01:13:29.104430 23713 net.cpp:100] Creating Layer loss_cls
I0412 01:13:29.104456 23713 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 01:13:29.104480 23713 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 01:13:29.104512 23713 net.cpp:408] loss_cls -> loss_cls
I0412 01:13:29.104542 23713 layer_factory.hpp:77] Creating layer loss_cls
I0412 01:13:29.104745 23713 net.cpp:150] Setting up loss_cls
I0412 01:13:29.104768 23713 net.cpp:157] Top shape: (1)
I0412 01:13:29.104784 23713 net.cpp:160]     with loss weight 1
I0412 01:13:29.104813 23713 net.cpp:165] Memory required for data: 10172697196
I0412 01:13:29.104830 23713 layer_factory.hpp:77] Creating layer loss_twin
I0412 01:13:29.104861 23713 net.cpp:100] Creating Layer loss_twin
I0412 01:13:29.104897 23713 net.cpp:434] loss_twin <- twin_pred
I0412 01:13:29.104918 23713 net.cpp:434] loss_twin <- twin_targets
I0412 01:13:29.104943 23713 net.cpp:434] loss_twin <- twin_inside_weights
I0412 01:13:29.104962 23713 net.cpp:434] loss_twin <- twin_outside_weights
I0412 01:13:29.104986 23713 net.cpp:408] loss_twin -> loss_twin
I0412 01:13:29.105165 23713 net.cpp:150] Setting up loss_twin
I0412 01:13:29.105198 23713 net.cpp:157] Top shape: (1)
I0412 01:13:29.105218 23713 net.cpp:160]     with loss weight 1
I0412 01:13:29.105239 23713 net.cpp:165] Memory required for data: 10172697200
I0412 01:13:29.105255 23713 layer_factory.hpp:77] Creating layer accuarcy
I0412 01:13:29.105274 23713 net.cpp:100] Creating Layer accuarcy
I0412 01:13:29.105300 23713 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 01:13:29.105317 23713 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 01:13:29.105343 23713 net.cpp:408] accuarcy -> accuarcy
I0412 01:13:29.105367 23713 net.cpp:150] Setting up accuarcy
I0412 01:13:29.105391 23713 net.cpp:157] Top shape: (1)
I0412 01:13:29.105410 23713 net.cpp:165] Memory required for data: 10172697204
I0412 01:13:29.105438 23713 net.cpp:228] accuarcy does not need backward computation.
I0412 01:13:29.105458 23713 net.cpp:226] loss_twin needs backward computation.
I0412 01:13:29.105476 23713 net.cpp:226] loss_cls needs backward computation.
I0412 01:13:29.105492 23713 net.cpp:226] twin_pred needs backward computation.
I0412 01:13:29.105507 23713 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 01:13:29.105521 23713 net.cpp:226] cls_score needs backward computation.
I0412 01:13:29.105545 23713 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 01:13:29.105561 23713 net.cpp:226] drop6 needs backward computation.
I0412 01:13:29.105576 23713 net.cpp:226] relu6 needs backward computation.
I0412 01:13:29.105592 23713 net.cpp:226] fc6 needs backward computation.
I0412 01:13:29.105608 23713 net.cpp:226] roi_pool5 needs backward computation.
I0412 01:13:29.105631 23713 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 01:13:29.105651 23713 net.cpp:226] roi-data needs backward computation.
I0412 01:13:29.105672 23713 net.cpp:226] proposal needs backward computation.
I0412 01:13:29.105691 23713 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 01:13:29.105707 23713 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 01:13:29.105731 23713 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 01:13:29.105749 23713 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 01:13:29.105768 23713 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 01:13:29.105787 23713 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 01:13:29.105800 23713 net.cpp:226] rpn-data needs backward computation.
I0412 01:13:29.105826 23713 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 01:13:29.105847 23713 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 01:13:29.105870 23713 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 01:13:29.105887 23713 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 01:13:29.105902 23713 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 01:13:29.105928 23713 net.cpp:226] rpn_cls_score needs backward computation.
I0412 01:13:29.105944 23713 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 01:13:29.105959 23713 net.cpp:226] rpn/output_pool needs backward computation.
I0412 01:13:29.105974 23713 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 01:13:29.105988 23713 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 01:13:29.106003 23713 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 01:13:29.106024 23713 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 01:13:29.106040 23713 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 01:13:29.106060 23713 net.cpp:226] relu5b needs backward computation.
I0412 01:13:29.106079 23713 net.cpp:226] conv5b needs backward computation.
I0412 01:13:29.106094 23713 net.cpp:226] relu5a needs backward computation.
I0412 01:13:29.106111 23713 net.cpp:226] conv5a needs backward computation.
I0412 01:13:29.106134 23713 net.cpp:226] pool4 needs backward computation.
I0412 01:13:29.106153 23713 net.cpp:226] relu4b needs backward computation.
I0412 01:13:29.106173 23713 net.cpp:226] conv4b needs backward computation.
I0412 01:13:29.106190 23713 net.cpp:226] relu4a needs backward computation.
I0412 01:13:29.106207 23713 net.cpp:226] conv4a needs backward computation.
I0412 01:13:29.106230 23713 net.cpp:226] pool3 needs backward computation.
I0412 01:13:29.106251 23713 net.cpp:226] relu3b needs backward computation.
I0412 01:13:29.106271 23713 net.cpp:226] conv3b needs backward computation.
I0412 01:13:29.106290 23713 net.cpp:226] relu3a needs backward computation.
I0412 01:13:29.106310 23713 net.cpp:226] conv3a needs backward computation.
I0412 01:13:29.106330 23713 net.cpp:228] pool2 does not need backward computation.
I0412 01:13:29.106350 23713 net.cpp:228] relu2a does not need backward computation.
I0412 01:13:29.106379 23713 net.cpp:228] conv2a does not need backward computation.
I0412 01:13:29.106400 23713 net.cpp:228] pool1 does not need backward computation.
I0412 01:13:29.106418 23713 net.cpp:228] relu1a does not need backward computation.
I0412 01:13:29.106447 23713 net.cpp:228] conv1a does not need backward computation.
I0412 01:13:29.106467 23713 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 01:13:29.106498 23713 net.cpp:228] data_data_0_split does not need backward computation.
I0412 01:13:29.106519 23713 net.cpp:228] data does not need backward computation.
I0412 01:13:29.106540 23713 net.cpp:270] This network produces output accuarcy
I0412 01:13:29.106559 23713 net.cpp:270] This network produces output loss_cls
I0412 01:13:29.106580 23713 net.cpp:270] This network produces output loss_twin
I0412 01:13:29.106607 23713 net.cpp:270] This network produces output rpn_accuarcy
I0412 01:13:29.106627 23713 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 01:13:29.106647 23713 net.cpp:270] This network produces output rpn_cls_loss
I0412 01:13:29.106667 23713 net.cpp:270] This network produces output rpn_loss_twin
I0412 01:13:29.106742 23713 net.cpp:283] Network initialization done.
I0412 01:13:29.106968 23713 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 01:13:29.283895 23713 net.cpp:761] Ignoring source layer pool5
I0412 01:13:29.312413 23713 net.cpp:761] Ignoring source layer fc7
I0412 01:13:29.312479 23713 net.cpp:761] Ignoring source layer relu7
I0412 01:13:29.312492 23713 net.cpp:761] Ignoring source layer drop7
I0412 01:13:29.312512 23713 net.cpp:761] Ignoring source layer fc8-200
I0412 01:13:29.312528 23713 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
F0412 01:13:29.335098 23713 syncedmem.cpp:56] Check failed: error == cudaSuccess (2 vs. 0)  out of memory
*** Check failure stack trace: ***
99
(array([0]), array([97]))
99
(array([0]), array([97]))
99
(array([0]), array([97]))
99
(array([0]), array([97]))
99
(array([0]), array([97]))
