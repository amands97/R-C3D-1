Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=0, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 0,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
print done
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}]
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 17:40:58.797904 15508 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 17:40:58.797979 15508 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 17:40:58.798878 15508 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 17:40:58.799971 15508 layer_factory.hpp:77] Creating layer data
I0412 17:40:58.813323 15508 net.cpp:100] Creating Layer data
I0412 17:40:58.813400 15508 net.cpp:408] data -> data
I0412 17:40:58.813426 15508 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 17:40:58.843471 15508 net.cpp:150] Setting up data
I0412 17:40:58.843593 15508 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 17:40:58.843636 15508 net.cpp:157] Top shape: 1 3 (3)
I0412 17:40:58.843664 15508 net.cpp:165] Memory required for data: 115605516
I0412 17:40:58.843696 15508 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 17:40:58.843744 15508 net.cpp:100] Creating Layer data_data_0_split
I0412 17:40:58.843798 15508 net.cpp:434] data_data_0_split <- data
I0412 17:40:58.843842 15508 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 17:40:58.843891 15508 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 17:40:58.844003 15508 net.cpp:150] Setting up data_data_0_split
I0412 17:40:58.844108 15508 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 17:40:58.844147 15508 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 17:40:58.844179 15508 net.cpp:165] Memory required for data: 346816524
I0412 17:40:58.844207 15508 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 17:40:58.844236 15508 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 17:40:58.844281 15508 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 17:40:58.844321 15508 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 17:40:58.844467 15508 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 17:40:58.844542 15508 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 17:40:58.844611 15508 net.cpp:157] Top shape: 1 3 (3)
I0412 17:40:58.844640 15508 net.cpp:157] Top shape: 1 3 (3)
I0412 17:40:58.844666 15508 net.cpp:165] Memory required for data: 346816548
I0412 17:40:58.844689 15508 layer_factory.hpp:77] Creating layer conv1a
I0412 17:40:58.844740 15508 net.cpp:100] Creating Layer conv1a
I0412 17:40:58.844804 15508 net.cpp:434] conv1a <- data_data_0_split_0
I0412 17:40:58.844838 15508 net.cpp:408] conv1a -> conv1a
I0412 17:40:58.883975 15508 net.cpp:150] Setting up conv1a
I0412 17:40:58.886792 15508 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 17:40:58.886885 15508 net.cpp:165] Memory required for data: 2813067300
I0412 17:40:58.886953 15508 layer_factory.hpp:77] Creating layer relu1a
I0412 17:40:58.887032 15508 net.cpp:100] Creating Layer relu1a
I0412 17:40:58.887094 15508 net.cpp:434] relu1a <- conv1a
I0412 17:40:58.887150 15508 net.cpp:395] relu1a -> conv1a (in-place)
I0412 17:40:58.887212 15508 net.cpp:150] Setting up relu1a
I0412 17:40:58.887271 15508 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 17:40:58.887318 15508 net.cpp:165] Memory required for data: 5279318052
I0412 17:40:58.887365 15508 layer_factory.hpp:77] Creating layer pool1
I0412 17:40:58.887418 15508 net.cpp:100] Creating Layer pool1
I0412 17:40:58.887488 15508 net.cpp:434] pool1 <- conv1a
I0412 17:40:58.887547 15508 net.cpp:408] pool1 -> pool1
I0412 17:40:58.887677 15508 net.cpp:150] Setting up pool1
I0412 17:40:58.887814 15508 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 17:40:58.887882 15508 net.cpp:165] Memory required for data: 5895880740
I0412 17:40:58.887956 15508 layer_factory.hpp:77] Creating layer conv2a
I0412 17:40:58.888016 15508 net.cpp:100] Creating Layer conv2a
I0412 17:40:58.888083 15508 net.cpp:434] conv2a <- pool1
I0412 17:40:58.888142 15508 net.cpp:408] conv2a -> conv2a
I0412 17:40:58.903753 15508 net.cpp:150] Setting up conv2a
I0412 17:40:58.905333 15508 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 17:40:58.905429 15508 net.cpp:165] Memory required for data: 7129006116
I0412 17:40:58.905496 15508 layer_factory.hpp:77] Creating layer relu2a
I0412 17:40:58.905568 15508 net.cpp:100] Creating Layer relu2a
I0412 17:40:58.905628 15508 net.cpp:434] relu2a <- conv2a
I0412 17:40:58.905683 15508 net.cpp:395] relu2a -> conv2a (in-place)
I0412 17:40:58.905745 15508 net.cpp:150] Setting up relu2a
I0412 17:40:58.905812 15508 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 17:40:58.905861 15508 net.cpp:165] Memory required for data: 8362131492
I0412 17:40:58.905908 15508 layer_factory.hpp:77] Creating layer pool2
I0412 17:40:58.905966 15508 net.cpp:100] Creating Layer pool2
I0412 17:40:58.906025 15508 net.cpp:434] pool2 <- conv2a
I0412 17:40:58.906078 15508 net.cpp:408] pool2 -> pool2
I0412 17:40:58.906191 15508 net.cpp:150] Setting up pool2
I0412 17:40:58.906311 15508 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 17:40:58.906373 15508 net.cpp:165] Memory required for data: 8516272164
I0412 17:40:58.906421 15508 layer_factory.hpp:77] Creating layer conv3a
I0412 17:40:58.906479 15508 net.cpp:100] Creating Layer conv3a
I0412 17:40:58.906540 15508 net.cpp:434] conv3a <- pool2
I0412 17:40:58.906596 15508 net.cpp:408] conv3a -> conv3a
I0412 17:40:58.931059 15508 net.cpp:150] Setting up conv3a
I0412 17:40:58.931654 15508 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 17:40:58.931749 15508 net.cpp:165] Memory required for data: 8824553508
I0412 17:40:58.931826 15508 layer_factory.hpp:77] Creating layer relu3a
I0412 17:40:58.931908 15508 net.cpp:100] Creating Layer relu3a
I0412 17:40:58.931987 15508 net.cpp:434] relu3a <- conv3a
I0412 17:40:58.932049 15508 net.cpp:395] relu3a -> conv3a (in-place)
I0412 17:40:58.932119 15508 net.cpp:150] Setting up relu3a
I0412 17:40:58.932181 15508 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 17:40:58.932229 15508 net.cpp:165] Memory required for data: 9132834852
I0412 17:40:58.932276 15508 layer_factory.hpp:77] Creating layer conv3b
I0412 17:40:58.932394 15508 net.cpp:100] Creating Layer conv3b
I0412 17:40:58.932458 15508 net.cpp:434] conv3b <- conv3a
I0412 17:40:58.932510 15508 net.cpp:408] conv3b -> conv3b
I0412 17:40:59.054723 15508 net.cpp:150] Setting up conv3b
I0412 17:40:59.059018 15508 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 17:40:59.059223 15508 net.cpp:165] Memory required for data: 9441116196
I0412 17:40:59.059325 15508 layer_factory.hpp:77] Creating layer relu3b
I0412 17:40:59.059465 15508 net.cpp:100] Creating Layer relu3b
I0412 17:40:59.059592 15508 net.cpp:434] relu3b <- conv3b
I0412 17:40:59.059689 15508 net.cpp:395] relu3b -> conv3b (in-place)
I0412 17:40:59.059808 15508 net.cpp:150] Setting up relu3b
I0412 17:40:59.059939 15508 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 17:40:59.060032 15508 net.cpp:165] Memory required for data: 9749397540
I0412 17:40:59.060112 15508 layer_factory.hpp:77] Creating layer pool3
I0412 17:40:59.060202 15508 net.cpp:100] Creating Layer pool3
I0412 17:40:59.060590 15508 net.cpp:434] pool3 <- conv3b
I0412 17:40:59.060667 15508 net.cpp:408] pool3 -> pool3
I0412 17:40:59.060833 15508 net.cpp:150] Setting up pool3
I0412 17:40:59.061231 15508 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 17:40:59.061348 15508 net.cpp:165] Memory required for data: 9787932708
I0412 17:40:59.061431 15508 layer_factory.hpp:77] Creating layer conv4a
I0412 17:40:59.061527 15508 net.cpp:100] Creating Layer conv4a
I0412 17:40:59.061666 15508 net.cpp:434] conv4a <- pool3
I0412 17:40:59.061772 15508 net.cpp:408] conv4a -> conv4a
I0412 17:40:59.208400 15508 net.cpp:150] Setting up conv4a
I0412 17:40:59.208436 15508 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 17:40:59.208439 15508 net.cpp:165] Memory required for data: 9865003044
I0412 17:40:59.208459 15508 layer_factory.hpp:77] Creating layer relu4a
I0412 17:40:59.208472 15508 net.cpp:100] Creating Layer relu4a
I0412 17:40:59.208478 15508 net.cpp:434] relu4a <- conv4a
I0412 17:40:59.208487 15508 net.cpp:395] relu4a -> conv4a (in-place)
I0412 17:40:59.208497 15508 net.cpp:150] Setting up relu4a
I0412 17:40:59.208503 15508 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 17:40:59.208505 15508 net.cpp:165] Memory required for data: 9942073380
I0412 17:40:59.208509 15508 layer_factory.hpp:77] Creating layer conv4b
I0412 17:40:59.208528 15508 net.cpp:100] Creating Layer conv4b
I0412 17:40:59.208533 15508 net.cpp:434] conv4b <- conv4a
I0412 17:40:59.208539 15508 net.cpp:408] conv4b -> conv4b
I0412 17:40:59.624953 15508 net.cpp:150] Setting up conv4b
I0412 17:40:59.624994 15508 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 17:40:59.624999 15508 net.cpp:165] Memory required for data: 10019143716
I0412 17:40:59.625010 15508 layer_factory.hpp:77] Creating layer relu4b
I0412 17:40:59.625021 15508 net.cpp:100] Creating Layer relu4b
I0412 17:40:59.625027 15508 net.cpp:434] relu4b <- conv4b
I0412 17:40:59.625038 15508 net.cpp:395] relu4b -> conv4b (in-place)
I0412 17:40:59.625048 15508 net.cpp:150] Setting up relu4b
I0412 17:40:59.625053 15508 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 17:40:59.625057 15508 net.cpp:165] Memory required for data: 10096214052
I0412 17:40:59.625061 15508 layer_factory.hpp:77] Creating layer pool4
I0412 17:40:59.625068 15508 net.cpp:100] Creating Layer pool4
I0412 17:40:59.625072 15508 net.cpp:434] pool4 <- conv4b
I0412 17:40:59.625083 15508 net.cpp:408] pool4 -> pool4
I0412 17:40:59.625133 15508 net.cpp:150] Setting up pool4
I0412 17:40:59.625142 15508 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 17:40:59.625146 15508 net.cpp:165] Memory required for data: 10105847844
I0412 17:40:59.625150 15508 layer_factory.hpp:77] Creating layer conv5a
I0412 17:40:59.625162 15508 net.cpp:100] Creating Layer conv5a
I0412 17:40:59.625166 15508 net.cpp:434] conv5a <- pool4
I0412 17:40:59.625175 15508 net.cpp:408] conv5a -> conv5a
I0412 17:41:00.050802 15508 net.cpp:150] Setting up conv5a
I0412 17:41:00.068836 15508 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 17:41:00.068990 15508 net.cpp:165] Memory required for data: 10115481636
I0412 17:41:00.069059 15508 layer_factory.hpp:77] Creating layer relu5a
I0412 17:41:00.069142 15508 net.cpp:100] Creating Layer relu5a
I0412 17:41:00.069214 15508 net.cpp:434] relu5a <- conv5a
I0412 17:41:00.069278 15508 net.cpp:395] relu5a -> conv5a (in-place)
I0412 17:41:00.069351 15508 net.cpp:150] Setting up relu5a
I0412 17:41:00.069427 15508 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 17:41:00.069489 15508 net.cpp:165] Memory required for data: 10125115428
I0412 17:41:00.069543 15508 layer_factory.hpp:77] Creating layer conv5b
I0412 17:41:00.069612 15508 net.cpp:100] Creating Layer conv5b
I0412 17:41:00.069700 15508 net.cpp:434] conv5b <- conv5a
I0412 17:41:00.069761 15508 net.cpp:408] conv5b -> conv5b
I0412 17:41:00.242250 15508 net.cpp:150] Setting up conv5b
I0412 17:41:00.242286 15508 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 17:41:00.242291 15508 net.cpp:165] Memory required for data: 10134749220
I0412 17:41:00.242302 15508 layer_factory.hpp:77] Creating layer relu5b
I0412 17:41:00.242314 15508 net.cpp:100] Creating Layer relu5b
I0412 17:41:00.242319 15508 net.cpp:434] relu5b <- conv5b
I0412 17:41:00.242329 15508 net.cpp:395] relu5b -> conv5b (in-place)
I0412 17:41:00.242341 15508 net.cpp:150] Setting up relu5b
I0412 17:41:00.242346 15508 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 17:41:00.242348 15508 net.cpp:165] Memory required for data: 10144383012
I0412 17:41:00.242352 15508 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 17:41:00.242359 15508 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 17:41:00.242362 15508 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 17:41:00.242370 15508 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 17:41:00.242379 15508 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 17:41:00.242425 15508 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 17:41:00.242432 15508 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 17:41:00.242439 15508 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 17:41:00.242442 15508 net.cpp:165] Memory required for data: 10163650596
I0412 17:41:00.242446 15508 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 17:41:00.242460 15508 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 17:41:00.242465 15508 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 17:41:00.242475 15508 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 17:41:00.459627 15508 net.cpp:150] Setting up rpn_conv/3x3
I0412 17:41:00.459658 15508 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 17:41:00.459664 15508 net.cpp:165] Memory required for data: 10166796324
I0412 17:41:00.459684 15508 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 17:41:00.459697 15508 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 17:41:00.459704 15508 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 17:41:00.459712 15508 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 17:41:00.459722 15508 net.cpp:150] Setting up rpn_relu/3x3
I0412 17:41:00.459728 15508 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 17:41:00.459731 15508 net.cpp:165] Memory required for data: 10169942052
I0412 17:41:00.459735 15508 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 17:41:00.459749 15508 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 17:41:00.459754 15508 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 17:41:00.459763 15508 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 17:41:00.825938 15508 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 17:41:00.835861 15508 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 17:41:00.835944 15508 net.cpp:165] Memory required for data: 10170728484
I0412 17:41:00.836000 15508 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 17:41:00.836058 15508 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 17:41:00.836112 15508 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 17:41:00.836158 15508 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 17:41:00.836210 15508 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 17:41:00.836264 15508 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 17:41:00.836302 15508 net.cpp:165] Memory required for data: 10171514916
I0412 17:41:00.836365 15508 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 17:41:00.836414 15508 net.cpp:100] Creating Layer rpn/output_pool
I0412 17:41:00.836472 15508 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 17:41:00.836510 15508 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 17:41:00.836598 15508 net.cpp:150] Setting up rpn/output_pool
I0412 17:41:00.836737 15508 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 17:41:00.836777 15508 net.cpp:165] Memory required for data: 10171711524
I0412 17:41:00.836814 15508 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 17:41:00.836853 15508 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 17:41:00.836892 15508 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 17:41:00.836930 15508 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 17:41:00.836982 15508 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 17:41:00.837061 15508 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 17:41:00.837174 15508 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 17:41:00.837213 15508 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 17:41:00.837250 15508 net.cpp:165] Memory required for data: 10172104740
I0412 17:41:00.837291 15508 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 17:41:00.837335 15508 net.cpp:100] Creating Layer rpn_cls_score
I0412 17:41:00.837389 15508 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 17:41:00.837432 15508 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 17:41:00.838166 15508 net.cpp:150] Setting up rpn_cls_score
I0412 17:41:00.839593 15508 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 17:41:00.839680 15508 net.cpp:165] Memory required for data: 10172133156
I0412 17:41:00.839752 15508 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 17:41:00.839798 15508 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 17:41:00.839845 15508 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 17:41:00.839890 15508 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 17:41:00.839947 15508 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 17:41:00.840042 15508 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 17:41:00.840176 15508 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 17:41:00.840222 15508 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 17:41:00.840260 15508 net.cpp:165] Memory required for data: 10172189988
I0412 17:41:00.840294 15508 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 17:41:00.840374 15508 net.cpp:100] Creating Layer rpn_twin_pred
I0412 17:41:00.840441 15508 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 17:41:00.840486 15508 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 17:41:00.841233 15508 net.cpp:150] Setting up rpn_twin_pred
I0412 17:41:00.842703 15508 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 17:41:00.842777 15508 net.cpp:165] Memory required for data: 10172218404
I0412 17:41:00.842828 15508 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 17:41:00.842875 15508 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 17:41:00.842939 15508 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 17:41:00.842978 15508 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 17:41:00.843030 15508 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 17:41:00.843122 15508 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 17:41:00.843243 15508 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 17:41:00.843284 15508 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 17:41:00.843322 15508 net.cpp:165] Memory required for data: 10172275236
I0412 17:41:00.843353 15508 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 17:41:00.843396 15508 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 17:41:00.843451 15508 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 17:41:00.843489 15508 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 17:41:00.843564 15508 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 17:41:00.843655 15508 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 17:41:00.843694 15508 net.cpp:165] Memory required for data: 10172303652
I0412 17:41:00.843727 15508 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 17:41:00.843765 15508 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 17:41:00.843811 15508 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 17:41:00.843848 15508 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 17:41:00.843904 15508 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 17:41:00.843976 15508 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 17:41:00.844072 15508 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 17:41:00.844210 15508 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 17:41:00.844259 15508 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 17:41:00.844301 15508 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 17:41:00.844362 15508 net.cpp:165] Memory required for data: 10172388900
I0412 17:41:00.844383 15508 layer_factory.hpp:77] Creating layer rpn-data
I0412 17:41:00.844939 15508 net.cpp:100] Creating Layer rpn-data
I0412 17:41:00.846036 15508 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 17:41:00.846102 15508 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 17:41:00.846155 15508 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 17:41:00.846205 15508 net.cpp:408] rpn-data -> rpn_labels
I0412 17:41:00.846262 15508 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 17:41:00.846323 15508 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 17:41:00.846385 15508 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 17:41:00.850410 15508 net.cpp:150] Setting up rpn-data
I0412 17:41:00.856391 15508 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 17:41:00.856405 15508 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 17:41:00.856451 15508 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 17:41:00.856459 15508 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 17:41:00.856490 15508 net.cpp:165] Memory required for data: 10172488356
I0412 17:41:00.856523 15508 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 17:41:00.856577 15508 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 17:41:00.856586 15508 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 17:41:00.856639 15508 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 17:41:00.856680 15508 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 17:41:00.856755 15508 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 17:41:00.856765 15508 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 17:41:00.856818 15508 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 17:41:00.856825 15508 net.cpp:165] Memory required for data: 10172516772
I0412 17:41:00.856855 15508 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 17:41:00.856886 15508 net.cpp:100] Creating Layer rpn_loss_cls
I0412 17:41:00.856901 15508 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 17:41:00.856951 15508 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 17:41:00.856982 15508 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 17:41:00.857023 15508 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 17:41:00.857156 15508 net.cpp:150] Setting up rpn_loss_cls
I0412 17:41:00.857167 15508 net.cpp:157] Top shape: (1)
I0412 17:41:00.857200 15508 net.cpp:160]     with loss weight 1
I0412 17:41:00.857244 15508 net.cpp:165] Memory required for data: 10172516776
I0412 17:41:00.857273 15508 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 17:41:00.857327 15508 net.cpp:100] Creating Layer rpn_loss_twin
I0412 17:41:00.857342 15508 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 17:41:00.857393 15508 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 17:41:00.857403 15508 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 17:41:00.857455 15508 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 17:41:00.857488 15508 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 17:41:00.857597 15508 net.cpp:150] Setting up rpn_loss_twin
I0412 17:41:00.857609 15508 net.cpp:157] Top shape: (1)
I0412 17:41:00.857641 15508 net.cpp:160]     with loss weight 1
I0412 17:41:00.857669 15508 net.cpp:165] Memory required for data: 10172516780
I0412 17:41:00.857702 15508 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 17:41:00.857753 15508 net.cpp:100] Creating Layer rpn_accuarcy
I0412 17:41:00.857761 15508 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 17:41:00.857806 15508 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 17:41:00.857842 15508 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 17:41:00.857879 15508 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 17:41:00.857950 15508 net.cpp:150] Setting up rpn_accuarcy
I0412 17:41:00.857961 15508 net.cpp:157] Top shape: (1)
I0412 17:41:00.857996 15508 net.cpp:157] Top shape: 2 (2)
I0412 17:41:00.858026 15508 net.cpp:165] Memory required for data: 10172516792
I0412 17:41:00.858052 15508 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 17:41:00.858103 15508 net.cpp:100] Creating Layer rpn_cls_prob
I0412 17:41:00.858110 15508 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 17:41:00.858156 15508 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 17:41:00.858248 15508 net.cpp:150] Setting up rpn_cls_prob
I0412 17:41:00.858260 15508 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 17:41:00.858296 15508 net.cpp:165] Memory required for data: 10172545208
I0412 17:41:00.858326 15508 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 17:41:00.858379 15508 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 17:41:00.858388 15508 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 17:41:00.858443 15508 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 17:41:00.858500 15508 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 17:41:00.858515 15508 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 17:41:00.858547 15508 net.cpp:165] Memory required for data: 10172573624
I0412 17:41:00.858578 15508 layer_factory.hpp:77] Creating layer proposal
I0412 17:41:00.859334 15508 net.cpp:100] Creating Layer proposal
I0412 17:41:00.859347 15508 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 17:41:00.859417 15508 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 17:41:00.859457 15508 net.cpp:408] proposal -> rpn_rois
I0412 17:41:00.867424 15508 net.cpp:150] Setting up proposal
I0412 17:41:00.867440 15508 net.cpp:157] Top shape: 1 3 (3)
I0412 17:41:00.867486 15508 net.cpp:165] Memory required for data: 10172573636
I0412 17:41:00.867498 15508 layer_factory.hpp:77] Creating layer roi-data
I0412 17:41:00.867720 15508 net.cpp:100] Creating Layer roi-data
I0412 17:41:00.867733 15508 net.cpp:434] roi-data <- rpn_rois
I0412 17:41:00.867805 15508 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 17:41:00.868377 15508 net.cpp:408] roi-data -> rois
I0412 17:41:00.868450 15508 net.cpp:408] roi-data -> labels
I0412 17:41:00.868507 15508 net.cpp:408] roi-data -> twin_targets
I0412 17:41:00.868559 15508 net.cpp:408] roi-data -> twin_inside_weights
I0412 17:41:00.868610 15508 net.cpp:408] roi-data -> twin_outside_weights
I0412 17:41:00.869060 15508 net.cpp:150] Setting up roi-data
I0412 17:41:00.869074 15508 net.cpp:157] Top shape: 1 3 (3)
I0412 17:41:00.872372 15508 net.cpp:157] Top shape: 1 1 (1)
I0412 17:41:00.872447 15508 net.cpp:157] Top shape: 1 402 (402)
I0412 17:41:00.872459 15508 net.cpp:157] Top shape: 1 402 (402)
I0412 17:41:00.872548 15508 net.cpp:157] Top shape: 1 402 (402)
I0412 17:41:00.872557 15508 net.cpp:165] Memory required for data: 10172578476
I0412 17:41:00.872601 15508 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 17:41:00.872690 15508 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 17:41:00.872699 15508 net.cpp:434] labels_roi-data_1_split <- labels
I0412 17:41:00.872789 15508 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 17:41:00.872848 15508 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 17:41:00.872941 15508 net.cpp:150] Setting up labels_roi-data_1_split
I0412 17:41:00.872953 15508 net.cpp:157] Top shape: 1 1 (1)
I0412 17:41:00.873078 15508 net.cpp:157] Top shape: 1 1 (1)
I0412 17:41:00.873087 15508 net.cpp:165] Memory required for data: 10172578484
I0412 17:41:00.873131 15508 layer_factory.hpp:77] Creating layer roi_pool5
I0412 17:41:00.873216 15508 net.cpp:100] Creating Layer roi_pool5
I0412 17:41:00.873226 15508 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 17:41:00.873324 15508 net.cpp:434] roi_pool5 <- rois
I0412 17:41:00.873378 15508 net.cpp:408] roi_pool5 -> pool5
I0412 17:41:00.873435 15508 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 17:41:00.873447 15508 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 17:41:00.873576 15508 net.cpp:150] Setting up roi_pool5
I0412 17:41:00.873589 15508 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 17:41:00.873673 15508 net.cpp:165] Memory required for data: 10172611252
I0412 17:41:00.873729 15508 layer_factory.hpp:77] Creating layer fc6
I0412 17:41:00.873812 15508 net.cpp:100] Creating Layer fc6
I0412 17:41:00.873821 15508 net.cpp:434] fc6 <- pool5
I0412 17:41:00.873908 15508 net.cpp:408] fc6 -> fc6
I0412 17:41:02.308501 15508 net.cpp:150] Setting up fc6
I0412 17:41:02.309900 15508 net.cpp:157] Top shape: 1 4096 (4096)
I0412 17:41:02.309995 15508 net.cpp:165] Memory required for data: 10172627636
I0412 17:41:02.310061 15508 layer_factory.hpp:77] Creating layer relu6
I0412 17:41:02.310143 15508 net.cpp:100] Creating Layer relu6
I0412 17:41:02.310215 15508 net.cpp:434] relu6 <- fc6
I0412 17:41:02.310278 15508 net.cpp:395] relu6 -> fc6 (in-place)
I0412 17:41:02.310350 15508 net.cpp:150] Setting up relu6
I0412 17:41:02.310430 15508 net.cpp:157] Top shape: 1 4096 (4096)
I0412 17:41:02.310493 15508 net.cpp:165] Memory required for data: 10172644020
I0412 17:41:02.310546 15508 layer_factory.hpp:77] Creating layer drop6
I0412 17:41:02.310602 15508 net.cpp:100] Creating Layer drop6
I0412 17:41:02.310662 15508 net.cpp:434] drop6 <- fc6
I0412 17:41:02.310722 15508 net.cpp:395] drop6 -> fc6 (in-place)
I0412 17:41:02.310811 15508 net.cpp:150] Setting up drop6
I0412 17:41:02.310920 15508 net.cpp:157] Top shape: 1 4096 (4096)
I0412 17:41:02.310978 15508 net.cpp:165] Memory required for data: 10172660404
I0412 17:41:02.311030 15508 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 17:41:02.311084 15508 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 17:41:02.311139 15508 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 17:41:02.311189 15508 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 17:41:02.311255 15508 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 17:41:02.311368 15508 net.cpp:150] Setting up fc6_drop6_0_split
I0412 17:41:02.311508 15508 net.cpp:157] Top shape: 1 4096 (4096)
I0412 17:41:02.311580 15508 net.cpp:157] Top shape: 1 4096 (4096)
I0412 17:41:02.311635 15508 net.cpp:165] Memory required for data: 10172693172
I0412 17:41:02.311691 15508 layer_factory.hpp:77] Creating layer cls_score
I0412 17:41:02.311753 15508 net.cpp:100] Creating Layer cls_score
I0412 17:41:02.311820 15508 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 17:41:02.311873 15508 net.cpp:408] cls_score -> cls_score
I0412 17:41:02.325822 15508 net.cpp:150] Setting up cls_score
I0412 17:41:02.344256 15508 net.cpp:157] Top shape: 1 201 (201)
I0412 17:41:02.344528 15508 net.cpp:165] Memory required for data: 10172693976
I0412 17:41:02.344601 15508 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 17:41:02.344696 15508 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 17:41:02.344781 15508 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 17:41:02.344846 15508 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 17:41:02.344926 15508 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 17:41:02.345088 15508 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 17:41:02.345321 15508 net.cpp:157] Top shape: 1 201 (201)
I0412 17:41:02.345402 15508 net.cpp:157] Top shape: 1 201 (201)
I0412 17:41:02.345458 15508 net.cpp:165] Memory required for data: 10172695584
I0412 17:41:02.345512 15508 layer_factory.hpp:77] Creating layer twin_pred
I0412 17:41:02.345573 15508 net.cpp:100] Creating Layer twin_pred
I0412 17:41:02.345638 15508 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 17:41:02.345692 15508 net.cpp:408] twin_pred -> twin_pred
I0412 17:41:02.394186 15508 net.cpp:150] Setting up twin_pred
I0412 17:41:02.424432 15508 net.cpp:157] Top shape: 1 402 (402)
I0412 17:41:02.424722 15508 net.cpp:165] Memory required for data: 10172697192
I0412 17:41:02.424803 15508 layer_factory.hpp:77] Creating layer loss_cls
I0412 17:41:02.424918 15508 net.cpp:100] Creating Layer loss_cls
I0412 17:41:02.425035 15508 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 17:41:02.425112 15508 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 17:41:02.425196 15508 net.cpp:408] loss_cls -> loss_cls
I0412 17:41:02.425288 15508 layer_factory.hpp:77] Creating layer loss_cls
I0412 17:41:02.425523 15508 net.cpp:150] Setting up loss_cls
I0412 17:41:02.426008 15508 net.cpp:157] Top shape: (1)
I0412 17:41:02.426111 15508 net.cpp:160]     with loss weight 1
I0412 17:41:02.426220 15508 net.cpp:165] Memory required for data: 10172697196
I0412 17:41:02.426290 15508 layer_factory.hpp:77] Creating layer loss_twin
I0412 17:41:02.426364 15508 net.cpp:100] Creating Layer loss_twin
I0412 17:41:02.426453 15508 net.cpp:434] loss_twin <- twin_pred
I0412 17:41:02.426527 15508 net.cpp:434] loss_twin <- twin_targets
I0412 17:41:02.426597 15508 net.cpp:434] loss_twin <- twin_inside_weights
I0412 17:41:02.426666 15508 net.cpp:434] loss_twin <- twin_outside_weights
I0412 17:41:02.426734 15508 net.cpp:408] loss_twin -> loss_twin
I0412 17:41:02.426908 15508 net.cpp:150] Setting up loss_twin
I0412 17:41:02.427291 15508 net.cpp:157] Top shape: (1)
I0412 17:41:02.427377 15508 net.cpp:160]     with loss weight 1
I0412 17:41:02.427450 15508 net.cpp:165] Memory required for data: 10172697200
I0412 17:41:02.427512 15508 layer_factory.hpp:77] Creating layer accuarcy
I0412 17:41:02.427578 15508 net.cpp:100] Creating Layer accuarcy
I0412 17:41:02.427645 15508 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 17:41:02.427705 15508 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 17:41:02.427768 15508 net.cpp:408] accuarcy -> accuarcy
I0412 17:41:02.427832 15508 net.cpp:150] Setting up accuarcy
I0412 17:41:02.427896 15508 net.cpp:157] Top shape: (1)
I0412 17:41:02.427942 15508 net.cpp:165] Memory required for data: 10172697204
I0412 17:41:02.427985 15508 net.cpp:228] accuarcy does not need backward computation.
I0412 17:41:02.428030 15508 net.cpp:226] loss_twin needs backward computation.
I0412 17:41:02.428077 15508 net.cpp:226] loss_cls needs backward computation.
I0412 17:41:02.428124 15508 net.cpp:226] twin_pred needs backward computation.
I0412 17:41:02.428170 15508 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 17:41:02.428216 15508 net.cpp:226] cls_score needs backward computation.
I0412 17:41:02.428261 15508 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 17:41:02.428305 15508 net.cpp:226] drop6 needs backward computation.
I0412 17:41:02.428390 15508 net.cpp:226] relu6 needs backward computation.
I0412 17:41:02.428442 15508 net.cpp:226] fc6 needs backward computation.
I0412 17:41:02.428488 15508 net.cpp:226] roi_pool5 needs backward computation.
I0412 17:41:02.428535 15508 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 17:41:02.428587 15508 net.cpp:226] roi-data needs backward computation.
I0412 17:41:02.428642 15508 net.cpp:226] proposal needs backward computation.
I0412 17:41:02.428689 15508 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 17:41:02.428737 15508 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 17:41:02.428786 15508 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 17:41:02.428834 15508 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 17:41:02.428885 15508 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 17:41:02.428939 15508 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 17:41:02.428998 15508 net.cpp:226] rpn-data needs backward computation.
I0412 17:41:02.429049 15508 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 17:41:02.429100 15508 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 17:41:02.429157 15508 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 17:41:02.429208 15508 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 17:41:02.429255 15508 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 17:41:02.429316 15508 net.cpp:226] rpn_cls_score needs backward computation.
I0412 17:41:02.429379 15508 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 17:41:02.429430 15508 net.cpp:226] rpn/output_pool needs backward computation.
I0412 17:41:02.429478 15508 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 17:41:02.429571 15508 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 17:41:02.429615 15508 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 17:41:02.429648 15508 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 17:41:02.429679 15508 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 17:41:02.429710 15508 net.cpp:226] relu5b needs backward computation.
I0412 17:41:02.429740 15508 net.cpp:226] conv5b needs backward computation.
I0412 17:41:02.429771 15508 net.cpp:226] relu5a needs backward computation.
I0412 17:41:02.429801 15508 net.cpp:226] conv5a needs backward computation.
I0412 17:41:02.429838 15508 net.cpp:226] pool4 needs backward computation.
I0412 17:41:02.429873 15508 net.cpp:226] relu4b needs backward computation.
I0412 17:41:02.429905 15508 net.cpp:226] conv4b needs backward computation.
I0412 17:41:02.429936 15508 net.cpp:226] relu4a needs backward computation.
I0412 17:41:02.429966 15508 net.cpp:226] conv4a needs backward computation.
I0412 17:41:02.429999 15508 net.cpp:226] pool3 needs backward computation.
I0412 17:41:02.430030 15508 net.cpp:226] relu3b needs backward computation.
I0412 17:41:02.430060 15508 net.cpp:226] conv3b needs backward computation.
I0412 17:41:02.430089 15508 net.cpp:226] relu3a needs backward computation.
I0412 17:41:02.430120 15508 net.cpp:226] conv3a needs backward computation.
I0412 17:41:02.430150 15508 net.cpp:228] pool2 does not need backward computation.
I0412 17:41:02.430181 15508 net.cpp:228] relu2a does not need backward computation.
I0412 17:41:02.430210 15508 net.cpp:228] conv2a does not need backward computation.
I0412 17:41:02.430240 15508 net.cpp:228] pool1 does not need backward computation.
I0412 17:41:02.430272 15508 net.cpp:228] relu1a does not need backward computation.
I0412 17:41:02.430301 15508 net.cpp:228] conv1a does not need backward computation.
I0412 17:41:02.430332 15508 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 17:41:02.430363 15508 net.cpp:228] data_data_0_split does not need backward computation.
I0412 17:41:02.430395 15508 net.cpp:228] data does not need backward computation.
I0412 17:41:02.430424 15508 net.cpp:270] This network produces output accuarcy
I0412 17:41:02.430455 15508 net.cpp:270] This network produces output loss_cls
I0412 17:41:02.430486 15508 net.cpp:270] This network produces output loss_twin
I0412 17:41:02.430517 15508 net.cpp:270] This network produces output rpn_accuarcy
I0412 17:41:02.430548 15508 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 17:41:02.430578 15508 net.cpp:270] This network produces output rpn_cls_loss
I0412 17:41:02.430613 15508 net.cpp:270] This network produces output rpn_loss_twin
I0412 17:41:02.430694 15508 net.cpp:283] Network initialization done.
I0412 17:41:02.430898 15508 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 17:41:05.556427 15508 net.cpp:761] Ignoring source layer pool5
I0412 17:41:05.628252 15508 net.cpp:761] Ignoring source layer fc7
I0412 17:41:05.644572 15508 net.cpp:761] Ignoring source layer relu7
I0412 17:41:05.644690 15508 net.cpp:761] Ignoring source layer drop7
I0412 17:41:05.644745 15508 net.cpp:761] Ignoring source layer fc8-200
I0412 17:41:05.644795 15508 net.cpp:761] Ignoring source layer loss
Solving...
F0412 17:41:13.426782 15508 syncedmem.cpp:56] Check failed: error == cudaSuccess (2 vs. 0)  out of memory
*** Check failure stack trace: ***
