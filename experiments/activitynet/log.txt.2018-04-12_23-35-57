Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=3, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 3,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
print done
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}]
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 23:36:04.911499 24508 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 23:36:04.916173 24508 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 23:36:04.917492 24508 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 23:36:04.926152 24508 layer_factory.hpp:77] Creating layer data
I0412 23:36:05.117588 24508 net.cpp:100] Creating Layer data
I0412 23:36:05.117746 24508 net.cpp:408] data -> data
I0412 23:36:05.117803 24508 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 23:36:05.204829 24508 net.cpp:150] Setting up data
I0412 23:36:05.205020 24508 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 23:36:05.205121 24508 net.cpp:157] Top shape: 1 3 (3)
I0412 23:36:05.205191 24508 net.cpp:165] Memory required for data: 115605516
I0412 23:36:05.205260 24508 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 23:36:05.205343 24508 net.cpp:100] Creating Layer data_data_0_split
I0412 23:36:05.205447 24508 net.cpp:434] data_data_0_split <- data
I0412 23:36:05.205528 24508 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 23:36:05.205629 24508 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 23:36:05.205798 24508 net.cpp:150] Setting up data_data_0_split
I0412 23:36:05.206097 24508 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 23:36:05.206174 24508 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 23:36:05.206244 24508 net.cpp:165] Memory required for data: 346816524
I0412 23:36:05.206310 24508 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 23:36:05.206382 24508 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 23:36:05.206465 24508 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 23:36:05.206549 24508 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 23:36:05.206638 24508 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 23:36:05.206795 24508 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 23:36:05.207059 24508 net.cpp:157] Top shape: 1 3 (3)
I0412 23:36:05.207131 24508 net.cpp:157] Top shape: 1 3 (3)
I0412 23:36:05.207197 24508 net.cpp:165] Memory required for data: 346816548
I0412 23:36:05.207262 24508 layer_factory.hpp:77] Creating layer conv1a
I0412 23:36:05.207341 24508 net.cpp:100] Creating Layer conv1a
I0412 23:36:05.207448 24508 net.cpp:434] conv1a <- data_data_0_split_0
I0412 23:36:05.207509 24508 net.cpp:408] conv1a -> conv1a
I0412 23:36:05.284003 24508 net.cpp:150] Setting up conv1a
I0412 23:36:05.287482 24508 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 23:36:05.287639 24508 net.cpp:165] Memory required for data: 2813067300
I0412 23:36:05.287726 24508 layer_factory.hpp:77] Creating layer relu1a
I0412 23:36:05.287832 24508 net.cpp:100] Creating Layer relu1a
I0412 23:36:05.287907 24508 net.cpp:434] relu1a <- conv1a
I0412 23:36:05.287971 24508 net.cpp:395] relu1a -> conv1a (in-place)
I0412 23:36:05.288053 24508 net.cpp:150] Setting up relu1a
I0412 23:36:05.288128 24508 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 23:36:05.288187 24508 net.cpp:165] Memory required for data: 5279318052
I0412 23:36:05.288244 24508 layer_factory.hpp:77] Creating layer pool1
I0412 23:36:05.288305 24508 net.cpp:100] Creating Layer pool1
I0412 23:36:05.288408 24508 net.cpp:434] pool1 <- conv1a
I0412 23:36:05.288486 24508 net.cpp:408] pool1 -> pool1
I0412 23:36:05.288710 24508 net.cpp:150] Setting up pool1
I0412 23:36:05.288947 24508 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 23:36:05.289053 24508 net.cpp:165] Memory required for data: 5895880740
I0412 23:36:05.289130 24508 layer_factory.hpp:77] Creating layer conv2a
I0412 23:36:05.289211 24508 net.cpp:100] Creating Layer conv2a
I0412 23:36:05.289279 24508 net.cpp:434] conv2a <- pool1
I0412 23:36:05.289343 24508 net.cpp:408] conv2a -> conv2a
I0412 23:36:05.331069 24508 net.cpp:150] Setting up conv2a
I0412 23:36:05.331276 24508 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 23:36:05.331327 24508 net.cpp:165] Memory required for data: 7129006116
I0412 23:36:05.331389 24508 layer_factory.hpp:77] Creating layer relu2a
I0412 23:36:05.331452 24508 net.cpp:100] Creating Layer relu2a
I0412 23:36:05.331501 24508 net.cpp:434] relu2a <- conv2a
I0412 23:36:05.331553 24508 net.cpp:395] relu2a -> conv2a (in-place)
I0412 23:36:05.331610 24508 net.cpp:150] Setting up relu2a
I0412 23:36:05.331660 24508 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 23:36:05.331702 24508 net.cpp:165] Memory required for data: 8362131492
I0412 23:36:05.331746 24508 layer_factory.hpp:77] Creating layer pool2
I0412 23:36:05.331801 24508 net.cpp:100] Creating Layer pool2
I0412 23:36:05.331848 24508 net.cpp:434] pool2 <- conv2a
I0412 23:36:05.331897 24508 net.cpp:408] pool2 -> pool2
I0412 23:36:05.332093 24508 net.cpp:150] Setting up pool2
I0412 23:36:05.332145 24508 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 23:36:05.332190 24508 net.cpp:165] Memory required for data: 8516272164
I0412 23:36:05.332237 24508 layer_factory.hpp:77] Creating layer conv3a
I0412 23:36:05.332294 24508 net.cpp:100] Creating Layer conv3a
I0412 23:36:05.332382 24508 net.cpp:434] conv3a <- pool2
I0412 23:36:05.332438 24508 net.cpp:408] conv3a -> conv3a
I0412 23:36:05.354038 24508 net.cpp:150] Setting up conv3a
I0412 23:36:05.354261 24508 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 23:36:05.354315 24508 net.cpp:165] Memory required for data: 8824553508
I0412 23:36:05.354382 24508 layer_factory.hpp:77] Creating layer relu3a
I0412 23:36:05.354441 24508 net.cpp:100] Creating Layer relu3a
I0412 23:36:05.354491 24508 net.cpp:434] relu3a <- conv3a
I0412 23:36:05.354552 24508 net.cpp:395] relu3a -> conv3a (in-place)
I0412 23:36:05.354612 24508 net.cpp:150] Setting up relu3a
I0412 23:36:05.354665 24508 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 23:36:05.354709 24508 net.cpp:165] Memory required for data: 9132834852
I0412 23:36:05.354753 24508 layer_factory.hpp:77] Creating layer conv3b
I0412 23:36:05.354813 24508 net.cpp:100] Creating Layer conv3b
I0412 23:36:05.354866 24508 net.cpp:434] conv3b <- conv3a
I0412 23:36:05.354917 24508 net.cpp:408] conv3b -> conv3b
I0412 23:36:05.607782 24508 net.cpp:150] Setting up conv3b
I0412 23:36:05.617496 24508 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 23:36:05.617655 24508 net.cpp:165] Memory required for data: 9441116196
I0412 23:36:05.617733 24508 layer_factory.hpp:77] Creating layer relu3b
I0412 23:36:05.617871 24508 net.cpp:100] Creating Layer relu3b
I0412 23:36:05.617992 24508 net.cpp:434] relu3b <- conv3b
I0412 23:36:05.618079 24508 net.cpp:395] relu3b -> conv3b (in-place)
I0412 23:36:05.618207 24508 net.cpp:150] Setting up relu3b
I0412 23:36:05.618356 24508 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 23:36:05.618439 24508 net.cpp:165] Memory required for data: 9749397540
I0412 23:36:05.618505 24508 layer_factory.hpp:77] Creating layer pool3
I0412 23:36:05.618572 24508 net.cpp:100] Creating Layer pool3
I0412 23:36:05.618675 24508 net.cpp:434] pool3 <- conv3b
I0412 23:36:05.618757 24508 net.cpp:408] pool3 -> pool3
I0412 23:36:05.618934 24508 net.cpp:150] Setting up pool3
I0412 23:36:05.619505 24508 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 23:36:05.619596 24508 net.cpp:165] Memory required for data: 9787932708
I0412 23:36:05.619660 24508 layer_factory.hpp:77] Creating layer conv4a
I0412 23:36:05.619737 24508 net.cpp:100] Creating Layer conv4a
I0412 23:36:05.619873 24508 net.cpp:434] conv4a <- pool3
I0412 23:36:05.619956 24508 net.cpp:408] conv4a -> conv4a
I0412 23:36:05.824362 24508 net.cpp:150] Setting up conv4a
I0412 23:36:05.824530 24508 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 23:36:05.824568 24508 net.cpp:165] Memory required for data: 9865003044
I0412 23:36:05.824615 24508 layer_factory.hpp:77] Creating layer relu4a
I0412 23:36:05.824656 24508 net.cpp:100] Creating Layer relu4a
I0412 23:36:05.824690 24508 net.cpp:434] relu4a <- conv4a
I0412 23:36:05.824728 24508 net.cpp:395] relu4a -> conv4a (in-place)
I0412 23:36:05.824767 24508 net.cpp:150] Setting up relu4a
I0412 23:36:05.824801 24508 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 23:36:05.824831 24508 net.cpp:165] Memory required for data: 9942073380
I0412 23:36:05.824862 24508 layer_factory.hpp:77] Creating layer conv4b
I0412 23:36:05.824908 24508 net.cpp:100] Creating Layer conv4b
I0412 23:36:05.824941 24508 net.cpp:434] conv4b <- conv4a
I0412 23:36:05.824975 24508 net.cpp:408] conv4b -> conv4b
I0412 23:36:05.915189 24508 net.cpp:150] Setting up conv4b
I0412 23:36:05.918423 24508 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 23:36:05.918536 24508 net.cpp:165] Memory required for data: 10019143716
I0412 23:36:05.918586 24508 layer_factory.hpp:77] Creating layer relu4b
I0412 23:36:05.918634 24508 net.cpp:100] Creating Layer relu4b
I0412 23:36:05.918675 24508 net.cpp:434] relu4b <- conv4b
I0412 23:36:05.918716 24508 net.cpp:395] relu4b -> conv4b (in-place)
I0412 23:36:05.918759 24508 net.cpp:150] Setting up relu4b
I0412 23:36:05.918793 24508 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 23:36:05.918828 24508 net.cpp:165] Memory required for data: 10096214052
I0412 23:36:05.918857 24508 layer_factory.hpp:77] Creating layer pool4
I0412 23:36:05.918891 24508 net.cpp:100] Creating Layer pool4
I0412 23:36:05.918923 24508 net.cpp:434] pool4 <- conv4b
I0412 23:36:05.918958 24508 net.cpp:408] pool4 -> pool4
I0412 23:36:05.919096 24508 net.cpp:150] Setting up pool4
I0412 23:36:05.919159 24508 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:36:05.919195 24508 net.cpp:165] Memory required for data: 10105847844
I0412 23:36:05.919227 24508 layer_factory.hpp:77] Creating layer conv5a
I0412 23:36:05.919268 24508 net.cpp:100] Creating Layer conv5a
I0412 23:36:05.919301 24508 net.cpp:434] conv5a <- pool4
I0412 23:36:05.919337 24508 net.cpp:408] conv5a -> conv5a
I0412 23:36:06.033838 24508 net.cpp:150] Setting up conv5a
I0412 23:36:06.034106 24508 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:36:06.034170 24508 net.cpp:165] Memory required for data: 10115481636
I0412 23:36:06.034257 24508 layer_factory.hpp:77] Creating layer relu5a
I0412 23:36:06.034333 24508 net.cpp:100] Creating Layer relu5a
I0412 23:36:06.034394 24508 net.cpp:434] relu5a <- conv5a
I0412 23:36:06.034457 24508 net.cpp:395] relu5a -> conv5a (in-place)
I0412 23:36:06.034518 24508 net.cpp:150] Setting up relu5a
I0412 23:36:06.034571 24508 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:36:06.034620 24508 net.cpp:165] Memory required for data: 10125115428
I0412 23:36:06.034670 24508 layer_factory.hpp:77] Creating layer conv5b
I0412 23:36:06.034734 24508 net.cpp:100] Creating Layer conv5b
I0412 23:36:06.034783 24508 net.cpp:434] conv5b <- conv5a
I0412 23:36:06.034842 24508 net.cpp:408] conv5b -> conv5b
I0412 23:36:06.364902 24508 net.cpp:150] Setting up conv5b
I0412 23:36:06.396090 24508 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:36:06.396279 24508 net.cpp:165] Memory required for data: 10134749220
I0412 23:36:06.396373 24508 layer_factory.hpp:77] Creating layer relu5b
I0412 23:36:06.396427 24508 net.cpp:100] Creating Layer relu5b
I0412 23:36:06.396483 24508 net.cpp:434] relu5b <- conv5b
I0412 23:36:06.396541 24508 net.cpp:395] relu5b -> conv5b (in-place)
I0412 23:36:06.396615 24508 net.cpp:150] Setting up relu5b
I0412 23:36:06.396684 24508 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:36:06.396746 24508 net.cpp:165] Memory required for data: 10144383012
I0412 23:36:06.396795 24508 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 23:36:06.396862 24508 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 23:36:06.396922 24508 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 23:36:06.396975 24508 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 23:36:06.397034 24508 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 23:36:06.397213 24508 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 23:36:06.397402 24508 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:36:06.397480 24508 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:36:06.397529 24508 net.cpp:165] Memory required for data: 10163650596
I0412 23:36:06.397577 24508 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 23:36:06.397629 24508 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 23:36:06.397682 24508 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 23:36:06.397729 24508 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 23:36:06.740240 24508 net.cpp:150] Setting up rpn_conv/3x3
I0412 23:36:06.740376 24508 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 23:36:06.740396 24508 net.cpp:165] Memory required for data: 10166796324
I0412 23:36:06.740434 24508 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 23:36:06.740468 24508 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 23:36:06.764585 24508 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 23:36:06.764812 24508 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 23:36:06.764916 24508 net.cpp:150] Setting up rpn_relu/3x3
I0412 23:36:06.765003 24508 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 23:36:06.765070 24508 net.cpp:165] Memory required for data: 10169942052
I0412 23:36:06.765130 24508 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 23:36:06.765206 24508 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 23:36:06.765306 24508 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 23:36:06.765370 24508 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 23:36:07.246996 24508 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 23:36:07.247133 24508 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 23:36:07.247159 24508 net.cpp:165] Memory required for data: 10170728484
I0412 23:36:07.247184 24508 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 23:36:07.247207 24508 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 23:36:07.247259 24508 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 23:36:07.247288 24508 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 23:36:07.247314 24508 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 23:36:07.247334 24508 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 23:36:07.247349 24508 net.cpp:165] Memory required for data: 10171514916
I0412 23:36:07.247365 24508 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 23:36:07.247390 24508 net.cpp:100] Creating Layer rpn/output_pool
I0412 23:36:07.247411 24508 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 23:36:07.247434 24508 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 23:36:07.247572 24508 net.cpp:150] Setting up rpn/output_pool
I0412 23:36:07.247609 24508 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 23:36:07.247632 24508 net.cpp:165] Memory required for data: 10171711524
I0412 23:36:07.247649 24508 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 23:36:07.247683 24508 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 23:36:07.247706 24508 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 23:36:07.247731 24508 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 23:36:07.247767 24508 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 23:36:07.247908 24508 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 23:36:07.247938 24508 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 23:36:07.247956 24508 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 23:36:07.247973 24508 net.cpp:165] Memory required for data: 10172104740
I0412 23:36:07.248004 24508 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 23:36:07.248037 24508 net.cpp:100] Creating Layer rpn_cls_score
I0412 23:36:07.248059 24508 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 23:36:07.248085 24508 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 23:36:07.249903 24508 net.cpp:150] Setting up rpn_cls_score
I0412 23:36:07.250013 24508 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:36:07.250026 24508 net.cpp:165] Memory required for data: 10172133156
I0412 23:36:07.250062 24508 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 23:36:07.250108 24508 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 23:36:07.250126 24508 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 23:36:07.250147 24508 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 23:36:07.250177 24508 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 23:36:07.250381 24508 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 23:36:07.250407 24508 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:36:07.250421 24508 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:36:07.250459 24508 net.cpp:165] Memory required for data: 10172189988
I0412 23:36:07.250476 24508 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 23:36:07.250525 24508 net.cpp:100] Creating Layer rpn_twin_pred
I0412 23:36:07.250538 24508 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 23:36:07.250561 24508 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 23:36:07.252259 24508 net.cpp:150] Setting up rpn_twin_pred
I0412 23:36:07.252295 24508 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:36:07.252300 24508 net.cpp:165] Memory required for data: 10172218404
I0412 23:36:07.252313 24508 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 23:36:07.252353 24508 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 23:36:07.252362 24508 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 23:36:07.252374 24508 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 23:36:07.252388 24508 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 23:36:07.252472 24508 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 23:36:07.252483 24508 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:36:07.252491 24508 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:36:07.252496 24508 net.cpp:165] Memory required for data: 10172275236
I0412 23:36:07.252501 24508 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 23:36:07.252513 24508 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 23:36:07.252519 24508 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 23:36:07.252529 24508 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 23:36:07.252593 24508 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 23:36:07.252624 24508 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 23:36:07.252641 24508 net.cpp:165] Memory required for data: 10172303652
I0412 23:36:07.252658 24508 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 23:36:07.252681 24508 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 23:36:07.252697 24508 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 23:36:07.252718 24508 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 23:36:07.252750 24508 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 23:36:07.252774 24508 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 23:36:07.252887 24508 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 23:36:07.252910 24508 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 23:36:07.252928 24508 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 23:36:07.252946 24508 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 23:36:07.252962 24508 net.cpp:165] Memory required for data: 10172388900
I0412 23:36:07.252979 24508 layer_factory.hpp:77] Creating layer rpn-data
I0412 23:36:07.253546 24508 net.cpp:100] Creating Layer rpn-data
I0412 23:36:07.253579 24508 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 23:36:07.253602 24508 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 23:36:07.253620 24508 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 23:36:07.253643 24508 net.cpp:408] rpn-data -> rpn_labels
I0412 23:36:07.253666 24508 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 23:36:07.253691 24508 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 23:36:07.253713 24508 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 23:36:07.257743 24508 net.cpp:150] Setting up rpn-data
I0412 23:36:07.257774 24508 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 23:36:07.257779 24508 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:36:07.257784 24508 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:36:07.257789 24508 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:36:07.257793 24508 net.cpp:165] Memory required for data: 10172488356
I0412 23:36:07.257800 24508 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 23:36:07.257814 24508 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 23:36:07.257833 24508 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 23:36:07.257845 24508 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 23:36:07.257858 24508 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 23:36:07.257903 24508 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 23:36:07.257910 24508 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 23:36:07.257915 24508 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 23:36:07.257920 24508 net.cpp:165] Memory required for data: 10172516772
I0412 23:36:07.257923 24508 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 23:36:07.257933 24508 net.cpp:100] Creating Layer rpn_loss_cls
I0412 23:36:07.257939 24508 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 23:36:07.257946 24508 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 23:36:07.257953 24508 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 23:36:07.257966 24508 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 23:36:07.258088 24508 net.cpp:150] Setting up rpn_loss_cls
I0412 23:36:07.258095 24508 net.cpp:157] Top shape: (1)
I0412 23:36:07.258098 24508 net.cpp:160]     with loss weight 1
I0412 23:36:07.258112 24508 net.cpp:165] Memory required for data: 10172516776
I0412 23:36:07.258117 24508 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 23:36:07.258127 24508 net.cpp:100] Creating Layer rpn_loss_twin
I0412 23:36:07.258132 24508 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 23:36:07.258138 24508 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 23:36:07.258144 24508 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 23:36:07.258149 24508 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 23:36:07.258158 24508 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 23:36:07.258249 24508 net.cpp:150] Setting up rpn_loss_twin
I0412 23:36:07.258255 24508 net.cpp:157] Top shape: (1)
I0412 23:36:07.258258 24508 net.cpp:160]     with loss weight 1
I0412 23:36:07.258265 24508 net.cpp:165] Memory required for data: 10172516780
I0412 23:36:07.258268 24508 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 23:36:07.258278 24508 net.cpp:100] Creating Layer rpn_accuarcy
I0412 23:36:07.258285 24508 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 23:36:07.258291 24508 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 23:36:07.258296 24508 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 23:36:07.258303 24508 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 23:36:07.258348 24508 net.cpp:150] Setting up rpn_accuarcy
I0412 23:36:07.258355 24508 net.cpp:157] Top shape: (1)
I0412 23:36:07.258360 24508 net.cpp:157] Top shape: 2 (2)
I0412 23:36:07.258363 24508 net.cpp:165] Memory required for data: 10172516792
I0412 23:36:07.258368 24508 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 23:36:07.258376 24508 net.cpp:100] Creating Layer rpn_cls_prob
I0412 23:36:07.258383 24508 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 23:36:07.258388 24508 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 23:36:07.258462 24508 net.cpp:150] Setting up rpn_cls_prob
I0412 23:36:07.258469 24508 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 23:36:07.258473 24508 net.cpp:165] Memory required for data: 10172545208
I0412 23:36:07.258477 24508 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 23:36:07.258489 24508 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 23:36:07.258494 24508 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 23:36:07.258502 24508 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 23:36:07.258536 24508 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 23:36:07.258543 24508 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:36:07.258546 24508 net.cpp:165] Memory required for data: 10172573624
I0412 23:36:07.258551 24508 layer_factory.hpp:77] Creating layer proposal
I0412 23:36:07.259222 24508 net.cpp:100] Creating Layer proposal
I0412 23:36:07.259235 24508 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 23:36:07.259241 24508 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 23:36:07.259250 24508 net.cpp:408] proposal -> rpn_rois
I0412 23:36:07.321794 24508 net.cpp:150] Setting up proposal
I0412 23:36:07.322927 24508 net.cpp:157] Top shape: 1 3 (3)
I0412 23:36:07.323071 24508 net.cpp:165] Memory required for data: 10172573636
I0412 23:36:07.323149 24508 layer_factory.hpp:77] Creating layer roi-data
I0412 23:36:07.323468 24508 net.cpp:100] Creating Layer roi-data
I0412 23:36:07.324313 24508 net.cpp:434] roi-data <- rpn_rois
I0412 23:36:07.324456 24508 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 23:36:07.324568 24508 net.cpp:408] roi-data -> rois
I0412 23:36:07.324684 24508 net.cpp:408] roi-data -> labels
I0412 23:36:07.324790 24508 net.cpp:408] roi-data -> twin_targets
I0412 23:36:07.324883 24508 net.cpp:408] roi-data -> twin_inside_weights
I0412 23:36:07.324980 24508 net.cpp:408] roi-data -> twin_outside_weights
I0412 23:36:07.325736 24508 net.cpp:150] Setting up roi-data
I0412 23:36:07.327855 24508 net.cpp:157] Top shape: 1 3 (3)
I0412 23:36:07.327989 24508 net.cpp:157] Top shape: 1 1 (1)
I0412 23:36:07.328066 24508 net.cpp:157] Top shape: 1 402 (402)
I0412 23:36:07.328136 24508 net.cpp:157] Top shape: 1 402 (402)
I0412 23:36:07.328205 24508 net.cpp:157] Top shape: 1 402 (402)
I0412 23:36:07.328274 24508 net.cpp:165] Memory required for data: 10172578476
I0412 23:36:07.328378 24508 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 23:36:07.328439 24508 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 23:36:07.328526 24508 net.cpp:434] labels_roi-data_1_split <- labels
I0412 23:36:07.328603 24508 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 23:36:07.328691 24508 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 23:36:07.328872 24508 net.cpp:150] Setting up labels_roi-data_1_split
I0412 23:36:07.329231 24508 net.cpp:157] Top shape: 1 1 (1)
I0412 23:36:07.329311 24508 net.cpp:157] Top shape: 1 1 (1)
I0412 23:36:07.329375 24508 net.cpp:165] Memory required for data: 10172578484
I0412 23:36:07.329432 24508 layer_factory.hpp:77] Creating layer roi_pool5
I0412 23:36:07.329501 24508 net.cpp:100] Creating Layer roi_pool5
I0412 23:36:07.329588 24508 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 23:36:07.329658 24508 net.cpp:434] roi_pool5 <- rois
I0412 23:36:07.329730 24508 net.cpp:408] roi_pool5 -> pool5
I0412 23:36:07.329816 24508 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 23:36:07.329936 24508 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 23:36:07.330076 24508 net.cpp:150] Setting up roi_pool5
I0412 23:36:07.332602 24508 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 23:36:07.332732 24508 net.cpp:165] Memory required for data: 10172611252
I0412 23:36:07.332803 24508 layer_factory.hpp:77] Creating layer fc6
I0412 23:36:07.332885 24508 net.cpp:100] Creating Layer fc6
I0412 23:36:07.332994 24508 net.cpp:434] fc6 <- pool5
I0412 23:36:07.333073 24508 net.cpp:408] fc6 -> fc6
I0412 23:36:09.254848 24508 net.cpp:150] Setting up fc6
I0412 23:36:09.254905 24508 net.cpp:157] Top shape: 1 4096 (4096)
I0412 23:36:09.254910 24508 net.cpp:165] Memory required for data: 10172627636
I0412 23:36:09.254923 24508 layer_factory.hpp:77] Creating layer relu6
I0412 23:36:09.254936 24508 net.cpp:100] Creating Layer relu6
I0412 23:36:09.254942 24508 net.cpp:434] relu6 <- fc6
I0412 23:36:09.254951 24508 net.cpp:395] relu6 -> fc6 (in-place)
I0412 23:36:09.254961 24508 net.cpp:150] Setting up relu6
I0412 23:36:09.254966 24508 net.cpp:157] Top shape: 1 4096 (4096)
I0412 23:36:09.254971 24508 net.cpp:165] Memory required for data: 10172644020
I0412 23:36:09.254976 24508 layer_factory.hpp:77] Creating layer drop6
I0412 23:36:09.254982 24508 net.cpp:100] Creating Layer drop6
I0412 23:36:09.254987 24508 net.cpp:434] drop6 <- fc6
I0412 23:36:09.254992 24508 net.cpp:395] drop6 -> fc6 (in-place)
I0412 23:36:09.255028 24508 net.cpp:150] Setting up drop6
I0412 23:36:09.255033 24508 net.cpp:157] Top shape: 1 4096 (4096)
I0412 23:36:09.255036 24508 net.cpp:165] Memory required for data: 10172660404
I0412 23:36:09.255041 24508 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 23:36:09.255048 24508 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 23:36:09.255053 24508 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 23:36:09.255060 24508 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 23:36:09.255069 24508 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 23:36:09.255122 24508 net.cpp:150] Setting up fc6_drop6_0_split
I0412 23:36:09.255132 24508 net.cpp:157] Top shape: 1 4096 (4096)
I0412 23:36:09.255136 24508 net.cpp:157] Top shape: 1 4096 (4096)
I0412 23:36:09.255141 24508 net.cpp:165] Memory required for data: 10172693172
I0412 23:36:09.255146 24508 layer_factory.hpp:77] Creating layer cls_score
I0412 23:36:09.255153 24508 net.cpp:100] Creating Layer cls_score
I0412 23:36:09.255157 24508 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 23:36:09.255165 24508 net.cpp:408] cls_score -> cls_score
I0412 23:36:09.294098 24508 net.cpp:150] Setting up cls_score
I0412 23:36:09.294203 24508 net.cpp:157] Top shape: 1 201 (201)
I0412 23:36:09.294209 24508 net.cpp:165] Memory required for data: 10172693976
I0412 23:36:09.294241 24508 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 23:36:09.294270 24508 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 23:36:09.294281 24508 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 23:36:09.294296 24508 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 23:36:09.294315 24508 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 23:36:09.294414 24508 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 23:36:09.294425 24508 net.cpp:157] Top shape: 1 201 (201)
I0412 23:36:09.294430 24508 net.cpp:157] Top shape: 1 201 (201)
I0412 23:36:09.294433 24508 net.cpp:165] Memory required for data: 10172695584
I0412 23:36:09.294438 24508 layer_factory.hpp:77] Creating layer twin_pred
I0412 23:36:09.294457 24508 net.cpp:100] Creating Layer twin_pred
I0412 23:36:09.294463 24508 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 23:36:09.294477 24508 net.cpp:408] twin_pred -> twin_pred
I0412 23:36:09.344218 24508 net.cpp:150] Setting up twin_pred
I0412 23:36:09.347652 24508 net.cpp:157] Top shape: 1 402 (402)
I0412 23:36:09.347801 24508 net.cpp:165] Memory required for data: 10172697192
I0412 23:36:09.347856 24508 layer_factory.hpp:77] Creating layer loss_cls
I0412 23:36:09.347906 24508 net.cpp:100] Creating Layer loss_cls
I0412 23:36:09.347951 24508 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 23:36:09.347995 24508 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 23:36:09.348049 24508 net.cpp:408] loss_cls -> loss_cls
I0412 23:36:09.348100 24508 layer_factory.hpp:77] Creating layer loss_cls
I0412 23:36:09.348430 24508 net.cpp:150] Setting up loss_cls
I0412 23:36:09.348502 24508 net.cpp:157] Top shape: (1)
I0412 23:36:09.348541 24508 net.cpp:160]     with loss weight 1
I0412 23:36:09.348588 24508 net.cpp:165] Memory required for data: 10172697196
I0412 23:36:09.348623 24508 layer_factory.hpp:77] Creating layer loss_twin
I0412 23:36:09.348660 24508 net.cpp:100] Creating Layer loss_twin
I0412 23:36:09.348695 24508 net.cpp:434] loss_twin <- twin_pred
I0412 23:36:09.348728 24508 net.cpp:434] loss_twin <- twin_targets
I0412 23:36:09.348762 24508 net.cpp:434] loss_twin <- twin_inside_weights
I0412 23:36:09.348795 24508 net.cpp:434] loss_twin <- twin_outside_weights
I0412 23:36:09.348836 24508 net.cpp:408] loss_twin -> loss_twin
I0412 23:36:09.349030 24508 net.cpp:150] Setting up loss_twin
I0412 23:36:09.349102 24508 net.cpp:157] Top shape: (1)
I0412 23:36:09.349140 24508 net.cpp:160]     with loss weight 1
I0412 23:36:09.349190 24508 net.cpp:165] Memory required for data: 10172697200
I0412 23:36:09.349222 24508 layer_factory.hpp:77] Creating layer accuarcy
I0412 23:36:09.349257 24508 net.cpp:100] Creating Layer accuarcy
I0412 23:36:09.349289 24508 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 23:36:09.349320 24508 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 23:36:09.349355 24508 net.cpp:408] accuarcy -> accuarcy
I0412 23:36:09.349395 24508 net.cpp:150] Setting up accuarcy
I0412 23:36:09.349428 24508 net.cpp:157] Top shape: (1)
I0412 23:36:09.349457 24508 net.cpp:165] Memory required for data: 10172697204
I0412 23:36:09.349488 24508 net.cpp:228] accuarcy does not need backward computation.
I0412 23:36:09.349519 24508 net.cpp:226] loss_twin needs backward computation.
I0412 23:36:09.349550 24508 net.cpp:226] loss_cls needs backward computation.
I0412 23:36:09.349581 24508 net.cpp:226] twin_pred needs backward computation.
I0412 23:36:09.349609 24508 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 23:36:09.349639 24508 net.cpp:226] cls_score needs backward computation.
I0412 23:36:09.349671 24508 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 23:36:09.349701 24508 net.cpp:226] drop6 needs backward computation.
I0412 23:36:09.349730 24508 net.cpp:226] relu6 needs backward computation.
I0412 23:36:09.349759 24508 net.cpp:226] fc6 needs backward computation.
I0412 23:36:09.349789 24508 net.cpp:226] roi_pool5 needs backward computation.
I0412 23:36:09.349822 24508 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 23:36:09.349850 24508 net.cpp:226] roi-data needs backward computation.
I0412 23:36:09.349881 24508 net.cpp:226] proposal needs backward computation.
I0412 23:36:09.349911 24508 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 23:36:09.349942 24508 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 23:36:09.349973 24508 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 23:36:09.350003 24508 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 23:36:09.350039 24508 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 23:36:09.350071 24508 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 23:36:09.350102 24508 net.cpp:226] rpn-data needs backward computation.
I0412 23:36:09.350134 24508 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 23:36:09.350167 24508 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 23:36:09.350210 24508 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 23:36:09.350241 24508 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 23:36:09.350272 24508 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 23:36:09.350303 24508 net.cpp:226] rpn_cls_score needs backward computation.
I0412 23:36:09.350334 24508 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 23:36:09.350365 24508 net.cpp:226] rpn/output_pool needs backward computation.
I0412 23:36:09.350394 24508 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 23:36:09.350425 24508 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 23:36:09.350450 24508 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 23:36:09.350474 24508 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 23:36:09.350499 24508 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 23:36:09.350525 24508 net.cpp:226] relu5b needs backward computation.
I0412 23:36:09.350550 24508 net.cpp:226] conv5b needs backward computation.
I0412 23:36:09.350574 24508 net.cpp:226] relu5a needs backward computation.
I0412 23:36:09.350598 24508 net.cpp:226] conv5a needs backward computation.
I0412 23:36:09.350623 24508 net.cpp:226] pool4 needs backward computation.
I0412 23:36:09.350648 24508 net.cpp:226] relu4b needs backward computation.
I0412 23:36:09.350672 24508 net.cpp:226] conv4b needs backward computation.
I0412 23:36:09.350697 24508 net.cpp:226] relu4a needs backward computation.
I0412 23:36:09.350723 24508 net.cpp:226] conv4a needs backward computation.
I0412 23:36:09.350747 24508 net.cpp:226] pool3 needs backward computation.
I0412 23:36:09.350772 24508 net.cpp:226] relu3b needs backward computation.
I0412 23:36:09.350797 24508 net.cpp:226] conv3b needs backward computation.
I0412 23:36:09.350821 24508 net.cpp:226] relu3a needs backward computation.
I0412 23:36:09.350847 24508 net.cpp:226] conv3a needs backward computation.
I0412 23:36:09.350870 24508 net.cpp:228] pool2 does not need backward computation.
I0412 23:36:09.350896 24508 net.cpp:228] relu2a does not need backward computation.
I0412 23:36:09.350921 24508 net.cpp:228] conv2a does not need backward computation.
I0412 23:36:09.350947 24508 net.cpp:228] pool1 does not need backward computation.
I0412 23:36:09.350973 24508 net.cpp:228] relu1a does not need backward computation.
I0412 23:36:09.350998 24508 net.cpp:228] conv1a does not need backward computation.
I0412 23:36:09.351023 24508 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 23:36:09.351049 24508 net.cpp:228] data_data_0_split does not need backward computation.
I0412 23:36:09.351078 24508 net.cpp:228] data does not need backward computation.
I0412 23:36:09.351104 24508 net.cpp:270] This network produces output accuarcy
I0412 23:36:09.351130 24508 net.cpp:270] This network produces output loss_cls
I0412 23:36:09.371170 24508 net.cpp:270] This network produces output loss_twin
I0412 23:36:09.371353 24508 net.cpp:270] This network produces output rpn_accuarcy
I0412 23:36:09.371403 24508 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 23:36:09.371446 24508 net.cpp:270] This network produces output rpn_cls_loss
I0412 23:36:09.371490 24508 net.cpp:270] This network produces output rpn_loss_twin
I0412 23:36:09.371585 24508 net.cpp:283] Network initialization done.
I0412 23:36:09.371904 24508 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 23:36:13.893472 24508 net.cpp:761] Ignoring source layer pool5
I0412 23:36:13.920619 24508 net.cpp:761] Ignoring source layer fc7
I0412 23:36:13.920763 24508 net.cpp:761] Ignoring source layer relu7
I0412 23:36:13.920800 24508 net.cpp:761] Ignoring source layer drop7
I0412 23:36:13.920835 24508 net.cpp:761] Ignoring source layer fc8-200
I0412 23:36:13.920869 24508 net.cpp:761] Ignoring source layer loss
Solving...
F0412 23:36:22.550009 24508 syncedmem.cpp:56] Check failed: error == cudaSuccess (2 vs. 0)  out of memory
*** Check failure stack trace: ***
