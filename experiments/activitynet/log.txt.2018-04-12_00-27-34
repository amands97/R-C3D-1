Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 00:27:36.316802 18814 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 00:27:36.316836 18814 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 00:27:36.317471 18814 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 00:27:36.317776 18814 layer_factory.hpp:77] Creating layer data
I0412 00:27:36.330813 18814 net.cpp:100] Creating Layer data
I0412 00:27:36.330842 18814 net.cpp:408] data -> data
I0412 00:27:36.330855 18814 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 00:27:36.340950 18814 net.cpp:150] Setting up data
I0412 00:27:36.340996 18814 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 00:27:36.341017 18814 net.cpp:157] Top shape: 1 3 (3)
I0412 00:27:36.341032 18814 net.cpp:165] Memory required for data: 115605516
I0412 00:27:36.341053 18814 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 00:27:36.341079 18814 net.cpp:100] Creating Layer data_data_0_split
I0412 00:27:36.341096 18814 net.cpp:434] data_data_0_split <- data
I0412 00:27:36.341118 18814 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 00:27:36.341135 18814 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 00:27:36.341202 18814 net.cpp:150] Setting up data_data_0_split
I0412 00:27:36.341212 18814 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 00:27:36.341217 18814 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 00:27:36.341222 18814 net.cpp:165] Memory required for data: 346816524
I0412 00:27:36.341225 18814 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 00:27:36.341235 18814 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 00:27:36.341240 18814 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 00:27:36.341248 18814 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 00:27:36.341259 18814 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 00:27:36.341315 18814 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 00:27:36.341325 18814 net.cpp:157] Top shape: 1 3 (3)
I0412 00:27:36.341329 18814 net.cpp:157] Top shape: 1 3 (3)
I0412 00:27:36.341333 18814 net.cpp:165] Memory required for data: 346816548
I0412 00:27:36.341338 18814 layer_factory.hpp:77] Creating layer conv1a
I0412 00:27:36.341356 18814 net.cpp:100] Creating Layer conv1a
I0412 00:27:36.341362 18814 net.cpp:434] conv1a <- data_data_0_split_0
I0412 00:27:36.341370 18814 net.cpp:408] conv1a -> conv1a
I0412 00:27:36.365538 18814 net.cpp:150] Setting up conv1a
I0412 00:27:36.365576 18814 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 00:27:36.365579 18814 net.cpp:165] Memory required for data: 2813067300
I0412 00:27:36.365600 18814 layer_factory.hpp:77] Creating layer relu1a
I0412 00:27:36.365617 18814 net.cpp:100] Creating Layer relu1a
I0412 00:27:36.365623 18814 net.cpp:434] relu1a <- conv1a
I0412 00:27:36.365633 18814 net.cpp:395] relu1a -> conv1a (in-place)
I0412 00:27:36.365661 18814 net.cpp:150] Setting up relu1a
I0412 00:27:36.365679 18814 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 00:27:36.365694 18814 net.cpp:165] Memory required for data: 5279318052
I0412 00:27:36.365708 18814 layer_factory.hpp:77] Creating layer pool1
I0412 00:27:36.365725 18814 net.cpp:100] Creating Layer pool1
I0412 00:27:36.365741 18814 net.cpp:434] pool1 <- conv1a
I0412 00:27:36.365761 18814 net.cpp:408] pool1 -> pool1
I0412 00:27:36.365886 18814 net.cpp:150] Setting up pool1
I0412 00:27:36.365900 18814 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 00:27:36.365905 18814 net.cpp:165] Memory required for data: 5895880740
I0412 00:27:36.365909 18814 layer_factory.hpp:77] Creating layer conv2a
I0412 00:27:36.365924 18814 net.cpp:100] Creating Layer conv2a
I0412 00:27:36.365941 18814 net.cpp:434] conv2a <- pool1
I0412 00:27:36.365962 18814 net.cpp:408] conv2a -> conv2a
I0412 00:27:36.375203 18814 net.cpp:150] Setting up conv2a
I0412 00:27:36.375237 18814 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 00:27:36.375241 18814 net.cpp:165] Memory required for data: 7129006116
I0412 00:27:36.375262 18814 layer_factory.hpp:77] Creating layer relu2a
I0412 00:27:36.375274 18814 net.cpp:100] Creating Layer relu2a
I0412 00:27:36.375280 18814 net.cpp:434] relu2a <- conv2a
I0412 00:27:36.375289 18814 net.cpp:395] relu2a -> conv2a (in-place)
I0412 00:27:36.375303 18814 net.cpp:150] Setting up relu2a
I0412 00:27:36.375324 18814 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 00:27:36.375337 18814 net.cpp:165] Memory required for data: 8362131492
I0412 00:27:36.375362 18814 layer_factory.hpp:77] Creating layer pool2
I0412 00:27:36.375388 18814 net.cpp:100] Creating Layer pool2
I0412 00:27:36.375404 18814 net.cpp:434] pool2 <- conv2a
I0412 00:27:36.375422 18814 net.cpp:408] pool2 -> pool2
I0412 00:27:36.375533 18814 net.cpp:150] Setting up pool2
I0412 00:27:36.375543 18814 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 00:27:36.375547 18814 net.cpp:165] Memory required for data: 8516272164
I0412 00:27:36.375551 18814 layer_factory.hpp:77] Creating layer conv3a
I0412 00:27:36.375582 18814 net.cpp:100] Creating Layer conv3a
I0412 00:27:36.375604 18814 net.cpp:434] conv3a <- pool2
I0412 00:27:36.375629 18814 net.cpp:408] conv3a -> conv3a
I0412 00:27:36.384673 18814 net.cpp:150] Setting up conv3a
I0412 00:27:36.384704 18814 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 00:27:36.384709 18814 net.cpp:165] Memory required for data: 8824553508
I0412 00:27:36.384724 18814 layer_factory.hpp:77] Creating layer relu3a
I0412 00:27:36.384737 18814 net.cpp:100] Creating Layer relu3a
I0412 00:27:36.384742 18814 net.cpp:434] relu3a <- conv3a
I0412 00:27:36.384753 18814 net.cpp:395] relu3a -> conv3a (in-place)
I0412 00:27:36.384765 18814 net.cpp:150] Setting up relu3a
I0412 00:27:36.384786 18814 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 00:27:36.384800 18814 net.cpp:165] Memory required for data: 9132834852
I0412 00:27:36.384814 18814 layer_factory.hpp:77] Creating layer conv3b
I0412 00:27:36.384841 18814 net.cpp:100] Creating Layer conv3b
I0412 00:27:36.384858 18814 net.cpp:434] conv3b <- conv3a
I0412 00:27:36.384877 18814 net.cpp:408] conv3b -> conv3b
I0412 00:27:36.403635 18814 net.cpp:150] Setting up conv3b
I0412 00:27:36.403666 18814 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 00:27:36.403671 18814 net.cpp:165] Memory required for data: 9441116196
I0412 00:27:36.403683 18814 layer_factory.hpp:77] Creating layer relu3b
I0412 00:27:36.403697 18814 net.cpp:100] Creating Layer relu3b
I0412 00:27:36.403702 18814 net.cpp:434] relu3b <- conv3b
I0412 00:27:36.403712 18814 net.cpp:395] relu3b -> conv3b (in-place)
I0412 00:27:36.403724 18814 net.cpp:150] Setting up relu3b
I0412 00:27:36.403746 18814 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 00:27:36.403762 18814 net.cpp:165] Memory required for data: 9749397540
I0412 00:27:36.403777 18814 layer_factory.hpp:77] Creating layer pool3
I0412 00:27:36.403801 18814 net.cpp:100] Creating Layer pool3
I0412 00:27:36.403818 18814 net.cpp:434] pool3 <- conv3b
I0412 00:27:36.403837 18814 net.cpp:408] pool3 -> pool3
I0412 00:27:36.403954 18814 net.cpp:150] Setting up pool3
I0412 00:27:36.403966 18814 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 00:27:36.403970 18814 net.cpp:165] Memory required for data: 9787932708
I0412 00:27:36.403975 18814 layer_factory.hpp:77] Creating layer conv4a
I0412 00:27:36.404000 18814 net.cpp:100] Creating Layer conv4a
I0412 00:27:36.404021 18814 net.cpp:434] conv4a <- pool3
I0412 00:27:36.404042 18814 net.cpp:408] conv4a -> conv4a
I0412 00:27:36.439426 18814 net.cpp:150] Setting up conv4a
I0412 00:27:36.439455 18814 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 00:27:36.439460 18814 net.cpp:165] Memory required for data: 9865003044
I0412 00:27:36.439478 18814 layer_factory.hpp:77] Creating layer relu4a
I0412 00:27:36.439492 18814 net.cpp:100] Creating Layer relu4a
I0412 00:27:36.439499 18814 net.cpp:434] relu4a <- conv4a
I0412 00:27:36.439507 18814 net.cpp:395] relu4a -> conv4a (in-place)
I0412 00:27:36.439519 18814 net.cpp:150] Setting up relu4a
I0412 00:27:36.439540 18814 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 00:27:36.439556 18814 net.cpp:165] Memory required for data: 9942073380
I0412 00:27:36.439570 18814 layer_factory.hpp:77] Creating layer conv4b
I0412 00:27:36.439599 18814 net.cpp:100] Creating Layer conv4b
I0412 00:27:36.439615 18814 net.cpp:434] conv4b <- conv4a
I0412 00:27:36.439635 18814 net.cpp:408] conv4b -> conv4b
I0412 00:27:36.525626 18814 net.cpp:150] Setting up conv4b
I0412 00:27:36.525669 18814 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 00:27:36.525676 18814 net.cpp:165] Memory required for data: 10019143716
I0412 00:27:36.525689 18814 layer_factory.hpp:77] Creating layer relu4b
I0412 00:27:36.525703 18814 net.cpp:100] Creating Layer relu4b
I0412 00:27:36.525722 18814 net.cpp:434] relu4b <- conv4b
I0412 00:27:36.525735 18814 net.cpp:395] relu4b -> conv4b (in-place)
I0412 00:27:36.525749 18814 net.cpp:150] Setting up relu4b
I0412 00:27:36.525758 18814 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 00:27:36.525765 18814 net.cpp:165] Memory required for data: 10096214052
I0412 00:27:36.525770 18814 layer_factory.hpp:77] Creating layer pool4
I0412 00:27:36.525784 18814 net.cpp:100] Creating Layer pool4
I0412 00:27:36.525790 18814 net.cpp:434] pool4 <- conv4b
I0412 00:27:36.525800 18814 net.cpp:408] pool4 -> pool4
I0412 00:27:36.525874 18814 net.cpp:150] Setting up pool4
I0412 00:27:36.525887 18814 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 00:27:36.525894 18814 net.cpp:165] Memory required for data: 10105847844
I0412 00:27:36.525900 18814 layer_factory.hpp:77] Creating layer conv5a
I0412 00:27:36.525916 18814 net.cpp:100] Creating Layer conv5a
I0412 00:27:36.525924 18814 net.cpp:434] conv5a <- pool4
I0412 00:27:36.525935 18814 net.cpp:408] conv5a -> conv5a
I0412 00:27:36.620522 18814 net.cpp:150] Setting up conv5a
I0412 00:27:36.620558 18814 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 00:27:36.620564 18814 net.cpp:165] Memory required for data: 10115481636
I0412 00:27:36.620577 18814 layer_factory.hpp:77] Creating layer relu5a
I0412 00:27:36.620594 18814 net.cpp:100] Creating Layer relu5a
I0412 00:27:36.620604 18814 net.cpp:434] relu5a <- conv5a
I0412 00:27:36.620613 18814 net.cpp:395] relu5a -> conv5a (in-place)
I0412 00:27:36.620627 18814 net.cpp:150] Setting up relu5a
I0412 00:27:36.620636 18814 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 00:27:36.620640 18814 net.cpp:165] Memory required for data: 10125115428
I0412 00:27:36.620647 18814 layer_factory.hpp:77] Creating layer conv5b
I0412 00:27:36.620663 18814 net.cpp:100] Creating Layer conv5b
I0412 00:27:36.620671 18814 net.cpp:434] conv5b <- conv5a
I0412 00:27:36.620682 18814 net.cpp:408] conv5b -> conv5b
I0412 00:27:36.715020 18814 net.cpp:150] Setting up conv5b
I0412 00:27:36.715056 18814 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 00:27:36.715062 18814 net.cpp:165] Memory required for data: 10134749220
I0412 00:27:36.715075 18814 layer_factory.hpp:77] Creating layer relu5b
I0412 00:27:36.715095 18814 net.cpp:100] Creating Layer relu5b
I0412 00:27:36.715102 18814 net.cpp:434] relu5b <- conv5b
I0412 00:27:36.715116 18814 net.cpp:395] relu5b -> conv5b (in-place)
I0412 00:27:36.715128 18814 net.cpp:150] Setting up relu5b
I0412 00:27:36.715135 18814 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 00:27:36.715142 18814 net.cpp:165] Memory required for data: 10144383012
I0412 00:27:36.715147 18814 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 00:27:36.715154 18814 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 00:27:36.715160 18814 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 00:27:36.715167 18814 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 00:27:36.715178 18814 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 00:27:36.715236 18814 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 00:27:36.715247 18814 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 00:27:36.715255 18814 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 00:27:36.715260 18814 net.cpp:165] Memory required for data: 10163650596
I0412 00:27:36.715263 18814 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 00:27:36.715276 18814 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 00:27:36.715283 18814 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 00:27:36.715291 18814 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 00:27:36.816619 18814 net.cpp:150] Setting up rpn_conv/3x3
I0412 00:27:36.816650 18814 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 00:27:36.816654 18814 net.cpp:165] Memory required for data: 10166796324
I0412 00:27:36.816690 18814 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 00:27:36.816710 18814 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 00:27:36.816720 18814 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 00:27:36.816735 18814 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 00:27:36.816752 18814 net.cpp:150] Setting up rpn_relu/3x3
I0412 00:27:36.816761 18814 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 00:27:36.816773 18814 net.cpp:165] Memory required for data: 10169942052
I0412 00:27:36.816778 18814 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 00:27:36.816793 18814 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 00:27:36.816798 18814 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 00:27:36.816805 18814 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 00:27:36.898732 18814 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 00:27:36.898808 18814 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 00:27:36.898823 18814 net.cpp:165] Memory required for data: 10170728484
I0412 00:27:36.898844 18814 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 00:27:36.898869 18814 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 00:27:36.898886 18814 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 00:27:36.898903 18814 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 00:27:36.898927 18814 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 00:27:36.898946 18814 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 00:27:36.898958 18814 net.cpp:165] Memory required for data: 10171514916
I0412 00:27:36.898970 18814 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 00:27:36.898989 18814 net.cpp:100] Creating Layer rpn/output_pool
I0412 00:27:36.899003 18814 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 00:27:36.899019 18814 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 00:27:36.899091 18814 net.cpp:150] Setting up rpn/output_pool
I0412 00:27:36.899111 18814 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 00:27:36.899124 18814 net.cpp:165] Memory required for data: 10171711524
I0412 00:27:36.899137 18814 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 00:27:36.899155 18814 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 00:27:36.899168 18814 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 00:27:36.899185 18814 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 00:27:36.899204 18814 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 00:27:36.899267 18814 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 00:27:36.899286 18814 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 00:27:36.899300 18814 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 00:27:36.899313 18814 net.cpp:165] Memory required for data: 10172104740
I0412 00:27:36.899327 18814 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 00:27:36.899348 18814 net.cpp:100] Creating Layer rpn_cls_score
I0412 00:27:36.899361 18814 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 00:27:36.899379 18814 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 00:27:36.900197 18814 net.cpp:150] Setting up rpn_cls_score
I0412 00:27:36.900219 18814 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 00:27:36.900233 18814 net.cpp:165] Memory required for data: 10172133156
I0412 00:27:36.900249 18814 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 00:27:36.900265 18814 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 00:27:36.900279 18814 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 00:27:36.900295 18814 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 00:27:36.900313 18814 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 00:27:36.900427 18814 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 00:27:36.900449 18814 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 00:27:36.900463 18814 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 00:27:36.900476 18814 net.cpp:165] Memory required for data: 10172189988
I0412 00:27:36.900488 18814 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 00:27:36.900517 18814 net.cpp:100] Creating Layer rpn_twin_pred
I0412 00:27:36.900532 18814 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 00:27:36.900548 18814 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 00:27:36.901357 18814 net.cpp:150] Setting up rpn_twin_pred
I0412 00:27:36.901381 18814 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 00:27:36.901393 18814 net.cpp:165] Memory required for data: 10172218404
I0412 00:27:36.901409 18814 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 00:27:36.901425 18814 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 00:27:36.901438 18814 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 00:27:36.901456 18814 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 00:27:36.901474 18814 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 00:27:36.901552 18814 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 00:27:36.901576 18814 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 00:27:36.901589 18814 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 00:27:36.901602 18814 net.cpp:165] Memory required for data: 10172275236
I0412 00:27:36.901615 18814 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 00:27:36.901634 18814 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 00:27:36.901648 18814 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 00:27:36.901664 18814 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 00:27:36.901716 18814 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 00:27:36.901736 18814 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 00:27:36.901748 18814 net.cpp:165] Memory required for data: 10172303652
I0412 00:27:36.901760 18814 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 00:27:36.901775 18814 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 00:27:36.901789 18814 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 00:27:36.901806 18814 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 00:27:36.901831 18814 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 00:27:36.901841 18814 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 00:27:36.901912 18814 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 00:27:36.901921 18814 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 00:27:36.901927 18814 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 00:27:36.901932 18814 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 00:27:36.901937 18814 net.cpp:165] Memory required for data: 10172388900
I0412 00:27:36.901940 18814 layer_factory.hpp:77] Creating layer rpn-data
I0412 00:27:36.902431 18814 net.cpp:100] Creating Layer rpn-data
I0412 00:27:36.902446 18814 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 00:27:36.902452 18814 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 00:27:36.902457 18814 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 00:27:36.902467 18814 net.cpp:408] rpn-data -> rpn_labels
I0412 00:27:36.902474 18814 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 00:27:36.902482 18814 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 00:27:36.902490 18814 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 00:27:36.906114 18814 net.cpp:150] Setting up rpn-data
I0412 00:27:36.906149 18814 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 00:27:36.906167 18814 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 00:27:36.906180 18814 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 00:27:36.906195 18814 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 00:27:36.906208 18814 net.cpp:165] Memory required for data: 10172488356
I0412 00:27:36.906220 18814 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 00:27:36.906236 18814 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 00:27:36.906251 18814 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 00:27:36.906267 18814 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 00:27:36.906286 18814 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 00:27:36.906348 18814 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 00:27:36.906368 18814 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 00:27:36.906383 18814 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 00:27:36.906394 18814 net.cpp:165] Memory required for data: 10172516772
I0412 00:27:36.906407 18814 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 00:27:36.906424 18814 net.cpp:100] Creating Layer rpn_loss_cls
I0412 00:27:36.906437 18814 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 00:27:36.906452 18814 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 00:27:36.906467 18814 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 00:27:36.906486 18814 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 00:27:36.906641 18814 net.cpp:150] Setting up rpn_loss_cls
I0412 00:27:36.906661 18814 net.cpp:157] Top shape: (1)
I0412 00:27:36.906673 18814 net.cpp:160]     with loss weight 1
I0412 00:27:36.906695 18814 net.cpp:165] Memory required for data: 10172516776
I0412 00:27:36.906708 18814 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 00:27:36.906724 18814 net.cpp:100] Creating Layer rpn_loss_twin
I0412 00:27:36.906738 18814 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 00:27:36.906752 18814 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 00:27:36.906767 18814 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 00:27:36.906780 18814 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 00:27:36.906800 18814 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 00:27:36.906940 18814 net.cpp:150] Setting up rpn_loss_twin
I0412 00:27:36.906961 18814 net.cpp:157] Top shape: (1)
I0412 00:27:36.906975 18814 net.cpp:160]     with loss weight 1
I0412 00:27:36.906989 18814 net.cpp:165] Memory required for data: 10172516780
I0412 00:27:36.907002 18814 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 00:27:36.907021 18814 net.cpp:100] Creating Layer rpn_accuarcy
I0412 00:27:36.907034 18814 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 00:27:36.907048 18814 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 00:27:36.907063 18814 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 00:27:36.907080 18814 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 00:27:36.907146 18814 net.cpp:150] Setting up rpn_accuarcy
I0412 00:27:36.907166 18814 net.cpp:157] Top shape: (1)
I0412 00:27:36.907181 18814 net.cpp:157] Top shape: 2 (2)
I0412 00:27:36.907192 18814 net.cpp:165] Memory required for data: 10172516792
I0412 00:27:36.907204 18814 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 00:27:36.907222 18814 net.cpp:100] Creating Layer rpn_cls_prob
I0412 00:27:36.907235 18814 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 00:27:36.907250 18814 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 00:27:36.907351 18814 net.cpp:150] Setting up rpn_cls_prob
I0412 00:27:36.907372 18814 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 00:27:36.907385 18814 net.cpp:165] Memory required for data: 10172545208
I0412 00:27:36.907404 18814 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 00:27:36.907421 18814 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 00:27:36.907434 18814 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 00:27:36.907452 18814 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 00:27:36.907500 18814 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 00:27:36.907519 18814 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 00:27:36.907532 18814 net.cpp:165] Memory required for data: 10172573624
I0412 00:27:36.907544 18814 layer_factory.hpp:77] Creating layer proposal
I0412 00:27:36.908279 18814 net.cpp:100] Creating Layer proposal
I0412 00:27:36.908308 18814 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 00:27:36.908354 18814 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 00:27:36.908376 18814 net.cpp:408] proposal -> rpn_rois
I0412 00:27:36.913337 18814 net.cpp:150] Setting up proposal
I0412 00:27:36.913372 18814 net.cpp:157] Top shape: 1 3 (3)
I0412 00:27:36.913385 18814 net.cpp:165] Memory required for data: 10172573636
I0412 00:27:36.913400 18814 layer_factory.hpp:77] Creating layer roi-data
I0412 00:27:36.913583 18814 net.cpp:100] Creating Layer roi-data
I0412 00:27:36.913607 18814 net.cpp:434] roi-data <- rpn_rois
I0412 00:27:36.913624 18814 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 00:27:36.913640 18814 net.cpp:408] roi-data -> rois
I0412 00:27:36.913660 18814 net.cpp:408] roi-data -> labels
I0412 00:27:36.913677 18814 net.cpp:408] roi-data -> twin_targets
I0412 00:27:36.913695 18814 net.cpp:408] roi-data -> twin_inside_weights
I0412 00:27:36.913712 18814 net.cpp:408] roi-data -> twin_outside_weights
I0412 00:27:36.914177 18814 net.cpp:150] Setting up roi-data
I0412 00:27:36.914206 18814 net.cpp:157] Top shape: 1 3 (3)
I0412 00:27:36.914221 18814 net.cpp:157] Top shape: 1 1 (1)
I0412 00:27:36.914234 18814 net.cpp:157] Top shape: 1 402 (402)
I0412 00:27:36.914247 18814 net.cpp:157] Top shape: 1 402 (402)
I0412 00:27:36.914261 18814 net.cpp:157] Top shape: 1 402 (402)
I0412 00:27:36.914273 18814 net.cpp:165] Memory required for data: 10172578476
I0412 00:27:36.914286 18814 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 00:27:36.914302 18814 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 00:27:36.914316 18814 net.cpp:434] labels_roi-data_1_split <- labels
I0412 00:27:36.914332 18814 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 00:27:36.914350 18814 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 00:27:36.914415 18814 net.cpp:150] Setting up labels_roi-data_1_split
I0412 00:27:36.914434 18814 net.cpp:157] Top shape: 1 1 (1)
I0412 00:27:36.914448 18814 net.cpp:157] Top shape: 1 1 (1)
I0412 00:27:36.914460 18814 net.cpp:165] Memory required for data: 10172578484
I0412 00:27:36.914474 18814 layer_factory.hpp:77] Creating layer roi_pool5
I0412 00:27:36.914489 18814 net.cpp:100] Creating Layer roi_pool5
I0412 00:27:36.914502 18814 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 00:27:36.914517 18814 net.cpp:434] roi_pool5 <- rois
I0412 00:27:36.914533 18814 net.cpp:408] roi_pool5 -> pool5
I0412 00:27:36.914551 18814 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 00:27:36.914569 18814 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 00:27:36.914634 18814 net.cpp:150] Setting up roi_pool5
I0412 00:27:36.914654 18814 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 00:27:36.914666 18814 net.cpp:165] Memory required for data: 10172611252
I0412 00:27:36.914680 18814 layer_factory.hpp:77] Creating layer fc6
I0412 00:27:36.914698 18814 net.cpp:100] Creating Layer fc6
I0412 00:27:36.914712 18814 net.cpp:434] fc6 <- pool5
I0412 00:27:36.914727 18814 net.cpp:408] fc6 -> fc6
I0412 00:27:37.233809 18814 net.cpp:150] Setting up fc6
I0412 00:27:37.233846 18814 net.cpp:157] Top shape: 1 4096 (4096)
I0412 00:27:37.233850 18814 net.cpp:165] Memory required for data: 10172627636
I0412 00:27:37.233863 18814 layer_factory.hpp:77] Creating layer relu6
I0412 00:27:37.233875 18814 net.cpp:100] Creating Layer relu6
I0412 00:27:37.233880 18814 net.cpp:434] relu6 <- fc6
I0412 00:27:37.233887 18814 net.cpp:395] relu6 -> fc6 (in-place)
I0412 00:27:37.233901 18814 net.cpp:150] Setting up relu6
I0412 00:27:37.233906 18814 net.cpp:157] Top shape: 1 4096 (4096)
I0412 00:27:37.233911 18814 net.cpp:165] Memory required for data: 10172644020
I0412 00:27:37.233914 18814 layer_factory.hpp:77] Creating layer drop6
I0412 00:27:37.233923 18814 net.cpp:100] Creating Layer drop6
I0412 00:27:37.233929 18814 net.cpp:434] drop6 <- fc6
I0412 00:27:37.233934 18814 net.cpp:395] drop6 -> fc6 (in-place)
I0412 00:27:37.233969 18814 net.cpp:150] Setting up drop6
I0412 00:27:37.233978 18814 net.cpp:157] Top shape: 1 4096 (4096)
I0412 00:27:37.233981 18814 net.cpp:165] Memory required for data: 10172660404
I0412 00:27:37.233985 18814 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 00:27:37.233992 18814 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 00:27:37.233996 18814 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 00:27:37.234004 18814 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 00:27:37.234012 18814 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 00:27:37.234094 18814 net.cpp:150] Setting up fc6_drop6_0_split
I0412 00:27:37.234110 18814 net.cpp:157] Top shape: 1 4096 (4096)
I0412 00:27:37.234166 18814 net.cpp:157] Top shape: 1 4096 (4096)
I0412 00:27:37.234181 18814 net.cpp:165] Memory required for data: 10172693172
I0412 00:27:37.234189 18814 layer_factory.hpp:77] Creating layer cls_score
I0412 00:27:37.234199 18814 net.cpp:100] Creating Layer cls_score
I0412 00:27:37.234205 18814 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 00:27:37.234213 18814 net.cpp:408] cls_score -> cls_score
I0412 00:27:37.246209 18814 net.cpp:150] Setting up cls_score
I0412 00:27:37.246245 18814 net.cpp:157] Top shape: 1 201 (201)
I0412 00:27:37.246249 18814 net.cpp:165] Memory required for data: 10172693976
I0412 00:27:37.246263 18814 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 00:27:37.246275 18814 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 00:27:37.246284 18814 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 00:27:37.246292 18814 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 00:27:37.246306 18814 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 00:27:37.246369 18814 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 00:27:37.246377 18814 net.cpp:157] Top shape: 1 201 (201)
I0412 00:27:37.246382 18814 net.cpp:157] Top shape: 1 201 (201)
I0412 00:27:37.246387 18814 net.cpp:165] Memory required for data: 10172695584
I0412 00:27:37.246392 18814 layer_factory.hpp:77] Creating layer twin_pred
I0412 00:27:37.246402 18814 net.cpp:100] Creating Layer twin_pred
I0412 00:27:37.246408 18814 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 00:27:37.246417 18814 net.cpp:408] twin_pred -> twin_pred
I0412 00:27:37.269235 18814 net.cpp:150] Setting up twin_pred
I0412 00:27:37.269309 18814 net.cpp:157] Top shape: 1 402 (402)
I0412 00:27:37.269325 18814 net.cpp:165] Memory required for data: 10172697192
I0412 00:27:37.269346 18814 layer_factory.hpp:77] Creating layer loss_cls
I0412 00:27:37.269367 18814 net.cpp:100] Creating Layer loss_cls
I0412 00:27:37.269382 18814 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 00:27:37.269398 18814 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 00:27:37.269420 18814 net.cpp:408] loss_cls -> loss_cls
I0412 00:27:37.269443 18814 layer_factory.hpp:77] Creating layer loss_cls
I0412 00:27:37.269613 18814 net.cpp:150] Setting up loss_cls
I0412 00:27:37.269624 18814 net.cpp:157] Top shape: (1)
I0412 00:27:37.269629 18814 net.cpp:160]     with loss weight 1
I0412 00:27:37.269642 18814 net.cpp:165] Memory required for data: 10172697196
I0412 00:27:37.269647 18814 layer_factory.hpp:77] Creating layer loss_twin
I0412 00:27:37.269654 18814 net.cpp:100] Creating Layer loss_twin
I0412 00:27:37.269659 18814 net.cpp:434] loss_twin <- twin_pred
I0412 00:27:37.269665 18814 net.cpp:434] loss_twin <- twin_targets
I0412 00:27:37.269670 18814 net.cpp:434] loss_twin <- twin_inside_weights
I0412 00:27:37.269675 18814 net.cpp:434] loss_twin <- twin_outside_weights
I0412 00:27:37.269683 18814 net.cpp:408] loss_twin -> loss_twin
I0412 00:27:37.269825 18814 net.cpp:150] Setting up loss_twin
I0412 00:27:37.269835 18814 net.cpp:157] Top shape: (1)
I0412 00:27:37.269840 18814 net.cpp:160]     with loss weight 1
I0412 00:27:37.269846 18814 net.cpp:165] Memory required for data: 10172697200
I0412 00:27:37.269851 18814 layer_factory.hpp:77] Creating layer accuarcy
I0412 00:27:37.269858 18814 net.cpp:100] Creating Layer accuarcy
I0412 00:27:37.269865 18814 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 00:27:37.269871 18814 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 00:27:37.269878 18814 net.cpp:408] accuarcy -> accuarcy
I0412 00:27:37.269888 18814 net.cpp:150] Setting up accuarcy
I0412 00:27:37.269896 18814 net.cpp:157] Top shape: (1)
I0412 00:27:37.269899 18814 net.cpp:165] Memory required for data: 10172697204
I0412 00:27:37.269903 18814 net.cpp:228] accuarcy does not need backward computation.
I0412 00:27:37.269908 18814 net.cpp:226] loss_twin needs backward computation.
I0412 00:27:37.269913 18814 net.cpp:226] loss_cls needs backward computation.
I0412 00:27:37.269919 18814 net.cpp:226] twin_pred needs backward computation.
I0412 00:27:37.269923 18814 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 00:27:37.269928 18814 net.cpp:226] cls_score needs backward computation.
I0412 00:27:37.269934 18814 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 00:27:37.269939 18814 net.cpp:226] drop6 needs backward computation.
I0412 00:27:37.269943 18814 net.cpp:226] relu6 needs backward computation.
I0412 00:27:37.269948 18814 net.cpp:226] fc6 needs backward computation.
I0412 00:27:37.269951 18814 net.cpp:226] roi_pool5 needs backward computation.
I0412 00:27:37.269958 18814 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 00:27:37.269963 18814 net.cpp:226] roi-data needs backward computation.
I0412 00:27:37.269968 18814 net.cpp:226] proposal needs backward computation.
I0412 00:27:37.269974 18814 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 00:27:37.269979 18814 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 00:27:37.269984 18814 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 00:27:37.269991 18814 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 00:27:37.269999 18814 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 00:27:37.270004 18814 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 00:27:37.270010 18814 net.cpp:226] rpn-data needs backward computation.
I0412 00:27:37.270016 18814 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 00:27:37.270022 18814 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 00:27:37.270027 18814 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 00:27:37.270032 18814 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 00:27:37.270038 18814 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 00:27:37.270045 18814 net.cpp:226] rpn_cls_score needs backward computation.
I0412 00:27:37.270054 18814 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 00:27:37.270063 18814 net.cpp:226] rpn/output_pool needs backward computation.
I0412 00:27:37.270068 18814 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 00:27:37.270072 18814 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 00:27:37.270076 18814 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 00:27:37.270082 18814 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 00:27:37.270087 18814 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 00:27:37.270092 18814 net.cpp:226] relu5b needs backward computation.
I0412 00:27:37.270097 18814 net.cpp:226] conv5b needs backward computation.
I0412 00:27:37.270107 18814 net.cpp:226] relu5a needs backward computation.
I0412 00:27:37.270119 18814 net.cpp:226] conv5a needs backward computation.
I0412 00:27:37.270164 18814 net.cpp:226] pool4 needs backward computation.
I0412 00:27:37.270184 18814 net.cpp:226] relu4b needs backward computation.
I0412 00:27:37.270196 18814 net.cpp:226] conv4b needs backward computation.
I0412 00:27:37.270206 18814 net.cpp:226] relu4a needs backward computation.
I0412 00:27:37.270215 18814 net.cpp:226] conv4a needs backward computation.
I0412 00:27:37.270221 18814 net.cpp:226] pool3 needs backward computation.
I0412 00:27:37.270226 18814 net.cpp:226] relu3b needs backward computation.
I0412 00:27:37.270231 18814 net.cpp:226] conv3b needs backward computation.
I0412 00:27:37.270234 18814 net.cpp:226] relu3a needs backward computation.
I0412 00:27:37.270239 18814 net.cpp:226] conv3a needs backward computation.
I0412 00:27:37.270243 18814 net.cpp:228] pool2 does not need backward computation.
I0412 00:27:37.270248 18814 net.cpp:228] relu2a does not need backward computation.
I0412 00:27:37.270252 18814 net.cpp:228] conv2a does not need backward computation.
I0412 00:27:37.270257 18814 net.cpp:228] pool1 does not need backward computation.
I0412 00:27:37.270262 18814 net.cpp:228] relu1a does not need backward computation.
I0412 00:27:37.270267 18814 net.cpp:228] conv1a does not need backward computation.
I0412 00:27:37.270273 18814 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 00:27:37.270279 18814 net.cpp:228] data_data_0_split does not need backward computation.
I0412 00:27:37.270284 18814 net.cpp:228] data does not need backward computation.
I0412 00:27:37.270288 18814 net.cpp:270] This network produces output accuarcy
I0412 00:27:37.270293 18814 net.cpp:270] This network produces output loss_cls
I0412 00:27:37.270298 18814 net.cpp:270] This network produces output loss_twin
I0412 00:27:37.270303 18814 net.cpp:270] This network produces output rpn_accuarcy
I0412 00:27:37.270308 18814 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 00:27:37.270311 18814 net.cpp:270] This network produces output rpn_cls_loss
I0412 00:27:37.270315 18814 net.cpp:270] This network produces output rpn_loss_twin
I0412 00:27:37.270370 18814 net.cpp:283] Network initialization done.
I0412 00:27:37.270537 18814 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 00:27:37.470100 18814 net.cpp:761] Ignoring source layer pool5
I0412 00:27:37.499313 18814 net.cpp:761] Ignoring source layer fc7
I0412 00:27:37.499393 18814 net.cpp:761] Ignoring source layer relu7
I0412 00:27:37.499409 18814 net.cpp:761] Ignoring source layer drop7
I0412 00:27:37.499423 18814 net.cpp:761] Ignoring source layer fc8-200
I0412 00:27:37.499439 18814 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
99
(array([0]), array([97]))
(array([[3.1250000e-02, 3.8569803e+02]], dtype=float32), array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 0.]], dtype=float32))
(1, 101)
[[3.1250000e-02 3.8569803e+02]]
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 95, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 135, in forward
    print(np.concatenate(blob1, blob2))
TypeError: only integer scalar arrays can be converted to a scalar index
Terminating BlobFetcher
