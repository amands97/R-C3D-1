Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 01:55:22.949040 26424 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 01:55:22.949108 26424 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 01:55:22.950016 26424 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 01:55:22.950937 26424 layer_factory.hpp:77] Creating layer data
I0412 01:55:22.966558 26424 net.cpp:100] Creating Layer data
I0412 01:55:22.966619 26424 net.cpp:408] data -> data
I0412 01:55:22.966655 26424 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 01:55:22.979202 26424 net.cpp:150] Setting up data
I0412 01:55:22.979241 26424 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:55:22.979259 26424 net.cpp:157] Top shape: 1 3 (3)
I0412 01:55:22.979272 26424 net.cpp:165] Memory required for data: 115605516
I0412 01:55:22.979290 26424 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 01:55:22.979313 26424 net.cpp:100] Creating Layer data_data_0_split
I0412 01:55:22.979331 26424 net.cpp:434] data_data_0_split <- data
I0412 01:55:22.979351 26424 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 01:55:22.979375 26424 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 01:55:22.979447 26424 net.cpp:150] Setting up data_data_0_split
I0412 01:55:22.979470 26424 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:55:22.979487 26424 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:55:22.979501 26424 net.cpp:165] Memory required for data: 346816524
I0412 01:55:22.979514 26424 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 01:55:22.979532 26424 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 01:55:22.979545 26424 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 01:55:22.979565 26424 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 01:55:22.979585 26424 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 01:55:22.979660 26424 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 01:55:22.979682 26424 net.cpp:157] Top shape: 1 3 (3)
I0412 01:55:22.979698 26424 net.cpp:157] Top shape: 1 3 (3)
I0412 01:55:22.979717 26424 net.cpp:165] Memory required for data: 346816548
I0412 01:55:22.979732 26424 layer_factory.hpp:77] Creating layer conv1a
I0412 01:55:22.979759 26424 net.cpp:100] Creating Layer conv1a
I0412 01:55:22.979773 26424 net.cpp:434] conv1a <- data_data_0_split_0
I0412 01:55:22.979794 26424 net.cpp:408] conv1a -> conv1a
I0412 01:55:23.001582 26424 net.cpp:150] Setting up conv1a
I0412 01:55:23.001612 26424 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 01:55:23.001616 26424 net.cpp:165] Memory required for data: 2813067300
I0412 01:55:23.001632 26424 layer_factory.hpp:77] Creating layer relu1a
I0412 01:55:23.001648 26424 net.cpp:100] Creating Layer relu1a
I0412 01:55:23.001653 26424 net.cpp:434] relu1a <- conv1a
I0412 01:55:23.001659 26424 net.cpp:395] relu1a -> conv1a (in-place)
I0412 01:55:23.001672 26424 net.cpp:150] Setting up relu1a
I0412 01:55:23.001677 26424 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 01:55:23.001679 26424 net.cpp:165] Memory required for data: 5279318052
I0412 01:55:23.001682 26424 layer_factory.hpp:77] Creating layer pool1
I0412 01:55:23.001690 26424 net.cpp:100] Creating Layer pool1
I0412 01:55:23.001696 26424 net.cpp:434] pool1 <- conv1a
I0412 01:55:23.001701 26424 net.cpp:408] pool1 -> pool1
I0412 01:55:23.001797 26424 net.cpp:150] Setting up pool1
I0412 01:55:23.001806 26424 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 01:55:23.001811 26424 net.cpp:165] Memory required for data: 5895880740
I0412 01:55:23.001816 26424 layer_factory.hpp:77] Creating layer conv2a
I0412 01:55:23.001827 26424 net.cpp:100] Creating Layer conv2a
I0412 01:55:23.001834 26424 net.cpp:434] conv2a <- pool1
I0412 01:55:23.001845 26424 net.cpp:408] conv2a -> conv2a
I0412 01:55:23.012388 26424 net.cpp:150] Setting up conv2a
I0412 01:55:23.012468 26424 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 01:55:23.012485 26424 net.cpp:165] Memory required for data: 7129006116
I0412 01:55:23.012514 26424 layer_factory.hpp:77] Creating layer relu2a
I0412 01:55:23.012540 26424 net.cpp:100] Creating Layer relu2a
I0412 01:55:23.012557 26424 net.cpp:434] relu2a <- conv2a
I0412 01:55:23.012574 26424 net.cpp:395] relu2a -> conv2a (in-place)
I0412 01:55:23.012596 26424 net.cpp:150] Setting up relu2a
I0412 01:55:23.012614 26424 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 01:55:23.012626 26424 net.cpp:165] Memory required for data: 8362131492
I0412 01:55:23.012650 26424 layer_factory.hpp:77] Creating layer pool2
I0412 01:55:23.012672 26424 net.cpp:100] Creating Layer pool2
I0412 01:55:23.012687 26424 net.cpp:434] pool2 <- conv2a
I0412 01:55:23.012703 26424 net.cpp:408] pool2 -> pool2
I0412 01:55:23.012826 26424 net.cpp:150] Setting up pool2
I0412 01:55:23.012847 26424 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 01:55:23.012861 26424 net.cpp:165] Memory required for data: 8516272164
I0412 01:55:23.012876 26424 layer_factory.hpp:77] Creating layer conv3a
I0412 01:55:23.012899 26424 net.cpp:100] Creating Layer conv3a
I0412 01:55:23.012917 26424 net.cpp:434] conv3a <- pool2
I0412 01:55:23.012935 26424 net.cpp:408] conv3a -> conv3a
I0412 01:55:23.026072 26424 net.cpp:150] Setting up conv3a
I0412 01:55:23.026136 26424 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:55:23.026154 26424 net.cpp:165] Memory required for data: 8824553508
I0412 01:55:23.026180 26424 layer_factory.hpp:77] Creating layer relu3a
I0412 01:55:23.026201 26424 net.cpp:100] Creating Layer relu3a
I0412 01:55:23.026216 26424 net.cpp:434] relu3a <- conv3a
I0412 01:55:23.026242 26424 net.cpp:395] relu3a -> conv3a (in-place)
I0412 01:55:23.026262 26424 net.cpp:150] Setting up relu3a
I0412 01:55:23.026288 26424 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:55:23.026301 26424 net.cpp:165] Memory required for data: 9132834852
I0412 01:55:23.026316 26424 layer_factory.hpp:77] Creating layer conv3b
I0412 01:55:23.026346 26424 net.cpp:100] Creating Layer conv3b
I0412 01:55:23.026362 26424 net.cpp:434] conv3b <- conv3a
I0412 01:55:23.026381 26424 net.cpp:408] conv3b -> conv3b
I0412 01:55:23.061929 26424 net.cpp:150] Setting up conv3b
I0412 01:55:23.061993 26424 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:55:23.062010 26424 net.cpp:165] Memory required for data: 9441116196
I0412 01:55:23.062031 26424 layer_factory.hpp:77] Creating layer relu3b
I0412 01:55:23.062052 26424 net.cpp:100] Creating Layer relu3b
I0412 01:55:23.062067 26424 net.cpp:434] relu3b <- conv3b
I0412 01:55:23.062086 26424 net.cpp:395] relu3b -> conv3b (in-place)
I0412 01:55:23.062109 26424 net.cpp:150] Setting up relu3b
I0412 01:55:23.062127 26424 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:55:23.062140 26424 net.cpp:165] Memory required for data: 9749397540
I0412 01:55:23.062153 26424 layer_factory.hpp:77] Creating layer pool3
I0412 01:55:23.062170 26424 net.cpp:100] Creating Layer pool3
I0412 01:55:23.062186 26424 net.cpp:434] pool3 <- conv3b
I0412 01:55:23.062202 26424 net.cpp:408] pool3 -> pool3
I0412 01:55:23.062285 26424 net.cpp:150] Setting up pool3
I0412 01:55:23.062305 26424 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 01:55:23.062319 26424 net.cpp:165] Memory required for data: 9787932708
I0412 01:55:23.062331 26424 layer_factory.hpp:77] Creating layer conv4a
I0412 01:55:23.062361 26424 net.cpp:100] Creating Layer conv4a
I0412 01:55:23.062374 26424 net.cpp:434] conv4a <- pool3
I0412 01:55:23.062391 26424 net.cpp:408] conv4a -> conv4a
I0412 01:55:23.102044 26424 net.cpp:150] Setting up conv4a
I0412 01:55:23.102108 26424 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:55:23.102123 26424 net.cpp:165] Memory required for data: 9865003044
I0412 01:55:23.102152 26424 layer_factory.hpp:77] Creating layer relu4a
I0412 01:55:23.102174 26424 net.cpp:100] Creating Layer relu4a
I0412 01:55:23.102190 26424 net.cpp:434] relu4a <- conv4a
I0412 01:55:23.102202 26424 net.cpp:395] relu4a -> conv4a (in-place)
I0412 01:55:23.102214 26424 net.cpp:150] Setting up relu4a
I0412 01:55:23.102219 26424 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:55:23.102223 26424 net.cpp:165] Memory required for data: 9942073380
I0412 01:55:23.102228 26424 layer_factory.hpp:77] Creating layer conv4b
I0412 01:55:23.102244 26424 net.cpp:100] Creating Layer conv4b
I0412 01:55:23.102249 26424 net.cpp:434] conv4b <- conv4a
I0412 01:55:23.102257 26424 net.cpp:408] conv4b -> conv4b
I0412 01:55:23.175282 26424 net.cpp:150] Setting up conv4b
I0412 01:55:23.175312 26424 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:55:23.175317 26424 net.cpp:165] Memory required for data: 10019143716
I0412 01:55:23.175324 26424 layer_factory.hpp:77] Creating layer relu4b
I0412 01:55:23.175334 26424 net.cpp:100] Creating Layer relu4b
I0412 01:55:23.175339 26424 net.cpp:434] relu4b <- conv4b
I0412 01:55:23.175345 26424 net.cpp:395] relu4b -> conv4b (in-place)
I0412 01:55:23.175354 26424 net.cpp:150] Setting up relu4b
I0412 01:55:23.175357 26424 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:55:23.175361 26424 net.cpp:165] Memory required for data: 10096214052
I0412 01:55:23.175364 26424 layer_factory.hpp:77] Creating layer pool4
I0412 01:55:23.175370 26424 net.cpp:100] Creating Layer pool4
I0412 01:55:23.175374 26424 net.cpp:434] pool4 <- conv4b
I0412 01:55:23.175379 26424 net.cpp:408] pool4 -> pool4
I0412 01:55:23.175423 26424 net.cpp:150] Setting up pool4
I0412 01:55:23.175428 26424 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:55:23.175431 26424 net.cpp:165] Memory required for data: 10105847844
I0412 01:55:23.175434 26424 layer_factory.hpp:77] Creating layer conv5a
I0412 01:55:23.175442 26424 net.cpp:100] Creating Layer conv5a
I0412 01:55:23.175446 26424 net.cpp:434] conv5a <- pool4
I0412 01:55:23.175451 26424 net.cpp:408] conv5a -> conv5a
I0412 01:55:23.252176 26424 net.cpp:150] Setting up conv5a
I0412 01:55:23.252205 26424 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:55:23.252208 26424 net.cpp:165] Memory required for data: 10115481636
I0412 01:55:23.252218 26424 layer_factory.hpp:77] Creating layer relu5a
I0412 01:55:23.252226 26424 net.cpp:100] Creating Layer relu5a
I0412 01:55:23.252231 26424 net.cpp:434] relu5a <- conv5a
I0412 01:55:23.252239 26424 net.cpp:395] relu5a -> conv5a (in-place)
I0412 01:55:23.252249 26424 net.cpp:150] Setting up relu5a
I0412 01:55:23.252254 26424 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:55:23.252259 26424 net.cpp:165] Memory required for data: 10125115428
I0412 01:55:23.252261 26424 layer_factory.hpp:77] Creating layer conv5b
I0412 01:55:23.252272 26424 net.cpp:100] Creating Layer conv5b
I0412 01:55:23.252277 26424 net.cpp:434] conv5b <- conv5a
I0412 01:55:23.252282 26424 net.cpp:408] conv5b -> conv5b
I0412 01:55:23.321692 26424 net.cpp:150] Setting up conv5b
I0412 01:55:23.321745 26424 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:55:23.321751 26424 net.cpp:165] Memory required for data: 10134749220
I0412 01:55:23.321763 26424 layer_factory.hpp:77] Creating layer relu5b
I0412 01:55:23.321779 26424 net.cpp:100] Creating Layer relu5b
I0412 01:55:23.321787 26424 net.cpp:434] relu5b <- conv5b
I0412 01:55:23.321794 26424 net.cpp:395] relu5b -> conv5b (in-place)
I0412 01:55:23.321805 26424 net.cpp:150] Setting up relu5b
I0412 01:55:23.321810 26424 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:55:23.321813 26424 net.cpp:165] Memory required for data: 10144383012
I0412 01:55:23.321817 26424 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 01:55:23.321826 26424 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 01:55:23.321830 26424 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 01:55:23.321836 26424 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 01:55:23.321844 26424 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 01:55:23.321907 26424 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 01:55:23.321914 26424 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:55:23.321920 26424 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:55:23.321924 26424 net.cpp:165] Memory required for data: 10163650596
I0412 01:55:23.321929 26424 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 01:55:23.321943 26424 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 01:55:23.321949 26424 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 01:55:23.321959 26424 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 01:55:23.414772 26424 net.cpp:150] Setting up rpn_conv/3x3
I0412 01:55:23.414808 26424 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 01:55:23.414813 26424 net.cpp:165] Memory required for data: 10166796324
I0412 01:55:23.414837 26424 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 01:55:23.414851 26424 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 01:55:23.414860 26424 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 01:55:23.414870 26424 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 01:55:23.414885 26424 net.cpp:150] Setting up rpn_relu/3x3
I0412 01:55:23.414893 26424 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 01:55:23.414898 26424 net.cpp:165] Memory required for data: 10169942052
I0412 01:55:23.414902 26424 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 01:55:23.414918 26424 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 01:55:23.414927 26424 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 01:55:23.414937 26424 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 01:55:23.506799 26424 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 01:55:23.506832 26424 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 01:55:23.506835 26424 net.cpp:165] Memory required for data: 10170728484
I0412 01:55:23.506844 26424 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 01:55:23.506855 26424 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 01:55:23.506860 26424 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 01:55:23.506866 26424 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 01:55:23.506875 26424 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 01:55:23.506880 26424 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 01:55:23.506882 26424 net.cpp:165] Memory required for data: 10171514916
I0412 01:55:23.506886 26424 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 01:55:23.506893 26424 net.cpp:100] Creating Layer rpn/output_pool
I0412 01:55:23.506897 26424 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 01:55:23.506902 26424 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 01:55:23.506947 26424 net.cpp:150] Setting up rpn/output_pool
I0412 01:55:23.506953 26424 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:55:23.506956 26424 net.cpp:165] Memory required for data: 10171711524
I0412 01:55:23.506960 26424 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 01:55:23.506968 26424 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 01:55:23.506971 26424 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 01:55:23.506975 26424 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 01:55:23.506981 26424 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 01:55:23.507016 26424 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 01:55:23.507022 26424 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:55:23.507026 26424 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:55:23.507030 26424 net.cpp:165] Memory required for data: 10172104740
I0412 01:55:23.507033 26424 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 01:55:23.507045 26424 net.cpp:100] Creating Layer rpn_cls_score
I0412 01:55:23.507048 26424 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 01:55:23.507053 26424 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 01:55:23.507609 26424 net.cpp:150] Setting up rpn_cls_score
I0412 01:55:23.507618 26424 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:55:23.507622 26424 net.cpp:165] Memory required for data: 10172133156
I0412 01:55:23.507627 26424 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 01:55:23.507632 26424 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 01:55:23.507635 26424 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 01:55:23.507642 26424 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 01:55:23.507647 26424 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 01:55:23.507694 26424 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 01:55:23.507699 26424 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:55:23.507704 26424 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:55:23.507706 26424 net.cpp:165] Memory required for data: 10172189988
I0412 01:55:23.507710 26424 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 01:55:23.507724 26424 net.cpp:100] Creating Layer rpn_twin_pred
I0412 01:55:23.507730 26424 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 01:55:23.507735 26424 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 01:55:23.508358 26424 net.cpp:150] Setting up rpn_twin_pred
I0412 01:55:23.508371 26424 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:55:23.508375 26424 net.cpp:165] Memory required for data: 10172218404
I0412 01:55:23.508381 26424 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:55:23.508389 26424 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:55:23.508394 26424 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 01:55:23.508405 26424 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 01:55:23.508414 26424 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 01:55:23.508472 26424 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:55:23.508481 26424 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:55:23.508486 26424 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:55:23.508488 26424 net.cpp:165] Memory required for data: 10172275236
I0412 01:55:23.508492 26424 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 01:55:23.508500 26424 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 01:55:23.508504 26424 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 01:55:23.508512 26424 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 01:55:23.508538 26424 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 01:55:23.508544 26424 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:55:23.508548 26424 net.cpp:165] Memory required for data: 10172303652
I0412 01:55:23.508551 26424 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:55:23.508558 26424 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:55:23.508560 26424 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 01:55:23.508568 26424 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 01:55:23.508577 26424 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 01:55:23.508584 26424 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 01:55:23.508658 26424 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:55:23.508671 26424 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:55:23.508677 26424 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:55:23.508682 26424 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:55:23.508687 26424 net.cpp:165] Memory required for data: 10172388900
I0412 01:55:23.508692 26424 layer_factory.hpp:77] Creating layer rpn-data
I0412 01:55:23.509081 26424 net.cpp:100] Creating Layer rpn-data
I0412 01:55:23.509093 26424 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 01:55:23.509099 26424 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 01:55:23.509104 26424 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 01:55:23.509110 26424 net.cpp:408] rpn-data -> rpn_labels
I0412 01:55:23.509117 26424 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 01:55:23.509125 26424 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 01:55:23.509132 26424 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 01:55:23.511731 26424 net.cpp:150] Setting up rpn-data
I0412 01:55:23.511765 26424 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:55:23.511771 26424 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:55:23.511776 26424 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:55:23.511781 26424 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:55:23.511785 26424 net.cpp:165] Memory required for data: 10172488356
I0412 01:55:23.511793 26424 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 01:55:23.511806 26424 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 01:55:23.511814 26424 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 01:55:23.511824 26424 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 01:55:23.511837 26424 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 01:55:23.511883 26424 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 01:55:23.511890 26424 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:55:23.511896 26424 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:55:23.511904 26424 net.cpp:165] Memory required for data: 10172516772
I0412 01:55:23.511910 26424 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 01:55:23.511922 26424 net.cpp:100] Creating Layer rpn_loss_cls
I0412 01:55:23.511929 26424 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 01:55:23.511937 26424 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 01:55:23.511946 26424 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 01:55:23.511957 26424 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 01:55:23.512086 26424 net.cpp:150] Setting up rpn_loss_cls
I0412 01:55:23.512094 26424 net.cpp:157] Top shape: (1)
I0412 01:55:23.512097 26424 net.cpp:160]     with loss weight 1
I0412 01:55:23.512114 26424 net.cpp:165] Memory required for data: 10172516776
I0412 01:55:23.512118 26424 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 01:55:23.512127 26424 net.cpp:100] Creating Layer rpn_loss_twin
I0412 01:55:23.512135 26424 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 01:55:23.512140 26424 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 01:55:23.512148 26424 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 01:55:23.512154 26424 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 01:55:23.512166 26424 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 01:55:23.512280 26424 net.cpp:150] Setting up rpn_loss_twin
I0412 01:55:23.512290 26424 net.cpp:157] Top shape: (1)
I0412 01:55:23.512293 26424 net.cpp:160]     with loss weight 1
I0412 01:55:23.512305 26424 net.cpp:165] Memory required for data: 10172516780
I0412 01:55:23.512311 26424 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 01:55:23.512323 26424 net.cpp:100] Creating Layer rpn_accuarcy
I0412 01:55:23.512367 26424 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 01:55:23.512372 26424 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 01:55:23.512380 26424 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 01:55:23.512388 26424 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 01:55:23.512434 26424 net.cpp:150] Setting up rpn_accuarcy
I0412 01:55:23.512442 26424 net.cpp:157] Top shape: (1)
I0412 01:55:23.512447 26424 net.cpp:157] Top shape: 2 (2)
I0412 01:55:23.512451 26424 net.cpp:165] Memory required for data: 10172516792
I0412 01:55:23.512456 26424 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 01:55:23.512470 26424 net.cpp:100] Creating Layer rpn_cls_prob
I0412 01:55:23.512480 26424 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 01:55:23.512487 26424 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 01:55:23.512580 26424 net.cpp:150] Setting up rpn_cls_prob
I0412 01:55:23.512588 26424 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:55:23.512593 26424 net.cpp:165] Memory required for data: 10172545208
I0412 01:55:23.512598 26424 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 01:55:23.512619 26424 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 01:55:23.512622 26424 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 01:55:23.512629 26424 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 01:55:23.512670 26424 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 01:55:23.512678 26424 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:55:23.512681 26424 net.cpp:165] Memory required for data: 10172573624
I0412 01:55:23.512686 26424 layer_factory.hpp:77] Creating layer proposal
I0412 01:55:23.513381 26424 net.cpp:100] Creating Layer proposal
I0412 01:55:23.513394 26424 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 01:55:23.513401 26424 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 01:55:23.513411 26424 net.cpp:408] proposal -> rpn_rois
I0412 01:55:23.517144 26424 net.cpp:150] Setting up proposal
I0412 01:55:23.517171 26424 net.cpp:157] Top shape: 1 3 (3)
I0412 01:55:23.517176 26424 net.cpp:165] Memory required for data: 10172573636
I0412 01:55:23.517192 26424 layer_factory.hpp:77] Creating layer roi-data
I0412 01:55:23.517383 26424 net.cpp:100] Creating Layer roi-data
I0412 01:55:23.517395 26424 net.cpp:434] roi-data <- rpn_rois
I0412 01:55:23.517412 26424 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 01:55:23.517424 26424 net.cpp:408] roi-data -> rois
I0412 01:55:23.517437 26424 net.cpp:408] roi-data -> labels
I0412 01:55:23.517446 26424 net.cpp:408] roi-data -> twin_targets
I0412 01:55:23.517459 26424 net.cpp:408] roi-data -> twin_inside_weights
I0412 01:55:23.517467 26424 net.cpp:408] roi-data -> twin_outside_weights
I0412 01:55:23.517879 26424 net.cpp:150] Setting up roi-data
I0412 01:55:23.517891 26424 net.cpp:157] Top shape: 1 3 (3)
I0412 01:55:23.517905 26424 net.cpp:157] Top shape: 1 1 (1)
I0412 01:55:23.517912 26424 net.cpp:157] Top shape: 1 402 (402)
I0412 01:55:23.517920 26424 net.cpp:157] Top shape: 1 402 (402)
I0412 01:55:23.517930 26424 net.cpp:157] Top shape: 1 402 (402)
I0412 01:55:23.517937 26424 net.cpp:165] Memory required for data: 10172578476
I0412 01:55:23.517946 26424 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 01:55:23.517958 26424 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 01:55:23.517964 26424 net.cpp:434] labels_roi-data_1_split <- labels
I0412 01:55:23.517978 26424 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 01:55:23.517988 26424 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 01:55:23.518038 26424 net.cpp:150] Setting up labels_roi-data_1_split
I0412 01:55:23.518049 26424 net.cpp:157] Top shape: 1 1 (1)
I0412 01:55:23.518054 26424 net.cpp:157] Top shape: 1 1 (1)
I0412 01:55:23.518057 26424 net.cpp:165] Memory required for data: 10172578484
I0412 01:55:23.518062 26424 layer_factory.hpp:77] Creating layer roi_pool5
I0412 01:55:23.518071 26424 net.cpp:100] Creating Layer roi_pool5
I0412 01:55:23.518076 26424 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 01:55:23.518084 26424 net.cpp:434] roi_pool5 <- rois
I0412 01:55:23.518093 26424 net.cpp:408] roi_pool5 -> pool5
I0412 01:55:23.518102 26424 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 01:55:23.518115 26424 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 01:55:23.518184 26424 net.cpp:150] Setting up roi_pool5
I0412 01:55:23.518194 26424 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 01:55:23.518198 26424 net.cpp:165] Memory required for data: 10172611252
I0412 01:55:23.518203 26424 layer_factory.hpp:77] Creating layer fc6
I0412 01:55:23.518218 26424 net.cpp:100] Creating Layer fc6
I0412 01:55:23.518224 26424 net.cpp:434] fc6 <- pool5
I0412 01:55:23.518231 26424 net.cpp:408] fc6 -> fc6
I0412 01:55:23.833204 26424 net.cpp:150] Setting up fc6
I0412 01:55:23.833267 26424 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:55:23.833282 26424 net.cpp:165] Memory required for data: 10172627636
I0412 01:55:23.833304 26424 layer_factory.hpp:77] Creating layer relu6
I0412 01:55:23.833335 26424 net.cpp:100] Creating Layer relu6
I0412 01:55:23.833353 26424 net.cpp:434] relu6 <- fc6
I0412 01:55:23.833369 26424 net.cpp:395] relu6 -> fc6 (in-place)
I0412 01:55:23.833389 26424 net.cpp:150] Setting up relu6
I0412 01:55:23.833403 26424 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:55:23.833417 26424 net.cpp:165] Memory required for data: 10172644020
I0412 01:55:23.833431 26424 layer_factory.hpp:77] Creating layer drop6
I0412 01:55:23.833446 26424 net.cpp:100] Creating Layer drop6
I0412 01:55:23.833459 26424 net.cpp:434] drop6 <- fc6
I0412 01:55:23.833475 26424 net.cpp:395] drop6 -> fc6 (in-place)
I0412 01:55:23.833524 26424 net.cpp:150] Setting up drop6
I0412 01:55:23.833542 26424 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:55:23.833555 26424 net.cpp:165] Memory required for data: 10172660404
I0412 01:55:23.833570 26424 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 01:55:23.833585 26424 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 01:55:23.833600 26424 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 01:55:23.833617 26424 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 01:55:23.833636 26424 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 01:55:23.833704 26424 net.cpp:150] Setting up fc6_drop6_0_split
I0412 01:55:23.833724 26424 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:55:23.833737 26424 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:55:23.833750 26424 net.cpp:165] Memory required for data: 10172693172
I0412 01:55:23.833763 26424 layer_factory.hpp:77] Creating layer cls_score
I0412 01:55:23.833781 26424 net.cpp:100] Creating Layer cls_score
I0412 01:55:23.833794 26424 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 01:55:23.833812 26424 net.cpp:408] cls_score -> cls_score
I0412 01:55:23.843816 26424 net.cpp:150] Setting up cls_score
I0412 01:55:23.843869 26424 net.cpp:157] Top shape: 1 201 (201)
I0412 01:55:23.843885 26424 net.cpp:165] Memory required for data: 10172693976
I0412 01:55:23.843909 26424 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 01:55:23.843933 26424 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 01:55:23.843953 26424 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 01:55:23.843972 26424 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 01:55:23.843993 26424 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 01:55:23.844063 26424 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 01:55:23.844082 26424 net.cpp:157] Top shape: 1 201 (201)
I0412 01:55:23.844089 26424 net.cpp:157] Top shape: 1 201 (201)
I0412 01:55:23.844092 26424 net.cpp:165] Memory required for data: 10172695584
I0412 01:55:23.844097 26424 layer_factory.hpp:77] Creating layer twin_pred
I0412 01:55:23.844110 26424 net.cpp:100] Creating Layer twin_pred
I0412 01:55:23.844116 26424 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 01:55:23.844126 26424 net.cpp:408] twin_pred -> twin_pred
I0412 01:55:23.858347 26424 net.cpp:150] Setting up twin_pred
I0412 01:55:23.858371 26424 net.cpp:157] Top shape: 1 402 (402)
I0412 01:55:23.858376 26424 net.cpp:165] Memory required for data: 10172697192
I0412 01:55:23.858388 26424 layer_factory.hpp:77] Creating layer loss_cls
I0412 01:55:23.858400 26424 net.cpp:100] Creating Layer loss_cls
I0412 01:55:23.858407 26424 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 01:55:23.858415 26424 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 01:55:23.858423 26424 net.cpp:408] loss_cls -> loss_cls
I0412 01:55:23.858439 26424 layer_factory.hpp:77] Creating layer loss_cls
I0412 01:55:23.858553 26424 net.cpp:150] Setting up loss_cls
I0412 01:55:23.858561 26424 net.cpp:157] Top shape: (1)
I0412 01:55:23.858566 26424 net.cpp:160]     with loss weight 1
I0412 01:55:23.858579 26424 net.cpp:165] Memory required for data: 10172697196
I0412 01:55:23.858584 26424 layer_factory.hpp:77] Creating layer loss_twin
I0412 01:55:23.858594 26424 net.cpp:100] Creating Layer loss_twin
I0412 01:55:23.858603 26424 net.cpp:434] loss_twin <- twin_pred
I0412 01:55:23.858608 26424 net.cpp:434] loss_twin <- twin_targets
I0412 01:55:23.858613 26424 net.cpp:434] loss_twin <- twin_inside_weights
I0412 01:55:23.858618 26424 net.cpp:434] loss_twin <- twin_outside_weights
I0412 01:55:23.858625 26424 net.cpp:408] loss_twin -> loss_twin
I0412 01:55:23.858736 26424 net.cpp:150] Setting up loss_twin
I0412 01:55:23.858767 26424 net.cpp:157] Top shape: (1)
I0412 01:55:23.858785 26424 net.cpp:160]     with loss weight 1
I0412 01:55:23.858806 26424 net.cpp:165] Memory required for data: 10172697200
I0412 01:55:23.858822 26424 layer_factory.hpp:77] Creating layer accuarcy
I0412 01:55:23.858844 26424 net.cpp:100] Creating Layer accuarcy
I0412 01:55:23.858862 26424 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 01:55:23.858882 26424 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 01:55:23.858909 26424 net.cpp:408] accuarcy -> accuarcy
I0412 01:55:23.858937 26424 net.cpp:150] Setting up accuarcy
I0412 01:55:23.858956 26424 net.cpp:157] Top shape: (1)
I0412 01:55:23.858970 26424 net.cpp:165] Memory required for data: 10172697204
I0412 01:55:23.858986 26424 net.cpp:228] accuarcy does not need backward computation.
I0412 01:55:23.859006 26424 net.cpp:226] loss_twin needs backward computation.
I0412 01:55:23.859022 26424 net.cpp:226] loss_cls needs backward computation.
I0412 01:55:23.859040 26424 net.cpp:226] twin_pred needs backward computation.
I0412 01:55:23.859055 26424 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 01:55:23.859072 26424 net.cpp:226] cls_score needs backward computation.
I0412 01:55:23.859086 26424 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 01:55:23.859102 26424 net.cpp:226] drop6 needs backward computation.
I0412 01:55:23.859115 26424 net.cpp:226] relu6 needs backward computation.
I0412 01:55:23.859127 26424 net.cpp:226] fc6 needs backward computation.
I0412 01:55:23.859134 26424 net.cpp:226] roi_pool5 needs backward computation.
I0412 01:55:23.859140 26424 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 01:55:23.859145 26424 net.cpp:226] roi-data needs backward computation.
I0412 01:55:23.859151 26424 net.cpp:226] proposal needs backward computation.
I0412 01:55:23.859158 26424 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 01:55:23.859165 26424 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 01:55:23.859170 26424 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 01:55:23.859175 26424 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 01:55:23.859185 26424 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 01:55:23.859194 26424 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 01:55:23.859200 26424 net.cpp:226] rpn-data needs backward computation.
I0412 01:55:23.859206 26424 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 01:55:23.859211 26424 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 01:55:23.859217 26424 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 01:55:23.859222 26424 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 01:55:23.859227 26424 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 01:55:23.859232 26424 net.cpp:226] rpn_cls_score needs backward computation.
I0412 01:55:23.859238 26424 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 01:55:23.859243 26424 net.cpp:226] rpn/output_pool needs backward computation.
I0412 01:55:23.859248 26424 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 01:55:23.859253 26424 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 01:55:23.859259 26424 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 01:55:23.859263 26424 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 01:55:23.859269 26424 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 01:55:23.859274 26424 net.cpp:226] relu5b needs backward computation.
I0412 01:55:23.859280 26424 net.cpp:226] conv5b needs backward computation.
I0412 01:55:23.859285 26424 net.cpp:226] relu5a needs backward computation.
I0412 01:55:23.859289 26424 net.cpp:226] conv5a needs backward computation.
I0412 01:55:23.859294 26424 net.cpp:226] pool4 needs backward computation.
I0412 01:55:23.859300 26424 net.cpp:226] relu4b needs backward computation.
I0412 01:55:23.859305 26424 net.cpp:226] conv4b needs backward computation.
I0412 01:55:23.859310 26424 net.cpp:226] relu4a needs backward computation.
I0412 01:55:23.859315 26424 net.cpp:226] conv4a needs backward computation.
I0412 01:55:23.859321 26424 net.cpp:226] pool3 needs backward computation.
I0412 01:55:23.859325 26424 net.cpp:226] relu3b needs backward computation.
I0412 01:55:23.859330 26424 net.cpp:226] conv3b needs backward computation.
I0412 01:55:23.859335 26424 net.cpp:226] relu3a needs backward computation.
I0412 01:55:23.859340 26424 net.cpp:226] conv3a needs backward computation.
I0412 01:55:23.859345 26424 net.cpp:228] pool2 does not need backward computation.
I0412 01:55:23.859350 26424 net.cpp:228] relu2a does not need backward computation.
I0412 01:55:23.859354 26424 net.cpp:228] conv2a does not need backward computation.
I0412 01:55:23.859360 26424 net.cpp:228] pool1 does not need backward computation.
I0412 01:55:23.859365 26424 net.cpp:228] relu1a does not need backward computation.
I0412 01:55:23.859370 26424 net.cpp:228] conv1a does not need backward computation.
I0412 01:55:23.859376 26424 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 01:55:23.859382 26424 net.cpp:228] data_data_0_split does not need backward computation.
I0412 01:55:23.859387 26424 net.cpp:228] data does not need backward computation.
I0412 01:55:23.859392 26424 net.cpp:270] This network produces output accuarcy
I0412 01:55:23.859397 26424 net.cpp:270] This network produces output loss_cls
I0412 01:55:23.859405 26424 net.cpp:270] This network produces output loss_twin
I0412 01:55:23.859411 26424 net.cpp:270] This network produces output rpn_accuarcy
I0412 01:55:23.859416 26424 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 01:55:23.859421 26424 net.cpp:270] This network produces output rpn_cls_loss
I0412 01:55:23.859426 26424 net.cpp:270] This network produces output rpn_loss_twin
I0412 01:55:23.859467 26424 net.cpp:283] Network initialization done.
I0412 01:55:23.859596 26424 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 01:55:24.033663 26424 net.cpp:761] Ignoring source layer pool5
I0412 01:55:24.057395 26424 net.cpp:761] Ignoring source layer fc7
I0412 01:55:24.057413 26424 net.cpp:761] Ignoring source layer relu7
I0412 01:55:24.057417 26424 net.cpp:761] Ignoring source layer drop7
I0412 01:55:24.057420 26424 net.cpp:761] Ignoring source layer fc8-200
I0412 01:55:24.057425 26424 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
99
(array([0]), array([97]))
(array([[3.1250000e-02, 3.8569803e+02]], dtype=float32), array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 0.]], dtype=float32))
(1, 101)
[[3.1250000e-02 3.8569803e+02]]
[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0.]]
[[3.1250000e-02 3.8569803e+02 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
  0.0000000e+00]]
[[[[[-57.   9. -31. ...  32.  52.  55.]
    [-50. -17.   4. ... -44. -43. -24.]
    [-59.  17.  -3. ... -49. -51. -53.]
    ...
    [ 85.  96.  97. ...  76.  79.  77.]
    [ 86.  97. 101. ...  76.  79.  77.]
    [ 86.  96.  96. ...  76.  78.  75.]]

   [[ 10.   2.  11. ...  66.  64.  63.]
    [ -2.  -5.   0. ...  60.  61.  64.]
    [ -8. -11.   0. ...  61.  57.  58.]
    ...
    [ 94.  91.  89. ...  81.  77.  72.]
    [ 88.  85.  84. ...  81.  77.  73.]
    [ 84.  81.  83. ...  79.  78.  75.]]

   [[ 16.  26.  -6. ...  62.  62.  61.]
    [ -9. -44. -23. ...  64.  63.  62.]
    [ 39. -23.  -5. ...  65.  64.  62.]
    ...
    [113. 109. 102. ...  73.  73.  73.]
    [110. 108. 102. ...  74.  73.  73.]
    [107. 105. 101. ...  74.  72.  72.]]

   ...

   [[-12. -13. -16. ... -12. -15. -15.]
    [-16. -16. -16. ... -11. -13. -14.]
    [-18. -18. -18. ...  -6.  -8.  -9.]
    ...
    [ 39.  43.  43. ...  85.  80.  74.]
    [ 41.  37.  27. ...  79.  73.  68.]
    [ 36.  25.  21. ...  80.  76.  73.]]

   [[-12. -13. -16. ... -12. -15. -15.]
    [-16. -16. -16. ... -11. -13. -14.]
    [-18. -18. -18. ...  -6.  -8.  -9.]
    ...
    [ 39.  43.  43. ...  85.  80.  74.]
    [ 41.  37.  27. ...  79.  73.  68.]
    [ 36.  25.  21. ...  80.  76.  73.]]

   [[-12. -13. -16. ... -12. -15. -15.]
    [-16. -16. -16. ... -11. -13. -14.]
    [-18. -18. -18. ...  -6.  -8.  -9.]
    ...
    [ 39.  43.  43. ...  85.  80.  74.]
    [ 41.  37.  27. ...  79.  73.  68.]
    [ 36.  25.  21. ...  80.  76.  73.]]]


  [[[ 40. 105.  70. ...  25.  45.  48.]
    [ 41.  73. 108. ... -51. -50. -31.]
    [ 38. 121. 121. ... -57. -59. -61.]
    ...
    [ 19.  34.  37. ...  73.  74.  72.]
    [ 19.  34.  40. ...  73.  74.  72.]
    [ 18.  30.  35. ...  73.  73.  70.]]

   [[123. 120. 117. ...  59.  57.  56.]
    [121. 123. 116. ...  53.  54.  57.]
    [121. 121. 117. ...  54.  50.  51.]
    ...
    [ 15.  17.  18. ...  76.  72.  67.]
    [ 16.  17.  19. ...  76.  72.  68.]
    [ 16.  17.  23. ...  74.  73.  70.]]

   [[104. 116.  99. ...  55.  55.  54.]
    [ 75.  43.  83. ...  57.  56.  55.]
    [127.  70. 111. ...  58.  57.  55.]
    ...
    [ 19.  19.  19. ...  70.  70.  70.]
    [ 18.  18.  20. ...  71.  70.  70.]
    [ 17.  19.  20. ...  71.  69.  69.]]

   ...

   [[ 36.  35.  32. ...  35.  35.  33.]
    [ 32.  32.  32. ...  38.  37.  36.]
    [ 28.  28.  29. ...  40.  39.  38.]
    ...
    [ 40.  44.  44. ...  89.  85.  79.]
    [ 43.  39.  29. ...  86.  80.  75.]
    [ 38.  27.  23. ...  87.  83.  80.]]

   [[ 36.  35.  32. ...  35.  35.  33.]
    [ 32.  32.  32. ...  38.  37.  36.]
    [ 28.  28.  29. ...  40.  39.  38.]
    ...
    [ 40.  44.  44. ...  89.  85.  79.]
    [ 43.  39.  29. ...  86.  80.  75.]
    [ 38.  27.  23. ...  87.  83.  80.]]

   [[ 36.  35.  32. ...  35.  35.  33.]
    [ 32.  32.  32. ...  38.  37.  36.]
    [ 28.  28.  29. ...  40.  39.  38.]
    ...
    [ 40.  44.  44. ...  89.  85.  79.]
    [ 43.  39.  29. ...  86.  80.  75.]
    [ 38.  27.  23. ...  87.  83.  80.]]]


  [[[ 79. 144. 110. ...  19.  39.  42.]
    [ 81. 115. 147. ... -57. -56. -37.]
    [ 77. 153. 153. ... -61. -63. -65.]
    ...
    [-37. -23. -20. ...  67.  68.  66.]
    [-35. -21. -15. ...  67.  68.  66.]
    [-38. -23. -19. ...  67.  67.  64.]]

   [[151. 151. 153. ...  51.  49.  48.]
    [150. 153. 153. ...  45.  46.  49.]
    [149. 153. 153. ...  48.  44.  45.]
    ...
    [-57. -52. -47. ...  70.  66.  61.]
    [-52. -47. -41. ...  70.  66.  62.]
    [-47. -42. -34. ...  68.  67.  64.]]

   [[140. 153. 135. ...  47.  47.  46.]
    [114.  83. 120. ...  49.  48.  47.]
    [153. 111. 147. ...  50.  49.  47.]
    ...
    [-67. -63. -59. ...  65.  64.  64.]
    [-62. -58. -56. ...  65.  64.  64.]
    [-59. -54. -52. ...  65.  63.  63.]]

   ...

   [[ -9. -10. -13. ...   4.   2.   0.]
    [-15. -15. -15. ...   9.   5.   4.]
    [-19. -19. -20. ...  13.  10.   9.]
    ...
    [ 45.  49.  49. ... 103.  97.  91.]
    [ 49.  45.  35. ...  98.  92.  87.]
    [ 44.  33.  29. ...  99.  95.  92.]]

   [[ -9. -10. -13. ...   4.   2.   0.]
    [-15. -15. -15. ...   9.   5.   4.]
    [-19. -19. -20. ...  13.  10.   9.]
    ...
    [ 45.  49.  49. ... 103.  97.  91.]
    [ 49.  45.  35. ...  98.  92.  87.]
    [ 44.  33.  29. ...  99.  95.  92.]]

   [[ -9. -10. -13. ...   4.   2.   0.]
    [-15. -15. -15. ...   9.   5.   4.]
    [-19. -19. -20. ...  13.  10.   9.]
    ...
    [ 45.  49.  49. ... 103.  97.  91.]
    [ 49.  45.  35. ...  98.  92.  87.]
    [ 44.  33.  29. ...  99.  95.  92.]]]]]
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 95, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 129, in forward
    blob1, blob2 = blob
ValueError: need more than 1 value to unpack
Terminating BlobFetcher
