Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=3, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 3,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
print done
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}]
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 23:40:33.163552 27589 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 23:40:33.198245 27589 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 23:40:33.199193 27589 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 100"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 23:40:33.203567 27589 layer_factory.hpp:77] Creating layer data
I0412 23:40:33.311717 27589 net.cpp:100] Creating Layer data
I0412 23:40:33.321625 27589 net.cpp:408] data -> data
I0412 23:40:33.321658 27589 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 23:40:33.381516 27589 net.cpp:150] Setting up data
I0412 23:40:33.381544 27589 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 23:40:33.381551 27589 net.cpp:157] Top shape: 1 3 (3)
I0412 23:40:33.381556 27589 net.cpp:165] Memory required for data: 115605516
I0412 23:40:33.381562 27589 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 23:40:33.381577 27589 net.cpp:100] Creating Layer data_data_0_split
I0412 23:40:33.381584 27589 net.cpp:434] data_data_0_split <- data
I0412 23:40:33.381597 27589 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 23:40:33.381609 27589 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 23:40:33.381675 27589 net.cpp:150] Setting up data_data_0_split
I0412 23:40:33.381685 27589 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 23:40:33.381691 27589 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 23:40:33.381695 27589 net.cpp:165] Memory required for data: 346816524
I0412 23:40:33.381700 27589 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 23:40:33.381713 27589 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 23:40:33.381719 27589 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 23:40:33.381726 27589 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 23:40:33.381738 27589 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 23:40:33.381793 27589 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 23:40:33.381803 27589 net.cpp:157] Top shape: 1 3 (3)
I0412 23:40:33.381809 27589 net.cpp:157] Top shape: 1 3 (3)
I0412 23:40:33.381813 27589 net.cpp:165] Memory required for data: 346816548
I0412 23:40:33.381819 27589 layer_factory.hpp:77] Creating layer conv1a
I0412 23:40:33.381834 27589 net.cpp:100] Creating Layer conv1a
I0412 23:40:33.381841 27589 net.cpp:434] conv1a <- data_data_0_split_0
I0412 23:40:33.381848 27589 net.cpp:408] conv1a -> conv1a
I0412 23:40:33.420954 27589 net.cpp:150] Setting up conv1a
I0412 23:40:33.420996 27589 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 23:40:33.421000 27589 net.cpp:165] Memory required for data: 2813067300
I0412 23:40:33.421022 27589 layer_factory.hpp:77] Creating layer relu1a
I0412 23:40:33.421041 27589 net.cpp:100] Creating Layer relu1a
I0412 23:40:33.421049 27589 net.cpp:434] relu1a <- conv1a
I0412 23:40:33.421061 27589 net.cpp:395] relu1a -> conv1a (in-place)
I0412 23:40:33.421077 27589 net.cpp:150] Setting up relu1a
I0412 23:40:33.421083 27589 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 23:40:33.421087 27589 net.cpp:165] Memory required for data: 5279318052
I0412 23:40:33.421093 27589 layer_factory.hpp:77] Creating layer pool1
I0412 23:40:33.421103 27589 net.cpp:100] Creating Layer pool1
I0412 23:40:33.421108 27589 net.cpp:434] pool1 <- conv1a
I0412 23:40:33.421118 27589 net.cpp:408] pool1 -> pool1
I0412 23:40:33.421239 27589 net.cpp:150] Setting up pool1
I0412 23:40:33.421247 27589 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 23:40:33.421252 27589 net.cpp:165] Memory required for data: 5895880740
I0412 23:40:33.421257 27589 layer_factory.hpp:77] Creating layer conv2a
I0412 23:40:33.421275 27589 net.cpp:100] Creating Layer conv2a
I0412 23:40:33.421283 27589 net.cpp:434] conv2a <- pool1
I0412 23:40:33.421290 27589 net.cpp:408] conv2a -> conv2a
I0412 23:40:33.428818 27589 net.cpp:150] Setting up conv2a
I0412 23:40:33.428854 27589 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 23:40:33.428858 27589 net.cpp:165] Memory required for data: 7129006116
I0412 23:40:33.428882 27589 layer_factory.hpp:77] Creating layer relu2a
I0412 23:40:33.428908 27589 net.cpp:100] Creating Layer relu2a
I0412 23:40:33.428915 27589 net.cpp:434] relu2a <- conv2a
I0412 23:40:33.428925 27589 net.cpp:395] relu2a -> conv2a (in-place)
I0412 23:40:33.428937 27589 net.cpp:150] Setting up relu2a
I0412 23:40:33.428944 27589 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 23:40:33.428948 27589 net.cpp:165] Memory required for data: 8362131492
I0412 23:40:33.428952 27589 layer_factory.hpp:77] Creating layer pool2
I0412 23:40:33.428966 27589 net.cpp:100] Creating Layer pool2
I0412 23:40:33.428972 27589 net.cpp:434] pool2 <- conv2a
I0412 23:40:33.428978 27589 net.cpp:408] pool2 -> pool2
I0412 23:40:33.429069 27589 net.cpp:150] Setting up pool2
I0412 23:40:33.429085 27589 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 23:40:33.429090 27589 net.cpp:165] Memory required for data: 8516272164
I0412 23:40:33.429095 27589 layer_factory.hpp:77] Creating layer conv3a
I0412 23:40:33.429114 27589 net.cpp:100] Creating Layer conv3a
I0412 23:40:33.429119 27589 net.cpp:434] conv3a <- pool2
I0412 23:40:33.429127 27589 net.cpp:408] conv3a -> conv3a
I0412 23:40:33.470500 27589 net.cpp:150] Setting up conv3a
I0412 23:40:33.470594 27589 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 23:40:33.470613 27589 net.cpp:165] Memory required for data: 8824553508
I0412 23:40:33.470641 27589 layer_factory.hpp:77] Creating layer relu3a
I0412 23:40:33.470671 27589 net.cpp:100] Creating Layer relu3a
I0412 23:40:33.470692 27589 net.cpp:434] relu3a <- conv3a
I0412 23:40:33.470715 27589 net.cpp:395] relu3a -> conv3a (in-place)
I0412 23:40:33.470739 27589 net.cpp:150] Setting up relu3a
I0412 23:40:33.470760 27589 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 23:40:33.470777 27589 net.cpp:165] Memory required for data: 9132834852
I0412 23:40:33.470795 27589 layer_factory.hpp:77] Creating layer conv3b
I0412 23:40:33.470824 27589 net.cpp:100] Creating Layer conv3b
I0412 23:40:33.470841 27589 net.cpp:434] conv3b <- conv3a
I0412 23:40:33.470862 27589 net.cpp:408] conv3b -> conv3b
I0412 23:40:33.639106 27589 net.cpp:150] Setting up conv3b
I0412 23:40:33.639267 27589 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 23:40:33.639309 27589 net.cpp:165] Memory required for data: 9441116196
I0412 23:40:33.639358 27589 layer_factory.hpp:77] Creating layer relu3b
I0412 23:40:33.639405 27589 net.cpp:100] Creating Layer relu3b
I0412 23:40:33.639447 27589 net.cpp:434] relu3b <- conv3b
I0412 23:40:33.639485 27589 net.cpp:395] relu3b -> conv3b (in-place)
I0412 23:40:33.639533 27589 net.cpp:150] Setting up relu3b
I0412 23:40:33.639570 27589 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 23:40:33.639601 27589 net.cpp:165] Memory required for data: 9749397540
I0412 23:40:33.639633 27589 layer_factory.hpp:77] Creating layer pool3
I0412 23:40:33.639677 27589 net.cpp:100] Creating Layer pool3
I0412 23:40:33.639711 27589 net.cpp:434] pool3 <- conv3b
I0412 23:40:33.639750 27589 net.cpp:408] pool3 -> pool3
I0412 23:40:33.639914 27589 net.cpp:150] Setting up pool3
I0412 23:40:33.639963 27589 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 23:40:33.639999 27589 net.cpp:165] Memory required for data: 9787932708
I0412 23:40:33.640031 27589 layer_factory.hpp:77] Creating layer conv4a
I0412 23:40:33.640076 27589 net.cpp:100] Creating Layer conv4a
I0412 23:40:33.640110 27589 net.cpp:434] conv4a <- pool3
I0412 23:40:33.640161 27589 net.cpp:408] conv4a -> conv4a
I0412 23:40:33.954650 27589 net.cpp:150] Setting up conv4a
I0412 23:40:33.970880 27589 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 23:40:33.972898 27589 net.cpp:165] Memory required for data: 9865003044
I0412 23:40:33.972944 27589 layer_factory.hpp:77] Creating layer relu4a
I0412 23:40:33.972981 27589 net.cpp:100] Creating Layer relu4a
I0412 23:40:33.973001 27589 net.cpp:434] relu4a <- conv4a
I0412 23:40:33.973026 27589 net.cpp:395] relu4a -> conv4a (in-place)
I0412 23:40:33.973054 27589 net.cpp:150] Setting up relu4a
I0412 23:40:33.973084 27589 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 23:40:33.973100 27589 net.cpp:165] Memory required for data: 9942073380
I0412 23:40:33.973117 27589 layer_factory.hpp:77] Creating layer conv4b
I0412 23:40:33.973152 27589 net.cpp:100] Creating Layer conv4b
I0412 23:40:33.973170 27589 net.cpp:434] conv4b <- conv4a
I0412 23:40:33.973188 27589 net.cpp:408] conv4b -> conv4b
I0412 23:40:34.389075 27589 net.cpp:150] Setting up conv4b
I0412 23:40:34.389153 27589 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 23:40:34.389169 27589 net.cpp:165] Memory required for data: 10019143716
I0412 23:40:34.389189 27589 layer_factory.hpp:77] Creating layer relu4b
I0412 23:40:34.389214 27589 net.cpp:100] Creating Layer relu4b
I0412 23:40:34.389230 27589 net.cpp:434] relu4b <- conv4b
I0412 23:40:34.389247 27589 net.cpp:395] relu4b -> conv4b (in-place)
I0412 23:40:34.389267 27589 net.cpp:150] Setting up relu4b
I0412 23:40:34.389282 27589 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 23:40:34.389295 27589 net.cpp:165] Memory required for data: 10096214052
I0412 23:40:34.389308 27589 layer_factory.hpp:77] Creating layer pool4
I0412 23:40:34.389328 27589 net.cpp:100] Creating Layer pool4
I0412 23:40:34.389340 27589 net.cpp:434] pool4 <- conv4b
I0412 23:40:34.389356 27589 net.cpp:408] pool4 -> pool4
I0412 23:40:34.389427 27589 net.cpp:150] Setting up pool4
I0412 23:40:34.389447 27589 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:40:34.389459 27589 net.cpp:165] Memory required for data: 10105847844
I0412 23:40:34.389473 27589 layer_factory.hpp:77] Creating layer conv5a
I0412 23:40:34.389495 27589 net.cpp:100] Creating Layer conv5a
I0412 23:40:34.389509 27589 net.cpp:434] conv5a <- pool4
I0412 23:40:34.389528 27589 net.cpp:408] conv5a -> conv5a
I0412 23:40:34.657472 27589 net.cpp:150] Setting up conv5a
I0412 23:40:34.657513 27589 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:40:34.657518 27589 net.cpp:165] Memory required for data: 10115481636
I0412 23:40:34.657529 27589 layer_factory.hpp:77] Creating layer relu5a
I0412 23:40:34.657542 27589 net.cpp:100] Creating Layer relu5a
I0412 23:40:34.657551 27589 net.cpp:434] relu5a <- conv5a
I0412 23:40:34.657559 27589 net.cpp:395] relu5a -> conv5a (in-place)
I0412 23:40:34.657572 27589 net.cpp:150] Setting up relu5a
I0412 23:40:34.657580 27589 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:40:34.657584 27589 net.cpp:165] Memory required for data: 10125115428
I0412 23:40:34.657588 27589 layer_factory.hpp:77] Creating layer conv5b
I0412 23:40:34.657603 27589 net.cpp:100] Creating Layer conv5b
I0412 23:40:34.657610 27589 net.cpp:434] conv5b <- conv5a
I0412 23:40:34.657618 27589 net.cpp:408] conv5b -> conv5b
I0412 23:40:35.127888 27589 net.cpp:150] Setting up conv5b
I0412 23:40:35.127928 27589 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:40:35.127933 27589 net.cpp:165] Memory required for data: 10134749220
I0412 23:40:35.127945 27589 layer_factory.hpp:77] Creating layer relu5b
I0412 23:40:35.127957 27589 net.cpp:100] Creating Layer relu5b
I0412 23:40:35.127962 27589 net.cpp:434] relu5b <- conv5b
I0412 23:40:35.127970 27589 net.cpp:395] relu5b -> conv5b (in-place)
I0412 23:40:35.127981 27589 net.cpp:150] Setting up relu5b
I0412 23:40:35.127987 27589 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:40:35.127990 27589 net.cpp:165] Memory required for data: 10144383012
I0412 23:40:35.127995 27589 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 23:40:35.128005 27589 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 23:40:35.128008 27589 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 23:40:35.128015 27589 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 23:40:35.128024 27589 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 23:40:35.128079 27589 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 23:40:35.128087 27589 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:40:35.128091 27589 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:40:35.128095 27589 net.cpp:165] Memory required for data: 10163650596
I0412 23:40:35.128099 27589 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 23:40:35.128114 27589 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 23:40:35.128118 27589 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 23:40:35.128126 27589 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 23:40:35.483791 27589 net.cpp:150] Setting up rpn_conv/3x3
I0412 23:40:35.483896 27589 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 23:40:35.483917 27589 net.cpp:165] Memory required for data: 10166796324
I0412 23:40:35.483959 27589 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 23:40:35.483990 27589 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 23:40:35.484019 27589 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 23:40:35.484050 27589 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 23:40:35.484077 27589 net.cpp:150] Setting up rpn_relu/3x3
I0412 23:40:35.484099 27589 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 23:40:35.484115 27589 net.cpp:165] Memory required for data: 10169942052
I0412 23:40:35.484133 27589 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 23:40:35.484171 27589 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 23:40:35.484191 27589 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 23:40:35.484212 27589 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 23:40:35.604805 27589 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 23:40:35.605031 27589 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 23:40:35.605082 27589 net.cpp:165] Memory required for data: 10170728484
I0412 23:40:35.605137 27589 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 23:40:35.605195 27589 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 23:40:35.605240 27589 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 23:40:35.605293 27589 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 23:40:35.605347 27589 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 23:40:35.605396 27589 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 23:40:35.605438 27589 net.cpp:165] Memory required for data: 10171514916
I0412 23:40:35.605484 27589 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 23:40:35.605533 27589 net.cpp:100] Creating Layer rpn/output_pool
I0412 23:40:35.605579 27589 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 23:40:35.605626 27589 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 23:40:35.605790 27589 net.cpp:150] Setting up rpn/output_pool
I0412 23:40:35.605849 27589 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 23:40:35.605890 27589 net.cpp:165] Memory required for data: 10171711524
I0412 23:40:35.605926 27589 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 23:40:35.605967 27589 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 23:40:35.606003 27589 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 23:40:35.606042 27589 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 23:40:35.606096 27589 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 23:40:35.606202 27589 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 23:40:35.606261 27589 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 23:40:35.606297 27589 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 23:40:35.606331 27589 net.cpp:165] Memory required for data: 10172104740
I0412 23:40:35.606379 27589 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 23:40:35.606426 27589 net.cpp:100] Creating Layer rpn_cls_score
I0412 23:40:35.606462 27589 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 23:40:35.606506 27589 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 23:40:35.607417 27589 net.cpp:150] Setting up rpn_cls_score
I0412 23:40:35.607511 27589 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:40:35.607553 27589 net.cpp:165] Memory required for data: 10172133156
I0412 23:40:35.607600 27589 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 23:40:35.607647 27589 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 23:40:35.607688 27589 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 23:40:35.607738 27589 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 23:40:35.607784 27589 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 23:40:35.607909 27589 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 23:40:35.607971 27589 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:40:35.608012 27589 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:40:35.608050 27589 net.cpp:165] Memory required for data: 10172189988
I0412 23:40:35.608090 27589 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 23:40:35.608155 27589 net.cpp:100] Creating Layer rpn_twin_pred
I0412 23:40:35.608213 27589 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 23:40:35.608258 27589 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 23:40:35.609309 27589 net.cpp:150] Setting up rpn_twin_pred
I0412 23:40:35.609417 27589 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:40:35.609457 27589 net.cpp:165] Memory required for data: 10172218404
I0412 23:40:35.609504 27589 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 23:40:35.609553 27589 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 23:40:35.609596 27589 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 23:40:35.609647 27589 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 23:40:35.609696 27589 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 23:40:35.609832 27589 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 23:40:35.609895 27589 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:40:35.609936 27589 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:40:35.609974 27589 net.cpp:165] Memory required for data: 10172275236
I0412 23:40:35.610014 27589 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 23:40:35.610064 27589 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 23:40:35.610105 27589 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 23:40:35.610148 27589 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 23:40:35.610245 27589 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 23:40:35.610307 27589 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 23:40:35.610347 27589 net.cpp:165] Memory required for data: 10172303652
I0412 23:40:35.610388 27589 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 23:40:35.610433 27589 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 23:40:35.610474 27589 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 23:40:35.610522 27589 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 23:40:35.610581 27589 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 23:40:35.610631 27589 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 23:40:35.610787 27589 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 23:40:35.610857 27589 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 23:40:35.610900 27589 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 23:40:35.610942 27589 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 23:40:35.610981 27589 net.cpp:165] Memory required for data: 10172388900
I0412 23:40:35.611021 27589 layer_factory.hpp:77] Creating layer rpn-data
I0412 23:40:35.611686 27589 net.cpp:100] Creating Layer rpn-data
I0412 23:40:35.611773 27589 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 23:40:35.611820 27589 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 23:40:35.611863 27589 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 23:40:35.611910 27589 net.cpp:408] rpn-data -> rpn_labels
I0412 23:40:35.611959 27589 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 23:40:35.612007 27589 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 23:40:35.612054 27589 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 23:40:35.616792 27589 net.cpp:150] Setting up rpn-data
I0412 23:40:35.616981 27589 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 23:40:35.617031 27589 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:40:35.617074 27589 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:40:35.617115 27589 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:40:35.617156 27589 net.cpp:165] Memory required for data: 10172488356
I0412 23:40:35.617199 27589 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 23:40:35.617251 27589 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 23:40:35.617295 27589 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 23:40:35.617343 27589 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 23:40:35.617395 27589 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 23:40:35.617521 27589 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 23:40:35.617583 27589 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 23:40:35.617624 27589 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 23:40:35.617662 27589 net.cpp:165] Memory required for data: 10172516772
I0412 23:40:35.617702 27589 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 23:40:35.617748 27589 net.cpp:100] Creating Layer rpn_loss_cls
I0412 23:40:35.617791 27589 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 23:40:35.617835 27589 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 23:40:35.617882 27589 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 23:40:35.617944 27589 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 23:40:35.618306 27589 net.cpp:150] Setting up rpn_loss_cls
I0412 23:40:35.618372 27589 net.cpp:157] Top shape: (1)
I0412 23:40:35.618415 27589 net.cpp:160]     with loss weight 1
I0412 23:40:35.618500 27589 net.cpp:165] Memory required for data: 10172516776
I0412 23:40:35.618542 27589 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 23:40:35.618587 27589 net.cpp:100] Creating Layer rpn_loss_twin
I0412 23:40:35.618633 27589 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 23:40:35.618682 27589 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 23:40:35.618747 27589 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 23:40:35.618796 27589 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 23:40:35.618851 27589 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 23:40:35.619107 27589 net.cpp:150] Setting up rpn_loss_twin
I0412 23:40:35.619181 27589 net.cpp:157] Top shape: (1)
I0412 23:40:35.619228 27589 net.cpp:160]     with loss weight 1
I0412 23:40:35.619293 27589 net.cpp:165] Memory required for data: 10172516780
I0412 23:40:35.619338 27589 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 23:40:35.619385 27589 net.cpp:100] Creating Layer rpn_accuarcy
I0412 23:40:35.619431 27589 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 23:40:35.619487 27589 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 23:40:35.619531 27589 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 23:40:35.619609 27589 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 23:40:35.619736 27589 net.cpp:150] Setting up rpn_accuarcy
I0412 23:40:35.619801 27589 net.cpp:157] Top shape: (1)
I0412 23:40:35.619849 27589 net.cpp:157] Top shape: 2 (2)
I0412 23:40:35.619891 27589 net.cpp:165] Memory required for data: 10172516792
I0412 23:40:35.619935 27589 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 23:40:35.619978 27589 net.cpp:100] Creating Layer rpn_cls_prob
I0412 23:40:35.620019 27589 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 23:40:35.620070 27589 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 23:40:35.620255 27589 net.cpp:150] Setting up rpn_cls_prob
I0412 23:40:35.620326 27589 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 23:40:35.620419 27589 net.cpp:165] Memory required for data: 10172545208
I0412 23:40:35.620458 27589 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 23:40:35.620510 27589 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 23:40:35.620561 27589 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 23:40:35.620609 27589 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 23:40:35.620749 27589 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 23:40:35.620816 27589 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:40:35.620857 27589 net.cpp:165] Memory required for data: 10172573624
I0412 23:40:35.620898 27589 layer_factory.hpp:77] Creating layer proposal
I0412 23:40:35.622262 27589 net.cpp:100] Creating Layer proposal
I0412 23:40:35.622375 27589 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 23:40:35.622431 27589 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 23:40:35.622479 27589 net.cpp:408] proposal -> rpn_rois
I0412 23:40:35.629703 27589 net.cpp:150] Setting up proposal
I0412 23:40:35.629868 27589 net.cpp:157] Top shape: 1 3 (3)
I0412 23:40:35.629914 27589 net.cpp:165] Memory required for data: 10172573636
I0412 23:40:35.629959 27589 layer_factory.hpp:77] Creating layer roi-data
I0412 23:40:35.630311 27589 net.cpp:100] Creating Layer roi-data
I0412 23:40:35.630388 27589 net.cpp:434] roi-data <- rpn_rois
I0412 23:40:35.630437 27589 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 23:40:35.630491 27589 net.cpp:408] roi-data -> rois
I0412 23:40:35.630543 27589 net.cpp:408] roi-data -> labels
I0412 23:40:35.630591 27589 net.cpp:408] roi-data -> twin_targets
I0412 23:40:35.630640 27589 net.cpp:408] roi-data -> twin_inside_weights
I0412 23:40:35.630686 27589 net.cpp:408] roi-data -> twin_outside_weights
I0412 23:40:35.631541 27589 net.cpp:150] Setting up roi-data
I0412 23:40:35.631639 27589 net.cpp:157] Top shape: 1 3 (3)
I0412 23:40:35.631685 27589 net.cpp:157] Top shape: 1 1 (1)
I0412 23:40:35.631727 27589 net.cpp:157] Top shape: 1 402 (402)
I0412 23:40:35.631770 27589 net.cpp:157] Top shape: 1 402 (402)
I0412 23:40:35.631814 27589 net.cpp:157] Top shape: 1 402 (402)
I0412 23:40:35.631852 27589 net.cpp:165] Memory required for data: 10172578476
I0412 23:40:35.631896 27589 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 23:40:35.631942 27589 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 23:40:35.631985 27589 net.cpp:434] labels_roi-data_1_split <- labels
I0412 23:40:35.632032 27589 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 23:40:35.632084 27589 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 23:40:35.632218 27589 net.cpp:150] Setting up labels_roi-data_1_split
I0412 23:40:35.632280 27589 net.cpp:157] Top shape: 1 1 (1)
I0412 23:40:35.632323 27589 net.cpp:157] Top shape: 1 1 (1)
I0412 23:40:35.632445 27589 net.cpp:165] Memory required for data: 10172578484
I0412 23:40:35.632488 27589 layer_factory.hpp:77] Creating layer roi_pool5
I0412 23:40:35.632534 27589 net.cpp:100] Creating Layer roi_pool5
I0412 23:40:35.632591 27589 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 23:40:35.632635 27589 net.cpp:434] roi_pool5 <- rois
I0412 23:40:35.632680 27589 net.cpp:408] roi_pool5 -> pool5
I0412 23:40:35.632727 27589 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 23:40:35.632781 27589 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 23:40:35.632915 27589 net.cpp:150] Setting up roi_pool5
I0412 23:40:35.632979 27589 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 23:40:35.633019 27589 net.cpp:165] Memory required for data: 10172611252
I0412 23:40:35.633060 27589 layer_factory.hpp:77] Creating layer fc6
I0412 23:40:35.633108 27589 net.cpp:100] Creating Layer fc6
I0412 23:40:35.633149 27589 net.cpp:434] fc6 <- pool5
I0412 23:40:35.633193 27589 net.cpp:408] fc6 -> fc6
I0412 23:40:36.437974 27589 net.cpp:150] Setting up fc6
I0412 23:40:36.438158 27589 net.cpp:157] Top shape: 1 4096 (4096)
I0412 23:40:36.438254 27589 net.cpp:165] Memory required for data: 10172627636
I0412 23:40:36.438388 27589 layer_factory.hpp:77] Creating layer relu6
I0412 23:40:36.438511 27589 net.cpp:100] Creating Layer relu6
I0412 23:40:36.438630 27589 net.cpp:434] relu6 <- fc6
I0412 23:40:36.438776 27589 net.cpp:395] relu6 -> fc6 (in-place)
I0412 23:40:36.438905 27589 net.cpp:150] Setting up relu6
I0412 23:40:36.438992 27589 net.cpp:157] Top shape: 1 4096 (4096)
I0412 23:40:36.439059 27589 net.cpp:165] Memory required for data: 10172644020
I0412 23:40:36.439122 27589 layer_factory.hpp:77] Creating layer drop6
I0412 23:40:36.439198 27589 net.cpp:100] Creating Layer drop6
I0412 23:40:36.439257 27589 net.cpp:434] drop6 <- fc6
I0412 23:40:36.439330 27589 net.cpp:395] drop6 -> fc6 (in-place)
I0412 23:40:36.439549 27589 net.cpp:150] Setting up drop6
I0412 23:40:36.439618 27589 net.cpp:157] Top shape: 1 4096 (4096)
I0412 23:40:36.439687 27589 net.cpp:165] Memory required for data: 10172660404
I0412 23:40:36.439743 27589 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 23:40:36.439813 27589 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 23:40:36.439860 27589 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 23:40:36.439916 27589 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 23:40:36.439993 27589 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 23:40:36.440397 27589 net.cpp:150] Setting up fc6_drop6_0_split
I0412 23:40:36.440479 27589 net.cpp:157] Top shape: 1 4096 (4096)
I0412 23:40:36.440557 27589 net.cpp:157] Top shape: 1 4096 (4096)
I0412 23:40:36.440645 27589 net.cpp:165] Memory required for data: 10172693172
I0412 23:40:36.440737 27589 layer_factory.hpp:77] Creating layer cls_score
I0412 23:40:36.440881 27589 net.cpp:100] Creating Layer cls_score
I0412 23:40:36.440973 27589 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 23:40:36.441023 27589 net.cpp:408] cls_score -> cls_score
I0412 23:40:36.472960 27589 net.cpp:150] Setting up cls_score
I0412 23:40:36.480931 27589 net.cpp:157] Top shape: 1 201 (201)
I0412 23:40:36.481124 27589 net.cpp:165] Memory required for data: 10172693976
I0412 23:40:36.481242 27589 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 23:40:36.485718 27589 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 23:40:36.485936 27589 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 23:40:36.486011 27589 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 23:40:36.486073 27589 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 23:40:36.486342 27589 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 23:40:36.486418 27589 net.cpp:157] Top shape: 1 201 (201)
I0412 23:40:36.486464 27589 net.cpp:157] Top shape: 1 201 (201)
I0412 23:40:36.486505 27589 net.cpp:165] Memory required for data: 10172695584
I0412 23:40:36.486549 27589 layer_factory.hpp:77] Creating layer twin_pred
I0412 23:40:36.486603 27589 net.cpp:100] Creating Layer twin_pred
I0412 23:40:36.486649 27589 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 23:40:36.486703 27589 net.cpp:408] twin_pred -> twin_pred
I0412 23:40:36.564990 27589 net.cpp:150] Setting up twin_pred
I0412 23:40:36.570583 27589 net.cpp:157] Top shape: 1 402 (402)
I0412 23:40:36.571300 27589 net.cpp:165] Memory required for data: 10172697192
I0412 23:40:36.571382 27589 layer_factory.hpp:77] Creating layer loss_cls
I0412 23:40:36.571452 27589 net.cpp:100] Creating Layer loss_cls
I0412 23:40:36.571506 27589 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 23:40:36.571558 27589 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 23:40:36.571612 27589 net.cpp:408] loss_cls -> loss_cls
I0412 23:40:36.571681 27589 layer_factory.hpp:77] Creating layer loss_cls
I0412 23:40:36.572031 27589 net.cpp:150] Setting up loss_cls
I0412 23:40:36.572120 27589 net.cpp:157] Top shape: (1)
I0412 23:40:36.572167 27589 net.cpp:160]     with loss weight 1
I0412 23:40:36.572237 27589 net.cpp:165] Memory required for data: 10172697196
I0412 23:40:36.572291 27589 layer_factory.hpp:77] Creating layer loss_twin
I0412 23:40:36.572372 27589 net.cpp:100] Creating Layer loss_twin
I0412 23:40:36.572422 27589 net.cpp:434] loss_twin <- twin_pred
I0412 23:40:36.572471 27589 net.cpp:434] loss_twin <- twin_targets
I0412 23:40:36.572515 27589 net.cpp:434] loss_twin <- twin_inside_weights
I0412 23:40:36.572556 27589 net.cpp:434] loss_twin <- twin_outside_weights
I0412 23:40:36.572602 27589 net.cpp:408] loss_twin -> loss_twin
I0412 23:40:36.572872 27589 net.cpp:150] Setting up loss_twin
I0412 23:40:36.572940 27589 net.cpp:157] Top shape: (1)
I0412 23:40:36.572984 27589 net.cpp:160]     with loss weight 1
I0412 23:40:36.573056 27589 net.cpp:165] Memory required for data: 10172697200
I0412 23:40:36.573098 27589 layer_factory.hpp:77] Creating layer accuarcy
I0412 23:40:36.573144 27589 net.cpp:100] Creating Layer accuarcy
I0412 23:40:36.573190 27589 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 23:40:36.573235 27589 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 23:40:36.573284 27589 net.cpp:408] accuarcy -> accuarcy
I0412 23:40:36.573350 27589 net.cpp:150] Setting up accuarcy
I0412 23:40:36.573395 27589 net.cpp:157] Top shape: (1)
I0412 23:40:36.573438 27589 net.cpp:165] Memory required for data: 10172697204
I0412 23:40:36.573482 27589 net.cpp:228] accuarcy does not need backward computation.
I0412 23:40:36.573523 27589 net.cpp:226] loss_twin needs backward computation.
I0412 23:40:36.573565 27589 net.cpp:226] loss_cls needs backward computation.
I0412 23:40:36.573607 27589 net.cpp:226] twin_pred needs backward computation.
I0412 23:40:36.573648 27589 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 23:40:36.573689 27589 net.cpp:226] cls_score needs backward computation.
I0412 23:40:36.573730 27589 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 23:40:36.573776 27589 net.cpp:226] drop6 needs backward computation.
I0412 23:40:36.573787 27589 net.cpp:226] relu6 needs backward computation.
I0412 23:40:36.573793 27589 net.cpp:226] fc6 needs backward computation.
I0412 23:40:36.573798 27589 net.cpp:226] roi_pool5 needs backward computation.
I0412 23:40:36.573843 27589 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 23:40:36.573884 27589 net.cpp:226] roi-data needs backward computation.
I0412 23:40:36.573923 27589 net.cpp:226] proposal needs backward computation.
I0412 23:40:36.573966 27589 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 23:40:36.574007 27589 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 23:40:36.574046 27589 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 23:40:36.574084 27589 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 23:40:36.574105 27589 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 23:40:36.574122 27589 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 23:40:36.574142 27589 net.cpp:226] rpn-data needs backward computation.
I0412 23:40:36.574162 27589 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 23:40:36.574179 27589 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 23:40:36.574208 27589 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 23:40:36.574218 27589 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 23:40:36.574223 27589 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 23:40:36.574229 27589 net.cpp:226] rpn_cls_score needs backward computation.
I0412 23:40:36.574235 27589 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 23:40:36.574240 27589 net.cpp:226] rpn/output_pool needs backward computation.
I0412 23:40:36.574245 27589 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 23:40:36.574250 27589 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 23:40:36.574256 27589 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 23:40:36.574261 27589 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 23:40:36.574266 27589 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 23:40:36.574272 27589 net.cpp:226] relu5b needs backward computation.
I0412 23:40:36.574277 27589 net.cpp:226] conv5b needs backward computation.
I0412 23:40:36.574282 27589 net.cpp:226] relu5a needs backward computation.
I0412 23:40:36.574287 27589 net.cpp:226] conv5a needs backward computation.
I0412 23:40:36.574292 27589 net.cpp:226] pool4 needs backward computation.
I0412 23:40:36.574297 27589 net.cpp:226] relu4b needs backward computation.
I0412 23:40:36.574302 27589 net.cpp:226] conv4b needs backward computation.
I0412 23:40:36.574307 27589 net.cpp:226] relu4a needs backward computation.
I0412 23:40:36.574311 27589 net.cpp:226] conv4a needs backward computation.
I0412 23:40:36.574316 27589 net.cpp:226] pool3 needs backward computation.
I0412 23:40:36.574322 27589 net.cpp:226] relu3b needs backward computation.
I0412 23:40:36.574326 27589 net.cpp:226] conv3b needs backward computation.
I0412 23:40:36.574331 27589 net.cpp:226] relu3a needs backward computation.
I0412 23:40:36.574337 27589 net.cpp:226] conv3a needs backward computation.
I0412 23:40:36.574342 27589 net.cpp:228] pool2 does not need backward computation.
I0412 23:40:36.574347 27589 net.cpp:228] relu2a does not need backward computation.
I0412 23:40:36.574352 27589 net.cpp:228] conv2a does not need backward computation.
I0412 23:40:36.574357 27589 net.cpp:228] pool1 does not need backward computation.
I0412 23:40:36.574363 27589 net.cpp:228] relu1a does not need backward computation.
I0412 23:40:36.574368 27589 net.cpp:228] conv1a does not need backward computation.
I0412 23:40:36.574374 27589 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 23:40:36.574380 27589 net.cpp:228] data_data_0_split does not need backward computation.
I0412 23:40:36.574386 27589 net.cpp:228] data does not need backward computation.
I0412 23:40:36.574390 27589 net.cpp:270] This network produces output accuarcy
I0412 23:40:36.574395 27589 net.cpp:270] This network produces output loss_cls
I0412 23:40:36.574401 27589 net.cpp:270] This network produces output loss_twin
I0412 23:40:36.574407 27589 net.cpp:270] This network produces output rpn_accuarcy
I0412 23:40:36.574412 27589 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 23:40:36.574417 27589 net.cpp:270] This network produces output rpn_cls_loss
I0412 23:40:36.574422 27589 net.cpp:270] This network produces output rpn_loss_twin
I0412 23:40:36.574479 27589 net.cpp:283] Network initialization done.
I0412 23:40:36.574630 27589 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 23:40:43.870229 27589 net.cpp:761] Ignoring source layer pool5
I0412 23:40:44.212723 27589 net.cpp:761] Ignoring source layer fc7
I0412 23:40:44.212795 27589 net.cpp:761] Ignoring source layer relu7
I0412 23:40:44.212810 27589 net.cpp:761] Ignoring source layer drop7
I0412 23:40:44.212822 27589 net.cpp:761] Ignoring source layer fc8-200
I0412 23:40:44.212834 27589 net.cpp:761] Ignoring source layer loss
Solving...
F0412 23:40:55.638756 27589 syncedmem.cpp:56] Check failed: error == cudaSuccess (2 vs. 0)  out of memory
*** Check failure stack trace: ***
