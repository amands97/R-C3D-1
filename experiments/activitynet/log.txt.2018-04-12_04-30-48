Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
print done
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}]
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 04:30:50.452440 30756 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 04:30:50.452509 30756 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 04:30:50.453442 30756 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 04:30:50.454337 30756 layer_factory.hpp:77] Creating layer data
I0412 04:30:50.470216 30756 net.cpp:100] Creating Layer data
I0412 04:30:50.470278 30756 net.cpp:408] data -> data
I0412 04:30:50.470304 30756 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 04:30:50.482007 30756 net.cpp:150] Setting up data
I0412 04:30:50.482033 30756 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 04:30:50.482039 30756 net.cpp:157] Top shape: 1 3 (3)
I0412 04:30:50.482043 30756 net.cpp:165] Memory required for data: 115605516
I0412 04:30:50.482053 30756 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 04:30:50.482069 30756 net.cpp:100] Creating Layer data_data_0_split
I0412 04:30:50.482076 30756 net.cpp:434] data_data_0_split <- data
I0412 04:30:50.482086 30756 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 04:30:50.482100 30756 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 04:30:50.482154 30756 net.cpp:150] Setting up data_data_0_split
I0412 04:30:50.482162 30756 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 04:30:50.482170 30756 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 04:30:50.482174 30756 net.cpp:165] Memory required for data: 346816524
I0412 04:30:50.482179 30756 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 04:30:50.482187 30756 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 04:30:50.482192 30756 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 04:30:50.482201 30756 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 04:30:50.482210 30756 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 04:30:50.482286 30756 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 04:30:50.482308 30756 net.cpp:157] Top shape: 1 3 (3)
I0412 04:30:50.482313 30756 net.cpp:157] Top shape: 1 3 (3)
I0412 04:30:50.482317 30756 net.cpp:165] Memory required for data: 346816548
I0412 04:30:50.482322 30756 layer_factory.hpp:77] Creating layer conv1a
I0412 04:30:50.482338 30756 net.cpp:100] Creating Layer conv1a
I0412 04:30:50.482344 30756 net.cpp:434] conv1a <- data_data_0_split_0
I0412 04:30:50.482352 30756 net.cpp:408] conv1a -> conv1a
I0412 04:30:50.503777 30756 net.cpp:150] Setting up conv1a
I0412 04:30:50.503851 30756 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 04:30:50.503870 30756 net.cpp:165] Memory required for data: 2813067300
I0412 04:30:50.503901 30756 layer_factory.hpp:77] Creating layer relu1a
I0412 04:30:50.503932 30756 net.cpp:100] Creating Layer relu1a
I0412 04:30:50.503952 30756 net.cpp:434] relu1a <- conv1a
I0412 04:30:50.503971 30756 net.cpp:395] relu1a -> conv1a (in-place)
I0412 04:30:50.503995 30756 net.cpp:150] Setting up relu1a
I0412 04:30:50.504014 30756 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 04:30:50.504029 30756 net.cpp:165] Memory required for data: 5279318052
I0412 04:30:50.504045 30756 layer_factory.hpp:77] Creating layer pool1
I0412 04:30:50.504070 30756 net.cpp:100] Creating Layer pool1
I0412 04:30:50.504086 30756 net.cpp:434] pool1 <- conv1a
I0412 04:30:50.504104 30756 net.cpp:408] pool1 -> pool1
I0412 04:30:50.504237 30756 net.cpp:150] Setting up pool1
I0412 04:30:50.504261 30756 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 04:30:50.504287 30756 net.cpp:165] Memory required for data: 5895880740
I0412 04:30:50.504304 30756 layer_factory.hpp:77] Creating layer conv2a
I0412 04:30:50.504364 30756 net.cpp:100] Creating Layer conv2a
I0412 04:30:50.504382 30756 net.cpp:434] conv2a <- pool1
I0412 04:30:50.504405 30756 net.cpp:408] conv2a -> conv2a
I0412 04:30:50.514361 30756 net.cpp:150] Setting up conv2a
I0412 04:30:50.514434 30756 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 04:30:50.514453 30756 net.cpp:165] Memory required for data: 7129006116
I0412 04:30:50.514483 30756 layer_factory.hpp:77] Creating layer relu2a
I0412 04:30:50.514509 30756 net.cpp:100] Creating Layer relu2a
I0412 04:30:50.514528 30756 net.cpp:434] relu2a <- conv2a
I0412 04:30:50.514552 30756 net.cpp:395] relu2a -> conv2a (in-place)
I0412 04:30:50.514577 30756 net.cpp:150] Setting up relu2a
I0412 04:30:50.514596 30756 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 04:30:50.514612 30756 net.cpp:165] Memory required for data: 8362131492
I0412 04:30:50.514627 30756 layer_factory.hpp:77] Creating layer pool2
I0412 04:30:50.514657 30756 net.cpp:100] Creating Layer pool2
I0412 04:30:50.514674 30756 net.cpp:434] pool2 <- conv2a
I0412 04:30:50.514693 30756 net.cpp:408] pool2 -> pool2
I0412 04:30:50.514811 30756 net.cpp:150] Setting up pool2
I0412 04:30:50.514833 30756 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 04:30:50.514850 30756 net.cpp:165] Memory required for data: 8516272164
I0412 04:30:50.514866 30756 layer_factory.hpp:77] Creating layer conv3a
I0412 04:30:50.514891 30756 net.cpp:100] Creating Layer conv3a
I0412 04:30:50.514909 30756 net.cpp:434] conv3a <- pool2
I0412 04:30:50.514930 30756 net.cpp:408] conv3a -> conv3a
I0412 04:30:50.527567 30756 net.cpp:150] Setting up conv3a
I0412 04:30:50.527628 30756 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 04:30:50.527647 30756 net.cpp:165] Memory required for data: 8824553508
I0412 04:30:50.527675 30756 layer_factory.hpp:77] Creating layer relu3a
I0412 04:30:50.527700 30756 net.cpp:100] Creating Layer relu3a
I0412 04:30:50.527721 30756 net.cpp:434] relu3a <- conv3a
I0412 04:30:50.527741 30756 net.cpp:395] relu3a -> conv3a (in-place)
I0412 04:30:50.527767 30756 net.cpp:150] Setting up relu3a
I0412 04:30:50.527787 30756 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 04:30:50.527803 30756 net.cpp:165] Memory required for data: 9132834852
I0412 04:30:50.527820 30756 layer_factory.hpp:77] Creating layer conv3b
I0412 04:30:50.527845 30756 net.cpp:100] Creating Layer conv3b
I0412 04:30:50.527863 30756 net.cpp:434] conv3b <- conv3a
I0412 04:30:50.527884 30756 net.cpp:408] conv3b -> conv3b
I0412 04:30:50.556315 30756 net.cpp:150] Setting up conv3b
I0412 04:30:50.556421 30756 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 04:30:50.556437 30756 net.cpp:165] Memory required for data: 9441116196
I0412 04:30:50.556459 30756 layer_factory.hpp:77] Creating layer relu3b
I0412 04:30:50.556481 30756 net.cpp:100] Creating Layer relu3b
I0412 04:30:50.556497 30756 net.cpp:434] relu3b <- conv3b
I0412 04:30:50.556517 30756 net.cpp:395] relu3b -> conv3b (in-place)
I0412 04:30:50.556545 30756 net.cpp:150] Setting up relu3b
I0412 04:30:50.556555 30756 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 04:30:50.556558 30756 net.cpp:165] Memory required for data: 9749397540
I0412 04:30:50.556562 30756 layer_factory.hpp:77] Creating layer pool3
I0412 04:30:50.556571 30756 net.cpp:100] Creating Layer pool3
I0412 04:30:50.556576 30756 net.cpp:434] pool3 <- conv3b
I0412 04:30:50.556582 30756 net.cpp:408] pool3 -> pool3
I0412 04:30:50.556671 30756 net.cpp:150] Setting up pool3
I0412 04:30:50.556684 30756 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 04:30:50.556689 30756 net.cpp:165] Memory required for data: 9787932708
I0412 04:30:50.556694 30756 layer_factory.hpp:77] Creating layer conv4a
I0412 04:30:50.556706 30756 net.cpp:100] Creating Layer conv4a
I0412 04:30:50.556725 30756 net.cpp:434] conv4a <- pool3
I0412 04:30:50.556752 30756 net.cpp:408] conv4a -> conv4a
I0412 04:30:50.601946 30756 net.cpp:150] Setting up conv4a
I0412 04:30:50.602105 30756 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 04:30:50.602147 30756 net.cpp:165] Memory required for data: 9865003044
I0412 04:30:50.602200 30756 layer_factory.hpp:77] Creating layer relu4a
I0412 04:30:50.602244 30756 net.cpp:100] Creating Layer relu4a
I0412 04:30:50.602284 30756 net.cpp:434] relu4a <- conv4a
I0412 04:30:50.602326 30756 net.cpp:395] relu4a -> conv4a (in-place)
I0412 04:30:50.602380 30756 net.cpp:150] Setting up relu4a
I0412 04:30:50.602424 30756 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 04:30:50.602461 30756 net.cpp:165] Memory required for data: 9942073380
I0412 04:30:50.602494 30756 layer_factory.hpp:77] Creating layer conv4b
I0412 04:30:50.602540 30756 net.cpp:100] Creating Layer conv4b
I0412 04:30:50.602574 30756 net.cpp:434] conv4b <- conv4a
I0412 04:30:50.602612 30756 net.cpp:408] conv4b -> conv4b
I0412 04:30:50.703395 30756 net.cpp:150] Setting up conv4b
I0412 04:30:50.703434 30756 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 04:30:50.703439 30756 net.cpp:165] Memory required for data: 10019143716
I0412 04:30:50.703450 30756 layer_factory.hpp:77] Creating layer relu4b
I0412 04:30:50.703462 30756 net.cpp:100] Creating Layer relu4b
I0412 04:30:50.703469 30756 net.cpp:434] relu4b <- conv4b
I0412 04:30:50.703480 30756 net.cpp:395] relu4b -> conv4b (in-place)
I0412 04:30:50.703492 30756 net.cpp:150] Setting up relu4b
I0412 04:30:50.703500 30756 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 04:30:50.703503 30756 net.cpp:165] Memory required for data: 10096214052
I0412 04:30:50.703508 30756 layer_factory.hpp:77] Creating layer pool4
I0412 04:30:50.703516 30756 net.cpp:100] Creating Layer pool4
I0412 04:30:50.703521 30756 net.cpp:434] pool4 <- conv4b
I0412 04:30:50.703529 30756 net.cpp:408] pool4 -> pool4
I0412 04:30:50.703590 30756 net.cpp:150] Setting up pool4
I0412 04:30:50.703620 30756 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:30:50.703639 30756 net.cpp:165] Memory required for data: 10105847844
I0412 04:30:50.703655 30756 layer_factory.hpp:77] Creating layer conv5a
I0412 04:30:50.703680 30756 net.cpp:100] Creating Layer conv5a
I0412 04:30:50.703698 30756 net.cpp:434] conv5a <- pool4
I0412 04:30:50.703718 30756 net.cpp:408] conv5a -> conv5a
I0412 04:30:50.771481 30756 net.cpp:150] Setting up conv5a
I0412 04:30:50.771545 30756 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:30:50.771553 30756 net.cpp:165] Memory required for data: 10115481636
I0412 04:30:50.771564 30756 layer_factory.hpp:77] Creating layer relu5a
I0412 04:30:50.771576 30756 net.cpp:100] Creating Layer relu5a
I0412 04:30:50.771584 30756 net.cpp:434] relu5a <- conv5a
I0412 04:30:50.771595 30756 net.cpp:395] relu5a -> conv5a (in-place)
I0412 04:30:50.771605 30756 net.cpp:150] Setting up relu5a
I0412 04:30:50.771612 30756 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:30:50.771616 30756 net.cpp:165] Memory required for data: 10125115428
I0412 04:30:50.771620 30756 layer_factory.hpp:77] Creating layer conv5b
I0412 04:30:50.771633 30756 net.cpp:100] Creating Layer conv5b
I0412 04:30:50.771639 30756 net.cpp:434] conv5b <- conv5a
I0412 04:30:50.771646 30756 net.cpp:408] conv5b -> conv5b
I0412 04:30:50.853152 30756 net.cpp:150] Setting up conv5b
I0412 04:30:50.853231 30756 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:30:50.853255 30756 net.cpp:165] Memory required for data: 10134749220
I0412 04:30:50.853278 30756 layer_factory.hpp:77] Creating layer relu5b
I0412 04:30:50.853307 30756 net.cpp:100] Creating Layer relu5b
I0412 04:30:50.853328 30756 net.cpp:434] relu5b <- conv5b
I0412 04:30:50.853351 30756 net.cpp:395] relu5b -> conv5b (in-place)
I0412 04:30:50.853375 30756 net.cpp:150] Setting up relu5b
I0412 04:30:50.853397 30756 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:30:50.853415 30756 net.cpp:165] Memory required for data: 10144383012
I0412 04:30:50.853432 30756 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 04:30:50.853442 30756 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 04:30:50.853447 30756 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 04:30:50.853456 30756 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 04:30:50.853466 30756 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 04:30:50.853521 30756 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 04:30:50.853529 30756 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:30:50.853534 30756 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:30:50.853538 30756 net.cpp:165] Memory required for data: 10163650596
I0412 04:30:50.853543 30756 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 04:30:50.853555 30756 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 04:30:50.853560 30756 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 04:30:50.853569 30756 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 04:30:50.926503 30756 net.cpp:150] Setting up rpn_conv/3x3
I0412 04:30:50.926579 30756 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 04:30:50.926604 30756 net.cpp:165] Memory required for data: 10166796324
I0412 04:30:50.926630 30756 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 04:30:50.926651 30756 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 04:30:50.926661 30756 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 04:30:50.926671 30756 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 04:30:50.926686 30756 net.cpp:150] Setting up rpn_relu/3x3
I0412 04:30:50.926695 30756 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 04:30:50.926699 30756 net.cpp:165] Memory required for data: 10169942052
I0412 04:30:50.926707 30756 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 04:30:50.926731 30756 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 04:30:50.926739 30756 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 04:30:50.926749 30756 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 04:30:51.019785 30756 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 04:30:51.019860 30756 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 04:30:51.019876 30756 net.cpp:165] Memory required for data: 10170728484
I0412 04:30:51.019896 30756 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 04:30:51.019923 30756 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 04:30:51.019939 30756 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 04:30:51.019968 30756 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 04:30:51.019992 30756 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 04:30:51.020006 30756 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 04:30:51.020011 30756 net.cpp:165] Memory required for data: 10171514916
I0412 04:30:51.020015 30756 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 04:30:51.020025 30756 net.cpp:100] Creating Layer rpn/output_pool
I0412 04:30:51.020030 30756 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 04:30:51.020035 30756 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 04:30:51.020097 30756 net.cpp:150] Setting up rpn/output_pool
I0412 04:30:51.020107 30756 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 04:30:51.020112 30756 net.cpp:165] Memory required for data: 10171711524
I0412 04:30:51.020117 30756 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 04:30:51.020123 30756 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 04:30:51.020130 30756 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 04:30:51.020138 30756 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 04:30:51.020144 30756 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 04:30:51.020201 30756 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 04:30:51.020212 30756 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 04:30:51.020217 30756 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 04:30:51.020221 30756 net.cpp:165] Memory required for data: 10172104740
I0412 04:30:51.020225 30756 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 04:30:51.020236 30756 net.cpp:100] Creating Layer rpn_cls_score
I0412 04:30:51.020239 30756 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 04:30:51.020268 30756 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 04:30:51.021080 30756 net.cpp:150] Setting up rpn_cls_score
I0412 04:30:51.021112 30756 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:30:51.021126 30756 net.cpp:165] Memory required for data: 10172133156
I0412 04:30:51.021145 30756 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 04:30:51.021162 30756 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 04:30:51.021175 30756 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 04:30:51.021198 30756 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 04:30:51.021219 30756 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 04:30:51.021299 30756 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 04:30:51.021320 30756 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:30:51.021342 30756 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:30:51.021355 30756 net.cpp:165] Memory required for data: 10172189988
I0412 04:30:51.021368 30756 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 04:30:51.021399 30756 net.cpp:100] Creating Layer rpn_twin_pred
I0412 04:30:51.021415 30756 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 04:30:51.021445 30756 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 04:30:51.022218 30756 net.cpp:150] Setting up rpn_twin_pred
I0412 04:30:51.022243 30756 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:30:51.022249 30756 net.cpp:165] Memory required for data: 10172218404
I0412 04:30:51.022258 30756 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 04:30:51.022265 30756 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 04:30:51.022270 30756 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 04:30:51.022277 30756 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 04:30:51.022286 30756 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 04:30:51.022351 30756 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 04:30:51.022359 30756 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:30:51.022364 30756 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:30:51.022368 30756 net.cpp:165] Memory required for data: 10172275236
I0412 04:30:51.022374 30756 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 04:30:51.022392 30756 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 04:30:51.022398 30756 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 04:30:51.022408 30756 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 04:30:51.022447 30756 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 04:30:51.022455 30756 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 04:30:51.022459 30756 net.cpp:165] Memory required for data: 10172303652
I0412 04:30:51.022464 30756 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 04:30:51.022483 30756 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 04:30:51.022490 30756 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 04:30:51.022496 30756 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 04:30:51.022513 30756 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 04:30:51.022521 30756 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 04:30:51.022593 30756 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 04:30:51.022603 30756 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 04:30:51.022608 30756 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 04:30:51.022614 30756 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 04:30:51.022619 30756 net.cpp:165] Memory required for data: 10172388900
I0412 04:30:51.022631 30756 layer_factory.hpp:77] Creating layer rpn-data
I0412 04:30:51.023150 30756 net.cpp:100] Creating Layer rpn-data
I0412 04:30:51.023178 30756 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 04:30:51.023196 30756 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 04:30:51.023214 30756 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 04:30:51.023233 30756 net.cpp:408] rpn-data -> rpn_labels
I0412 04:30:51.023253 30756 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 04:30:51.023284 30756 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 04:30:51.023306 30756 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 04:30:51.026834 30756 net.cpp:150] Setting up rpn-data
I0412 04:30:51.026867 30756 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 04:30:51.026885 30756 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:30:51.026901 30756 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:30:51.026917 30756 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:30:51.026929 30756 net.cpp:165] Memory required for data: 10172488356
I0412 04:30:51.026943 30756 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 04:30:51.026971 30756 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 04:30:51.026979 30756 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 04:30:51.026986 30756 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 04:30:51.027000 30756 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 04:30:51.027058 30756 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 04:30:51.027079 30756 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 04:30:51.027101 30756 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 04:30:51.027108 30756 net.cpp:165] Memory required for data: 10172516772
I0412 04:30:51.027113 30756 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 04:30:51.027122 30756 net.cpp:100] Creating Layer rpn_loss_cls
I0412 04:30:51.027128 30756 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 04:30:51.027134 30756 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 04:30:51.027151 30756 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 04:30:51.027176 30756 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 04:30:51.027346 30756 net.cpp:150] Setting up rpn_loss_cls
I0412 04:30:51.027364 30756 net.cpp:157] Top shape: (1)
I0412 04:30:51.027367 30756 net.cpp:160]     with loss weight 1
I0412 04:30:51.027382 30756 net.cpp:165] Memory required for data: 10172516776
I0412 04:30:51.027386 30756 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 04:30:51.027398 30756 net.cpp:100] Creating Layer rpn_loss_twin
I0412 04:30:51.027413 30756 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 04:30:51.027421 30756 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 04:30:51.027426 30756 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 04:30:51.027431 30756 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 04:30:51.027438 30756 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 04:30:51.027573 30756 net.cpp:150] Setting up rpn_loss_twin
I0412 04:30:51.027582 30756 net.cpp:157] Top shape: (1)
I0412 04:30:51.027586 30756 net.cpp:160]     with loss weight 1
I0412 04:30:51.027592 30756 net.cpp:165] Memory required for data: 10172516780
I0412 04:30:51.027597 30756 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 04:30:51.027611 30756 net.cpp:100] Creating Layer rpn_accuarcy
I0412 04:30:51.027616 30756 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 04:30:51.027622 30756 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 04:30:51.027629 30756 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 04:30:51.027637 30756 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 04:30:51.027716 30756 net.cpp:150] Setting up rpn_accuarcy
I0412 04:30:51.027740 30756 net.cpp:157] Top shape: (1)
I0412 04:30:51.027761 30756 net.cpp:157] Top shape: 2 (2)
I0412 04:30:51.027775 30756 net.cpp:165] Memory required for data: 10172516792
I0412 04:30:51.027786 30756 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 04:30:51.027810 30756 net.cpp:100] Creating Layer rpn_cls_prob
I0412 04:30:51.027825 30756 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 04:30:51.027853 30756 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 04:30:51.027997 30756 net.cpp:150] Setting up rpn_cls_prob
I0412 04:30:51.028025 30756 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 04:30:51.028040 30756 net.cpp:165] Memory required for data: 10172545208
I0412 04:30:51.028053 30756 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 04:30:51.028079 30756 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 04:30:51.028095 30756 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 04:30:51.028123 30756 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 04:30:51.028193 30756 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 04:30:51.028223 30756 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:30:51.028236 30756 net.cpp:165] Memory required for data: 10172573624
I0412 04:30:51.028250 30756 layer_factory.hpp:77] Creating layer proposal
I0412 04:30:51.029239 30756 net.cpp:100] Creating Layer proposal
I0412 04:30:51.029273 30756 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 04:30:51.029289 30756 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 04:30:51.029320 30756 net.cpp:408] proposal -> rpn_rois
I0412 04:30:51.034616 30756 net.cpp:150] Setting up proposal
I0412 04:30:51.034829 30756 net.cpp:157] Top shape: 1 3 (3)
I0412 04:30:51.034850 30756 net.cpp:165] Memory required for data: 10172573636
I0412 04:30:51.034884 30756 layer_factory.hpp:77] Creating layer roi-data
I0412 04:30:51.035115 30756 net.cpp:100] Creating Layer roi-data
I0412 04:30:51.035147 30756 net.cpp:434] roi-data <- rpn_rois
I0412 04:30:51.035166 30756 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 04:30:51.035192 30756 net.cpp:408] roi-data -> rois
I0412 04:30:51.035214 30756 net.cpp:408] roi-data -> labels
I0412 04:30:51.035238 30756 net.cpp:408] roi-data -> twin_targets
I0412 04:30:51.035259 30756 net.cpp:408] roi-data -> twin_inside_weights
I0412 04:30:51.035279 30756 net.cpp:408] roi-data -> twin_outside_weights
I0412 04:30:51.035800 30756 net.cpp:150] Setting up roi-data
I0412 04:30:51.035831 30756 net.cpp:157] Top shape: 1 3 (3)
I0412 04:30:51.035852 30756 net.cpp:157] Top shape: 1 1 (1)
I0412 04:30:51.035866 30756 net.cpp:157] Top shape: 1 402 (402)
I0412 04:30:51.035881 30756 net.cpp:157] Top shape: 1 402 (402)
I0412 04:30:51.035907 30756 net.cpp:157] Top shape: 1 402 (402)
I0412 04:30:51.035923 30756 net.cpp:165] Memory required for data: 10172578476
I0412 04:30:51.035938 30756 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 04:30:51.035961 30756 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 04:30:51.035976 30756 net.cpp:434] labels_roi-data_1_split <- labels
I0412 04:30:51.035997 30756 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 04:30:51.036018 30756 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 04:30:51.036100 30756 net.cpp:150] Setting up labels_roi-data_1_split
I0412 04:30:51.036226 30756 net.cpp:157] Top shape: 1 1 (1)
I0412 04:30:51.036453 30756 net.cpp:157] Top shape: 1 1 (1)
I0412 04:30:51.036473 30756 net.cpp:165] Memory required for data: 10172578484
I0412 04:30:51.036486 30756 layer_factory.hpp:77] Creating layer roi_pool5
I0412 04:30:51.036517 30756 net.cpp:100] Creating Layer roi_pool5
I0412 04:30:51.036540 30756 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 04:30:51.036566 30756 net.cpp:434] roi_pool5 <- rois
I0412 04:30:51.036584 30756 net.cpp:408] roi_pool5 -> pool5
I0412 04:30:51.036619 30756 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 04:30:51.036662 30756 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 04:30:51.036737 30756 net.cpp:150] Setting up roi_pool5
I0412 04:30:51.036772 30756 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 04:30:51.036787 30756 net.cpp:165] Memory required for data: 10172611252
I0412 04:30:51.036810 30756 layer_factory.hpp:77] Creating layer fc6
I0412 04:30:51.036830 30756 net.cpp:100] Creating Layer fc6
I0412 04:30:51.036854 30756 net.cpp:434] fc6 <- pool5
I0412 04:30:51.036871 30756 net.cpp:408] fc6 -> fc6
I0412 04:30:51.390575 30756 net.cpp:150] Setting up fc6
I0412 04:30:51.390607 30756 net.cpp:157] Top shape: 1 4096 (4096)
I0412 04:30:51.390611 30756 net.cpp:165] Memory required for data: 10172627636
I0412 04:30:51.390620 30756 layer_factory.hpp:77] Creating layer relu6
I0412 04:30:51.390630 30756 net.cpp:100] Creating Layer relu6
I0412 04:30:51.390635 30756 net.cpp:434] relu6 <- fc6
I0412 04:30:51.390641 30756 net.cpp:395] relu6 -> fc6 (in-place)
I0412 04:30:51.390648 30756 net.cpp:150] Setting up relu6
I0412 04:30:51.390652 30756 net.cpp:157] Top shape: 1 4096 (4096)
I0412 04:30:51.390656 30756 net.cpp:165] Memory required for data: 10172644020
I0412 04:30:51.390660 30756 layer_factory.hpp:77] Creating layer drop6
I0412 04:30:51.390666 30756 net.cpp:100] Creating Layer drop6
I0412 04:30:51.390671 30756 net.cpp:434] drop6 <- fc6
I0412 04:30:51.390674 30756 net.cpp:395] drop6 -> fc6 (in-place)
I0412 04:30:51.390700 30756 net.cpp:150] Setting up drop6
I0412 04:30:51.390708 30756 net.cpp:157] Top shape: 1 4096 (4096)
I0412 04:30:51.390712 30756 net.cpp:165] Memory required for data: 10172660404
I0412 04:30:51.390717 30756 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 04:30:51.390725 30756 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 04:30:51.390730 30756 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 04:30:51.390736 30756 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 04:30:51.390744 30756 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 04:30:51.390820 30756 net.cpp:150] Setting up fc6_drop6_0_split
I0412 04:30:51.390828 30756 net.cpp:157] Top shape: 1 4096 (4096)
I0412 04:30:51.390831 30756 net.cpp:157] Top shape: 1 4096 (4096)
I0412 04:30:51.390835 30756 net.cpp:165] Memory required for data: 10172693172
I0412 04:30:51.390837 30756 layer_factory.hpp:77] Creating layer cls_score
I0412 04:30:51.390848 30756 net.cpp:100] Creating Layer cls_score
I0412 04:30:51.390856 30756 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 04:30:51.390866 30756 net.cpp:408] cls_score -> cls_score
I0412 04:30:51.401437 30756 net.cpp:150] Setting up cls_score
I0412 04:30:51.401499 30756 net.cpp:157] Top shape: 1 201 (201)
I0412 04:30:51.401509 30756 net.cpp:165] Memory required for data: 10172693976
I0412 04:30:51.401520 30756 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 04:30:51.401531 30756 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 04:30:51.401540 30756 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 04:30:51.401548 30756 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 04:30:51.401561 30756 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 04:30:51.401625 30756 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 04:30:51.401638 30756 net.cpp:157] Top shape: 1 201 (201)
I0412 04:30:51.401644 30756 net.cpp:157] Top shape: 1 201 (201)
I0412 04:30:51.401648 30756 net.cpp:165] Memory required for data: 10172695584
I0412 04:30:51.401652 30756 layer_factory.hpp:77] Creating layer twin_pred
I0412 04:30:51.401662 30756 net.cpp:100] Creating Layer twin_pred
I0412 04:30:51.401667 30756 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 04:30:51.401679 30756 net.cpp:408] twin_pred -> twin_pred
I0412 04:30:51.423705 30756 net.cpp:150] Setting up twin_pred
I0412 04:30:51.423789 30756 net.cpp:157] Top shape: 1 402 (402)
I0412 04:30:51.423807 30756 net.cpp:165] Memory required for data: 10172697192
I0412 04:30:51.423832 30756 layer_factory.hpp:77] Creating layer loss_cls
I0412 04:30:51.423861 30756 net.cpp:100] Creating Layer loss_cls
I0412 04:30:51.423884 30756 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 04:30:51.423907 30756 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 04:30:51.423929 30756 net.cpp:408] loss_cls -> loss_cls
I0412 04:30:51.423956 30756 layer_factory.hpp:77] Creating layer loss_cls
I0412 04:30:51.424123 30756 net.cpp:150] Setting up loss_cls
I0412 04:30:51.424149 30756 net.cpp:157] Top shape: (1)
I0412 04:30:51.424167 30756 net.cpp:160]     with loss weight 1
I0412 04:30:51.424194 30756 net.cpp:165] Memory required for data: 10172697196
I0412 04:30:51.424211 30756 layer_factory.hpp:77] Creating layer loss_twin
I0412 04:30:51.424230 30756 net.cpp:100] Creating Layer loss_twin
I0412 04:30:51.424249 30756 net.cpp:434] loss_twin <- twin_pred
I0412 04:30:51.424268 30756 net.cpp:434] loss_twin <- twin_targets
I0412 04:30:51.424286 30756 net.cpp:434] loss_twin <- twin_inside_weights
I0412 04:30:51.424304 30756 net.cpp:434] loss_twin <- twin_outside_weights
I0412 04:30:51.424322 30756 net.cpp:408] loss_twin -> loss_twin
I0412 04:30:51.424512 30756 net.cpp:150] Setting up loss_twin
I0412 04:30:51.424537 30756 net.cpp:157] Top shape: (1)
I0412 04:30:51.424556 30756 net.cpp:160]     with loss weight 1
I0412 04:30:51.424576 30756 net.cpp:165] Memory required for data: 10172697200
I0412 04:30:51.424592 30756 layer_factory.hpp:77] Creating layer accuarcy
I0412 04:30:51.424610 30756 net.cpp:100] Creating Layer accuarcy
I0412 04:30:51.424628 30756 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 04:30:51.424646 30756 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 04:30:51.424666 30756 net.cpp:408] accuarcy -> accuarcy
I0412 04:30:51.424693 30756 net.cpp:150] Setting up accuarcy
I0412 04:30:51.424712 30756 net.cpp:157] Top shape: (1)
I0412 04:30:51.424727 30756 net.cpp:165] Memory required for data: 10172697204
I0412 04:30:51.424743 30756 net.cpp:228] accuarcy does not need backward computation.
I0412 04:30:51.424762 30756 net.cpp:226] loss_twin needs backward computation.
I0412 04:30:51.424778 30756 net.cpp:226] loss_cls needs backward computation.
I0412 04:30:51.424796 30756 net.cpp:226] twin_pred needs backward computation.
I0412 04:30:51.424814 30756 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 04:30:51.424831 30756 net.cpp:226] cls_score needs backward computation.
I0412 04:30:51.424849 30756 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 04:30:51.424865 30756 net.cpp:226] drop6 needs backward computation.
I0412 04:30:51.424881 30756 net.cpp:226] relu6 needs backward computation.
I0412 04:30:51.424897 30756 net.cpp:226] fc6 needs backward computation.
I0412 04:30:51.424914 30756 net.cpp:226] roi_pool5 needs backward computation.
I0412 04:30:51.424932 30756 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 04:30:51.424949 30756 net.cpp:226] roi-data needs backward computation.
I0412 04:30:51.424966 30756 net.cpp:226] proposal needs backward computation.
I0412 04:30:51.424983 30756 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 04:30:51.424998 30756 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 04:30:51.425014 30756 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 04:30:51.425031 30756 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 04:30:51.425050 30756 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 04:30:51.425068 30756 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 04:30:51.425086 30756 net.cpp:226] rpn-data needs backward computation.
I0412 04:30:51.425102 30756 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 04:30:51.425120 30756 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 04:30:51.425143 30756 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 04:30:51.425159 30756 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 04:30:51.425175 30756 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 04:30:51.425192 30756 net.cpp:226] rpn_cls_score needs backward computation.
I0412 04:30:51.425210 30756 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 04:30:51.425227 30756 net.cpp:226] rpn/output_pool needs backward computation.
I0412 04:30:51.425243 30756 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 04:30:51.425259 30756 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 04:30:51.425276 30756 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 04:30:51.425292 30756 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 04:30:51.425309 30756 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 04:30:51.425325 30756 net.cpp:226] relu5b needs backward computation.
I0412 04:30:51.425343 30756 net.cpp:226] conv5b needs backward computation.
I0412 04:30:51.425361 30756 net.cpp:226] relu5a needs backward computation.
I0412 04:30:51.425379 30756 net.cpp:226] conv5a needs backward computation.
I0412 04:30:51.425395 30756 net.cpp:226] pool4 needs backward computation.
I0412 04:30:51.425411 30756 net.cpp:226] relu4b needs backward computation.
I0412 04:30:51.425426 30756 net.cpp:226] conv4b needs backward computation.
I0412 04:30:51.425442 30756 net.cpp:226] relu4a needs backward computation.
I0412 04:30:51.425458 30756 net.cpp:226] conv4a needs backward computation.
I0412 04:30:51.425475 30756 net.cpp:226] pool3 needs backward computation.
I0412 04:30:51.425493 30756 net.cpp:226] relu3b needs backward computation.
I0412 04:30:51.425509 30756 net.cpp:226] conv3b needs backward computation.
I0412 04:30:51.425526 30756 net.cpp:226] relu3a needs backward computation.
I0412 04:30:51.425542 30756 net.cpp:226] conv3a needs backward computation.
I0412 04:30:51.425559 30756 net.cpp:228] pool2 does not need backward computation.
I0412 04:30:51.425575 30756 net.cpp:228] relu2a does not need backward computation.
I0412 04:30:51.425590 30756 net.cpp:228] conv2a does not need backward computation.
I0412 04:30:51.425607 30756 net.cpp:228] pool1 does not need backward computation.
I0412 04:30:51.425623 30756 net.cpp:228] relu1a does not need backward computation.
I0412 04:30:51.425638 30756 net.cpp:228] conv1a does not need backward computation.
I0412 04:30:51.425655 30756 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 04:30:51.425673 30756 net.cpp:228] data_data_0_split does not need backward computation.
I0412 04:30:51.425690 30756 net.cpp:228] data does not need backward computation.
I0412 04:30:51.425705 30756 net.cpp:270] This network produces output accuarcy
I0412 04:30:51.425722 30756 net.cpp:270] This network produces output loss_cls
I0412 04:30:51.425740 30756 net.cpp:270] This network produces output loss_twin
I0412 04:30:51.425755 30756 net.cpp:270] This network produces output rpn_accuarcy
I0412 04:30:51.425772 30756 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 04:30:51.425788 30756 net.cpp:270] This network produces output rpn_cls_loss
I0412 04:30:51.425803 30756 net.cpp:270] This network produces output rpn_loss_twin
I0412 04:30:51.425869 30756 net.cpp:283] Network initialization done.
I0412 04:30:51.426054 30756 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 04:30:51.602258 30756 net.cpp:761] Ignoring source layer pool5
I0412 04:30:51.627367 30756 net.cpp:761] Ignoring source layer fc7
I0412 04:30:51.627439 30756 net.cpp:761] Ignoring source layer relu7
I0412 04:30:51.627457 30756 net.cpp:761] Ignoring source layer drop7
I0412 04:30:51.627472 30756 net.cpp:761] Ignoring source layer fc8-200
I0412 04:30:51.627488 30756 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
F0412 04:30:51.653875 30756 syncedmem.cpp:56] Check failed: error == cudaSuccess (2 vs. 0)  out of memory
*** Check failure stack trace: ***
