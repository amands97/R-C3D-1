Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=0, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 0,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
print done
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}]
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 12:31:00.668081 20053 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 12:31:00.668119 20053 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 12:31:00.668671 20053 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 12:31:00.668951 20053 layer_factory.hpp:77] Creating layer data
I0412 12:31:00.686249 20053 net.cpp:100] Creating Layer data
I0412 12:31:00.686336 20053 net.cpp:408] data -> data
I0412 12:31:00.686372 20053 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 12:31:00.700065 20053 net.cpp:150] Setting up data
I0412 12:31:00.700098 20053 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 12:31:00.700105 20053 net.cpp:157] Top shape: 1 3 (3)
I0412 12:31:00.700110 20053 net.cpp:165] Memory required for data: 115605516
I0412 12:31:00.700119 20053 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 12:31:00.700134 20053 net.cpp:100] Creating Layer data_data_0_split
I0412 12:31:00.700140 20053 net.cpp:434] data_data_0_split <- data
I0412 12:31:00.700150 20053 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 12:31:00.700170 20053 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 12:31:00.700211 20053 net.cpp:150] Setting up data_data_0_split
I0412 12:31:00.700222 20053 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 12:31:00.700228 20053 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 12:31:00.700232 20053 net.cpp:165] Memory required for data: 346816524
I0412 12:31:00.700237 20053 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 12:31:00.700247 20053 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 12:31:00.700251 20053 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 12:31:00.700259 20053 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 12:31:00.700270 20053 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 12:31:00.700305 20053 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 12:31:00.700314 20053 net.cpp:157] Top shape: 1 3 (3)
I0412 12:31:00.700320 20053 net.cpp:157] Top shape: 1 3 (3)
I0412 12:31:00.700325 20053 net.cpp:165] Memory required for data: 346816548
I0412 12:31:00.700362 20053 layer_factory.hpp:77] Creating layer conv1a
I0412 12:31:00.700381 20053 net.cpp:100] Creating Layer conv1a
I0412 12:31:00.700387 20053 net.cpp:434] conv1a <- data_data_0_split_0
I0412 12:31:00.700395 20053 net.cpp:408] conv1a -> conv1a
I0412 12:31:00.728402 20053 net.cpp:150] Setting up conv1a
I0412 12:31:00.728513 20053 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 12:31:00.728530 20053 net.cpp:165] Memory required for data: 2813067300
I0412 12:31:00.728565 20053 layer_factory.hpp:77] Creating layer relu1a
I0412 12:31:00.728601 20053 net.cpp:100] Creating Layer relu1a
I0412 12:31:00.728623 20053 net.cpp:434] relu1a <- conv1a
I0412 12:31:00.728644 20053 net.cpp:395] relu1a -> conv1a (in-place)
I0412 12:31:00.728674 20053 net.cpp:150] Setting up relu1a
I0412 12:31:00.728696 20053 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 12:31:00.728713 20053 net.cpp:165] Memory required for data: 5279318052
I0412 12:31:00.728729 20053 layer_factory.hpp:77] Creating layer pool1
I0412 12:31:00.728765 20053 net.cpp:100] Creating Layer pool1
I0412 12:31:00.728785 20053 net.cpp:434] pool1 <- conv1a
I0412 12:31:00.728806 20053 net.cpp:408] pool1 -> pool1
I0412 12:31:00.728946 20053 net.cpp:150] Setting up pool1
I0412 12:31:00.728973 20053 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 12:31:00.729002 20053 net.cpp:165] Memory required for data: 5895880740
I0412 12:31:00.729024 20053 layer_factory.hpp:77] Creating layer conv2a
I0412 12:31:00.729056 20053 net.cpp:100] Creating Layer conv2a
I0412 12:31:00.729077 20053 net.cpp:434] conv2a <- pool1
I0412 12:31:00.729101 20053 net.cpp:408] conv2a -> conv2a
I0412 12:31:00.740419 20053 net.cpp:150] Setting up conv2a
I0412 12:31:00.740566 20053 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 12:31:00.740584 20053 net.cpp:165] Memory required for data: 7129006116
I0412 12:31:00.740622 20053 layer_factory.hpp:77] Creating layer relu2a
I0412 12:31:00.740641 20053 net.cpp:100] Creating Layer relu2a
I0412 12:31:00.740648 20053 net.cpp:434] relu2a <- conv2a
I0412 12:31:00.740664 20053 net.cpp:395] relu2a -> conv2a (in-place)
I0412 12:31:00.740685 20053 net.cpp:150] Setting up relu2a
I0412 12:31:00.740716 20053 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 12:31:00.740739 20053 net.cpp:165] Memory required for data: 8362131492
I0412 12:31:00.740759 20053 layer_factory.hpp:77] Creating layer pool2
I0412 12:31:00.740813 20053 net.cpp:100] Creating Layer pool2
I0412 12:31:00.740844 20053 net.cpp:434] pool2 <- conv2a
I0412 12:31:00.740869 20053 net.cpp:408] pool2 -> pool2
I0412 12:31:00.741025 20053 net.cpp:150] Setting up pool2
I0412 12:31:00.741039 20053 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 12:31:00.741042 20053 net.cpp:165] Memory required for data: 8516272164
I0412 12:31:00.741046 20053 layer_factory.hpp:77] Creating layer conv3a
I0412 12:31:00.741061 20053 net.cpp:100] Creating Layer conv3a
I0412 12:31:00.741081 20053 net.cpp:434] conv3a <- pool2
I0412 12:31:00.741102 20053 net.cpp:408] conv3a -> conv3a
I0412 12:31:00.753105 20053 net.cpp:150] Setting up conv3a
I0412 12:31:00.753234 20053 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 12:31:00.753257 20053 net.cpp:165] Memory required for data: 8824553508
I0412 12:31:00.753293 20053 layer_factory.hpp:77] Creating layer relu3a
I0412 12:31:00.753324 20053 net.cpp:100] Creating Layer relu3a
I0412 12:31:00.753348 20053 net.cpp:434] relu3a <- conv3a
I0412 12:31:00.753372 20053 net.cpp:395] relu3a -> conv3a (in-place)
I0412 12:31:00.753401 20053 net.cpp:150] Setting up relu3a
I0412 12:31:00.753424 20053 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 12:31:00.753443 20053 net.cpp:165] Memory required for data: 9132834852
I0412 12:31:00.753463 20053 layer_factory.hpp:77] Creating layer conv3b
I0412 12:31:00.753494 20053 net.cpp:100] Creating Layer conv3b
I0412 12:31:00.753515 20053 net.cpp:434] conv3b <- conv3a
I0412 12:31:00.753540 20053 net.cpp:408] conv3b -> conv3b
I0412 12:31:00.776284 20053 net.cpp:150] Setting up conv3b
I0412 12:31:00.776315 20053 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 12:31:00.776320 20053 net.cpp:165] Memory required for data: 9441116196
I0412 12:31:00.776371 20053 layer_factory.hpp:77] Creating layer relu3b
I0412 12:31:00.776386 20053 net.cpp:100] Creating Layer relu3b
I0412 12:31:00.776392 20053 net.cpp:434] relu3b <- conv3b
I0412 12:31:00.776404 20053 net.cpp:395] relu3b -> conv3b (in-place)
I0412 12:31:00.776420 20053 net.cpp:150] Setting up relu3b
I0412 12:31:00.776428 20053 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 12:31:00.776432 20053 net.cpp:165] Memory required for data: 9749397540
I0412 12:31:00.776437 20053 layer_factory.hpp:77] Creating layer pool3
I0412 12:31:00.776446 20053 net.cpp:100] Creating Layer pool3
I0412 12:31:00.776454 20053 net.cpp:434] pool3 <- conv3b
I0412 12:31:00.776466 20053 net.cpp:408] pool3 -> pool3
I0412 12:31:00.776518 20053 net.cpp:150] Setting up pool3
I0412 12:31:00.776527 20053 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 12:31:00.776532 20053 net.cpp:165] Memory required for data: 9787932708
I0412 12:31:00.776536 20053 layer_factory.hpp:77] Creating layer conv4a
I0412 12:31:00.776559 20053 net.cpp:100] Creating Layer conv4a
I0412 12:31:00.776566 20053 net.cpp:434] conv4a <- pool3
I0412 12:31:00.776576 20053 net.cpp:408] conv4a -> conv4a
I0412 12:31:00.814347 20053 net.cpp:150] Setting up conv4a
I0412 12:31:00.814407 20053 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 12:31:00.814412 20053 net.cpp:165] Memory required for data: 9865003044
I0412 12:31:00.814450 20053 layer_factory.hpp:77] Creating layer relu4a
I0412 12:31:00.814466 20053 net.cpp:100] Creating Layer relu4a
I0412 12:31:00.814472 20053 net.cpp:434] relu4a <- conv4a
I0412 12:31:00.814483 20053 net.cpp:395] relu4a -> conv4a (in-place)
I0412 12:31:00.814507 20053 net.cpp:150] Setting up relu4a
I0412 12:31:00.814512 20053 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 12:31:00.814517 20053 net.cpp:165] Memory required for data: 9942073380
I0412 12:31:00.814520 20053 layer_factory.hpp:77] Creating layer conv4b
I0412 12:31:00.814545 20053 net.cpp:100] Creating Layer conv4b
I0412 12:31:00.814549 20053 net.cpp:434] conv4b <- conv4a
I0412 12:31:00.814558 20053 net.cpp:408] conv4b -> conv4b
I0412 12:31:00.894956 20053 net.cpp:150] Setting up conv4b
I0412 12:31:00.895084 20053 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 12:31:00.895092 20053 net.cpp:165] Memory required for data: 10019143716
I0412 12:31:00.895119 20053 layer_factory.hpp:77] Creating layer relu4b
I0412 12:31:00.895148 20053 net.cpp:100] Creating Layer relu4b
I0412 12:31:00.895159 20053 net.cpp:434] relu4b <- conv4b
I0412 12:31:00.895170 20053 net.cpp:395] relu4b -> conv4b (in-place)
I0412 12:31:00.895196 20053 net.cpp:150] Setting up relu4b
I0412 12:31:00.895203 20053 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 12:31:00.895218 20053 net.cpp:165] Memory required for data: 10096214052
I0412 12:31:00.895226 20053 layer_factory.hpp:77] Creating layer pool4
I0412 12:31:00.895244 20053 net.cpp:100] Creating Layer pool4
I0412 12:31:00.895249 20053 net.cpp:434] pool4 <- conv4b
I0412 12:31:00.895258 20053 net.cpp:408] pool4 -> pool4
I0412 12:31:00.895341 20053 net.cpp:150] Setting up pool4
I0412 12:31:00.895350 20053 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:31:00.895354 20053 net.cpp:165] Memory required for data: 10105847844
I0412 12:31:00.895359 20053 layer_factory.hpp:77] Creating layer conv5a
I0412 12:31:00.895385 20053 net.cpp:100] Creating Layer conv5a
I0412 12:31:00.895390 20053 net.cpp:434] conv5a <- pool4
I0412 12:31:00.895401 20053 net.cpp:408] conv5a -> conv5a
I0412 12:31:00.966297 20053 net.cpp:150] Setting up conv5a
I0412 12:31:00.966325 20053 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:31:00.966329 20053 net.cpp:165] Memory required for data: 10115481636
I0412 12:31:00.966341 20053 layer_factory.hpp:77] Creating layer relu5a
I0412 12:31:00.966354 20053 net.cpp:100] Creating Layer relu5a
I0412 12:31:00.966362 20053 net.cpp:434] relu5a <- conv5a
I0412 12:31:00.966370 20053 net.cpp:395] relu5a -> conv5a (in-place)
I0412 12:31:00.966382 20053 net.cpp:150] Setting up relu5a
I0412 12:31:00.966389 20053 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:31:00.966393 20053 net.cpp:165] Memory required for data: 10125115428
I0412 12:31:00.966398 20053 layer_factory.hpp:77] Creating layer conv5b
I0412 12:31:00.966413 20053 net.cpp:100] Creating Layer conv5b
I0412 12:31:00.966418 20053 net.cpp:434] conv5b <- conv5a
I0412 12:31:00.966430 20053 net.cpp:408] conv5b -> conv5b
I0412 12:31:01.051785 20053 net.cpp:150] Setting up conv5b
I0412 12:31:01.051820 20053 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:31:01.051826 20053 net.cpp:165] Memory required for data: 10134749220
I0412 12:31:01.051836 20053 layer_factory.hpp:77] Creating layer relu5b
I0412 12:31:01.051848 20053 net.cpp:100] Creating Layer relu5b
I0412 12:31:01.051854 20053 net.cpp:434] relu5b <- conv5b
I0412 12:31:01.051863 20053 net.cpp:395] relu5b -> conv5b (in-place)
I0412 12:31:01.051875 20053 net.cpp:150] Setting up relu5b
I0412 12:31:01.051885 20053 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:31:01.051889 20053 net.cpp:165] Memory required for data: 10144383012
I0412 12:31:01.051894 20053 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 12:31:01.051905 20053 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 12:31:01.051909 20053 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 12:31:01.051918 20053 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 12:31:01.051928 20053 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 12:31:01.051967 20053 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 12:31:01.051975 20053 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:31:01.051982 20053 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:31:01.051986 20053 net.cpp:165] Memory required for data: 10163650596
I0412 12:31:01.051991 20053 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 12:31:01.052006 20053 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 12:31:01.052016 20053 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 12:31:01.052026 20053 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 12:31:01.131688 20053 net.cpp:150] Setting up rpn_conv/3x3
I0412 12:31:01.131881 20053 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 12:31:01.131912 20053 net.cpp:165] Memory required for data: 10166796324
I0412 12:31:01.131988 20053 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 12:31:01.132032 20053 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 12:31:01.132061 20053 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 12:31:01.132094 20053 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 12:31:01.132138 20053 net.cpp:150] Setting up rpn_relu/3x3
I0412 12:31:01.132164 20053 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 12:31:01.132184 20053 net.cpp:165] Memory required for data: 10169942052
I0412 12:31:01.132203 20053 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 12:31:01.132242 20053 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 12:31:01.132266 20053 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 12:31:01.132295 20053 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 12:31:01.234673 20053 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 12:31:01.234891 20053 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 12:31:01.234947 20053 net.cpp:165] Memory required for data: 10170728484
I0412 12:31:01.235010 20053 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 12:31:01.235072 20053 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 12:31:01.235121 20053 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 12:31:01.235177 20053 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 12:31:01.235230 20053 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 12:31:01.235280 20053 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 12:31:01.235327 20053 net.cpp:165] Memory required for data: 10171514916
I0412 12:31:01.235369 20053 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 12:31:01.235416 20053 net.cpp:100] Creating Layer rpn/output_pool
I0412 12:31:01.235460 20053 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 12:31:01.235507 20053 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 12:31:01.235621 20053 net.cpp:150] Setting up rpn/output_pool
I0412 12:31:01.235682 20053 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 12:31:01.235731 20053 net.cpp:165] Memory required for data: 10171711524
I0412 12:31:01.235783 20053 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 12:31:01.235836 20053 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 12:31:01.235884 20053 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 12:31:01.235932 20053 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 12:31:01.235986 20053 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 12:31:01.236073 20053 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 12:31:01.236125 20053 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 12:31:01.236171 20053 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 12:31:01.236215 20053 net.cpp:165] Memory required for data: 10172104740
I0412 12:31:01.236271 20053 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 12:31:01.236366 20053 net.cpp:100] Creating Layer rpn_cls_score
I0412 12:31:01.236415 20053 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 12:31:01.236469 20053 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 12:31:01.237277 20053 net.cpp:150] Setting up rpn_cls_score
I0412 12:31:01.237372 20053 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:31:01.237424 20053 net.cpp:165] Memory required for data: 10172133156
I0412 12:31:01.237483 20053 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 12:31:01.237557 20053 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 12:31:01.237612 20053 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 12:31:01.237668 20053 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 12:31:01.237725 20053 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 12:31:01.237826 20053 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 12:31:01.237896 20053 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:31:01.237942 20053 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:31:01.237985 20053 net.cpp:165] Memory required for data: 10172189988
I0412 12:31:01.238029 20053 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 12:31:01.238098 20053 net.cpp:100] Creating Layer rpn_twin_pred
I0412 12:31:01.238147 20053 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 12:31:01.238194 20053 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 12:31:01.239001 20053 net.cpp:150] Setting up rpn_twin_pred
I0412 12:31:01.239078 20053 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:31:01.239121 20053 net.cpp:165] Memory required for data: 10172218404
I0412 12:31:01.239171 20053 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 12:31:01.239219 20053 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 12:31:01.239265 20053 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 12:31:01.239315 20053 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 12:31:01.239367 20053 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 12:31:01.239464 20053 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 12:31:01.239532 20053 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:31:01.239578 20053 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:31:01.239620 20053 net.cpp:165] Memory required for data: 10172275236
I0412 12:31:01.239663 20053 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 12:31:01.239713 20053 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 12:31:01.239758 20053 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 12:31:01.239810 20053 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 12:31:01.239887 20053 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 12:31:01.239953 20053 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 12:31:01.239995 20053 net.cpp:165] Memory required for data: 10172303652
I0412 12:31:01.240037 20053 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 12:31:01.240083 20053 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 12:31:01.240126 20053 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 12:31:01.240175 20053 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 12:31:01.240233 20053 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 12:31:01.240284 20053 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 12:31:01.240438 20053 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 12:31:01.240511 20053 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 12:31:01.240557 20053 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 12:31:01.240602 20053 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 12:31:01.240643 20053 net.cpp:165] Memory required for data: 10172388900
I0412 12:31:01.240684 20053 layer_factory.hpp:77] Creating layer rpn-data
I0412 12:31:01.241335 20053 net.cpp:100] Creating Layer rpn-data
I0412 12:31:01.241425 20053 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 12:31:01.241477 20053 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 12:31:01.241525 20053 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 12:31:01.241577 20053 net.cpp:408] rpn-data -> rpn_labels
I0412 12:31:01.241631 20053 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 12:31:01.241683 20053 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 12:31:01.241734 20053 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 12:31:01.250566 20053 net.cpp:150] Setting up rpn-data
I0412 12:31:01.250728 20053 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 12:31:01.250772 20053 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:31:01.250813 20053 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:31:01.250852 20053 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:31:01.250890 20053 net.cpp:165] Memory required for data: 10172488356
I0412 12:31:01.250929 20053 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 12:31:01.250974 20053 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 12:31:01.251016 20053 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 12:31:01.251058 20053 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 12:31:01.251108 20053 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 12:31:01.251188 20053 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 12:31:01.251235 20053 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 12:31:01.251276 20053 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 12:31:01.251312 20053 net.cpp:165] Memory required for data: 10172516772
I0412 12:31:01.251349 20053 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 12:31:01.251394 20053 net.cpp:100] Creating Layer rpn_loss_cls
I0412 12:31:01.251435 20053 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 12:31:01.251477 20053 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 12:31:01.251520 20053 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 12:31:01.251567 20053 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 12:31:01.251718 20053 net.cpp:150] Setting up rpn_loss_cls
I0412 12:31:01.251778 20053 net.cpp:157] Top shape: (1)
I0412 12:31:01.251814 20053 net.cpp:160]     with loss weight 1
I0412 12:31:01.251863 20053 net.cpp:165] Memory required for data: 10172516776
I0412 12:31:01.251899 20053 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 12:31:01.251940 20053 net.cpp:100] Creating Layer rpn_loss_twin
I0412 12:31:01.251978 20053 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 12:31:01.252017 20053 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 12:31:01.252058 20053 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 12:31:01.252097 20053 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 12:31:01.252138 20053 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 12:31:01.252259 20053 net.cpp:150] Setting up rpn_loss_twin
I0412 12:31:01.252319 20053 net.cpp:157] Top shape: (1)
I0412 12:31:01.252405 20053 net.cpp:160]     with loss weight 1
I0412 12:31:01.252461 20053 net.cpp:165] Memory required for data: 10172516780
I0412 12:31:01.252498 20053 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 12:31:01.252539 20053 net.cpp:100] Creating Layer rpn_accuarcy
I0412 12:31:01.252578 20053 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 12:31:01.252632 20053 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 12:31:01.252676 20053 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 12:31:01.252720 20053 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 12:31:01.252804 20053 net.cpp:150] Setting up rpn_accuarcy
I0412 12:31:01.252866 20053 net.cpp:157] Top shape: (1)
I0412 12:31:01.252903 20053 net.cpp:157] Top shape: 2 (2)
I0412 12:31:01.252940 20053 net.cpp:165] Memory required for data: 10172516792
I0412 12:31:01.252975 20053 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 12:31:01.253015 20053 net.cpp:100] Creating Layer rpn_cls_prob
I0412 12:31:01.253053 20053 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 12:31:01.253093 20053 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 12:31:01.253195 20053 net.cpp:150] Setting up rpn_cls_prob
I0412 12:31:01.253254 20053 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 12:31:01.253293 20053 net.cpp:165] Memory required for data: 10172545208
I0412 12:31:01.253329 20053 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 12:31:01.253371 20053 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 12:31:01.253409 20053 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 12:31:01.253463 20053 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 12:31:01.253535 20053 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 12:31:01.253597 20053 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:31:01.253633 20053 net.cpp:165] Memory required for data: 10172573624
I0412 12:31:01.253670 20053 layer_factory.hpp:77] Creating layer proposal
I0412 12:31:01.254729 20053 net.cpp:100] Creating Layer proposal
I0412 12:31:01.254817 20053 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 12:31:01.254861 20053 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 12:31:01.254910 20053 net.cpp:408] proposal -> rpn_rois
I0412 12:31:01.261029 20053 net.cpp:150] Setting up proposal
I0412 12:31:01.261185 20053 net.cpp:157] Top shape: 1 3 (3)
I0412 12:31:01.261226 20053 net.cpp:165] Memory required for data: 10172573636
I0412 12:31:01.261268 20053 layer_factory.hpp:77] Creating layer roi-data
I0412 12:31:01.261590 20053 net.cpp:100] Creating Layer roi-data
I0412 12:31:01.261647 20053 net.cpp:434] roi-data <- rpn_rois
I0412 12:31:01.261693 20053 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 12:31:01.261739 20053 net.cpp:408] roi-data -> rois
I0412 12:31:01.261787 20053 net.cpp:408] roi-data -> labels
I0412 12:31:01.261832 20053 net.cpp:408] roi-data -> twin_targets
I0412 12:31:01.261878 20053 net.cpp:408] roi-data -> twin_inside_weights
I0412 12:31:01.261924 20053 net.cpp:408] roi-data -> twin_outside_weights
I0412 12:31:01.262588 20053 net.cpp:150] Setting up roi-data
I0412 12:31:01.263344 20053 net.cpp:157] Top shape: 1 3 (3)
I0412 12:31:01.263417 20053 net.cpp:157] Top shape: 1 1 (1)
I0412 12:31:01.263458 20053 net.cpp:157] Top shape: 1 402 (402)
I0412 12:31:01.263495 20053 net.cpp:157] Top shape: 1 402 (402)
I0412 12:31:01.263533 20053 net.cpp:157] Top shape: 1 402 (402)
I0412 12:31:01.264103 20053 net.cpp:165] Memory required for data: 10172578476
I0412 12:31:01.264161 20053 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 12:31:01.264209 20053 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 12:31:01.264250 20053 net.cpp:434] labels_roi-data_1_split <- labels
I0412 12:31:01.264293 20053 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 12:31:01.264376 20053 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 12:31:01.264492 20053 net.cpp:150] Setting up labels_roi-data_1_split
I0412 12:31:01.264554 20053 net.cpp:157] Top shape: 1 1 (1)
I0412 12:31:01.264593 20053 net.cpp:157] Top shape: 1 1 (1)
I0412 12:31:01.264631 20053 net.cpp:165] Memory required for data: 10172578484
I0412 12:31:01.264667 20053 layer_factory.hpp:77] Creating layer roi_pool5
I0412 12:31:01.264708 20053 net.cpp:100] Creating Layer roi_pool5
I0412 12:31:01.264763 20053 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 12:31:01.264806 20053 net.cpp:434] roi_pool5 <- rois
I0412 12:31:01.264847 20053 net.cpp:408] roi_pool5 -> pool5
I0412 12:31:01.264892 20053 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 12:31:01.264946 20053 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 12:31:01.265030 20053 net.cpp:150] Setting up roi_pool5
I0412 12:31:01.265089 20053 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 12:31:01.265127 20053 net.cpp:165] Memory required for data: 10172611252
I0412 12:31:01.265163 20053 layer_factory.hpp:77] Creating layer fc6
I0412 12:31:01.265215 20053 net.cpp:100] Creating Layer fc6
I0412 12:31:01.265255 20053 net.cpp:434] fc6 <- pool5
I0412 12:31:01.265296 20053 net.cpp:408] fc6 -> fc6
I0412 12:31:01.750229 20053 net.cpp:150] Setting up fc6
I0412 12:31:01.750258 20053 net.cpp:157] Top shape: 1 4096 (4096)
I0412 12:31:01.750262 20053 net.cpp:165] Memory required for data: 10172627636
I0412 12:31:01.750274 20053 layer_factory.hpp:77] Creating layer relu6
I0412 12:31:01.750285 20053 net.cpp:100] Creating Layer relu6
I0412 12:31:01.750290 20053 net.cpp:434] relu6 <- fc6
I0412 12:31:01.750296 20053 net.cpp:395] relu6 -> fc6 (in-place)
I0412 12:31:01.750305 20053 net.cpp:150] Setting up relu6
I0412 12:31:01.750310 20053 net.cpp:157] Top shape: 1 4096 (4096)
I0412 12:31:01.750313 20053 net.cpp:165] Memory required for data: 10172644020
I0412 12:31:01.750316 20053 layer_factory.hpp:77] Creating layer drop6
I0412 12:31:01.750324 20053 net.cpp:100] Creating Layer drop6
I0412 12:31:01.750329 20053 net.cpp:434] drop6 <- fc6
I0412 12:31:01.750332 20053 net.cpp:395] drop6 -> fc6 (in-place)
I0412 12:31:01.750352 20053 net.cpp:150] Setting up drop6
I0412 12:31:01.750360 20053 net.cpp:157] Top shape: 1 4096 (4096)
I0412 12:31:01.750361 20053 net.cpp:165] Memory required for data: 10172660404
I0412 12:31:01.750365 20053 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 12:31:01.750371 20053 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 12:31:01.750375 20053 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 12:31:01.750380 20053 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 12:31:01.750385 20053 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 12:31:01.750411 20053 net.cpp:150] Setting up fc6_drop6_0_split
I0412 12:31:01.750417 20053 net.cpp:157] Top shape: 1 4096 (4096)
I0412 12:31:01.750422 20053 net.cpp:157] Top shape: 1 4096 (4096)
I0412 12:31:01.750423 20053 net.cpp:165] Memory required for data: 10172693172
I0412 12:31:01.750427 20053 layer_factory.hpp:77] Creating layer cls_score
I0412 12:31:01.750434 20053 net.cpp:100] Creating Layer cls_score
I0412 12:31:01.750439 20053 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 12:31:01.750445 20053 net.cpp:408] cls_score -> cls_score
I0412 12:31:01.762141 20053 net.cpp:150] Setting up cls_score
I0412 12:31:01.762177 20053 net.cpp:157] Top shape: 1 201 (201)
I0412 12:31:01.762183 20053 net.cpp:165] Memory required for data: 10172693976
I0412 12:31:01.762198 20053 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 12:31:01.762212 20053 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 12:31:01.762218 20053 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 12:31:01.762230 20053 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 12:31:01.762244 20053 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 12:31:01.762320 20053 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 12:31:01.762346 20053 net.cpp:157] Top shape: 1 201 (201)
I0412 12:31:01.762365 20053 net.cpp:157] Top shape: 1 201 (201)
I0412 12:31:01.762403 20053 net.cpp:165] Memory required for data: 10172695584
I0412 12:31:01.762423 20053 layer_factory.hpp:77] Creating layer twin_pred
I0412 12:31:01.762449 20053 net.cpp:100] Creating Layer twin_pred
I0412 12:31:01.762470 20053 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 12:31:01.762493 20053 net.cpp:408] twin_pred -> twin_pred
I0412 12:31:01.784881 20053 net.cpp:150] Setting up twin_pred
I0412 12:31:01.784909 20053 net.cpp:157] Top shape: 1 402 (402)
I0412 12:31:01.784912 20053 net.cpp:165] Memory required for data: 10172697192
I0412 12:31:01.784924 20053 layer_factory.hpp:77] Creating layer loss_cls
I0412 12:31:01.784936 20053 net.cpp:100] Creating Layer loss_cls
I0412 12:31:01.784940 20053 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 12:31:01.784950 20053 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 12:31:01.784957 20053 net.cpp:408] loss_cls -> loss_cls
I0412 12:31:01.784968 20053 layer_factory.hpp:77] Creating layer loss_cls
I0412 12:31:01.785038 20053 net.cpp:150] Setting up loss_cls
I0412 12:31:01.785044 20053 net.cpp:157] Top shape: (1)
I0412 12:31:01.785048 20053 net.cpp:160]     with loss weight 1
I0412 12:31:01.785059 20053 net.cpp:165] Memory required for data: 10172697196
I0412 12:31:01.785063 20053 layer_factory.hpp:77] Creating layer loss_twin
I0412 12:31:01.785068 20053 net.cpp:100] Creating Layer loss_twin
I0412 12:31:01.785074 20053 net.cpp:434] loss_twin <- twin_pred
I0412 12:31:01.785079 20053 net.cpp:434] loss_twin <- twin_targets
I0412 12:31:01.785084 20053 net.cpp:434] loss_twin <- twin_inside_weights
I0412 12:31:01.785089 20053 net.cpp:434] loss_twin <- twin_outside_weights
I0412 12:31:01.785095 20053 net.cpp:408] loss_twin -> loss_twin
I0412 12:31:01.785163 20053 net.cpp:150] Setting up loss_twin
I0412 12:31:01.785171 20053 net.cpp:157] Top shape: (1)
I0412 12:31:01.785174 20053 net.cpp:160]     with loss weight 1
I0412 12:31:01.785179 20053 net.cpp:165] Memory required for data: 10172697200
I0412 12:31:01.785182 20053 layer_factory.hpp:77] Creating layer accuarcy
I0412 12:31:01.785188 20053 net.cpp:100] Creating Layer accuarcy
I0412 12:31:01.785192 20053 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 12:31:01.785199 20053 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 12:31:01.785203 20053 net.cpp:408] accuarcy -> accuarcy
I0412 12:31:01.785212 20053 net.cpp:150] Setting up accuarcy
I0412 12:31:01.785215 20053 net.cpp:157] Top shape: (1)
I0412 12:31:01.785218 20053 net.cpp:165] Memory required for data: 10172697204
I0412 12:31:01.785223 20053 net.cpp:228] accuarcy does not need backward computation.
I0412 12:31:01.785228 20053 net.cpp:226] loss_twin needs backward computation.
I0412 12:31:01.785230 20053 net.cpp:226] loss_cls needs backward computation.
I0412 12:31:01.785234 20053 net.cpp:226] twin_pred needs backward computation.
I0412 12:31:01.785238 20053 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 12:31:01.785243 20053 net.cpp:226] cls_score needs backward computation.
I0412 12:31:01.785245 20053 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 12:31:01.785249 20053 net.cpp:226] drop6 needs backward computation.
I0412 12:31:01.785254 20053 net.cpp:226] relu6 needs backward computation.
I0412 12:31:01.785256 20053 net.cpp:226] fc6 needs backward computation.
I0412 12:31:01.785260 20053 net.cpp:226] roi_pool5 needs backward computation.
I0412 12:31:01.785265 20053 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 12:31:01.785269 20053 net.cpp:226] roi-data needs backward computation.
I0412 12:31:01.785274 20053 net.cpp:226] proposal needs backward computation.
I0412 12:31:01.785277 20053 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 12:31:01.785282 20053 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 12:31:01.785286 20053 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 12:31:01.785291 20053 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 12:31:01.785297 20053 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 12:31:01.785302 20053 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 12:31:01.785307 20053 net.cpp:226] rpn-data needs backward computation.
I0412 12:31:01.785312 20053 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 12:31:01.785318 20053 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 12:31:01.785322 20053 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 12:31:01.785326 20053 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 12:31:01.785329 20053 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 12:31:01.785332 20053 net.cpp:226] rpn_cls_score needs backward computation.
I0412 12:31:01.785336 20053 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 12:31:01.785341 20053 net.cpp:226] rpn/output_pool needs backward computation.
I0412 12:31:01.785344 20053 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 12:31:01.785347 20053 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 12:31:01.785351 20053 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 12:31:01.785356 20053 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 12:31:01.785360 20053 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 12:31:01.785363 20053 net.cpp:226] relu5b needs backward computation.
I0412 12:31:01.785367 20053 net.cpp:226] conv5b needs backward computation.
I0412 12:31:01.785370 20053 net.cpp:226] relu5a needs backward computation.
I0412 12:31:01.785373 20053 net.cpp:226] conv5a needs backward computation.
I0412 12:31:01.785377 20053 net.cpp:226] pool4 needs backward computation.
I0412 12:31:01.785380 20053 net.cpp:226] relu4b needs backward computation.
I0412 12:31:01.785383 20053 net.cpp:226] conv4b needs backward computation.
I0412 12:31:01.785387 20053 net.cpp:226] relu4a needs backward computation.
I0412 12:31:01.785390 20053 net.cpp:226] conv4a needs backward computation.
I0412 12:31:01.785394 20053 net.cpp:226] pool3 needs backward computation.
I0412 12:31:01.785398 20053 net.cpp:226] relu3b needs backward computation.
I0412 12:31:01.785400 20053 net.cpp:226] conv3b needs backward computation.
I0412 12:31:01.785404 20053 net.cpp:226] relu3a needs backward computation.
I0412 12:31:01.785408 20053 net.cpp:226] conv3a needs backward computation.
I0412 12:31:01.785410 20053 net.cpp:228] pool2 does not need backward computation.
I0412 12:31:01.785414 20053 net.cpp:228] relu2a does not need backward computation.
I0412 12:31:01.785418 20053 net.cpp:228] conv2a does not need backward computation.
I0412 12:31:01.785421 20053 net.cpp:228] pool1 does not need backward computation.
I0412 12:31:01.785425 20053 net.cpp:228] relu1a does not need backward computation.
I0412 12:31:01.785429 20053 net.cpp:228] conv1a does not need backward computation.
I0412 12:31:01.785434 20053 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 12:31:01.785437 20053 net.cpp:228] data_data_0_split does not need backward computation.
I0412 12:31:01.785442 20053 net.cpp:228] data does not need backward computation.
I0412 12:31:01.785449 20053 net.cpp:270] This network produces output accuarcy
I0412 12:31:01.785451 20053 net.cpp:270] This network produces output loss_cls
I0412 12:31:01.785456 20053 net.cpp:270] This network produces output loss_twin
I0412 12:31:01.785459 20053 net.cpp:270] This network produces output rpn_accuarcy
I0412 12:31:01.785465 20053 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 12:31:01.785468 20053 net.cpp:270] This network produces output rpn_cls_loss
I0412 12:31:01.785471 20053 net.cpp:270] This network produces output rpn_loss_twin
I0412 12:31:01.785509 20053 net.cpp:283] Network initialization done.
I0412 12:31:01.785639 20053 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 12:31:02.042181 20053 net.cpp:761] Ignoring source layer pool5
I0412 12:31:02.076022 20053 net.cpp:761] Ignoring source layer fc7
I0412 12:31:02.076125 20053 net.cpp:761] Ignoring source layer relu7
I0412 12:31:02.076148 20053 net.cpp:761] Ignoring source layer drop7
I0412 12:31:02.076167 20053 net.cpp:761] Ignoring source layer fc8-200
I0412 12:31:02.076189 20053 net.cpp:761] Ignoring source layer loss
Solving...
F0412 12:31:03.448236 20053 syncedmem.cpp:56] Check failed: error == cudaSuccess (2 vs. 0)  out of memory
*** Check failure stack trace: ***
