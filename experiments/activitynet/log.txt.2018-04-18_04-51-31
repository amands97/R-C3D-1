Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=0, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 0,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': False,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  3.12500000e-02,   1.00000000e+02]]), 'durations': array([ 99.96875]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[  0,   0, 800,   8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  3.12500000e-02,   1.00000000e+02]]), 'durations': array([ 99.96875]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[  0,   0, 800,   8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  200, 1000,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  200, 1000,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  400, 1200,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  400, 1200,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  600, 1400,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  600, 1400,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  800, 1600,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  800, 1600,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1000, 1800,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1000, 1800,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1200, 2000,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1200, 2000,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1400, 2200,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1400, 2200,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1600, 2400,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1600, 2400,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1800, 2600,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1800, 2600,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2000, 2800,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2000, 2800,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2200, 3000,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2200, 3000,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  85.69802312]]), 'durations': array([ 85.69802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2400, 3200,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  85.69802312]]), 'durations': array([ 85.69802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2400, 3200,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  60.69802312]]), 'durations': array([ 60.69802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2600, 3400,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  60.69802312]]), 'durations': array([ 60.69802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2600, 3400,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  51.19802312]]), 'durations': array([ 51.19802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2676, 3476,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  51.19802312]]), 'durations': array([ 51.19802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2676, 3476,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  76.19802312]]), 'durations': array([ 76.19802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2476, 3276,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  76.19802312]]), 'durations': array([ 76.19802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2476, 3276,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2276, 3076,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2276, 3076,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2076, 2876,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2076, 2876,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1876, 2676,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1876, 2676,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1676, 2476,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1676, 2476,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1476, 2276,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1476, 2276,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1276, 2076,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1276, 2076,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1076, 1876,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1076, 1876,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  876, 1676,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  876, 1676,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  676, 1476,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  676, 1476,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  476, 1276,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  476, 1276,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  276, 1076,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  276, 1076,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[  0,  76, 876,   8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[  0,  76, 876,   8]]), 'max_overlaps': array([ 1.])}]
56 roidb entries
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
precimputed
twin target means:
twin target stdevs:
NOT normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0418 04:51:33.548132 21905 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0418 04:51:33.548162 21905 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0418 04:51:33.549194 21905 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 100"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 99"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 99
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 198
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SigmoidCrossEntropyLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
I0418 04:51:33.549387 21905 layer_factory.hpp:77] Creating layer data
I0418 04:51:33.573225 21905 net.cpp:100] Creating Layer data
I0418 04:51:33.573246 21905 net.cpp:408] data -> data
I0418 04:51:33.573259 21905 net.cpp:408] data -> gt_boxes
setting up
has rpn
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0418 04:51:33.586022 21905 net.cpp:150] Setting up data
I0418 04:51:33.586045 21905 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0418 04:51:33.586050 21905 net.cpp:157] Top shape: 1 101 (101)
I0418 04:51:33.586053 21905 net.cpp:165] Memory required for data: 115605908
I0418 04:51:33.586058 21905 layer_factory.hpp:77] Creating layer data_data_0_split
I0418 04:51:33.586069 21905 net.cpp:100] Creating Layer data_data_0_split
I0418 04:51:33.586076 21905 net.cpp:434] data_data_0_split <- data
I0418 04:51:33.586082 21905 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0418 04:51:33.586091 21905 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0418 04:51:33.586124 21905 net.cpp:150] Setting up data_data_0_split
I0418 04:51:33.586132 21905 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0418 04:51:33.586135 21905 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0418 04:51:33.586138 21905 net.cpp:165] Memory required for data: 346816916
I0418 04:51:33.586141 21905 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0418 04:51:33.586146 21905 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0418 04:51:33.586149 21905 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0418 04:51:33.586154 21905 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0418 04:51:33.586160 21905 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0418 04:51:33.586184 21905 net.cpp:150] Setting up gt_boxes_data_1_split
I0418 04:51:33.586189 21905 net.cpp:157] Top shape: 1 101 (101)
I0418 04:51:33.586194 21905 net.cpp:157] Top shape: 1 101 (101)
I0418 04:51:33.586195 21905 net.cpp:165] Memory required for data: 346817724
I0418 04:51:33.586199 21905 layer_factory.hpp:77] Creating layer conv1a
I0418 04:51:33.586215 21905 net.cpp:100] Creating Layer conv1a
I0418 04:51:33.586220 21905 net.cpp:434] conv1a <- data_data_0_split_0
I0418 04:51:33.586225 21905 net.cpp:408] conv1a -> conv1a
I0418 04:51:33.768061 21905 net.cpp:150] Setting up conv1a
I0418 04:51:33.768087 21905 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0418 04:51:33.768091 21905 net.cpp:165] Memory required for data: 2813068476
I0418 04:51:33.768108 21905 layer_factory.hpp:77] Creating layer relu1a
I0418 04:51:33.768122 21905 net.cpp:100] Creating Layer relu1a
I0418 04:51:33.768127 21905 net.cpp:434] relu1a <- conv1a
I0418 04:51:33.768132 21905 net.cpp:395] relu1a -> conv1a (in-place)
I0418 04:51:33.769023 21905 net.cpp:150] Setting up relu1a
I0418 04:51:33.769060 21905 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0418 04:51:33.769070 21905 net.cpp:165] Memory required for data: 5279319228
I0418 04:51:33.769081 21905 layer_factory.hpp:77] Creating layer pool1
I0418 04:51:33.769110 21905 net.cpp:100] Creating Layer pool1
I0418 04:51:33.769129 21905 net.cpp:434] pool1 <- conv1a
I0418 04:51:33.769155 21905 net.cpp:408] pool1 -> pool1
I0418 04:51:33.769620 21905 net.cpp:150] Setting up pool1
I0418 04:51:33.769649 21905 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0418 04:51:33.769666 21905 net.cpp:165] Memory required for data: 5895881916
I0418 04:51:33.769682 21905 layer_factory.hpp:77] Creating layer conv2a
I0418 04:51:33.769714 21905 net.cpp:100] Creating Layer conv2a
I0418 04:51:33.769739 21905 net.cpp:434] conv2a <- pool1
I0418 04:51:33.769765 21905 net.cpp:408] conv2a -> conv2a
I0418 04:51:33.791375 21905 net.cpp:150] Setting up conv2a
I0418 04:51:33.791400 21905 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0418 04:51:33.791404 21905 net.cpp:165] Memory required for data: 7129007292
I0418 04:51:33.791416 21905 layer_factory.hpp:77] Creating layer relu2a
I0418 04:51:33.791426 21905 net.cpp:100] Creating Layer relu2a
I0418 04:51:33.791431 21905 net.cpp:434] relu2a <- conv2a
I0418 04:51:33.791437 21905 net.cpp:395] relu2a -> conv2a (in-place)
I0418 04:51:33.791767 21905 net.cpp:150] Setting up relu2a
I0418 04:51:33.791780 21905 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0418 04:51:33.791785 21905 net.cpp:165] Memory required for data: 8362132668
I0418 04:51:33.791788 21905 layer_factory.hpp:77] Creating layer pool2
I0418 04:51:33.791797 21905 net.cpp:100] Creating Layer pool2
I0418 04:51:33.791803 21905 net.cpp:434] pool2 <- conv2a
I0418 04:51:33.791810 21905 net.cpp:408] pool2 -> pool2
I0418 04:51:33.791986 21905 net.cpp:150] Setting up pool2
I0418 04:51:33.791997 21905 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0418 04:51:33.792001 21905 net.cpp:165] Memory required for data: 8516273340
I0418 04:51:33.792006 21905 layer_factory.hpp:77] Creating layer conv3a
I0418 04:51:33.792016 21905 net.cpp:100] Creating Layer conv3a
I0418 04:51:33.792019 21905 net.cpp:434] conv3a <- pool2
I0418 04:51:33.792026 21905 net.cpp:408] conv3a -> conv3a
I0418 04:51:33.817607 21905 net.cpp:150] Setting up conv3a
I0418 04:51:33.817625 21905 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0418 04:51:33.817628 21905 net.cpp:165] Memory required for data: 8824554684
I0418 04:51:33.817638 21905 layer_factory.hpp:77] Creating layer relu3a
I0418 04:51:33.817646 21905 net.cpp:100] Creating Layer relu3a
I0418 04:51:33.817649 21905 net.cpp:434] relu3a <- conv3a
I0418 04:51:33.817654 21905 net.cpp:395] relu3a -> conv3a (in-place)
I0418 04:51:33.817935 21905 net.cpp:150] Setting up relu3a
I0418 04:51:33.817948 21905 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0418 04:51:33.817952 21905 net.cpp:165] Memory required for data: 9132836028
I0418 04:51:33.817956 21905 layer_factory.hpp:77] Creating layer conv3b
I0418 04:51:33.817966 21905 net.cpp:100] Creating Layer conv3b
I0418 04:51:33.817970 21905 net.cpp:434] conv3b <- conv3a
I0418 04:51:33.817976 21905 net.cpp:408] conv3b -> conv3b
I0418 04:51:33.867151 21905 net.cpp:150] Setting up conv3b
I0418 04:51:33.867175 21905 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0418 04:51:33.867180 21905 net.cpp:165] Memory required for data: 9441117372
I0418 04:51:33.867189 21905 layer_factory.hpp:77] Creating layer relu3b
I0418 04:51:33.867198 21905 net.cpp:100] Creating Layer relu3b
I0418 04:51:33.867203 21905 net.cpp:434] relu3b <- conv3b
I0418 04:51:33.867209 21905 net.cpp:395] relu3b -> conv3b (in-place)
I0418 04:51:33.867503 21905 net.cpp:150] Setting up relu3b
I0418 04:51:33.867517 21905 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0418 04:51:33.867522 21905 net.cpp:165] Memory required for data: 9749398716
I0418 04:51:33.867525 21905 layer_factory.hpp:77] Creating layer pool3
I0418 04:51:33.867532 21905 net.cpp:100] Creating Layer pool3
I0418 04:51:33.867537 21905 net.cpp:434] pool3 <- conv3b
I0418 04:51:33.867542 21905 net.cpp:408] pool3 -> pool3
I0418 04:51:33.867712 21905 net.cpp:150] Setting up pool3
I0418 04:51:33.867722 21905 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0418 04:51:33.867727 21905 net.cpp:165] Memory required for data: 9787933884
I0418 04:51:33.867732 21905 layer_factory.hpp:77] Creating layer conv4a
I0418 04:51:33.867741 21905 net.cpp:100] Creating Layer conv4a
I0418 04:51:33.867745 21905 net.cpp:434] conv4a <- pool3
I0418 04:51:33.867750 21905 net.cpp:408] conv4a -> conv4a
I0418 04:51:33.965198 21905 net.cpp:150] Setting up conv4a
I0418 04:51:33.965227 21905 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0418 04:51:33.965231 21905 net.cpp:165] Memory required for data: 9865004220
I0418 04:51:33.965245 21905 layer_factory.hpp:77] Creating layer relu4a
I0418 04:51:33.965255 21905 net.cpp:100] Creating Layer relu4a
I0418 04:51:33.965258 21905 net.cpp:434] relu4a <- conv4a
I0418 04:51:33.965265 21905 net.cpp:395] relu4a -> conv4a (in-place)
I0418 04:51:33.965590 21905 net.cpp:150] Setting up relu4a
I0418 04:51:33.965602 21905 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0418 04:51:33.965606 21905 net.cpp:165] Memory required for data: 9942074556
I0418 04:51:33.965610 21905 layer_factory.hpp:77] Creating layer conv4b
I0418 04:51:33.965623 21905 net.cpp:100] Creating Layer conv4b
I0418 04:51:33.965627 21905 net.cpp:434] conv4b <- conv4a
I0418 04:51:33.965633 21905 net.cpp:408] conv4b -> conv4b
I0418 04:51:34.159216 21905 net.cpp:150] Setting up conv4b
I0418 04:51:34.159240 21905 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0418 04:51:34.159245 21905 net.cpp:165] Memory required for data: 10019144892
I0418 04:51:34.159255 21905 layer_factory.hpp:77] Creating layer relu4b
I0418 04:51:34.159263 21905 net.cpp:100] Creating Layer relu4b
I0418 04:51:34.159268 21905 net.cpp:434] relu4b <- conv4b
I0418 04:51:34.159274 21905 net.cpp:395] relu4b -> conv4b (in-place)
I0418 04:51:34.159425 21905 net.cpp:150] Setting up relu4b
I0418 04:51:34.159437 21905 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0418 04:51:34.159441 21905 net.cpp:165] Memory required for data: 10096215228
I0418 04:51:34.159445 21905 layer_factory.hpp:77] Creating layer pool4
I0418 04:51:34.159452 21905 net.cpp:100] Creating Layer pool4
I0418 04:51:34.159456 21905 net.cpp:434] pool4 <- conv4b
I0418 04:51:34.159461 21905 net.cpp:408] pool4 -> pool4
I0418 04:51:34.159780 21905 net.cpp:150] Setting up pool4
I0418 04:51:34.159793 21905 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 04:51:34.159796 21905 net.cpp:165] Memory required for data: 10105849020
I0418 04:51:34.159801 21905 layer_factory.hpp:77] Creating layer conv5a
I0418 04:51:34.159811 21905 net.cpp:100] Creating Layer conv5a
I0418 04:51:34.159814 21905 net.cpp:434] conv5a <- pool4
I0418 04:51:34.159821 21905 net.cpp:408] conv5a -> conv5a
I0418 04:51:34.351248 21905 net.cpp:150] Setting up conv5a
I0418 04:51:34.351284 21905 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 04:51:34.351287 21905 net.cpp:165] Memory required for data: 10115482812
I0418 04:51:34.351296 21905 layer_factory.hpp:77] Creating layer relu5a
I0418 04:51:34.351305 21905 net.cpp:100] Creating Layer relu5a
I0418 04:51:34.351310 21905 net.cpp:434] relu5a <- conv5a
I0418 04:51:34.351316 21905 net.cpp:395] relu5a -> conv5a (in-place)
I0418 04:51:34.351752 21905 net.cpp:150] Setting up relu5a
I0418 04:51:34.351764 21905 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 04:51:34.351768 21905 net.cpp:165] Memory required for data: 10125116604
I0418 04:51:34.351773 21905 layer_factory.hpp:77] Creating layer conv5b
I0418 04:51:34.351783 21905 net.cpp:100] Creating Layer conv5b
I0418 04:51:34.351785 21905 net.cpp:434] conv5b <- conv5a
I0418 04:51:34.351792 21905 net.cpp:408] conv5b -> conv5b
I0418 04:51:34.539418 21905 net.cpp:150] Setting up conv5b
I0418 04:51:34.539443 21905 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 04:51:34.539448 21905 net.cpp:165] Memory required for data: 10134750396
I0418 04:51:34.539465 21905 layer_factory.hpp:77] Creating layer relu5b
I0418 04:51:34.539475 21905 net.cpp:100] Creating Layer relu5b
I0418 04:51:34.539481 21905 net.cpp:434] relu5b <- conv5b
I0418 04:51:34.539487 21905 net.cpp:395] relu5b -> conv5b (in-place)
I0418 04:51:34.539629 21905 net.cpp:150] Setting up relu5b
I0418 04:51:34.539639 21905 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 04:51:34.539643 21905 net.cpp:165] Memory required for data: 10144384188
I0418 04:51:34.539646 21905 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0418 04:51:34.539651 21905 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0418 04:51:34.539655 21905 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0418 04:51:34.539661 21905 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0418 04:51:34.539667 21905 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0418 04:51:34.539750 21905 net.cpp:150] Setting up conv5b_relu5b_0_split
I0418 04:51:34.539759 21905 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 04:51:34.539763 21905 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 04:51:34.539767 21905 net.cpp:165] Memory required for data: 10163651772
I0418 04:51:34.539770 21905 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0418 04:51:34.539779 21905 net.cpp:100] Creating Layer rpn_conv/3x3
I0418 04:51:34.539783 21905 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0418 04:51:34.539788 21905 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0418 04:51:34.727623 21905 net.cpp:150] Setting up rpn_conv/3x3
I0418 04:51:34.727648 21905 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0418 04:51:34.727651 21905 net.cpp:165] Memory required for data: 10166797500
I0418 04:51:34.727664 21905 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0418 04:51:34.727674 21905 net.cpp:100] Creating Layer rpn_relu/3x3
I0418 04:51:34.727679 21905 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0418 04:51:34.727686 21905 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0418 04:51:34.728107 21905 net.cpp:150] Setting up rpn_relu/3x3
I0418 04:51:34.728119 21905 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0418 04:51:34.728123 21905 net.cpp:165] Memory required for data: 10169943228
I0418 04:51:34.728127 21905 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0418 04:51:34.728137 21905 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0418 04:51:34.728142 21905 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0418 04:51:34.728147 21905 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0418 04:51:34.913830 21905 net.cpp:150] Setting up rpn_conv/3x3_2
I0418 04:51:34.913856 21905 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0418 04:51:34.913859 21905 net.cpp:165] Memory required for data: 10170729660
I0418 04:51:34.913868 21905 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0418 04:51:34.913877 21905 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0418 04:51:34.913882 21905 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0418 04:51:34.913887 21905 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0418 04:51:34.914193 21905 net.cpp:150] Setting up rpn_relu/3x3_2
I0418 04:51:34.914206 21905 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0418 04:51:34.914219 21905 net.cpp:165] Memory required for data: 10171516092
I0418 04:51:34.914222 21905 layer_factory.hpp:77] Creating layer rpn/output_pool
I0418 04:51:34.914230 21905 net.cpp:100] Creating Layer rpn/output_pool
I0418 04:51:34.914233 21905 net.cpp:434] rpn/output_pool <- rpn/output_2
I0418 04:51:34.914238 21905 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0418 04:51:34.914407 21905 net.cpp:150] Setting up rpn/output_pool
I0418 04:51:34.914417 21905 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0418 04:51:34.914420 21905 net.cpp:165] Memory required for data: 10171712700
I0418 04:51:34.914424 21905 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0418 04:51:34.914429 21905 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0418 04:51:34.914433 21905 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0418 04:51:34.914438 21905 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0418 04:51:34.914444 21905 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0418 04:51:34.914474 21905 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0418 04:51:34.914481 21905 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0418 04:51:34.914485 21905 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0418 04:51:34.914489 21905 net.cpp:165] Memory required for data: 10172105916
I0418 04:51:34.914491 21905 layer_factory.hpp:77] Creating layer rpn_cls_score
I0418 04:51:34.914500 21905 net.cpp:100] Creating Layer rpn_cls_score
I0418 04:51:34.914508 21905 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0418 04:51:34.914513 21905 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0418 04:51:34.916462 21905 net.cpp:150] Setting up rpn_cls_score
I0418 04:51:34.916499 21905 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 04:51:34.916503 21905 net.cpp:165] Memory required for data: 10172134332
I0418 04:51:34.916509 21905 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0418 04:51:34.916515 21905 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0418 04:51:34.916519 21905 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0418 04:51:34.916524 21905 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0418 04:51:34.916530 21905 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0418 04:51:34.916569 21905 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0418 04:51:34.916577 21905 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 04:51:34.916581 21905 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 04:51:34.916585 21905 net.cpp:165] Memory required for data: 10172191164
I0418 04:51:34.916589 21905 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0418 04:51:34.916600 21905 net.cpp:100] Creating Layer rpn_twin_pred
I0418 04:51:34.916605 21905 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0418 04:51:34.916610 21905 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0418 04:51:34.918550 21905 net.cpp:150] Setting up rpn_twin_pred
I0418 04:51:34.918565 21905 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 04:51:34.918568 21905 net.cpp:165] Memory required for data: 10172219580
I0418 04:51:34.918575 21905 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0418 04:51:34.918579 21905 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0418 04:51:34.918583 21905 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0418 04:51:34.918588 21905 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0418 04:51:34.918594 21905 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0418 04:51:34.918627 21905 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0418 04:51:34.918634 21905 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 04:51:34.918638 21905 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 04:51:34.918642 21905 net.cpp:165] Memory required for data: 10172276412
I0418 04:51:34.918645 21905 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0418 04:51:34.918656 21905 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0418 04:51:34.918663 21905 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0418 04:51:34.918668 21905 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0418 04:51:34.918697 21905 net.cpp:150] Setting up rpn_cls_score_reshape
I0418 04:51:34.918705 21905 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0418 04:51:34.918709 21905 net.cpp:165] Memory required for data: 10172304828
I0418 04:51:34.918711 21905 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0418 04:51:34.918716 21905 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0418 04:51:34.918721 21905 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0418 04:51:34.918727 21905 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0418 04:51:34.918735 21905 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0418 04:51:34.918740 21905 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0418 04:51:34.918793 21905 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0418 04:51:34.918802 21905 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0418 04:51:34.918807 21905 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0418 04:51:34.918810 21905 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0418 04:51:34.918813 21905 net.cpp:165] Memory required for data: 10172390076
I0418 04:51:34.918817 21905 layer_factory.hpp:77] Creating layer rpn-data
I0418 04:51:34.919229 21905 net.cpp:100] Creating Layer rpn-data
I0418 04:51:34.919240 21905 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0418 04:51:34.919246 21905 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0418 04:51:34.919250 21905 net.cpp:434] rpn-data <- data_data_0_split_1
I0418 04:51:34.919255 21905 net.cpp:408] rpn-data -> rpn_labels
I0418 04:51:34.919261 21905 net.cpp:408] rpn-data -> rpn_twin_targets
I0418 04:51:34.919267 21905 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0418 04:51:34.919272 21905 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0418 04:51:34.921612 21905 net.cpp:150] Setting up rpn-data
I0418 04:51:34.921627 21905 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0418 04:51:34.921630 21905 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 04:51:34.921633 21905 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 04:51:34.921638 21905 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 04:51:34.921639 21905 net.cpp:165] Memory required for data: 10172489532
I0418 04:51:34.921643 21905 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0418 04:51:34.921648 21905 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0418 04:51:34.921653 21905 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0418 04:51:34.921666 21905 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0418 04:51:34.921674 21905 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0418 04:51:34.921705 21905 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0418 04:51:34.921712 21905 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0418 04:51:34.921716 21905 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0418 04:51:34.921720 21905 net.cpp:165] Memory required for data: 10172517948
I0418 04:51:34.921722 21905 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0418 04:51:34.921730 21905 net.cpp:100] Creating Layer rpn_loss_cls
I0418 04:51:34.921735 21905 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0418 04:51:34.921739 21905 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0418 04:51:34.921744 21905 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0418 04:51:34.921756 21905 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0418 04:51:34.922137 21905 net.cpp:150] Setting up rpn_loss_cls
I0418 04:51:34.922149 21905 net.cpp:157] Top shape: (1)
I0418 04:51:34.922153 21905 net.cpp:160]     with loss weight 1
I0418 04:51:34.922175 21905 net.cpp:165] Memory required for data: 10172517952
I0418 04:51:34.922180 21905 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0418 04:51:34.922188 21905 net.cpp:100] Creating Layer rpn_loss_twin
I0418 04:51:34.922192 21905 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0418 04:51:34.922197 21905 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0418 04:51:34.922201 21905 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0418 04:51:34.922205 21905 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0418 04:51:34.922209 21905 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0418 04:51:34.922281 21905 net.cpp:150] Setting up rpn_loss_twin
I0418 04:51:34.922288 21905 net.cpp:157] Top shape: (1)
I0418 04:51:34.922292 21905 net.cpp:160]     with loss weight 1
I0418 04:51:34.922297 21905 net.cpp:165] Memory required for data: 10172517956
I0418 04:51:34.922300 21905 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0418 04:51:34.922309 21905 net.cpp:100] Creating Layer rpn_accuarcy
I0418 04:51:34.922317 21905 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0418 04:51:34.922322 21905 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0418 04:51:34.922327 21905 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0418 04:51:34.922333 21905 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0418 04:51:34.922368 21905 net.cpp:150] Setting up rpn_accuarcy
I0418 04:51:34.922375 21905 net.cpp:157] Top shape: (1)
I0418 04:51:34.922379 21905 net.cpp:157] Top shape: 2 (2)
I0418 04:51:34.922381 21905 net.cpp:165] Memory required for data: 10172517968
I0418 04:51:34.922385 21905 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0418 04:51:34.922389 21905 net.cpp:100] Creating Layer rpn_cls_prob
I0418 04:51:34.922394 21905 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0418 04:51:34.922399 21905 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0418 04:51:34.922585 21905 net.cpp:150] Setting up rpn_cls_prob
I0418 04:51:34.922595 21905 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0418 04:51:34.922600 21905 net.cpp:165] Memory required for data: 10172546384
I0418 04:51:34.922602 21905 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0418 04:51:34.922608 21905 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0418 04:51:34.922612 21905 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0418 04:51:34.922617 21905 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0418 04:51:34.922639 21905 net.cpp:150] Setting up rpn_cls_prob_reshape
I0418 04:51:34.922646 21905 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 04:51:34.922649 21905 net.cpp:165] Memory required for data: 10172574800
I0418 04:51:34.922652 21905 layer_factory.hpp:77] Creating layer proposal
I0418 04:51:34.923225 21905 net.cpp:100] Creating Layer proposal
I0418 04:51:34.923238 21905 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0418 04:51:34.923243 21905 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0418 04:51:34.923249 21905 net.cpp:408] proposal -> rpn_rois
I0418 04:51:34.925468 21905 net.cpp:150] Setting up proposal
I0418 04:51:34.925482 21905 net.cpp:157] Top shape: 1 3 (3)
I0418 04:51:34.925487 21905 net.cpp:165] Memory required for data: 10172574812
I0418 04:51:34.925490 21905 layer_factory.hpp:77] Creating layer roi-data
I0418 04:51:34.925635 21905 net.cpp:100] Creating Layer roi-data
I0418 04:51:34.925647 21905 net.cpp:434] roi-data <- rpn_rois
I0418 04:51:34.925652 21905 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0418 04:51:34.925657 21905 net.cpp:408] roi-data -> rois
I0418 04:51:34.925663 21905 net.cpp:408] roi-data -> labels
I0418 04:51:34.925669 21905 net.cpp:408] roi-data -> twin_targets
I0418 04:51:34.925675 21905 net.cpp:408] roi-data -> twin_inside_weights
I0418 04:51:34.925680 21905 net.cpp:408] roi-data -> twin_outside_weights
I0418 04:51:34.925987 21905 net.cpp:150] Setting up roi-data
I0418 04:51:34.925999 21905 net.cpp:157] Top shape: 1 3 (3)
I0418 04:51:34.926003 21905 net.cpp:157] Top shape: 1 99 (99)
I0418 04:51:34.926007 21905 net.cpp:157] Top shape: 1 198 (198)
I0418 04:51:34.926012 21905 net.cpp:157] Top shape: 1 198 (198)
I0418 04:51:34.926014 21905 net.cpp:157] Top shape: 1 198 (198)
I0418 04:51:34.926017 21905 net.cpp:165] Memory required for data: 10172577596
I0418 04:51:34.926021 21905 layer_factory.hpp:77] Creating layer roi_pool5
I0418 04:51:34.926030 21905 net.cpp:100] Creating Layer roi_pool5
I0418 04:51:34.926034 21905 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0418 04:51:34.926039 21905 net.cpp:434] roi_pool5 <- rois
I0418 04:51:34.926044 21905 net.cpp:408] roi_pool5 -> pool5
I0418 04:51:34.926051 21905 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0418 04:51:34.926059 21905 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0418 04:51:34.926103 21905 net.cpp:150] Setting up roi_pool5
I0418 04:51:34.926112 21905 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0418 04:51:34.926116 21905 net.cpp:165] Memory required for data: 10172610364
I0418 04:51:34.926120 21905 layer_factory.hpp:77] Creating layer fc6
I0418 04:51:34.926127 21905 net.cpp:100] Creating Layer fc6
I0418 04:51:34.926133 21905 net.cpp:434] fc6 <- pool5
I0418 04:51:34.926141 21905 net.cpp:408] fc6 -> fc6
I0418 04:51:35.806830 21905 net.cpp:150] Setting up fc6
I0418 04:51:35.806854 21905 net.cpp:157] Top shape: 1 4096 (4096)
I0418 04:51:35.806859 21905 net.cpp:165] Memory required for data: 10172626748
I0418 04:51:35.806867 21905 layer_factory.hpp:77] Creating layer relu6
I0418 04:51:35.806876 21905 net.cpp:100] Creating Layer relu6
I0418 04:51:35.806881 21905 net.cpp:434] relu6 <- fc6
I0418 04:51:35.806887 21905 net.cpp:395] relu6 -> fc6 (in-place)
I0418 04:51:35.808678 21905 net.cpp:150] Setting up relu6
I0418 04:51:35.808692 21905 net.cpp:157] Top shape: 1 4096 (4096)
I0418 04:51:35.808696 21905 net.cpp:165] Memory required for data: 10172643132
I0418 04:51:35.808701 21905 layer_factory.hpp:77] Creating layer drop6
I0418 04:51:35.808713 21905 net.cpp:100] Creating Layer drop6
I0418 04:51:35.808719 21905 net.cpp:434] drop6 <- fc6
I0418 04:51:35.808725 21905 net.cpp:395] drop6 -> fc6 (in-place)
I0418 04:51:35.808758 21905 net.cpp:150] Setting up drop6
I0418 04:51:35.808764 21905 net.cpp:157] Top shape: 1 4096 (4096)
I0418 04:51:35.808768 21905 net.cpp:165] Memory required for data: 10172659516
I0418 04:51:35.808770 21905 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0418 04:51:35.808776 21905 net.cpp:100] Creating Layer fc6_drop6_0_split
I0418 04:51:35.808779 21905 net.cpp:434] fc6_drop6_0_split <- fc6
I0418 04:51:35.808785 21905 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0418 04:51:35.808792 21905 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0418 04:51:35.808826 21905 net.cpp:150] Setting up fc6_drop6_0_split
I0418 04:51:35.808831 21905 net.cpp:157] Top shape: 1 4096 (4096)
I0418 04:51:35.808835 21905 net.cpp:157] Top shape: 1 4096 (4096)
I0418 04:51:35.808838 21905 net.cpp:165] Memory required for data: 10172692284
I0418 04:51:35.808843 21905 layer_factory.hpp:77] Creating layer cls_score
I0418 04:51:35.808851 21905 net.cpp:100] Creating Layer cls_score
I0418 04:51:35.808853 21905 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0418 04:51:35.808858 21905 net.cpp:408] cls_score -> cls_score
I0418 04:51:35.819983 21905 net.cpp:150] Setting up cls_score
I0418 04:51:35.819999 21905 net.cpp:157] Top shape: 1 99 (99)
I0418 04:51:35.820003 21905 net.cpp:165] Memory required for data: 10172692680
I0418 04:51:35.820011 21905 layer_factory.hpp:77] Creating layer twin_pred
I0418 04:51:35.820019 21905 net.cpp:100] Creating Layer twin_pred
I0418 04:51:35.820024 21905 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0418 04:51:35.820031 21905 net.cpp:408] twin_pred -> twin_pred
I0418 04:51:35.842800 21905 net.cpp:150] Setting up twin_pred
I0418 04:51:35.842814 21905 net.cpp:157] Top shape: 1 198 (198)
I0418 04:51:35.842818 21905 net.cpp:165] Memory required for data: 10172693472
I0418 04:51:35.842833 21905 layer_factory.hpp:77] Creating layer loss_cls
I0418 04:51:35.842845 21905 net.cpp:100] Creating Layer loss_cls
I0418 04:51:35.842850 21905 net.cpp:434] loss_cls <- cls_score
I0418 04:51:35.842855 21905 net.cpp:434] loss_cls <- labels
I0418 04:51:35.842860 21905 net.cpp:408] loss_cls -> loss_cls
I0418 04:51:35.842914 21905 net.cpp:150] Setting up loss_cls
I0418 04:51:35.842921 21905 net.cpp:157] Top shape: (1)
I0418 04:51:35.842926 21905 net.cpp:160]     with loss weight 1
I0418 04:51:35.842932 21905 net.cpp:165] Memory required for data: 10172693476
I0418 04:51:35.842936 21905 layer_factory.hpp:77] Creating layer loss_twin
I0418 04:51:35.842942 21905 net.cpp:100] Creating Layer loss_twin
I0418 04:51:35.842945 21905 net.cpp:434] loss_twin <- twin_pred
I0418 04:51:35.842949 21905 net.cpp:434] loss_twin <- twin_targets
I0418 04:51:35.842953 21905 net.cpp:434] loss_twin <- twin_inside_weights
I0418 04:51:35.842957 21905 net.cpp:434] loss_twin <- twin_outside_weights
I0418 04:51:35.842962 21905 net.cpp:408] loss_twin -> loss_twin
I0418 04:51:35.843024 21905 net.cpp:150] Setting up loss_twin
I0418 04:51:35.843031 21905 net.cpp:157] Top shape: (1)
I0418 04:51:35.843034 21905 net.cpp:160]     with loss weight 1
I0418 04:51:35.843039 21905 net.cpp:165] Memory required for data: 10172693480
I0418 04:51:35.843042 21905 net.cpp:226] loss_twin needs backward computation.
I0418 04:51:35.843046 21905 net.cpp:226] loss_cls needs backward computation.
I0418 04:51:35.843050 21905 net.cpp:226] twin_pred needs backward computation.
I0418 04:51:35.843053 21905 net.cpp:226] cls_score needs backward computation.
I0418 04:51:35.843056 21905 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0418 04:51:35.843060 21905 net.cpp:226] drop6 needs backward computation.
I0418 04:51:35.843063 21905 net.cpp:226] relu6 needs backward computation.
I0418 04:51:35.843067 21905 net.cpp:226] fc6 needs backward computation.
I0418 04:51:35.843071 21905 net.cpp:226] roi_pool5 needs backward computation.
I0418 04:51:35.843075 21905 net.cpp:226] roi-data needs backward computation.
I0418 04:51:35.843078 21905 net.cpp:226] proposal needs backward computation.
I0418 04:51:35.843082 21905 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0418 04:51:35.843086 21905 net.cpp:226] rpn_cls_prob needs backward computation.
I0418 04:51:35.843091 21905 net.cpp:228] rpn_accuarcy does not need backward computation.
I0418 04:51:35.843094 21905 net.cpp:226] rpn_loss_twin needs backward computation.
I0418 04:51:35.843099 21905 net.cpp:226] rpn_loss_cls needs backward computation.
I0418 04:51:35.843103 21905 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0418 04:51:35.843107 21905 net.cpp:226] rpn-data needs backward computation.
I0418 04:51:35.843112 21905 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0418 04:51:35.843116 21905 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0418 04:51:35.843120 21905 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0418 04:51:35.843124 21905 net.cpp:226] rpn_twin_pred needs backward computation.
I0418 04:51:35.843127 21905 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0418 04:51:35.843132 21905 net.cpp:226] rpn_cls_score needs backward computation.
I0418 04:51:35.843135 21905 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0418 04:51:35.843139 21905 net.cpp:226] rpn/output_pool needs backward computation.
I0418 04:51:35.843142 21905 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0418 04:51:35.843147 21905 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0418 04:51:35.843150 21905 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0418 04:51:35.843153 21905 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0418 04:51:35.843158 21905 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0418 04:51:35.843161 21905 net.cpp:226] relu5b needs backward computation.
I0418 04:51:35.843164 21905 net.cpp:226] conv5b needs backward computation.
I0418 04:51:35.843168 21905 net.cpp:226] relu5a needs backward computation.
I0418 04:51:35.843173 21905 net.cpp:226] conv5a needs backward computation.
I0418 04:51:35.843175 21905 net.cpp:226] pool4 needs backward computation.
I0418 04:51:35.843179 21905 net.cpp:226] relu4b needs backward computation.
I0418 04:51:35.843183 21905 net.cpp:226] conv4b needs backward computation.
I0418 04:51:35.843188 21905 net.cpp:226] relu4a needs backward computation.
I0418 04:51:35.843190 21905 net.cpp:226] conv4a needs backward computation.
I0418 04:51:35.843194 21905 net.cpp:226] pool3 needs backward computation.
I0418 04:51:35.843199 21905 net.cpp:226] relu3b needs backward computation.
I0418 04:51:35.843201 21905 net.cpp:226] conv3b needs backward computation.
I0418 04:51:35.843204 21905 net.cpp:226] relu3a needs backward computation.
I0418 04:51:35.843209 21905 net.cpp:226] conv3a needs backward computation.
I0418 04:51:35.843212 21905 net.cpp:228] pool2 does not need backward computation.
I0418 04:51:35.843215 21905 net.cpp:228] relu2a does not need backward computation.
I0418 04:51:35.843219 21905 net.cpp:228] conv2a does not need backward computation.
I0418 04:51:35.843222 21905 net.cpp:228] pool1 does not need backward computation.
I0418 04:51:35.843226 21905 net.cpp:228] relu1a does not need backward computation.
I0418 04:51:35.843230 21905 net.cpp:228] conv1a does not need backward computation.
I0418 04:51:35.843233 21905 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0418 04:51:35.843238 21905 net.cpp:228] data_data_0_split does not need backward computation.
I0418 04:51:35.843242 21905 net.cpp:228] data does not need backward computation.
I0418 04:51:35.843245 21905 net.cpp:270] This network produces output loss_cls
I0418 04:51:35.843250 21905 net.cpp:270] This network produces output loss_twin
I0418 04:51:35.843252 21905 net.cpp:270] This network produces output rpn_accuarcy
I0418 04:51:35.843256 21905 net.cpp:270] This network produces output rpn_accuarcy_class
I0418 04:51:35.843260 21905 net.cpp:270] This network produces output rpn_cls_loss
I0418 04:51:35.843263 21905 net.cpp:270] This network produces output rpn_loss_twin
I0418 04:51:35.843293 21905 net.cpp:283] Network initialization done.
I0418 04:51:35.843428 21905 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0418 04:51:38.567430 21905 net.cpp:761] Ignoring source layer pool5
I0418 04:51:38.588479 21905 net.cpp:761] Ignoring source layer fc7
I0418 04:51:38.588501 21905 net.cpp:761] Ignoring source layer relu7
I0418 04:51:38.588505 21905 net.cpp:761] Ignoring source layer drop7
I0418 04:51:38.588507 21905 net.cpp:761] Ignoring source layer fc8-200
I0418 04:51:38.588510 21905 net.cpp:761] Ignoring source layer loss
Solving...
rpn: num_positive 15
rpn: num_negative 49
I0418 04:51:42.070796 21905 accuracy_layer.cpp:96] Accuracy: 0.515625
I0418 04:51:42.070821 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.428571
I0418 04:51:42.070825 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 11
num bg: 93
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(104, 99)
this part is done
I0418 04:51:42.132285 21905 solver.cpp:228] Iteration 0, loss = 89.5727
I0418 04:51:42.132311 21905 solver.cpp:244]     Train net output #0: loss_cls = 88.7826 (* 1 = 88.7826 loss)
I0418 04:51:42.132319 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:51:42.132323 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.515625
I0418 04:51:42.132328 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.428571
I0418 04:51:42.132331 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 04:51:42.132336 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.682468 (* 1 = 0.682468 loss)
I0418 04:51:42.132341 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.107608 (* 1 = 0.107608 loss)
I0418 04:51:42.132350 21905 sgd_solver.cpp:106] Iteration 0, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:51:46.353364 21905 accuracy_layer.cpp:96] Accuracy: 0.46875
I0418 04:51:46.353386 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.387755
I0418 04:51:46.353390 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.733333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 13
num bg: 86
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(99, 99)
this part is done
I0418 04:51:46.380339 21905 solver.cpp:228] Iteration 1, loss = 62.452
I0418 04:51:46.380363 21905 solver.cpp:244]     Train net output #0: loss_cls = 61.6946 (* 1 = 61.6946 loss)
I0418 04:51:46.380370 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:51:46.380374 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.46875
I0418 04:51:46.380378 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.387755
I0418 04:51:46.380383 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.733333
I0418 04:51:46.380388 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.688692 (* 1 = 0.688692 loss)
I0418 04:51:46.380391 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0687434 (* 1 = 0.0687434 loss)
I0418 04:51:46.380398 21905 sgd_solver.cpp:106] Iteration 1, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:51:50.602645 21905 accuracy_layer.cpp:96] Accuracy: 0.53125
I0418 04:51:50.602668 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.469388
I0418 04:51:50.602671 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.733333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 85
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(97, 99)
this part is done
I0418 04:51:50.629345 21905 solver.cpp:228] Iteration 2, loss = 52.8828
I0418 04:51:50.629369 21905 solver.cpp:244]     Train net output #0: loss_cls = 52.1089 (* 1 = 52.1089 loss)
I0418 04:51:50.629375 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:51:50.629379 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.53125
I0418 04:51:50.629384 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.469388
I0418 04:51:50.629387 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.733333
I0418 04:51:50.629391 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.686943 (* 1 = 0.686943 loss)
I0418 04:51:50.629396 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0869468 (* 1 = 0.0869468 loss)
I0418 04:51:50.629401 21905 sgd_solver.cpp:106] Iteration 2, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:51:54.856022 21905 accuracy_layer.cpp:96] Accuracy: 0.5625
I0418 04:51:54.856042 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.489796
I0418 04:51:54.856046 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 85
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(97, 99)
this part is done
I0418 04:51:54.882951 21905 solver.cpp:228] Iteration 3, loss = 34.0153
I0418 04:51:54.882977 21905 solver.cpp:244]     Train net output #0: loss_cls = 33.2531 (* 1 = 33.2531 loss)
I0418 04:51:54.882983 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:51:54.882988 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.5625
I0418 04:51:54.882992 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.489796
I0418 04:51:54.882997 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 04:51:54.883002 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.679384 (* 1 = 0.679384 loss)
I0418 04:51:54.883007 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0828306 (* 1 = 0.0828306 loss)
I0418 04:51:54.883013 21905 sgd_solver.cpp:106] Iteration 3, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:51:59.114109 21905 accuracy_layer.cpp:96] Accuracy: 0.453125
I0418 04:51:59.114130 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.367347
I0418 04:51:59.114133 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.733333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 10)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 10
num bg: 77
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(87, 99)
this part is done
I0418 04:51:59.141109 21905 solver.cpp:228] Iteration 4, loss = 6.61958
I0418 04:51:59.141132 21905 solver.cpp:244]     Train net output #0: loss_cls = 5.69534 (* 1 = 5.69534 loss)
I0418 04:51:59.141139 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:51:59.141144 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.453125
I0418 04:51:59.141149 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.367347
I0418 04:51:59.141152 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.733333
I0418 04:51:59.141156 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.643666 (* 1 = 0.643666 loss)
I0418 04:51:59.141161 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.28058 (* 1 = 0.28058 loss)
I0418 04:51:59.141166 21905 sgd_solver.cpp:106] Iteration 4, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:52:03.373339 21905 accuracy_layer.cpp:96] Accuracy: 0.5625
I0418 04:52:03.373360 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.510204
I0418 04:52:03.373364 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.733333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 9)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]
num fg: 9
num bg: 70
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(79, 99)
this part is done
I0418 04:52:03.398911 21905 solver.cpp:228] Iteration 5, loss = 2.55258
I0418 04:52:03.398933 21905 solver.cpp:244]     Train net output #0: loss_cls = 1.33106 (* 1 = 1.33106 loss)
I0418 04:52:03.398939 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:52:03.398944 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.5625
I0418 04:52:03.398948 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.510204
I0418 04:52:03.398952 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.733333
I0418 04:52:03.398957 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.837189 (* 1 = 0.837189 loss)
I0418 04:52:03.398962 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.384331 (* 1 = 0.384331 loss)
I0418 04:52:03.398967 21905 sgd_solver.cpp:106] Iteration 5, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:52:07.648638 21905 accuracy_layer.cpp:96] Accuracy: 0.484375
I0418 04:52:07.648660 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.387755
I0418 04:52:07.648674 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 9)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]
num fg: 9
num bg: 52
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(61, 99)
this part is done
I0418 04:52:07.671281 21905 solver.cpp:228] Iteration 6, loss = 3.87799
I0418 04:52:07.671306 21905 solver.cpp:244]     Train net output #0: loss_cls = 2.10132 (* 1 = 2.10132 loss)
I0418 04:52:07.671314 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:52:07.671317 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.484375
I0418 04:52:07.671321 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.387755
I0418 04:52:07.671325 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 04:52:07.671329 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.898192 (* 1 = 0.898192 loss)
I0418 04:52:07.671334 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.878478 (* 1 = 0.878478 loss)
I0418 04:52:07.671339 21905 sgd_solver.cpp:106] Iteration 6, lr = 0.0001
rpn: num_positive 12
rpn: num_negative 52
I0418 04:52:11.923363 21905 accuracy_layer.cpp:96] Accuracy: 0.53125
I0418 04:52:11.923386 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.480769
I0418 04:52:11.923390 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.75
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 9)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 9
num bg: 39
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(48, 99)
this part is done
I0418 04:52:11.942445 21905 solver.cpp:228] Iteration 7, loss = 7.37123
I0418 04:52:11.942469 21905 solver.cpp:244]     Train net output #0: loss_cls = 5.10214 (* 1 = 5.10214 loss)
I0418 04:52:11.942479 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:52:11.942483 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.53125
I0418 04:52:11.942487 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.480769
I0418 04:52:11.942492 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.75
I0418 04:52:11.942497 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 1.40551 (* 1 = 1.40551 loss)
I0418 04:52:11.942502 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.863586 (* 1 = 0.863586 loss)
I0418 04:52:11.942507 21905 sgd_solver.cpp:106] Iteration 7, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:52:16.189776 21905 accuracy_layer.cpp:96] Accuracy: 0.625
I0418 04:52:16.189798 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.510204
I0418 04:52:16.189803 21905 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 54
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(66, 99)
this part is done
I0418 04:52:16.214656 21905 solver.cpp:228] Iteration 8, loss = 14.8452
I0418 04:52:16.214676 21905 solver.cpp:244]     Train net output #0: loss_cls = 12.5402 (* 1 = 12.5402 loss)
I0418 04:52:16.214682 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:52:16.214686 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.625
I0418 04:52:16.214690 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.510204
I0418 04:52:16.214694 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 04:52:16.214699 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 1.84224 (* 1 = 1.84224 loss)
I0418 04:52:16.214704 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.462767 (* 1 = 0.462767 loss)
I0418 04:52:16.214709 21905 sgd_solver.cpp:106] Iteration 8, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:52:20.463263 21905 accuracy_layer.cpp:96] Accuracy: 0.734375
I0418 04:52:20.463289 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.673469
I0418 04:52:20.463294 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.933333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 11
num bg: 58
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(69, 99)
this part is done
I0418 04:52:20.488379 21905 solver.cpp:228] Iteration 9, loss = 9.43744
I0418 04:52:20.488399 21905 solver.cpp:244]     Train net output #0: loss_cls = 8.20076 (* 1 = 8.20076 loss)
I0418 04:52:20.488416 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:52:20.488421 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.734375
I0418 04:52:20.488425 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.673469
I0418 04:52:20.488430 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.933333
I0418 04:52:20.488433 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.769147 (* 1 = 0.769147 loss)
I0418 04:52:20.488438 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.467533 (* 1 = 0.467533 loss)
I0418 04:52:20.488445 21905 sgd_solver.cpp:106] Iteration 9, lr = 0.0001
speed: 4.188s / iter
rpn: num_positive 15
rpn: num_negative 49
I0418 04:52:24.888479 21905 accuracy_layer.cpp:96] Accuracy: 0.6875
I0418 04:52:24.888500 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.673469
I0418 04:52:24.888505 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.733333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 9)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 9
num bg: 72
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(81, 99)
this part is done
I0418 04:52:24.916245 21905 solver.cpp:228] Iteration 10, loss = 2.5802
I0418 04:52:24.916267 21905 solver.cpp:244]     Train net output #0: loss_cls = 1.57992 (* 1 = 1.57992 loss)
I0418 04:52:24.916273 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:52:24.916277 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.6875
I0418 04:52:24.916281 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.673469
I0418 04:52:24.916285 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.733333
I0418 04:52:24.916290 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.652454 (* 1 = 0.652454 loss)
I0418 04:52:24.916293 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.34783 (* 1 = 0.34783 loss)
I0418 04:52:24.916318 21905 sgd_solver.cpp:106] Iteration 10, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:52:29.400008 21905 accuracy_layer.cpp:96] Accuracy: 0.6875
I0418 04:52:29.400030 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.673469
I0418 04:52:29.400045 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.733333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.]
num fg: 13
num bg: 82
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(95, 99)
this part is done
I0418 04:52:29.428278 21905 solver.cpp:228] Iteration 11, loss = 1.38255
I0418 04:52:29.428310 21905 solver.cpp:244]     Train net output #0: loss_cls = 0.622804 (* 1 = 0.622804 loss)
I0418 04:52:29.428318 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:52:29.428321 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.6875
I0418 04:52:29.428326 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.673469
I0418 04:52:29.428330 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.733333
I0418 04:52:29.428334 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.63793 (* 1 = 0.63793 loss)
I0418 04:52:29.428339 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.121813 (* 1 = 0.121813 loss)
I0418 04:52:29.428344 21905 sgd_solver.cpp:106] Iteration 11, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:52:33.881999 21905 accuracy_layer.cpp:96] Accuracy: 0.65625
I0418 04:52:33.882019 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.571429
I0418 04:52:33.882025 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.933333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 10)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]
num fg: 10
num bg: 87
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(97, 99)
this part is done
I0418 04:52:33.910624 21905 solver.cpp:228] Iteration 12, loss = 2.23075
I0418 04:52:33.910645 21905 solver.cpp:244]     Train net output #0: loss_cls = 1.53168 (* 1 = 1.53168 loss)
I0418 04:52:33.910652 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:52:33.910656 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.65625
I0418 04:52:33.910660 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.571429
I0418 04:52:33.910665 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.933333
I0418 04:52:33.910668 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.625629 (* 1 = 0.625629 loss)
I0418 04:52:33.910673 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.073434 (* 1 = 0.073434 loss)
I0418 04:52:33.910678 21905 sgd_solver.cpp:106] Iteration 12, lr = 0.0001
rpn: num_positive 12
rpn: num_negative 52
I0418 04:52:38.306360 21905 accuracy_layer.cpp:96] Accuracy: 0.71875
I0418 04:52:38.306382 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.769231
I0418 04:52:38.306396 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.5
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 14)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.]
num fg: 14
num bg: 64
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(78, 99)
this part is done
I0418 04:52:38.333537 21905 solver.cpp:228] Iteration 13, loss = 2.41011
I0418 04:52:38.333559 21905 solver.cpp:244]     Train net output #0: loss_cls = 1.67161 (* 1 = 1.67161 loss)
I0418 04:52:38.333566 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:52:38.333570 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.71875
I0418 04:52:38.333575 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.769231
I0418 04:52:38.333580 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.5
I0418 04:52:38.333585 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.668132 (* 1 = 0.668132 loss)
I0418 04:52:38.333590 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0703747 (* 1 = 0.0703747 loss)
I0418 04:52:38.333595 21905 sgd_solver.cpp:106] Iteration 13, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:52:42.715953 21905 accuracy_layer.cpp:96] Accuracy: 0.59375
I0418 04:52:42.715975 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.591837
I0418 04:52:42.715978 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.6
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 15)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.]
num fg: 15
num bg: 78
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(93, 99)
this part is done
I0418 04:52:42.744403 21905 solver.cpp:228] Iteration 14, loss = 1.9305
I0418 04:52:42.744431 21905 solver.cpp:244]     Train net output #0: loss_cls = 1.1984 (* 1 = 1.1984 loss)
I0418 04:52:42.744438 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:52:42.744443 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.59375
I0418 04:52:42.744447 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.591837
I0418 04:52:42.744451 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.6
I0418 04:52:42.744457 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.666395 (* 1 = 0.666395 loss)
I0418 04:52:42.744462 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.065705 (* 1 = 0.065705 loss)
I0418 04:52:42.744469 21905 sgd_solver.cpp:106] Iteration 14, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:52:47.102195 21905 accuracy_layer.cpp:96] Accuracy: 0.71875
I0418 04:52:47.102216 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.755102
I0418 04:52:47.102221 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.6
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 14)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.]
num fg: 14
num bg: 79
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(93, 99)
this part is done
I0418 04:52:47.129995 21905 solver.cpp:228] Iteration 15, loss = 1.3792
I0418 04:52:47.130017 21905 solver.cpp:244]     Train net output #0: loss_cls = 0.629088 (* 1 = 0.629088 loss)
I0418 04:52:47.130023 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:52:47.130028 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.71875
I0418 04:52:47.130033 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.755102
I0418 04:52:47.130035 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.6
I0418 04:52:47.130040 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.605624 (* 1 = 0.605624 loss)
I0418 04:52:47.130045 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.144488 (* 1 = 0.144488 loss)
I0418 04:52:47.130050 21905 sgd_solver.cpp:106] Iteration 15, lr = 0.0001
rpn: num_positive 9
rpn: num_negative 55
I0418 04:52:51.516608 21905 accuracy_layer.cpp:96] Accuracy: 0.65625
I0418 04:52:51.516631 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.727273
I0418 04:52:51.516635 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.222222
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 16)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 16
num bg: 53
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(69, 99)
this part is done
I0418 04:52:51.541889 21905 solver.cpp:228] Iteration 16, loss = 1.91513
I0418 04:52:51.541923 21905 solver.cpp:244]     Train net output #0: loss_cls = 1.09991 (* 1 = 1.09991 loss)
I0418 04:52:51.541930 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:52:51.541934 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.65625
I0418 04:52:51.541939 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.727273
I0418 04:52:51.541942 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.222222
I0418 04:52:51.541946 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.687183 (* 1 = 0.687183 loss)
I0418 04:52:51.541951 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.128042 (* 1 = 0.128042 loss)
I0418 04:52:51.541957 21905 sgd_solver.cpp:106] Iteration 16, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:52:55.922782 21905 accuracy_layer.cpp:96] Accuracy: 0.6875
I0418 04:52:55.922806 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.755102
I0418 04:52:55.922812 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.466667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 75
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(87, 99)
this part is done
I0418 04:52:55.950898 21905 solver.cpp:228] Iteration 17, loss = 1.66544
I0418 04:52:55.950925 21905 solver.cpp:244]     Train net output #0: loss_cls = 0.837999 (* 1 = 0.837999 loss)
I0418 04:52:55.950932 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:52:55.950937 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.6875
I0418 04:52:55.950940 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.755102
I0418 04:52:55.950944 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.466667
I0418 04:52:55.950949 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.646067 (* 1 = 0.646067 loss)
I0418 04:52:55.950954 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.181374 (* 1 = 0.181374 loss)
I0418 04:52:55.950960 21905 sgd_solver.cpp:106] Iteration 17, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:53:00.309360 21905 accuracy_layer.cpp:96] Accuracy: 0.765625
I0418 04:53:00.309382 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.857143
I0418 04:53:00.309386 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.466667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.]
num fg: 13
num bg: 81
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(94, 99)
this part is done
I0418 04:53:00.337602 21905 solver.cpp:228] Iteration 18, loss = 1.2631
I0418 04:53:00.337623 21905 solver.cpp:244]     Train net output #0: loss_cls = 0.5509 (* 1 = 0.5509 loss)
I0418 04:53:00.337630 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:53:00.337635 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.765625
I0418 04:53:00.337638 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.857143
I0418 04:53:00.337642 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.466667
I0418 04:53:00.337646 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.566741 (* 1 = 0.566741 loss)
I0418 04:53:00.337651 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.145457 (* 1 = 0.145457 loss)
I0418 04:53:00.337656 21905 sgd_solver.cpp:106] Iteration 18, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:53:04.667764 21905 accuracy_layer.cpp:96] Accuracy: 0.71875
I0418 04:53:04.667785 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.795918
I0418 04:53:04.667789 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.466667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 78
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(90, 99)
this part is done
I0418 04:53:04.695550 21905 solver.cpp:228] Iteration 19, loss = 1.35301
I0418 04:53:04.695574 21905 solver.cpp:244]     Train net output #0: loss_cls = 0.629941 (* 1 = 0.629941 loss)
I0418 04:53:04.695582 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:53:04.695586 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.71875
I0418 04:53:04.695590 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.795918
I0418 04:53:04.695595 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.466667
I0418 04:53:04.695598 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.608808 (* 1 = 0.608808 loss)
I0418 04:53:04.695603 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.114261 (* 1 = 0.114261 loss)
I0418 04:53:04.695610 21905 sgd_solver.cpp:106] Iteration 19, lr = 0.0001
speed: 4.304s / iter
rpn: num_positive 15
rpn: num_negative 49
I0418 04:53:09.061834 21905 accuracy_layer.cpp:96] Accuracy: 0.765625
I0418 04:53:09.061856 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.857143
I0418 04:53:09.061861 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.466667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 11
num bg: 72
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(83, 99)
this part is done
I0418 04:53:09.089272 21905 solver.cpp:228] Iteration 20, loss = 1.18845
I0418 04:53:09.089293 21905 solver.cpp:244]     Train net output #0: loss_cls = 0.540282 (* 1 = 0.540282 loss)
I0418 04:53:09.089300 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:53:09.089304 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.765625
I0418 04:53:09.089308 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.857143
I0418 04:53:09.089313 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.466667
I0418 04:53:09.089316 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.575059 (* 1 = 0.575059 loss)
I0418 04:53:09.089321 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0731087 (* 1 = 0.0731087 loss)
I0418 04:53:09.089327 21905 sgd_solver.cpp:106] Iteration 20, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:53:13.466948 21905 accuracy_layer.cpp:96] Accuracy: 0.734375
I0418 04:53:13.466969 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.816327
I0418 04:53:13.466972 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.466667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 13
num bg: 85
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(98, 99)
this part is done
I0418 04:53:13.497100 21905 solver.cpp:228] Iteration 21, loss = 1.19563
I0418 04:53:13.497126 21905 solver.cpp:244]     Train net output #0: loss_cls = 0.541095 (* 1 = 0.541095 loss)
I0418 04:53:13.497133 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:53:13.497138 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.734375
I0418 04:53:13.497141 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.816327
I0418 04:53:13.497144 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.466667
I0418 04:53:13.497149 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.594368 (* 1 = 0.594368 loss)
I0418 04:53:13.497154 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0601698 (* 1 = 0.0601698 loss)
I0418 04:53:13.497160 21905 sgd_solver.cpp:106] Iteration 21, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:53:17.852433 21905 accuracy_layer.cpp:96] Accuracy: 0.65625
I0418 04:53:17.852453 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.673469
I0418 04:53:17.852460 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.6
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 15)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 15
num bg: 74
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(89, 99)
this part is done
I0418 04:53:17.881980 21905 solver.cpp:228] Iteration 22, loss = 1.18672
I0418 04:53:17.882010 21905 solver.cpp:244]     Train net output #0: loss_cls = 0.518805 (* 1 = 0.518805 loss)
I0418 04:53:17.882020 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:53:17.882028 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.65625
I0418 04:53:17.882038 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.673469
I0418 04:53:17.882045 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.6
I0418 04:53:17.882051 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.615047 (* 1 = 0.615047 loss)
I0418 04:53:17.882056 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0528639 (* 1 = 0.0528639 loss)
I0418 04:53:17.882066 21905 sgd_solver.cpp:106] Iteration 22, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:53:22.253324 21905 accuracy_layer.cpp:96] Accuracy: 0.78125
I0418 04:53:22.253346 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.816327
I0418 04:53:22.253350 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.]
num fg: 13
num bg: 82
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(95, 99)
this part is done
I0418 04:53:22.281198 21905 solver.cpp:228] Iteration 23, loss = 1.09729
I0418 04:53:22.281217 21905 solver.cpp:244]     Train net output #0: loss_cls = 0.501769 (* 1 = 0.501769 loss)
I0418 04:53:22.281224 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:53:22.281229 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.78125
I0418 04:53:22.281232 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.816327
I0418 04:53:22.281237 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.666667
I0418 04:53:22.281241 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.548887 (* 1 = 0.548887 loss)
I0418 04:53:22.281246 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0466299 (* 1 = 0.0466299 loss)
I0418 04:53:22.281251 21905 sgd_solver.cpp:106] Iteration 23, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:53:26.617576 21905 accuracy_layer.cpp:96] Accuracy: 0.703125
I0418 04:53:26.617599 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.714286
I0418 04:53:26.617602 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 13
num bg: 76
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(89, 99)
this part is done
I0418 04:53:26.644939 21905 solver.cpp:228] Iteration 24, loss = 1.10114
I0418 04:53:26.644961 21905 solver.cpp:244]     Train net output #0: loss_cls = 0.477071 (* 1 = 0.477071 loss)
I0418 04:53:26.644969 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:53:26.644973 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.703125
I0418 04:53:26.644976 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.714286
I0418 04:53:26.644980 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.666667
I0418 04:53:26.644985 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.573911 (* 1 = 0.573911 loss)
I0418 04:53:26.644990 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0501595 (* 1 = 0.0501595 loss)
I0418 04:53:26.644997 21905 sgd_solver.cpp:106] Iteration 24, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:53:30.965282 21905 accuracy_layer.cpp:96] Accuracy: 0.65625
I0418 04:53:30.965306 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.653061
I0418 04:53:30.965309 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 13
num bg: 89
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(102, 99)
this part is done
I0418 04:53:30.995494 21905 solver.cpp:228] Iteration 25, loss = 1.06898
I0418 04:53:30.995518 21905 solver.cpp:244]     Train net output #0: loss_cls = 0.419988 (* 1 = 0.419988 loss)
I0418 04:53:30.995525 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:53:30.995529 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.65625
I0418 04:53:30.995533 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.653061
I0418 04:53:30.995537 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.666667
I0418 04:53:30.995542 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.586279 (* 1 = 0.586279 loss)
I0418 04:53:30.995546 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0627111 (* 1 = 0.0627111 loss)
I0418 04:53:30.995551 21905 sgd_solver.cpp:106] Iteration 25, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:53:35.353739 21905 accuracy_layer.cpp:96] Accuracy: 0.828125
I0418 04:53:35.353760 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.877551
I0418 04:53:35.353765 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 11
num bg: 97
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(108, 99)
this part is done
I0418 04:53:35.390239 21905 solver.cpp:228] Iteration 26, loss = 0.980228
I0418 04:53:35.390265 21905 solver.cpp:244]     Train net output #0: loss_cls = 0.37792 (* 1 = 0.37792 loss)
I0418 04:53:35.390272 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:53:35.390276 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.828125
I0418 04:53:35.390280 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.877551
I0418 04:53:35.390285 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.666667
I0418 04:53:35.390290 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.542021 (* 1 = 0.542021 loss)
I0418 04:53:35.390295 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.060288 (* 1 = 0.060288 loss)
I0418 04:53:35.390300 21905 sgd_solver.cpp:106] Iteration 26, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:53:39.763845 21905 accuracy_layer.cpp:96] Accuracy: 0.765625
I0418 04:53:39.763867 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.755102
I0418 04:53:39.763875 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.]
num fg: 12
num bg: 82
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(94, 99)
this part is done
I0418 04:53:39.792239 21905 solver.cpp:228] Iteration 27, loss = 1.01504
I0418 04:53:39.792266 21905 solver.cpp:244]     Train net output #0: loss_cls = 0.409537 (* 1 = 0.409537 loss)
I0418 04:53:39.792277 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:53:39.792286 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.765625
I0418 04:53:39.792294 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.755102
I0418 04:53:39.792300 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 04:53:39.792309 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.554092 (* 1 = 0.554092 loss)
I0418 04:53:39.792318 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0514128 (* 1 = 0.0514128 loss)
I0418 04:53:39.792332 21905 sgd_solver.cpp:106] Iteration 27, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:53:44.153476 21905 accuracy_layer.cpp:96] Accuracy: 0.796875
I0418 04:53:44.153496 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.795918
I0418 04:53:44.153502 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 9)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.]
num fg: 9
num bg: 84
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(93, 99)
this part is done
I0418 04:53:44.181659 21905 solver.cpp:228] Iteration 28, loss = 0.941137
I0418 04:53:44.181685 21905 solver.cpp:244]     Train net output #0: loss_cls = 0.353498 (* 1 = 0.353498 loss)
I0418 04:53:44.181697 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:53:44.181705 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.796875
I0418 04:53:44.181713 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.795918
I0418 04:53:44.181720 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 04:53:44.181728 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.548376 (* 1 = 0.548376 loss)
I0418 04:53:44.181737 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0392635 (* 1 = 0.0392635 loss)
I0418 04:53:44.181746 21905 sgd_solver.cpp:106] Iteration 28, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:53:48.518571 21905 accuracy_layer.cpp:96] Accuracy: 0.796875
I0418 04:53:48.518592 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.795918
I0418 04:53:48.518599 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.]
num fg: 11
num bg: 84
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(95, 99)
this part is done
I0418 04:53:48.548003 21905 solver.cpp:228] Iteration 29, loss = 1.06268
I0418 04:53:48.548032 21905 solver.cpp:244]     Train net output #0: loss_cls = 0.492857 (* 1 = 0.492857 loss)
I0418 04:53:48.548049 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:53:48.548058 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.796875
I0418 04:53:48.548069 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.795918
I0418 04:53:48.548075 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 04:53:48.548081 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.545296 (* 1 = 0.545296 loss)
I0418 04:53:48.548086 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0245269 (* 1 = 0.0245269 loss)
I0418 04:53:48.548092 21905 sgd_solver.cpp:106] Iteration 29, lr = 0.0001
speed: 4.331s / iter
rpn: num_positive 7
rpn: num_negative 57
I0418 04:53:52.871171 21905 accuracy_layer.cpp:96] Accuracy: 0.734375
I0418 04:53:52.871191 21905 accuracy_layer.cpp:101] Class 0 accuracy : 0.789474
I0418 04:53:52.871206 21905 accuracy_layer.cpp:101] Class 1 accuracy : 0.285714
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 10)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 10
num bg: 55
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(65, 99)
this part is done
I0418 04:53:52.901232 21905 solver.cpp:228] Iteration 30, loss = 1.27762
I0418 04:53:52.901260 21905 solver.cpp:244]     Train net output #0: loss_cls = 0.548734 (* 1 = 0.548734 loss)
I0418 04:53:52.901268 21905 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:53:52.901273 21905 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.734375
I0418 04:53:52.901276 21905 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.789474
I0418 04:53:52.901280 21905 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.285714
I0418 04:53:52.901285 21905 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.659554 (* 1 = 0.659554 loss)
I0418 04:53:52.901290 21905 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0693354 (* 1 = 0.0693354 loss)
I0418 04:53:52.901296 21905 sgd_solver.cpp:106] Iteration 30, lr = 0.0001
