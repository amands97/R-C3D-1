Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
print done
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}]
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 03:53:34.666209 30532 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 03:53:34.666244 30532 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 03:53:34.666791 30532 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 03:53:34.667052 30532 layer_factory.hpp:77] Creating layer data
I0412 03:53:34.679033 30532 net.cpp:100] Creating Layer data
I0412 03:53:34.679059 30532 net.cpp:408] data -> data
I0412 03:53:34.679074 30532 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 03:53:34.690673 30532 net.cpp:150] Setting up data
I0412 03:53:34.690707 30532 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 03:53:34.690722 30532 net.cpp:157] Top shape: 1 3 (3)
I0412 03:53:34.690735 30532 net.cpp:165] Memory required for data: 115605516
I0412 03:53:34.690752 30532 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 03:53:34.690776 30532 net.cpp:100] Creating Layer data_data_0_split
I0412 03:53:34.690791 30532 net.cpp:434] data_data_0_split <- data
I0412 03:53:34.690811 30532 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 03:53:34.690834 30532 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 03:53:34.690906 30532 net.cpp:150] Setting up data_data_0_split
I0412 03:53:34.690925 30532 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 03:53:34.690940 30532 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 03:53:34.690953 30532 net.cpp:165] Memory required for data: 346816524
I0412 03:53:34.690966 30532 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 03:53:34.690985 30532 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 03:53:34.690999 30532 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 03:53:34.691015 30532 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 03:53:34.691032 30532 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 03:53:34.691094 30532 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 03:53:34.691118 30532 net.cpp:157] Top shape: 1 3 (3)
I0412 03:53:34.691131 30532 net.cpp:157] Top shape: 1 3 (3)
I0412 03:53:34.691144 30532 net.cpp:165] Memory required for data: 346816548
I0412 03:53:34.691159 30532 layer_factory.hpp:77] Creating layer conv1a
I0412 03:53:34.691188 30532 net.cpp:100] Creating Layer conv1a
I0412 03:53:34.691203 30532 net.cpp:434] conv1a <- data_data_0_split_0
I0412 03:53:34.691221 30532 net.cpp:408] conv1a -> conv1a
I0412 03:53:34.713199 30532 net.cpp:150] Setting up conv1a
I0412 03:53:34.713289 30532 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 03:53:34.713304 30532 net.cpp:165] Memory required for data: 2813067300
I0412 03:53:34.713332 30532 layer_factory.hpp:77] Creating layer relu1a
I0412 03:53:34.713357 30532 net.cpp:100] Creating Layer relu1a
I0412 03:53:34.713372 30532 net.cpp:434] relu1a <- conv1a
I0412 03:53:34.713388 30532 net.cpp:395] relu1a -> conv1a (in-place)
I0412 03:53:34.713409 30532 net.cpp:150] Setting up relu1a
I0412 03:53:34.713424 30532 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 03:53:34.713436 30532 net.cpp:165] Memory required for data: 5279318052
I0412 03:53:34.713449 30532 layer_factory.hpp:77] Creating layer pool1
I0412 03:53:34.713469 30532 net.cpp:100] Creating Layer pool1
I0412 03:53:34.713481 30532 net.cpp:434] pool1 <- conv1a
I0412 03:53:34.713497 30532 net.cpp:408] pool1 -> pool1
I0412 03:53:34.713616 30532 net.cpp:150] Setting up pool1
I0412 03:53:34.713636 30532 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 03:53:34.713659 30532 net.cpp:165] Memory required for data: 5895880740
I0412 03:53:34.713671 30532 layer_factory.hpp:77] Creating layer conv2a
I0412 03:53:34.713696 30532 net.cpp:100] Creating Layer conv2a
I0412 03:53:34.713711 30532 net.cpp:434] conv2a <- pool1
I0412 03:53:34.713726 30532 net.cpp:408] conv2a -> conv2a
I0412 03:53:34.723614 30532 net.cpp:150] Setting up conv2a
I0412 03:53:34.723680 30532 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 03:53:34.723695 30532 net.cpp:165] Memory required for data: 7129006116
I0412 03:53:34.723721 30532 layer_factory.hpp:77] Creating layer relu2a
I0412 03:53:34.723744 30532 net.cpp:100] Creating Layer relu2a
I0412 03:53:34.723758 30532 net.cpp:434] relu2a <- conv2a
I0412 03:53:34.723774 30532 net.cpp:395] relu2a -> conv2a (in-place)
I0412 03:53:34.723795 30532 net.cpp:150] Setting up relu2a
I0412 03:53:34.723811 30532 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 03:53:34.723824 30532 net.cpp:165] Memory required for data: 8362131492
I0412 03:53:34.723835 30532 layer_factory.hpp:77] Creating layer pool2
I0412 03:53:34.723858 30532 net.cpp:100] Creating Layer pool2
I0412 03:53:34.723871 30532 net.cpp:434] pool2 <- conv2a
I0412 03:53:34.723886 30532 net.cpp:408] pool2 -> pool2
I0412 03:53:34.724002 30532 net.cpp:150] Setting up pool2
I0412 03:53:34.724023 30532 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 03:53:34.724036 30532 net.cpp:165] Memory required for data: 8516272164
I0412 03:53:34.724050 30532 layer_factory.hpp:77] Creating layer conv3a
I0412 03:53:34.724072 30532 net.cpp:100] Creating Layer conv3a
I0412 03:53:34.724087 30532 net.cpp:434] conv3a <- pool2
I0412 03:53:34.724104 30532 net.cpp:408] conv3a -> conv3a
I0412 03:53:34.736641 30532 net.cpp:150] Setting up conv3a
I0412 03:53:34.736665 30532 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 03:53:34.736670 30532 net.cpp:165] Memory required for data: 8824553508
I0412 03:53:34.736685 30532 layer_factory.hpp:77] Creating layer relu3a
I0412 03:53:34.736696 30532 net.cpp:100] Creating Layer relu3a
I0412 03:53:34.736701 30532 net.cpp:434] relu3a <- conv3a
I0412 03:53:34.736709 30532 net.cpp:395] relu3a -> conv3a (in-place)
I0412 03:53:34.736718 30532 net.cpp:150] Setting up relu3a
I0412 03:53:34.736724 30532 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 03:53:34.736727 30532 net.cpp:165] Memory required for data: 9132834852
I0412 03:53:34.736732 30532 layer_factory.hpp:77] Creating layer conv3b
I0412 03:53:34.736743 30532 net.cpp:100] Creating Layer conv3b
I0412 03:53:34.736748 30532 net.cpp:434] conv3b <- conv3a
I0412 03:53:34.736757 30532 net.cpp:408] conv3b -> conv3b
I0412 03:53:34.753587 30532 net.cpp:150] Setting up conv3b
I0412 03:53:34.753609 30532 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 03:53:34.753613 30532 net.cpp:165] Memory required for data: 9441116196
I0412 03:53:34.753624 30532 layer_factory.hpp:77] Creating layer relu3b
I0412 03:53:34.753636 30532 net.cpp:100] Creating Layer relu3b
I0412 03:53:34.753643 30532 net.cpp:434] relu3b <- conv3b
I0412 03:53:34.753651 30532 net.cpp:395] relu3b -> conv3b (in-place)
I0412 03:53:34.753662 30532 net.cpp:150] Setting up relu3b
I0412 03:53:34.753669 30532 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 03:53:34.753672 30532 net.cpp:165] Memory required for data: 9749397540
I0412 03:53:34.753676 30532 layer_factory.hpp:77] Creating layer pool3
I0412 03:53:34.753684 30532 net.cpp:100] Creating Layer pool3
I0412 03:53:34.753687 30532 net.cpp:434] pool3 <- conv3b
I0412 03:53:34.753696 30532 net.cpp:408] pool3 -> pool3
I0412 03:53:34.753770 30532 net.cpp:150] Setting up pool3
I0412 03:53:34.753782 30532 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 03:53:34.753787 30532 net.cpp:165] Memory required for data: 9787932708
I0412 03:53:34.753790 30532 layer_factory.hpp:77] Creating layer conv4a
I0412 03:53:34.753803 30532 net.cpp:100] Creating Layer conv4a
I0412 03:53:34.753904 30532 net.cpp:434] conv4a <- pool3
I0412 03:53:34.753938 30532 net.cpp:408] conv4a -> conv4a
I0412 03:53:34.789453 30532 net.cpp:150] Setting up conv4a
I0412 03:53:34.789481 30532 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 03:53:34.789485 30532 net.cpp:165] Memory required for data: 9865003044
I0412 03:53:34.789592 30532 layer_factory.hpp:77] Creating layer relu4a
I0412 03:53:34.789625 30532 net.cpp:100] Creating Layer relu4a
I0412 03:53:34.789633 30532 net.cpp:434] relu4a <- conv4a
I0412 03:53:34.789675 30532 net.cpp:395] relu4a -> conv4a (in-place)
I0412 03:53:34.789703 30532 net.cpp:150] Setting up relu4a
I0412 03:53:34.789711 30532 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 03:53:34.789731 30532 net.cpp:165] Memory required for data: 9942073380
I0412 03:53:34.789753 30532 layer_factory.hpp:77] Creating layer conv4b
I0412 03:53:34.789774 30532 net.cpp:100] Creating Layer conv4b
I0412 03:53:34.789780 30532 net.cpp:434] conv4b <- conv4a
I0412 03:53:34.789789 30532 net.cpp:408] conv4b -> conv4b
I0412 03:53:34.851227 30532 net.cpp:150] Setting up conv4b
I0412 03:53:34.851260 30532 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 03:53:34.851264 30532 net.cpp:165] Memory required for data: 10019143716
I0412 03:53:34.851274 30532 layer_factory.hpp:77] Creating layer relu4b
I0412 03:53:34.851285 30532 net.cpp:100] Creating Layer relu4b
I0412 03:53:34.851291 30532 net.cpp:434] relu4b <- conv4b
I0412 03:53:34.851303 30532 net.cpp:395] relu4b -> conv4b (in-place)
I0412 03:53:34.851315 30532 net.cpp:150] Setting up relu4b
I0412 03:53:34.851321 30532 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 03:53:34.851325 30532 net.cpp:165] Memory required for data: 10096214052
I0412 03:53:34.851331 30532 layer_factory.hpp:77] Creating layer pool4
I0412 03:53:34.851341 30532 net.cpp:100] Creating Layer pool4
I0412 03:53:34.851346 30532 net.cpp:434] pool4 <- conv4b
I0412 03:53:34.851353 30532 net.cpp:408] pool4 -> pool4
I0412 03:53:34.851410 30532 net.cpp:150] Setting up pool4
I0412 03:53:34.851419 30532 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 03:53:34.851423 30532 net.cpp:165] Memory required for data: 10105847844
I0412 03:53:34.851428 30532 layer_factory.hpp:77] Creating layer conv5a
I0412 03:53:34.851441 30532 net.cpp:100] Creating Layer conv5a
I0412 03:53:34.851447 30532 net.cpp:434] conv5a <- pool4
I0412 03:53:34.851456 30532 net.cpp:408] conv5a -> conv5a
I0412 03:53:34.915141 30532 net.cpp:150] Setting up conv5a
I0412 03:53:34.915181 30532 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 03:53:34.915185 30532 net.cpp:165] Memory required for data: 10115481636
I0412 03:53:34.915199 30532 layer_factory.hpp:77] Creating layer relu5a
I0412 03:53:34.915212 30532 net.cpp:100] Creating Layer relu5a
I0412 03:53:34.915218 30532 net.cpp:434] relu5a <- conv5a
I0412 03:53:34.915230 30532 net.cpp:395] relu5a -> conv5a (in-place)
I0412 03:53:34.915242 30532 net.cpp:150] Setting up relu5a
I0412 03:53:34.915248 30532 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 03:53:34.915252 30532 net.cpp:165] Memory required for data: 10125115428
I0412 03:53:34.915256 30532 layer_factory.hpp:77] Creating layer conv5b
I0412 03:53:34.915271 30532 net.cpp:100] Creating Layer conv5b
I0412 03:53:34.915277 30532 net.cpp:434] conv5b <- conv5a
I0412 03:53:34.915283 30532 net.cpp:408] conv5b -> conv5b
I0412 03:53:34.984529 30532 net.cpp:150] Setting up conv5b
I0412 03:53:34.984565 30532 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 03:53:34.984570 30532 net.cpp:165] Memory required for data: 10134749220
I0412 03:53:34.984580 30532 layer_factory.hpp:77] Creating layer relu5b
I0412 03:53:34.984588 30532 net.cpp:100] Creating Layer relu5b
I0412 03:53:34.984593 30532 net.cpp:434] relu5b <- conv5b
I0412 03:53:34.984601 30532 net.cpp:395] relu5b -> conv5b (in-place)
I0412 03:53:34.984609 30532 net.cpp:150] Setting up relu5b
I0412 03:53:34.984614 30532 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 03:53:34.984617 30532 net.cpp:165] Memory required for data: 10144383012
I0412 03:53:34.984621 30532 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 03:53:34.984624 30532 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 03:53:34.984627 30532 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 03:53:34.984632 30532 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 03:53:34.984637 30532 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 03:53:34.984679 30532 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 03:53:34.984685 30532 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 03:53:34.984689 30532 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 03:53:34.984692 30532 net.cpp:165] Memory required for data: 10163650596
I0412 03:53:34.984695 30532 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 03:53:34.984704 30532 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 03:53:34.984709 30532 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 03:53:34.984714 30532 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 03:53:35.053908 30532 net.cpp:150] Setting up rpn_conv/3x3
I0412 03:53:35.053933 30532 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 03:53:35.053936 30532 net.cpp:165] Memory required for data: 10166796324
I0412 03:53:35.053958 30532 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 03:53:35.053972 30532 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 03:53:35.053979 30532 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 03:53:35.053992 30532 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 03:53:35.054006 30532 net.cpp:150] Setting up rpn_relu/3x3
I0412 03:53:35.054018 30532 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 03:53:35.054023 30532 net.cpp:165] Memory required for data: 10169942052
I0412 03:53:35.054028 30532 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 03:53:35.054044 30532 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 03:53:35.054049 30532 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 03:53:35.054059 30532 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 03:53:35.140884 30532 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 03:53:35.140920 30532 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 03:53:35.140924 30532 net.cpp:165] Memory required for data: 10170728484
I0412 03:53:35.140935 30532 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 03:53:35.140949 30532 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 03:53:35.140954 30532 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 03:53:35.140962 30532 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 03:53:35.140972 30532 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 03:53:35.140978 30532 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 03:53:35.140982 30532 net.cpp:165] Memory required for data: 10171514916
I0412 03:53:35.140985 30532 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 03:53:35.140995 30532 net.cpp:100] Creating Layer rpn/output_pool
I0412 03:53:35.141000 30532 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 03:53:35.141006 30532 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 03:53:35.141064 30532 net.cpp:150] Setting up rpn/output_pool
I0412 03:53:35.141073 30532 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 03:53:35.141077 30532 net.cpp:165] Memory required for data: 10171711524
I0412 03:53:35.141083 30532 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 03:53:35.141090 30532 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 03:53:35.141094 30532 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 03:53:35.141100 30532 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 03:53:35.141110 30532 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 03:53:35.141157 30532 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 03:53:35.141167 30532 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 03:53:35.141173 30532 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 03:53:35.141178 30532 net.cpp:165] Memory required for data: 10172104740
I0412 03:53:35.141182 30532 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 03:53:35.141196 30532 net.cpp:100] Creating Layer rpn_cls_score
I0412 03:53:35.141199 30532 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 03:53:35.141207 30532 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 03:53:35.142029 30532 net.cpp:150] Setting up rpn_cls_score
I0412 03:53:35.142038 30532 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 03:53:35.142042 30532 net.cpp:165] Memory required for data: 10172133156
I0412 03:53:35.142050 30532 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 03:53:35.142057 30532 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 03:53:35.142061 30532 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 03:53:35.142071 30532 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 03:53:35.142079 30532 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 03:53:35.142138 30532 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 03:53:35.142168 30532 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 03:53:35.142184 30532 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 03:53:35.142195 30532 net.cpp:165] Memory required for data: 10172189988
I0412 03:53:35.142201 30532 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 03:53:35.142220 30532 net.cpp:100] Creating Layer rpn_twin_pred
I0412 03:53:35.142236 30532 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 03:53:35.142252 30532 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 03:53:35.143049 30532 net.cpp:150] Setting up rpn_twin_pred
I0412 03:53:35.143059 30532 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 03:53:35.143062 30532 net.cpp:165] Memory required for data: 10172218404
I0412 03:53:35.143069 30532 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 03:53:35.143077 30532 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 03:53:35.143084 30532 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 03:53:35.143093 30532 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 03:53:35.143103 30532 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 03:53:35.143159 30532 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 03:53:35.143168 30532 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 03:53:35.143177 30532 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 03:53:35.143182 30532 net.cpp:165] Memory required for data: 10172275236
I0412 03:53:35.143187 30532 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 03:53:35.143195 30532 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 03:53:35.143216 30532 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 03:53:35.143230 30532 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 03:53:35.143272 30532 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 03:53:35.143281 30532 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 03:53:35.143286 30532 net.cpp:165] Memory required for data: 10172303652
I0412 03:53:35.143290 30532 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 03:53:35.143297 30532 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 03:53:35.143301 30532 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 03:53:35.143307 30532 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 03:53:35.143323 30532 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 03:53:35.143332 30532 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 03:53:35.143399 30532 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 03:53:35.143407 30532 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 03:53:35.143414 30532 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 03:53:35.143420 30532 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 03:53:35.143424 30532 net.cpp:165] Memory required for data: 10172388900
I0412 03:53:35.143429 30532 layer_factory.hpp:77] Creating layer rpn-data
I0412 03:53:35.143929 30532 net.cpp:100] Creating Layer rpn-data
I0412 03:53:35.143941 30532 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 03:53:35.143949 30532 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 03:53:35.143954 30532 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 03:53:35.143963 30532 net.cpp:408] rpn-data -> rpn_labels
I0412 03:53:35.143975 30532 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 03:53:35.143983 30532 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 03:53:35.143992 30532 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 03:53:35.147614 30532 net.cpp:150] Setting up rpn-data
I0412 03:53:35.147630 30532 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 03:53:35.147636 30532 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 03:53:35.147641 30532 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 03:53:35.147649 30532 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 03:53:35.147655 30532 net.cpp:165] Memory required for data: 10172488356
I0412 03:53:35.147658 30532 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 03:53:35.147666 30532 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 03:53:35.147689 30532 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 03:53:35.147699 30532 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 03:53:35.147708 30532 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 03:53:35.147761 30532 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 03:53:35.147770 30532 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 03:53:35.147775 30532 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 03:53:35.147780 30532 net.cpp:165] Memory required for data: 10172516772
I0412 03:53:35.147784 30532 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 03:53:35.147792 30532 net.cpp:100] Creating Layer rpn_loss_cls
I0412 03:53:35.147799 30532 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 03:53:35.147804 30532 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 03:53:35.147809 30532 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 03:53:35.147819 30532 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 03:53:35.147953 30532 net.cpp:150] Setting up rpn_loss_cls
I0412 03:53:35.147961 30532 net.cpp:157] Top shape: (1)
I0412 03:53:35.147964 30532 net.cpp:160]     with loss weight 1
I0412 03:53:35.147979 30532 net.cpp:165] Memory required for data: 10172516776
I0412 03:53:35.147982 30532 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 03:53:35.147994 30532 net.cpp:100] Creating Layer rpn_loss_twin
I0412 03:53:35.147999 30532 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 03:53:35.148005 30532 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 03:53:35.148010 30532 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 03:53:35.148015 30532 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 03:53:35.148022 30532 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 03:53:35.148141 30532 net.cpp:150] Setting up rpn_loss_twin
I0412 03:53:35.148166 30532 net.cpp:157] Top shape: (1)
I0412 03:53:35.148180 30532 net.cpp:160]     with loss weight 1
I0412 03:53:35.148195 30532 net.cpp:165] Memory required for data: 10172516780
I0412 03:53:35.148210 30532 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 03:53:35.148219 30532 net.cpp:100] Creating Layer rpn_accuarcy
I0412 03:53:35.148226 30532 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 03:53:35.148234 30532 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 03:53:35.148241 30532 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 03:53:35.148248 30532 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 03:53:35.148308 30532 net.cpp:150] Setting up rpn_accuarcy
I0412 03:53:35.148314 30532 net.cpp:157] Top shape: (1)
I0412 03:53:35.148320 30532 net.cpp:157] Top shape: 2 (2)
I0412 03:53:35.148360 30532 net.cpp:165] Memory required for data: 10172516792
I0412 03:53:35.148365 30532 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 03:53:35.148370 30532 net.cpp:100] Creating Layer rpn_cls_prob
I0412 03:53:35.148375 30532 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 03:53:35.148380 30532 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 03:53:35.148469 30532 net.cpp:150] Setting up rpn_cls_prob
I0412 03:53:35.148478 30532 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 03:53:35.148483 30532 net.cpp:165] Memory required for data: 10172545208
I0412 03:53:35.148486 30532 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 03:53:35.148494 30532 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 03:53:35.148499 30532 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 03:53:35.148506 30532 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 03:53:35.148563 30532 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 03:53:35.148582 30532 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 03:53:35.148596 30532 net.cpp:165] Memory required for data: 10172573624
I0412 03:53:35.148609 30532 layer_factory.hpp:77] Creating layer proposal
I0412 03:53:35.149310 30532 net.cpp:100] Creating Layer proposal
I0412 03:53:35.149338 30532 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 03:53:35.149356 30532 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 03:53:35.149379 30532 net.cpp:408] proposal -> rpn_rois
I0412 03:53:35.154768 30532 net.cpp:150] Setting up proposal
I0412 03:53:35.154783 30532 net.cpp:157] Top shape: 1 3 (3)
I0412 03:53:35.154785 30532 net.cpp:165] Memory required for data: 10172573636
I0412 03:53:35.154789 30532 layer_factory.hpp:77] Creating layer roi-data
I0412 03:53:35.154932 30532 net.cpp:100] Creating Layer roi-data
I0412 03:53:35.154942 30532 net.cpp:434] roi-data <- rpn_rois
I0412 03:53:35.154952 30532 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 03:53:35.154960 30532 net.cpp:408] roi-data -> rois
I0412 03:53:35.154968 30532 net.cpp:408] roi-data -> labels
I0412 03:53:35.154974 30532 net.cpp:408] roi-data -> twin_targets
I0412 03:53:35.154980 30532 net.cpp:408] roi-data -> twin_inside_weights
I0412 03:53:35.154986 30532 net.cpp:408] roi-data -> twin_outside_weights
I0412 03:53:35.155333 30532 net.cpp:150] Setting up roi-data
I0412 03:53:35.155344 30532 net.cpp:157] Top shape: 1 3 (3)
I0412 03:53:35.155349 30532 net.cpp:157] Top shape: 1 1 (1)
I0412 03:53:35.155352 30532 net.cpp:157] Top shape: 1 402 (402)
I0412 03:53:35.155356 30532 net.cpp:157] Top shape: 1 402 (402)
I0412 03:53:35.155359 30532 net.cpp:157] Top shape: 1 402 (402)
I0412 03:53:35.155362 30532 net.cpp:165] Memory required for data: 10172578476
I0412 03:53:35.155366 30532 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 03:53:35.155372 30532 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 03:53:35.155380 30532 net.cpp:434] labels_roi-data_1_split <- labels
I0412 03:53:35.155388 30532 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 03:53:35.155400 30532 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 03:53:35.155437 30532 net.cpp:150] Setting up labels_roi-data_1_split
I0412 03:53:35.155442 30532 net.cpp:157] Top shape: 1 1 (1)
I0412 03:53:35.155445 30532 net.cpp:157] Top shape: 1 1 (1)
I0412 03:53:35.155448 30532 net.cpp:165] Memory required for data: 10172578484
I0412 03:53:35.155452 30532 layer_factory.hpp:77] Creating layer roi_pool5
I0412 03:53:35.155462 30532 net.cpp:100] Creating Layer roi_pool5
I0412 03:53:35.155469 30532 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 03:53:35.155478 30532 net.cpp:434] roi_pool5 <- rois
I0412 03:53:35.155481 30532 net.cpp:408] roi_pool5 -> pool5
I0412 03:53:35.155488 30532 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 03:53:35.155496 30532 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 03:53:35.155537 30532 net.cpp:150] Setting up roi_pool5
I0412 03:53:35.155546 30532 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 03:53:35.155550 30532 net.cpp:165] Memory required for data: 10172611252
I0412 03:53:35.155555 30532 layer_factory.hpp:77] Creating layer fc6
I0412 03:53:35.155563 30532 net.cpp:100] Creating Layer fc6
I0412 03:53:35.155568 30532 net.cpp:434] fc6 <- pool5
I0412 03:53:35.155573 30532 net.cpp:408] fc6 -> fc6
I0412 03:53:35.439635 30532 net.cpp:150] Setting up fc6
I0412 03:53:35.439666 30532 net.cpp:157] Top shape: 1 4096 (4096)
I0412 03:53:35.439669 30532 net.cpp:165] Memory required for data: 10172627636
I0412 03:53:35.439682 30532 layer_factory.hpp:77] Creating layer relu6
I0412 03:53:35.439694 30532 net.cpp:100] Creating Layer relu6
I0412 03:53:35.439702 30532 net.cpp:434] relu6 <- fc6
I0412 03:53:35.439709 30532 net.cpp:395] relu6 -> fc6 (in-place)
I0412 03:53:35.439719 30532 net.cpp:150] Setting up relu6
I0412 03:53:35.439725 30532 net.cpp:157] Top shape: 1 4096 (4096)
I0412 03:53:35.439729 30532 net.cpp:165] Memory required for data: 10172644020
I0412 03:53:35.439733 30532 layer_factory.hpp:77] Creating layer drop6
I0412 03:53:35.439743 30532 net.cpp:100] Creating Layer drop6
I0412 03:53:35.439748 30532 net.cpp:434] drop6 <- fc6
I0412 03:53:35.439754 30532 net.cpp:395] drop6 -> fc6 (in-place)
I0412 03:53:35.439785 30532 net.cpp:150] Setting up drop6
I0412 03:53:35.439792 30532 net.cpp:157] Top shape: 1 4096 (4096)
I0412 03:53:35.439795 30532 net.cpp:165] Memory required for data: 10172660404
I0412 03:53:35.439800 30532 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 03:53:35.439810 30532 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 03:53:35.439815 30532 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 03:53:35.439822 30532 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 03:53:35.439831 30532 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 03:53:35.439879 30532 net.cpp:150] Setting up fc6_drop6_0_split
I0412 03:53:35.439887 30532 net.cpp:157] Top shape: 1 4096 (4096)
I0412 03:53:35.439891 30532 net.cpp:157] Top shape: 1 4096 (4096)
I0412 03:53:35.439895 30532 net.cpp:165] Memory required for data: 10172693172
I0412 03:53:35.439899 30532 layer_factory.hpp:77] Creating layer cls_score
I0412 03:53:35.439910 30532 net.cpp:100] Creating Layer cls_score
I0412 03:53:35.439914 30532 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 03:53:35.439924 30532 net.cpp:408] cls_score -> cls_score
I0412 03:53:35.448534 30532 net.cpp:150] Setting up cls_score
I0412 03:53:35.448559 30532 net.cpp:157] Top shape: 1 201 (201)
I0412 03:53:35.448563 30532 net.cpp:165] Memory required for data: 10172693976
I0412 03:53:35.448643 30532 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 03:53:35.448690 30532 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 03:53:35.448699 30532 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 03:53:35.448745 30532 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 03:53:35.448763 30532 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 03:53:35.448814 30532 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 03:53:35.448822 30532 net.cpp:157] Top shape: 1 201 (201)
I0412 03:53:35.448827 30532 net.cpp:157] Top shape: 1 201 (201)
I0412 03:53:35.448832 30532 net.cpp:165] Memory required for data: 10172695584
I0412 03:53:35.448835 30532 layer_factory.hpp:77] Creating layer twin_pred
I0412 03:53:35.448844 30532 net.cpp:100] Creating Layer twin_pred
I0412 03:53:35.448849 30532 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 03:53:35.448859 30532 net.cpp:408] twin_pred -> twin_pred
I0412 03:53:35.477594 30532 net.cpp:150] Setting up twin_pred
I0412 03:53:35.477622 30532 net.cpp:157] Top shape: 1 402 (402)
I0412 03:53:35.477625 30532 net.cpp:165] Memory required for data: 10172697192
I0412 03:53:35.477639 30532 layer_factory.hpp:77] Creating layer loss_cls
I0412 03:53:35.477654 30532 net.cpp:100] Creating Layer loss_cls
I0412 03:53:35.477660 30532 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 03:53:35.477669 30532 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 03:53:35.477675 30532 net.cpp:408] loss_cls -> loss_cls
I0412 03:53:35.477691 30532 layer_factory.hpp:77] Creating layer loss_cls
I0412 03:53:35.477849 30532 net.cpp:150] Setting up loss_cls
I0412 03:53:35.477859 30532 net.cpp:157] Top shape: (1)
I0412 03:53:35.477862 30532 net.cpp:160]     with loss weight 1
I0412 03:53:35.477875 30532 net.cpp:165] Memory required for data: 10172697196
I0412 03:53:35.477880 30532 layer_factory.hpp:77] Creating layer loss_twin
I0412 03:53:35.477890 30532 net.cpp:100] Creating Layer loss_twin
I0412 03:53:35.477897 30532 net.cpp:434] loss_twin <- twin_pred
I0412 03:53:35.477903 30532 net.cpp:434] loss_twin <- twin_targets
I0412 03:53:35.477910 30532 net.cpp:434] loss_twin <- twin_inside_weights
I0412 03:53:35.477916 30532 net.cpp:434] loss_twin <- twin_outside_weights
I0412 03:53:35.477923 30532 net.cpp:408] loss_twin -> loss_twin
I0412 03:53:35.478061 30532 net.cpp:150] Setting up loss_twin
I0412 03:53:35.478075 30532 net.cpp:157] Top shape: (1)
I0412 03:53:35.478080 30532 net.cpp:160]     with loss weight 1
I0412 03:53:35.478088 30532 net.cpp:165] Memory required for data: 10172697200
I0412 03:53:35.478093 30532 layer_factory.hpp:77] Creating layer accuarcy
I0412 03:53:35.478102 30532 net.cpp:100] Creating Layer accuarcy
I0412 03:53:35.478108 30532 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 03:53:35.478114 30532 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 03:53:35.478122 30532 net.cpp:408] accuarcy -> accuarcy
I0412 03:53:35.478133 30532 net.cpp:150] Setting up accuarcy
I0412 03:53:35.478142 30532 net.cpp:157] Top shape: (1)
I0412 03:53:35.478145 30532 net.cpp:165] Memory required for data: 10172697204
I0412 03:53:35.478149 30532 net.cpp:228] accuarcy does not need backward computation.
I0412 03:53:35.478154 30532 net.cpp:226] loss_twin needs backward computation.
I0412 03:53:35.478158 30532 net.cpp:226] loss_cls needs backward computation.
I0412 03:53:35.478164 30532 net.cpp:226] twin_pred needs backward computation.
I0412 03:53:35.478169 30532 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 03:53:35.478174 30532 net.cpp:226] cls_score needs backward computation.
I0412 03:53:35.478178 30532 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 03:53:35.478185 30532 net.cpp:226] drop6 needs backward computation.
I0412 03:53:35.478189 30532 net.cpp:226] relu6 needs backward computation.
I0412 03:53:35.478193 30532 net.cpp:226] fc6 needs backward computation.
I0412 03:53:35.478197 30532 net.cpp:226] roi_pool5 needs backward computation.
I0412 03:53:35.478204 30532 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 03:53:35.478209 30532 net.cpp:226] roi-data needs backward computation.
I0412 03:53:35.478214 30532 net.cpp:226] proposal needs backward computation.
I0412 03:53:35.478220 30532 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 03:53:35.478225 30532 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 03:53:35.478230 30532 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 03:53:35.478235 30532 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 03:53:35.478245 30532 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 03:53:35.478252 30532 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 03:53:35.478258 30532 net.cpp:226] rpn-data needs backward computation.
I0412 03:53:35.478266 30532 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 03:53:35.478271 30532 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 03:53:35.478277 30532 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 03:53:35.478282 30532 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 03:53:35.478286 30532 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 03:53:35.478291 30532 net.cpp:226] rpn_cls_score needs backward computation.
I0412 03:53:35.478296 30532 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 03:53:35.478301 30532 net.cpp:226] rpn/output_pool needs backward computation.
I0412 03:53:35.478307 30532 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 03:53:35.478312 30532 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 03:53:35.478318 30532 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 03:53:35.478324 30532 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 03:53:35.478328 30532 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 03:53:35.478333 30532 net.cpp:226] relu5b needs backward computation.
I0412 03:53:35.478338 30532 net.cpp:226] conv5b needs backward computation.
I0412 03:53:35.478343 30532 net.cpp:226] relu5a needs backward computation.
I0412 03:53:35.478348 30532 net.cpp:226] conv5a needs backward computation.
I0412 03:53:35.478353 30532 net.cpp:226] pool4 needs backward computation.
I0412 03:53:35.478358 30532 net.cpp:226] relu4b needs backward computation.
I0412 03:53:35.478361 30532 net.cpp:226] conv4b needs backward computation.
I0412 03:53:35.478365 30532 net.cpp:226] relu4a needs backward computation.
I0412 03:53:35.478369 30532 net.cpp:226] conv4a needs backward computation.
I0412 03:53:35.478374 30532 net.cpp:226] pool3 needs backward computation.
I0412 03:53:35.478379 30532 net.cpp:226] relu3b needs backward computation.
I0412 03:53:35.478382 30532 net.cpp:226] conv3b needs backward computation.
I0412 03:53:35.478389 30532 net.cpp:226] relu3a needs backward computation.
I0412 03:53:35.478392 30532 net.cpp:226] conv3a needs backward computation.
I0412 03:53:35.478399 30532 net.cpp:228] pool2 does not need backward computation.
I0412 03:53:35.478402 30532 net.cpp:228] relu2a does not need backward computation.
I0412 03:53:35.478406 30532 net.cpp:228] conv2a does not need backward computation.
I0412 03:53:35.478413 30532 net.cpp:228] pool1 does not need backward computation.
I0412 03:53:35.478417 30532 net.cpp:228] relu1a does not need backward computation.
I0412 03:53:35.478421 30532 net.cpp:228] conv1a does not need backward computation.
I0412 03:53:35.478426 30532 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 03:53:35.478435 30532 net.cpp:228] data_data_0_split does not need backward computation.
I0412 03:53:35.478440 30532 net.cpp:228] data does not need backward computation.
I0412 03:53:35.478443 30532 net.cpp:270] This network produces output accuarcy
I0412 03:53:35.478447 30532 net.cpp:270] This network produces output loss_cls
I0412 03:53:35.478452 30532 net.cpp:270] This network produces output loss_twin
I0412 03:53:35.478456 30532 net.cpp:270] This network produces output rpn_accuarcy
I0412 03:53:35.478462 30532 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 03:53:35.478467 30532 net.cpp:270] This network produces output rpn_cls_loss
I0412 03:53:35.478471 30532 net.cpp:270] This network produces output rpn_loss_twin
I0412 03:53:35.478525 30532 net.cpp:283] Network initialization done.
I0412 03:53:35.478688 30532 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 03:53:35.636826 30532 net.cpp:761] Ignoring source layer pool5
I0412 03:53:35.659509 30532 net.cpp:761] Ignoring source layer fc7
I0412 03:53:35.659538 30532 net.cpp:761] Ignoring source layer relu7
I0412 03:53:35.659543 30532 net.cpp:761] Ignoring source layer drop7
I0412 03:53:35.659546 30532 net.cpp:761] Ignoring source layer fc8-200
I0412 03:53:35.659550 30532 net.cpp:761] Ignoring source layer loss
('tempppppppppppppppppppppppppppp', [{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}])
('tempppppppppppppppppppppppppppp', [{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}])
maaaaasdfdfdsfadf
Solving...
BlobFetcher started
99
(array([0]), array([97]))
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 96, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 134, in forward
    blob1, blob2 = blob
ValueError: need more than 1 value to unpack
Terminating BlobFetcher
