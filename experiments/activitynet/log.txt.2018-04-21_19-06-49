Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=0, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 0,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': False,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
44988 roidb entries
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
precimputed
twin target means:
twin target stdevs:
NOT normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0421 19:06:54.248342 31970 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0421 19:06:54.248373 31970 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0421 19:06:54.249414 31970 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 200"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 200"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 200
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 400
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SigmoidCrossEntropyLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuracy"
  type: "Python"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuracy"
  python_param {
    module: "utils.accuracy_layer"
    layer: "AccuracyLayer"
    param_str: "{\"top_k\": 2}"
  }
}
I0421 19:06:54.249624 31970 layer_factory.hpp:77] Creating layer data
I0421 19:06:54.307158 31970 net.cpp:100] Creating Layer data
I0421 19:06:54.307186 31970 net.cpp:408] data -> data
I0421 19:06:54.307200 31970 net.cpp:408] data -> gt_boxes
setting up
has rpn
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0421 19:06:54.320606 31970 net.cpp:150] Setting up data
I0421 19:06:54.320631 31970 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0421 19:06:54.320636 31970 net.cpp:157] Top shape: 1 101 (101)
I0421 19:06:54.320638 31970 net.cpp:165] Memory required for data: 115605908
I0421 19:06:54.320646 31970 layer_factory.hpp:77] Creating layer data_data_0_split
I0421 19:06:54.320657 31970 net.cpp:100] Creating Layer data_data_0_split
I0421 19:06:54.320662 31970 net.cpp:434] data_data_0_split <- data
I0421 19:06:54.320667 31970 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0421 19:06:54.320677 31970 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0421 19:06:54.320706 31970 net.cpp:150] Setting up data_data_0_split
I0421 19:06:54.320716 31970 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0421 19:06:54.320720 31970 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0421 19:06:54.320724 31970 net.cpp:165] Memory required for data: 346816916
I0421 19:06:54.320727 31970 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0421 19:06:54.320732 31970 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0421 19:06:54.320735 31970 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0421 19:06:54.320739 31970 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0421 19:06:54.320744 31970 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0421 19:06:54.320768 31970 net.cpp:150] Setting up gt_boxes_data_1_split
I0421 19:06:54.320773 31970 net.cpp:157] Top shape: 1 101 (101)
I0421 19:06:54.320776 31970 net.cpp:157] Top shape: 1 101 (101)
I0421 19:06:54.320780 31970 net.cpp:165] Memory required for data: 346817724
I0421 19:06:54.320782 31970 layer_factory.hpp:77] Creating layer conv1a
I0421 19:06:54.320798 31970 net.cpp:100] Creating Layer conv1a
I0421 19:06:54.320803 31970 net.cpp:434] conv1a <- data_data_0_split_0
I0421 19:06:54.320808 31970 net.cpp:408] conv1a -> conv1a
I0421 19:06:54.875025 31970 net.cpp:150] Setting up conv1a
I0421 19:06:54.875056 31970 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0421 19:06:54.875061 31970 net.cpp:165] Memory required for data: 2813068476
I0421 19:06:54.875079 31970 layer_factory.hpp:77] Creating layer relu1a
I0421 19:06:54.875094 31970 net.cpp:100] Creating Layer relu1a
I0421 19:06:54.875099 31970 net.cpp:434] relu1a <- conv1a
I0421 19:06:54.875105 31970 net.cpp:395] relu1a -> conv1a (in-place)
I0421 19:06:54.875596 31970 net.cpp:150] Setting up relu1a
I0421 19:06:54.875608 31970 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0421 19:06:54.875612 31970 net.cpp:165] Memory required for data: 5279319228
I0421 19:06:54.875617 31970 layer_factory.hpp:77] Creating layer pool1
I0421 19:06:54.875625 31970 net.cpp:100] Creating Layer pool1
I0421 19:06:54.875629 31970 net.cpp:434] pool1 <- conv1a
I0421 19:06:54.875635 31970 net.cpp:408] pool1 -> pool1
I0421 19:06:54.875805 31970 net.cpp:150] Setting up pool1
I0421 19:06:54.875816 31970 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0421 19:06:54.875819 31970 net.cpp:165] Memory required for data: 5895881916
I0421 19:06:54.875823 31970 layer_factory.hpp:77] Creating layer conv2a
I0421 19:06:54.875835 31970 net.cpp:100] Creating Layer conv2a
I0421 19:06:54.875843 31970 net.cpp:434] conv2a <- pool1
I0421 19:06:54.875849 31970 net.cpp:408] conv2a -> conv2a
I0421 19:06:54.886829 31970 net.cpp:150] Setting up conv2a
I0421 19:06:54.886853 31970 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0421 19:06:54.886857 31970 net.cpp:165] Memory required for data: 7129007292
I0421 19:06:54.886869 31970 layer_factory.hpp:77] Creating layer relu2a
I0421 19:06:54.886878 31970 net.cpp:100] Creating Layer relu2a
I0421 19:06:54.886881 31970 net.cpp:434] relu2a <- conv2a
I0421 19:06:54.886886 31970 net.cpp:395] relu2a -> conv2a (in-place)
I0421 19:06:54.887233 31970 net.cpp:150] Setting up relu2a
I0421 19:06:54.887246 31970 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0421 19:06:54.887250 31970 net.cpp:165] Memory required for data: 8362132668
I0421 19:06:54.887254 31970 layer_factory.hpp:77] Creating layer pool2
I0421 19:06:54.887264 31970 net.cpp:100] Creating Layer pool2
I0421 19:06:54.887266 31970 net.cpp:434] pool2 <- conv2a
I0421 19:06:54.887272 31970 net.cpp:408] pool2 -> pool2
I0421 19:06:54.887429 31970 net.cpp:150] Setting up pool2
I0421 19:06:54.887439 31970 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0421 19:06:54.887442 31970 net.cpp:165] Memory required for data: 8516273340
I0421 19:06:54.887446 31970 layer_factory.hpp:77] Creating layer conv3a
I0421 19:06:54.887456 31970 net.cpp:100] Creating Layer conv3a
I0421 19:06:54.887462 31970 net.cpp:434] conv3a <- pool2
I0421 19:06:54.887468 31970 net.cpp:408] conv3a -> conv3a
I0421 19:06:54.912231 31970 net.cpp:150] Setting up conv3a
I0421 19:06:54.912250 31970 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0421 19:06:54.912255 31970 net.cpp:165] Memory required for data: 8824554684
I0421 19:06:54.912264 31970 layer_factory.hpp:77] Creating layer relu3a
I0421 19:06:54.912271 31970 net.cpp:100] Creating Layer relu3a
I0421 19:06:54.912276 31970 net.cpp:434] relu3a <- conv3a
I0421 19:06:54.912281 31970 net.cpp:395] relu3a -> conv3a (in-place)
I0421 19:06:54.912608 31970 net.cpp:150] Setting up relu3a
I0421 19:06:54.912621 31970 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0421 19:06:54.912624 31970 net.cpp:165] Memory required for data: 9132836028
I0421 19:06:54.912628 31970 layer_factory.hpp:77] Creating layer conv3b
I0421 19:06:54.912638 31970 net.cpp:100] Creating Layer conv3b
I0421 19:06:54.912644 31970 net.cpp:434] conv3b <- conv3a
I0421 19:06:54.912650 31970 net.cpp:408] conv3b -> conv3b
I0421 19:06:54.966728 31970 net.cpp:150] Setting up conv3b
I0421 19:06:54.966754 31970 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0421 19:06:54.966776 31970 net.cpp:165] Memory required for data: 9441117372
I0421 19:06:54.966787 31970 layer_factory.hpp:77] Creating layer relu3b
I0421 19:06:54.966797 31970 net.cpp:100] Creating Layer relu3b
I0421 19:06:54.966802 31970 net.cpp:434] relu3b <- conv3b
I0421 19:06:54.966809 31970 net.cpp:395] relu3b -> conv3b (in-place)
I0421 19:06:54.970109 31970 net.cpp:150] Setting up relu3b
I0421 19:06:54.970124 31970 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0421 19:06:54.970129 31970 net.cpp:165] Memory required for data: 9749398716
I0421 19:06:54.970136 31970 layer_factory.hpp:77] Creating layer pool3
I0421 19:06:54.970146 31970 net.cpp:100] Creating Layer pool3
I0421 19:06:54.970152 31970 net.cpp:434] pool3 <- conv3b
I0421 19:06:54.970161 31970 net.cpp:408] pool3 -> pool3
I0421 19:06:54.974320 31970 net.cpp:150] Setting up pool3
I0421 19:06:54.974334 31970 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0421 19:06:54.974339 31970 net.cpp:165] Memory required for data: 9787933884
I0421 19:06:54.974345 31970 layer_factory.hpp:77] Creating layer conv4a
I0421 19:06:54.974360 31970 net.cpp:100] Creating Layer conv4a
I0421 19:06:54.974366 31970 net.cpp:434] conv4a <- pool3
I0421 19:06:54.974376 31970 net.cpp:408] conv4a -> conv4a
I0421 19:06:55.073680 31970 net.cpp:150] Setting up conv4a
I0421 19:06:55.073706 31970 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0421 19:06:55.073711 31970 net.cpp:165] Memory required for data: 9865004220
I0421 19:06:55.073729 31970 layer_factory.hpp:77] Creating layer relu4a
I0421 19:06:55.073745 31970 net.cpp:100] Creating Layer relu4a
I0421 19:06:55.073752 31970 net.cpp:434] relu4a <- conv4a
I0421 19:06:55.073761 31970 net.cpp:395] relu4a -> conv4a (in-place)
I0421 19:06:55.075783 31970 net.cpp:150] Setting up relu4a
I0421 19:06:55.075798 31970 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0421 19:06:55.075803 31970 net.cpp:165] Memory required for data: 9942074556
I0421 19:06:55.075809 31970 layer_factory.hpp:77] Creating layer conv4b
I0421 19:06:55.075830 31970 net.cpp:100] Creating Layer conv4b
I0421 19:06:55.075840 31970 net.cpp:434] conv4b <- conv4a
I0421 19:06:55.075850 31970 net.cpp:408] conv4b -> conv4b
I0421 19:06:55.265620 31970 net.cpp:150] Setting up conv4b
I0421 19:06:55.265646 31970 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0421 19:06:55.265652 31970 net.cpp:165] Memory required for data: 10019144892
I0421 19:06:55.265664 31970 layer_factory.hpp:77] Creating layer relu4b
I0421 19:06:55.265676 31970 net.cpp:100] Creating Layer relu4b
I0421 19:06:55.265682 31970 net.cpp:434] relu4b <- conv4b
I0421 19:06:55.265693 31970 net.cpp:395] relu4b -> conv4b (in-place)
I0421 19:06:55.265862 31970 net.cpp:150] Setting up relu4b
I0421 19:06:55.265878 31970 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0421 19:06:55.265883 31970 net.cpp:165] Memory required for data: 10096215228
I0421 19:06:55.265890 31970 layer_factory.hpp:77] Creating layer pool4
I0421 19:06:55.265902 31970 net.cpp:100] Creating Layer pool4
I0421 19:06:55.265910 31970 net.cpp:434] pool4 <- conv4b
I0421 19:06:55.265919 31970 net.cpp:408] pool4 -> pool4
I0421 19:06:55.266939 31970 net.cpp:150] Setting up pool4
I0421 19:06:55.266953 31970 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0421 19:06:55.266959 31970 net.cpp:165] Memory required for data: 10105849020
I0421 19:06:55.266968 31970 layer_factory.hpp:77] Creating layer conv5a
I0421 19:06:55.266983 31970 net.cpp:100] Creating Layer conv5a
I0421 19:06:55.266990 31970 net.cpp:434] conv5a <- pool4
I0421 19:06:55.267004 31970 net.cpp:408] conv5a -> conv5a
I0421 19:06:55.457417 31970 net.cpp:150] Setting up conv5a
I0421 19:06:55.457446 31970 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0421 19:06:55.457453 31970 net.cpp:165] Memory required for data: 10115482812
I0421 19:06:55.457464 31970 layer_factory.hpp:77] Creating layer relu5a
I0421 19:06:55.457479 31970 net.cpp:100] Creating Layer relu5a
I0421 19:06:55.457487 31970 net.cpp:434] relu5a <- conv5a
I0421 19:06:55.457497 31970 net.cpp:395] relu5a -> conv5a (in-place)
I0421 19:06:55.458041 31970 net.cpp:150] Setting up relu5a
I0421 19:06:55.458055 31970 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0421 19:06:55.458060 31970 net.cpp:165] Memory required for data: 10125116604
I0421 19:06:55.458066 31970 layer_factory.hpp:77] Creating layer conv5b
I0421 19:06:55.458086 31970 net.cpp:100] Creating Layer conv5b
I0421 19:06:55.458094 31970 net.cpp:434] conv5b <- conv5a
I0421 19:06:55.458104 31970 net.cpp:408] conv5b -> conv5b
I0421 19:06:55.650601 31970 net.cpp:150] Setting up conv5b
I0421 19:06:55.650630 31970 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0421 19:06:55.650635 31970 net.cpp:165] Memory required for data: 10134750396
I0421 19:06:55.650648 31970 layer_factory.hpp:77] Creating layer relu5b
I0421 19:06:55.650660 31970 net.cpp:100] Creating Layer relu5b
I0421 19:06:55.650668 31970 net.cpp:434] relu5b <- conv5b
I0421 19:06:55.650681 31970 net.cpp:395] relu5b -> conv5b (in-place)
I0421 19:06:55.650859 31970 net.cpp:150] Setting up relu5b
I0421 19:06:55.650871 31970 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0421 19:06:55.650877 31970 net.cpp:165] Memory required for data: 10144384188
I0421 19:06:55.650883 31970 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0421 19:06:55.650892 31970 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0421 19:06:55.650897 31970 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0421 19:06:55.650908 31970 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0421 19:06:55.650919 31970 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0421 19:06:55.650969 31970 net.cpp:150] Setting up conv5b_relu5b_0_split
I0421 19:06:55.650979 31970 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0421 19:06:55.650985 31970 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0421 19:06:55.650990 31970 net.cpp:165] Memory required for data: 10163651772
I0421 19:06:55.650996 31970 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0421 19:06:55.651012 31970 net.cpp:100] Creating Layer rpn_conv/3x3
I0421 19:06:55.651021 31970 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0421 19:06:55.651033 31970 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0421 19:06:55.845530 31970 net.cpp:150] Setting up rpn_conv/3x3
I0421 19:06:55.845561 31970 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0421 19:06:55.845566 31970 net.cpp:165] Memory required for data: 10166797500
I0421 19:06:55.845584 31970 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0421 19:06:55.845598 31970 net.cpp:100] Creating Layer rpn_relu/3x3
I0421 19:06:55.845605 31970 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0421 19:06:55.845618 31970 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0421 19:06:55.846000 31970 net.cpp:150] Setting up rpn_relu/3x3
I0421 19:06:55.846014 31970 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0421 19:06:55.846020 31970 net.cpp:165] Memory required for data: 10169943228
I0421 19:06:55.846026 31970 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0421 19:06:55.846043 31970 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0421 19:06:55.846055 31970 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0421 19:06:55.846066 31970 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0421 19:06:56.045531 31970 net.cpp:150] Setting up rpn_conv/3x3_2
I0421 19:06:56.045624 31970 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0421 19:06:56.045648 31970 net.cpp:165] Memory required for data: 10170729660
I0421 19:06:56.045675 31970 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0421 19:06:56.045703 31970 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0421 19:06:56.045725 31970 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0421 19:06:56.045749 31970 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0421 19:06:56.047646 31970 net.cpp:150] Setting up rpn_relu/3x3_2
I0421 19:06:56.047708 31970 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0421 19:06:56.047729 31970 net.cpp:165] Memory required for data: 10171516092
I0421 19:06:56.047750 31970 layer_factory.hpp:77] Creating layer rpn/output_pool
I0421 19:06:56.047782 31970 net.cpp:100] Creating Layer rpn/output_pool
I0421 19:06:56.047804 31970 net.cpp:434] rpn/output_pool <- rpn/output_2
I0421 19:06:56.047829 31970 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0421 19:06:56.048121 31970 net.cpp:150] Setting up rpn/output_pool
I0421 19:06:56.048156 31970 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0421 19:06:56.048184 31970 net.cpp:165] Memory required for data: 10171712700
I0421 19:06:56.048203 31970 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0421 19:06:56.048224 31970 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0421 19:06:56.048244 31970 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0421 19:06:56.048267 31970 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0421 19:06:56.048291 31970 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0421 19:06:56.048360 31970 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0421 19:06:56.048388 31970 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0421 19:06:56.048409 31970 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0421 19:06:56.048429 31970 net.cpp:165] Memory required for data: 10172105916
I0421 19:06:56.048446 31970 layer_factory.hpp:77] Creating layer rpn_cls_score
I0421 19:06:56.048476 31970 net.cpp:100] Creating Layer rpn_cls_score
I0421 19:06:56.048497 31970 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0421 19:06:56.048521 31970 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0421 19:06:56.052146 31970 net.cpp:150] Setting up rpn_cls_score
I0421 19:06:56.052193 31970 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0421 19:06:56.052214 31970 net.cpp:165] Memory required for data: 10172134332
I0421 19:06:56.052239 31970 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0421 19:06:56.052268 31970 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0421 19:06:56.052295 31970 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0421 19:06:56.052326 31970 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0421 19:06:56.052361 31970 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0421 19:06:56.052459 31970 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0421 19:06:56.052494 31970 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0421 19:06:56.052525 31970 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0421 19:06:56.052553 31970 net.cpp:165] Memory required for data: 10172191164
I0421 19:06:56.052582 31970 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0421 19:06:56.052634 31970 net.cpp:100] Creating Layer rpn_twin_pred
I0421 19:06:56.052664 31970 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0421 19:06:56.052701 31970 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0421 19:06:56.056258 31970 net.cpp:150] Setting up rpn_twin_pred
I0421 19:06:56.056311 31970 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0421 19:06:56.056332 31970 net.cpp:165] Memory required for data: 10172219580
I0421 19:06:56.056375 31970 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0421 19:06:56.056402 31970 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0421 19:06:56.056434 31970 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0421 19:06:56.056457 31970 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0421 19:06:56.056495 31970 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0421 19:06:56.056576 31970 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0421 19:06:56.056605 31970 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0421 19:06:56.056627 31970 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0421 19:06:56.056646 31970 net.cpp:165] Memory required for data: 10172276412
I0421 19:06:56.056668 31970 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0421 19:06:56.056704 31970 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0421 19:06:56.056726 31970 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0421 19:06:56.056758 31970 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0421 19:06:56.056846 31970 net.cpp:150] Setting up rpn_cls_score_reshape
I0421 19:06:56.056879 31970 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0421 19:06:56.056900 31970 net.cpp:165] Memory required for data: 10172304828
I0421 19:06:56.056918 31970 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0421 19:06:56.056939 31970 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0421 19:06:56.056959 31970 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0421 19:06:56.056980 31970 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0421 19:06:56.057010 31970 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0421 19:06:56.057036 31970 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0421 19:06:56.057117 31970 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0421 19:06:56.057145 31970 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0421 19:06:56.057165 31970 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0421 19:06:56.057185 31970 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0421 19:06:56.057204 31970 net.cpp:165] Memory required for data: 10172390076
I0421 19:06:56.057222 31970 layer_factory.hpp:77] Creating layer rpn-data
I0421 19:06:56.057791 31970 net.cpp:100] Creating Layer rpn-data
I0421 19:06:56.057827 31970 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0421 19:06:56.057852 31970 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0421 19:06:56.057873 31970 net.cpp:434] rpn-data <- data_data_0_split_1
I0421 19:06:56.057895 31970 net.cpp:408] rpn-data -> rpn_labels
I0421 19:06:56.057921 31970 net.cpp:408] rpn-data -> rpn_twin_targets
I0421 19:06:56.057946 31970 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0421 19:06:56.057971 31970 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0421 19:06:56.063725 31970 net.cpp:150] Setting up rpn-data
I0421 19:06:56.063815 31970 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0421 19:06:56.063848 31970 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0421 19:06:56.063875 31970 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0421 19:06:56.063905 31970 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0421 19:06:56.063935 31970 net.cpp:165] Memory required for data: 10172489532
I0421 19:06:56.063963 31970 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0421 19:06:56.064002 31970 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0421 19:06:56.064034 31970 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0421 19:06:56.064069 31970 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0421 19:06:56.064108 31970 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0421 19:06:56.064213 31970 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0421 19:06:56.064250 31970 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0421 19:06:56.064278 31970 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0421 19:06:56.064306 31970 net.cpp:165] Memory required for data: 10172517948
I0421 19:06:56.064335 31970 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0421 19:06:56.064371 31970 net.cpp:100] Creating Layer rpn_loss_cls
I0421 19:06:56.064399 31970 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0421 19:06:56.064430 31970 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0421 19:06:56.064465 31970 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0421 19:06:56.064507 31970 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0421 19:06:56.065421 31970 net.cpp:150] Setting up rpn_loss_cls
I0421 19:06:56.065464 31970 net.cpp:157] Top shape: (1)
I0421 19:06:56.065488 31970 net.cpp:160]     with loss weight 1
I0421 19:06:56.065526 31970 net.cpp:165] Memory required for data: 10172517952
I0421 19:06:56.065534 31970 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0421 19:06:56.065547 31970 net.cpp:100] Creating Layer rpn_loss_twin
I0421 19:06:56.065568 31970 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0421 19:06:56.065577 31970 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0421 19:06:56.065584 31970 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0421 19:06:56.065603 31970 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0421 19:06:56.065613 31970 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0421 19:06:56.065704 31970 net.cpp:150] Setting up rpn_loss_twin
I0421 19:06:56.065716 31970 net.cpp:157] Top shape: (1)
I0421 19:06:56.065721 31970 net.cpp:160]     with loss weight 1
I0421 19:06:56.065743 31970 net.cpp:165] Memory required for data: 10172517956
I0421 19:06:56.065750 31970 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0421 19:06:56.065767 31970 net.cpp:100] Creating Layer rpn_accuarcy
I0421 19:06:56.065775 31970 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0421 19:06:56.065783 31970 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0421 19:06:56.065804 31970 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0421 19:06:56.065816 31970 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0421 19:06:56.065863 31970 net.cpp:150] Setting up rpn_accuarcy
I0421 19:06:56.065873 31970 net.cpp:157] Top shape: (1)
I0421 19:06:56.065879 31970 net.cpp:157] Top shape: 2 (2)
I0421 19:06:56.065898 31970 net.cpp:165] Memory required for data: 10172517968
I0421 19:06:56.065904 31970 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0421 19:06:56.065914 31970 net.cpp:100] Creating Layer rpn_cls_prob
I0421 19:06:56.065922 31970 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0421 19:06:56.065932 31970 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0421 19:06:56.066174 31970 net.cpp:150] Setting up rpn_cls_prob
I0421 19:06:56.066186 31970 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0421 19:06:56.066192 31970 net.cpp:165] Memory required for data: 10172546384
I0421 19:06:56.066198 31970 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0421 19:06:56.066227 31970 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0421 19:06:56.066236 31970 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0421 19:06:56.066244 31970 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0421 19:06:56.066293 31970 net.cpp:150] Setting up rpn_cls_prob_reshape
I0421 19:06:56.066303 31970 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0421 19:06:56.066308 31970 net.cpp:165] Memory required for data: 10172574800
I0421 19:06:56.066313 31970 layer_factory.hpp:77] Creating layer proposal
I0421 19:06:56.066993 31970 net.cpp:100] Creating Layer proposal
I0421 19:06:56.067008 31970 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0421 19:06:56.067015 31970 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0421 19:06:56.067025 31970 net.cpp:408] proposal -> rpn_rois
I0421 19:06:56.069452 31970 net.cpp:150] Setting up proposal
I0421 19:06:56.069468 31970 net.cpp:157] Top shape: 1 3 (3)
I0421 19:06:56.069473 31970 net.cpp:165] Memory required for data: 10172574812
I0421 19:06:56.069479 31970 layer_factory.hpp:77] Creating layer roi-data
I0421 19:06:56.083299 31970 net.cpp:100] Creating Layer roi-data
I0421 19:06:56.083323 31970 net.cpp:434] roi-data <- rpn_rois
I0421 19:06:56.083334 31970 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0421 19:06:56.083344 31970 net.cpp:408] roi-data -> rois
I0421 19:06:56.083375 31970 net.cpp:408] roi-data -> labels
I0421 19:06:56.083387 31970 net.cpp:408] roi-data -> twin_targets
I0421 19:06:56.083396 31970 net.cpp:408] roi-data -> twin_inside_weights
I0421 19:06:56.083420 31970 net.cpp:408] roi-data -> twin_outside_weights
I0421 19:06:56.083897 31970 net.cpp:150] Setting up roi-data
I0421 19:06:56.083914 31970 net.cpp:157] Top shape: 1 3 (3)
I0421 19:06:56.083921 31970 net.cpp:157] Top shape: 1 200 (200)
I0421 19:06:56.083943 31970 net.cpp:157] Top shape: 1 400 (400)
I0421 19:06:56.083951 31970 net.cpp:157] Top shape: 1 400 (400)
I0421 19:06:56.083957 31970 net.cpp:157] Top shape: 1 400 (400)
I0421 19:06:56.083962 31970 net.cpp:165] Memory required for data: 10172580424
I0421 19:06:56.083981 31970 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0421 19:06:56.083993 31970 net.cpp:100] Creating Layer labels_roi-data_1_split
I0421 19:06:56.084012 31970 net.cpp:434] labels_roi-data_1_split <- labels
I0421 19:06:56.084022 31970 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0421 19:06:56.084033 31970 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0421 19:06:56.084079 31970 net.cpp:150] Setting up labels_roi-data_1_split
I0421 19:06:56.084089 31970 net.cpp:157] Top shape: 1 200 (200)
I0421 19:06:56.084095 31970 net.cpp:157] Top shape: 1 200 (200)
I0421 19:06:56.084113 31970 net.cpp:165] Memory required for data: 10172582024
I0421 19:06:56.084120 31970 layer_factory.hpp:77] Creating layer roi_pool5
I0421 19:06:56.084136 31970 net.cpp:100] Creating Layer roi_pool5
I0421 19:06:56.084143 31970 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0421 19:06:56.084151 31970 net.cpp:434] roi_pool5 <- rois
I0421 19:06:56.084161 31970 net.cpp:408] roi_pool5 -> pool5
I0421 19:06:56.084175 31970 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0421 19:06:56.084187 31970 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0421 19:06:56.084235 31970 net.cpp:150] Setting up roi_pool5
I0421 19:06:56.084245 31970 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0421 19:06:56.084250 31970 net.cpp:165] Memory required for data: 10172614792
I0421 19:06:56.084270 31970 layer_factory.hpp:77] Creating layer fc6
I0421 19:06:56.084285 31970 net.cpp:100] Creating Layer fc6
I0421 19:06:56.084295 31970 net.cpp:434] fc6 <- pool5
I0421 19:06:56.084305 31970 net.cpp:408] fc6 -> fc6
I0421 19:06:56.995331 31970 net.cpp:150] Setting up fc6
I0421 19:06:56.995358 31970 net.cpp:157] Top shape: 1 4096 (4096)
I0421 19:06:56.995364 31970 net.cpp:165] Memory required for data: 10172631176
I0421 19:06:56.995378 31970 layer_factory.hpp:77] Creating layer relu6
I0421 19:06:56.995395 31970 net.cpp:100] Creating Layer relu6
I0421 19:06:56.995401 31970 net.cpp:434] relu6 <- fc6
I0421 19:06:56.995411 31970 net.cpp:395] relu6 -> fc6 (in-place)
I0421 19:06:56.995923 31970 net.cpp:150] Setting up relu6
I0421 19:06:56.995936 31970 net.cpp:157] Top shape: 1 4096 (4096)
I0421 19:06:56.995942 31970 net.cpp:165] Memory required for data: 10172647560
I0421 19:06:56.995949 31970 layer_factory.hpp:77] Creating layer drop6
I0421 19:06:56.995967 31970 net.cpp:100] Creating Layer drop6
I0421 19:06:56.995976 31970 net.cpp:434] drop6 <- fc6
I0421 19:06:56.995986 31970 net.cpp:395] drop6 -> fc6 (in-place)
I0421 19:06:56.996022 31970 net.cpp:150] Setting up drop6
I0421 19:06:56.996031 31970 net.cpp:157] Top shape: 1 4096 (4096)
I0421 19:06:56.996035 31970 net.cpp:165] Memory required for data: 10172663944
I0421 19:06:56.996039 31970 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0421 19:06:56.996045 31970 net.cpp:100] Creating Layer fc6_drop6_0_split
I0421 19:06:56.996049 31970 net.cpp:434] fc6_drop6_0_split <- fc6
I0421 19:06:56.996054 31970 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0421 19:06:56.996065 31970 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0421 19:06:56.996109 31970 net.cpp:150] Setting up fc6_drop6_0_split
I0421 19:06:56.996119 31970 net.cpp:157] Top shape: 1 4096 (4096)
I0421 19:06:56.996126 31970 net.cpp:157] Top shape: 1 4096 (4096)
I0421 19:06:56.996135 31970 net.cpp:165] Memory required for data: 10172696712
I0421 19:06:56.996142 31970 layer_factory.hpp:77] Creating layer cls_score
I0421 19:06:56.996150 31970 net.cpp:100] Creating Layer cls_score
I0421 19:06:56.996160 31970 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0421 19:06:56.996170 31970 net.cpp:408] cls_score -> cls_score
I0421 19:06:57.018278 31970 net.cpp:150] Setting up cls_score
I0421 19:06:57.018299 31970 net.cpp:157] Top shape: 1 200 (200)
I0421 19:06:57.018304 31970 net.cpp:165] Memory required for data: 10172697512
I0421 19:06:57.018313 31970 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0421 19:06:57.018321 31970 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0421 19:06:57.018326 31970 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0421 19:06:57.018332 31970 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0421 19:06:57.018343 31970 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0421 19:06:57.018388 31970 net.cpp:150] Setting up cls_score_cls_score_0_split
I0421 19:06:57.018398 31970 net.cpp:157] Top shape: 1 200 (200)
I0421 19:06:57.018404 31970 net.cpp:157] Top shape: 1 200 (200)
I0421 19:06:57.018409 31970 net.cpp:165] Memory required for data: 10172699112
I0421 19:06:57.018432 31970 layer_factory.hpp:77] Creating layer twin_pred
I0421 19:06:57.018450 31970 net.cpp:100] Creating Layer twin_pred
I0421 19:06:57.018460 31970 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0421 19:06:57.018482 31970 net.cpp:408] twin_pred -> twin_pred
I0421 19:06:57.062656 31970 net.cpp:150] Setting up twin_pred
I0421 19:06:57.062683 31970 net.cpp:157] Top shape: 1 400 (400)
I0421 19:06:57.062690 31970 net.cpp:165] Memory required for data: 10172700712
I0421 19:06:57.062702 31970 layer_factory.hpp:77] Creating layer loss_cls
I0421 19:06:57.062726 31970 net.cpp:100] Creating Layer loss_cls
I0421 19:06:57.062736 31970 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0421 19:06:57.062746 31970 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0421 19:06:57.062757 31970 net.cpp:408] loss_cls -> loss_cls
I0421 19:06:57.062850 31970 net.cpp:150] Setting up loss_cls
I0421 19:06:57.062861 31970 net.cpp:157] Top shape: (1)
I0421 19:06:57.062866 31970 net.cpp:160]     with loss weight 1
I0421 19:06:57.062880 31970 net.cpp:165] Memory required for data: 10172700716
I0421 19:06:57.062886 31970 layer_factory.hpp:77] Creating layer loss_twin
I0421 19:06:57.062892 31970 net.cpp:100] Creating Layer loss_twin
I0421 19:06:57.062896 31970 net.cpp:434] loss_twin <- twin_pred
I0421 19:06:57.062901 31970 net.cpp:434] loss_twin <- twin_targets
I0421 19:06:57.062906 31970 net.cpp:434] loss_twin <- twin_inside_weights
I0421 19:06:57.062909 31970 net.cpp:434] loss_twin <- twin_outside_weights
I0421 19:06:57.062913 31970 net.cpp:408] loss_twin -> loss_twin
I0421 19:06:57.062996 31970 net.cpp:150] Setting up loss_twin
I0421 19:06:57.063004 31970 net.cpp:157] Top shape: (1)
I0421 19:06:57.063009 31970 net.cpp:160]     with loss weight 1
I0421 19:06:57.063012 31970 net.cpp:165] Memory required for data: 10172700720
I0421 19:06:57.063016 31970 layer_factory.hpp:77] Creating layer accuracy
I0421 19:06:57.063237 31970 net.cpp:100] Creating Layer accuracy
I0421 19:06:57.063248 31970 net.cpp:434] accuracy <- cls_score_cls_score_0_split_1
I0421 19:06:57.063254 31970 net.cpp:434] accuracy <- labels_roi-data_1_split_1
I0421 19:06:57.063259 31970 net.cpp:408] accuracy -> accuracy
I0421 19:06:57.063354 31970 net.cpp:150] Setting up accuracy
I0421 19:06:57.063365 31970 net.cpp:157] Top shape: 1 (1)
I0421 19:06:57.063369 31970 net.cpp:165] Memory required for data: 10172700724
I0421 19:06:57.063372 31970 net.cpp:228] accuracy does not need backward computation.
I0421 19:06:57.063376 31970 net.cpp:226] loss_twin needs backward computation.
I0421 19:06:57.063380 31970 net.cpp:226] loss_cls needs backward computation.
I0421 19:06:57.063383 31970 net.cpp:226] twin_pred needs backward computation.
I0421 19:06:57.063387 31970 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0421 19:06:57.063390 31970 net.cpp:226] cls_score needs backward computation.
I0421 19:06:57.063395 31970 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0421 19:06:57.063398 31970 net.cpp:226] drop6 needs backward computation.
I0421 19:06:57.063401 31970 net.cpp:226] relu6 needs backward computation.
I0421 19:06:57.063405 31970 net.cpp:226] fc6 needs backward computation.
I0421 19:06:57.063407 31970 net.cpp:226] roi_pool5 needs backward computation.
I0421 19:06:57.063412 31970 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0421 19:06:57.063416 31970 net.cpp:226] roi-data needs backward computation.
I0421 19:06:57.063421 31970 net.cpp:226] proposal needs backward computation.
I0421 19:06:57.063424 31970 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0421 19:06:57.063427 31970 net.cpp:226] rpn_cls_prob needs backward computation.
I0421 19:06:57.063431 31970 net.cpp:228] rpn_accuarcy does not need backward computation.
I0421 19:06:57.063434 31970 net.cpp:226] rpn_loss_twin needs backward computation.
I0421 19:06:57.063439 31970 net.cpp:226] rpn_loss_cls needs backward computation.
I0421 19:06:57.063444 31970 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0421 19:06:57.063448 31970 net.cpp:226] rpn-data needs backward computation.
I0421 19:06:57.063454 31970 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0421 19:06:57.063457 31970 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0421 19:06:57.063462 31970 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0421 19:06:57.063464 31970 net.cpp:226] rpn_twin_pred needs backward computation.
I0421 19:06:57.063468 31970 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0421 19:06:57.063472 31970 net.cpp:226] rpn_cls_score needs backward computation.
I0421 19:06:57.063475 31970 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0421 19:06:57.063480 31970 net.cpp:226] rpn/output_pool needs backward computation.
I0421 19:06:57.063483 31970 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0421 19:06:57.063486 31970 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0421 19:06:57.063491 31970 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0421 19:06:57.063494 31970 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0421 19:06:57.063498 31970 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0421 19:06:57.063503 31970 net.cpp:226] relu5b needs backward computation.
I0421 19:06:57.063505 31970 net.cpp:226] conv5b needs backward computation.
I0421 19:06:57.063509 31970 net.cpp:226] relu5a needs backward computation.
I0421 19:06:57.063513 31970 net.cpp:226] conv5a needs backward computation.
I0421 19:06:57.063515 31970 net.cpp:226] pool4 needs backward computation.
I0421 19:06:57.063519 31970 net.cpp:226] relu4b needs backward computation.
I0421 19:06:57.063522 31970 net.cpp:226] conv4b needs backward computation.
I0421 19:06:57.063525 31970 net.cpp:226] relu4a needs backward computation.
I0421 19:06:57.063529 31970 net.cpp:226] conv4a needs backward computation.
I0421 19:06:57.063532 31970 net.cpp:226] pool3 needs backward computation.
I0421 19:06:57.063536 31970 net.cpp:226] relu3b needs backward computation.
I0421 19:06:57.063539 31970 net.cpp:226] conv3b needs backward computation.
I0421 19:06:57.063544 31970 net.cpp:226] relu3a needs backward computation.
I0421 19:06:57.063546 31970 net.cpp:226] conv3a needs backward computation.
I0421 19:06:57.063550 31970 net.cpp:228] pool2 does not need backward computation.
I0421 19:06:57.063555 31970 net.cpp:228] relu2a does not need backward computation.
I0421 19:06:57.063557 31970 net.cpp:228] conv2a does not need backward computation.
I0421 19:06:57.063560 31970 net.cpp:228] pool1 does not need backward computation.
I0421 19:06:57.063565 31970 net.cpp:228] relu1a does not need backward computation.
I0421 19:06:57.063567 31970 net.cpp:228] conv1a does not need backward computation.
I0421 19:06:57.063571 31970 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0421 19:06:57.063575 31970 net.cpp:228] data_data_0_split does not need backward computation.
I0421 19:06:57.063580 31970 net.cpp:228] data does not need backward computation.
I0421 19:06:57.063582 31970 net.cpp:270] This network produces output accuracy
I0421 19:06:57.063586 31970 net.cpp:270] This network produces output loss_cls
I0421 19:06:57.063590 31970 net.cpp:270] This network produces output loss_twin
I0421 19:06:57.063592 31970 net.cpp:270] This network produces output rpn_accuarcy
I0421 19:06:57.063596 31970 net.cpp:270] This network produces output rpn_accuarcy_class
I0421 19:06:57.063599 31970 net.cpp:270] This network produces output rpn_cls_loss
I0421 19:06:57.063602 31970 net.cpp:270] This network produces output rpn_loss_twin
I0421 19:06:57.063637 31970 net.cpp:283] Network initialization done.
I0421 19:06:57.063773 31970 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0421 19:06:59.756323 31970 net.cpp:761] Ignoring source layer pool5
I0421 19:06:59.778972 31970 net.cpp:761] Ignoring source layer fc7
I0421 19:06:59.778993 31970 net.cpp:761] Ignoring source layer relu7
I0421 19:06:59.778997 31970 net.cpp:761] Ignoring source layer drop7
I0421 19:06:59.779000 31970 net.cpp:761] Ignoring source layer fc8-200
I0421 19:06:59.779004 31970 net.cpp:761] Ignoring source layer loss
Solving...
rpn: num_positive 6
rpn: num_negative 58
I0421 19:07:03.795835 31970 accuracy_layer.cpp:96] Accuracy: 0.296875
I0421 19:07:03.795859 31970 accuracy_layer.cpp:101] Class 0 accuracy : 0.275862
I0421 19:07:03.795863 31970 accuracy_layer.cpp:101] Class 1 accuracy : 0.5
TRAIN
num fg: 8
num bg: 20
('accuracy: ', 0.0)
I0421 19:07:03.856279 31970 solver.cpp:228] Iteration 0, loss = 165.527
I0421 19:07:03.856355 31970 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 19:07:03.856376 31970 solver.cpp:244]     Train net output #1: loss_cls = 164.779 (* 1 = 164.779 loss)
I0421 19:07:03.856395 31970 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 19:07:03.856405 31970 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.296875
I0421 19:07:03.856415 31970 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.275862
I0421 19:07:03.856425 31970 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.5
I0421 19:07:03.856436 31970 solver.cpp:244]     Train net output #6: rpn_cls_loss = 0.730293 (* 1 = 0.730293 loss)
I0421 19:07:03.856448 31970 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.0174326 (* 1 = 0.0174326 loss)
I0421 19:07:03.856469 31970 sgd_solver.cpp:106] Iteration 0, lr = 0.0001
rpn: num_positive 6
rpn: num_negative 58
I0421 19:07:08.526125 31970 accuracy_layer.cpp:96] Accuracy: 0.671875
I0421 19:07:08.526151 31970 accuracy_layer.cpp:101] Class 0 accuracy : 0.689655
I0421 19:07:08.526155 31970 accuracy_layer.cpp:101] Class 1 accuracy : 0.5
TRAIN
num fg: 11
num bg: 25
('accuracy: ', 0.0)
I0421 19:07:08.547679 31970 solver.cpp:228] Iteration 1, loss = 145.761
I0421 19:07:08.547699 31970 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 19:07:08.547708 31970 solver.cpp:244]     Train net output #1: loss_cls = 145.056 (* 1 = 145.056 loss)
I0421 19:07:08.547713 31970 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 19:07:08.547718 31970 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.671875
I0421 19:07:08.547721 31970 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.689655
I0421 19:07:08.547725 31970 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.5
I0421 19:07:08.547730 31970 solver.cpp:244]     Train net output #6: rpn_cls_loss = 0.683361 (* 1 = 0.683361 loss)
I0421 19:07:08.547735 31970 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.0218582 (* 1 = 0.0218582 loss)
I0421 19:07:08.547740 31970 sgd_solver.cpp:106] Iteration 1, lr = 0.0001
rpn: num_positive 6
rpn: num_negative 58
I0421 19:07:13.062463 31970 accuracy_layer.cpp:96] Accuracy: 0.5
I0421 19:07:13.062484 31970 accuracy_layer.cpp:101] Class 0 accuracy : 0.465517
I0421 19:07:13.062489 31970 accuracy_layer.cpp:101] Class 1 accuracy : 0.833333
TRAIN
num fg: 11
num bg: 24
('accuracy: ', 0.0)
I0421 19:07:13.121161 31970 solver.cpp:228] Iteration 2, loss = 125.079
I0421 19:07:13.121186 31970 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 19:07:13.121194 31970 solver.cpp:244]     Train net output #1: loss_cls = 124.359 (* 1 = 124.359 loss)
I0421 19:07:13.121199 31970 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 19:07:13.121206 31970 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.5
I0421 19:07:13.121210 31970 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.465517
I0421 19:07:13.121214 31970 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.833333
I0421 19:07:13.121219 31970 solver.cpp:244]     Train net output #6: rpn_cls_loss = 0.689827 (* 1 = 0.689827 loss)
I0421 19:07:13.121224 31970 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.0302918 (* 1 = 0.0302918 loss)
I0421 19:07:13.121230 31970 sgd_solver.cpp:106] Iteration 2, lr = 0.0001
rpn: num_positive 6
rpn: num_negative 58
I0421 19:07:17.856967 31970 accuracy_layer.cpp:96] Accuracy: 0.4375
I0421 19:07:17.856992 31970 accuracy_layer.cpp:101] Class 0 accuracy : 0.431034
I0421 19:07:17.856997 31970 accuracy_layer.cpp:101] Class 1 accuracy : 0.5
TRAIN
num fg: 10
num bg: 26
('accuracy: ', 0.0)
I0421 19:07:17.877092 31970 solver.cpp:228] Iteration 3, loss = 96.5295
I0421 19:07:17.877112 31970 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 19:07:17.877120 31970 solver.cpp:244]     Train net output #1: loss_cls = 95.8045 (* 1 = 95.8045 loss)
I0421 19:07:17.877125 31970 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 19:07:17.877131 31970 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.4375
I0421 19:07:17.877136 31970 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.431034
I0421 19:07:17.877140 31970 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.5
I0421 19:07:17.877144 31970 solver.cpp:244]     Train net output #6: rpn_cls_loss = 0.698976 (* 1 = 0.698976 loss)
I0421 19:07:17.877149 31970 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.0260679 (* 1 = 0.0260679 loss)
I0421 19:07:17.877156 31970 sgd_solver.cpp:106] Iteration 3, lr = 0.0001
rpn: num_positive 6
rpn: num_negative 58
I0421 19:07:22.489011 31970 accuracy_layer.cpp:96] Accuracy: 0.53125
I0421 19:07:22.489032 31970 accuracy_layer.cpp:101] Class 0 accuracy : 0.517241
I0421 19:07:22.489037 31970 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
num fg: 10
num bg: 25
('accuracy: ', 0.0)
I0421 19:07:22.506029 31970 solver.cpp:228] Iteration 4, loss = 44.9205
I0421 19:07:22.506059 31970 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 19:07:22.506067 31970 solver.cpp:244]     Train net output #1: loss_cls = 44.1957 (* 1 = 44.1957 loss)
I0421 19:07:22.506073 31970 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 19:07:22.506078 31970 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.53125
I0421 19:07:22.506081 31970 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.517241
I0421 19:07:22.506085 31970 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.666667
I0421 19:07:22.506089 31970 solver.cpp:244]     Train net output #6: rpn_cls_loss = 0.682719 (* 1 = 0.682719 loss)
I0421 19:07:22.506094 31970 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.0420466 (* 1 = 0.0420466 loss)
I0421 19:07:22.506100 31970 sgd_solver.cpp:106] Iteration 4, lr = 0.0001
rpn: num_positive 1
rpn: num_negative 63
I0421 19:07:27.227938 31970 accuracy_layer.cpp:96] Accuracy: 0.46875
I0421 19:07:27.227962 31970 accuracy_layer.cpp:101] Class 0 accuracy : 0.47619
I0421 19:07:27.227967 31970 accuracy_layer.cpp:101] Class 1 accuracy : 0
TRAIN
num fg: 2
num bg: 17
('accuracy: ', 0.0)
I0421 19:07:27.244184 31970 solver.cpp:228] Iteration 5, loss = 6.61927
I0421 19:07:27.244202 31970 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 19:07:27.244210 31970 solver.cpp:244]     Train net output #1: loss_cls = 5.47893 (* 1 = 5.47893 loss)
I0421 19:07:27.244216 31970 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 19:07:27.244220 31970 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.46875
I0421 19:07:27.244225 31970 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.47619
I0421 19:07:27.244227 31970 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0
I0421 19:07:27.244232 31970 solver.cpp:244]     Train net output #6: rpn_cls_loss = 1.11299 (* 1 = 1.11299 loss)
I0421 19:07:27.244240 31970 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.027348 (* 1 = 0.027348 loss)
I0421 19:07:27.244246 31970 sgd_solver.cpp:106] Iteration 5, lr = 0.0001
rpn: num_positive 6
rpn: num_negative 58
I0421 19:07:31.858709 31970 accuracy_layer.cpp:96] Accuracy: 0.59375
I0421 19:07:31.858733 31970 accuracy_layer.cpp:101] Class 0 accuracy : 0.603448
I0421 19:07:31.858737 31970 accuracy_layer.cpp:101] Class 1 accuracy : 0.5
TRAIN
num fg: 5
num bg: 16
('accuracy: ', 0.0)
I0421 19:07:31.873822 31970 solver.cpp:228] Iteration 6, loss = 15.471
I0421 19:07:31.873848 31970 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 19:07:31.873857 31970 solver.cpp:244]     Train net output #1: loss_cls = 11.7584 (* 1 = 11.7584 loss)
I0421 19:07:31.873862 31970 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 19:07:31.873867 31970 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.59375
I0421 19:07:31.873870 31970 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.603448
I0421 19:07:31.873874 31970 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.5
I0421 19:07:31.873878 31970 solver.cpp:244]     Train net output #6: rpn_cls_loss = 2.83126 (* 1 = 2.83126 loss)
I0421 19:07:31.873883 31970 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.881354 (* 1 = 0.881354 loss)
I0421 19:07:31.873889 31970 sgd_solver.cpp:106] Iteration 6, lr = 0.0001
rpn: num_positive 4
rpn: num_negative 60
I0421 19:07:36.748075 31970 accuracy_layer.cpp:96] Accuracy: 0.640625
I0421 19:07:36.748097 31970 accuracy_layer.cpp:101] Class 0 accuracy : 0.65
I0421 19:07:36.748101 31970 accuracy_layer.cpp:101] Class 1 accuracy : 0.5
TRAIN
num fg: 8
num bg: 21
('accuracy: ', 0.0)
I0421 19:07:36.767176 31970 solver.cpp:228] Iteration 7, loss = 49.2862
I0421 19:07:36.767201 31970 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 19:07:36.767210 31970 solver.cpp:244]     Train net output #1: loss_cls = 46.5302 (* 1 = 46.5302 loss)
I0421 19:07:36.767217 31970 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 19:07:36.767221 31970 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.640625
I0421 19:07:36.767225 31970 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.65
I0421 19:07:36.767228 31970 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.5
I0421 19:07:36.767233 31970 solver.cpp:244]     Train net output #6: rpn_cls_loss = 2.27857 (* 1 = 2.27857 loss)
I0421 19:07:36.767238 31970 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.477387 (* 1 = 0.477387 loss)
I0421 19:07:36.767243 31970 sgd_solver.cpp:106] Iteration 7, lr = 0.0001
rpn: num_positive 6
rpn: num_negative 58
I0421 19:07:41.564222 31970 accuracy_layer.cpp:96] Accuracy: 0.8125
I0421 19:07:41.564244 31970 accuracy_layer.cpp:101] Class 0 accuracy : 0.844828
I0421 19:07:41.564249 31970 accuracy_layer.cpp:101] Class 1 accuracy : 0.5
TRAIN
num fg: 7
num bg: 18
('accuracy: ', 0.0)
I0421 19:07:41.583595 31970 solver.cpp:228] Iteration 8, loss = 78.7835
I0421 19:07:41.583614 31970 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 19:07:41.583622 31970 solver.cpp:244]     Train net output #1: loss_cls = 77.6106 (* 1 = 77.6106 loss)
I0421 19:07:41.583628 31970 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 19:07:41.583633 31970 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.8125
I0421 19:07:41.583637 31970 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.844828
I0421 19:07:41.583642 31970 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.5
I0421 19:07:41.583647 31970 solver.cpp:244]     Train net output #6: rpn_cls_loss = 0.739595 (* 1 = 0.739595 loss)
I0421 19:07:41.583652 31970 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.433384 (* 1 = 0.433384 loss)
I0421 19:07:41.583657 31970 sgd_solver.cpp:106] Iteration 8, lr = 0.0001
rpn: num_positive 6
rpn: num_negative 58
I0421 19:07:46.546583 31970 accuracy_layer.cpp:96] Accuracy: 0.71875
I0421 19:07:46.546605 31970 accuracy_layer.cpp:101] Class 0 accuracy : 0.724138
I0421 19:07:46.546609 31970 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
num fg: 8
num bg: 30
('accuracy: ', 0.0)
I0421 19:07:46.578536 31970 solver.cpp:228] Iteration 9, loss = 7.45888
I0421 19:07:46.578557 31970 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 19:07:46.578567 31970 solver.cpp:244]     Train net output #1: loss_cls = 6.87552 (* 1 = 6.87552 loss)
I0421 19:07:46.578572 31970 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 19:07:46.578575 31970 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.71875
I0421 19:07:46.578579 31970 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.724138
I0421 19:07:46.578583 31970 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0.666667
I0421 19:07:46.578589 31970 solver.cpp:244]     Train net output #6: rpn_cls_loss = 0.514342 (* 1 = 0.514342 loss)
I0421 19:07:46.578595 31970 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.0690234 (* 1 = 0.0690234 loss)
I0421 19:07:46.578600 31970 sgd_solver.cpp:106] Iteration 9, lr = 0.0001
speed: 4.678s / iter
rpn: num_positive 1
rpn: num_negative 63
I0421 19:07:51.279777 31970 accuracy_layer.cpp:96] Accuracy: 0.515625
I0421 19:07:51.279799 31970 accuracy_layer.cpp:101] Class 0 accuracy : 0.52381
I0421 19:07:51.279804 31970 accuracy_layer.cpp:101] Class 1 accuracy : 0
TRAIN
num fg: 5
num bg: 9
('accuracy: ', 0.0)
I0421 19:07:51.332657 31970 solver.cpp:228] Iteration 10, loss = 9.65455
I0421 19:07:51.332676 31970 solver.cpp:244]     Train net output #0: accuracy = 0
I0421 19:07:51.332684 31970 solver.cpp:244]     Train net output #1: loss_cls = 8.98489 (* 1 = 8.98489 loss)
I0421 19:07:51.332690 31970 solver.cpp:244]     Train net output #2: loss_twin = 0 (* 1 = 0 loss)
I0421 19:07:51.332693 31970 solver.cpp:244]     Train net output #3: rpn_accuarcy = 0.515625
I0421 19:07:51.332697 31970 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.52381
I0421 19:07:51.332701 31970 solver.cpp:244]     Train net output #5: rpn_accuarcy_class = 0
I0421 19:07:51.332706 31970 solver.cpp:244]     Train net output #6: rpn_cls_loss = 0.661221 (* 1 = 0.661221 loss)
I0421 19:07:51.332711 31970 solver.cpp:244]     Train net output #7: rpn_loss_twin = 0.0084349 (* 1 = 0.0084349 loss)
I0421 19:07:51.332717 31970 sgd_solver.cpp:106] Iteration 10, lr = 0.0001
