Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 01:26:10.163355 16909 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 01:26:10.163391 16909 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 01:26:10.164018 16909 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 01:26:10.164937 16909 layer_factory.hpp:77] Creating layer data
I0412 01:26:10.176769 16909 net.cpp:100] Creating Layer data
I0412 01:26:10.176797 16909 net.cpp:408] data -> data
I0412 01:26:10.176810 16909 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 01:26:10.186379 16909 net.cpp:150] Setting up data
I0412 01:26:10.186430 16909 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:26:10.186452 16909 net.cpp:157] Top shape: 1 3 (3)
I0412 01:26:10.186480 16909 net.cpp:165] Memory required for data: 115605516
I0412 01:26:10.186499 16909 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 01:26:10.186533 16909 net.cpp:100] Creating Layer data_data_0_split
I0412 01:26:10.186559 16909 net.cpp:434] data_data_0_split <- data
I0412 01:26:10.186586 16909 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 01:26:10.186624 16909 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 01:26:10.186722 16909 net.cpp:150] Setting up data_data_0_split
I0412 01:26:10.186736 16909 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:26:10.186743 16909 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:26:10.186748 16909 net.cpp:165] Memory required for data: 346816524
I0412 01:26:10.186755 16909 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 01:26:10.186766 16909 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 01:26:10.186771 16909 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 01:26:10.186782 16909 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 01:26:10.186794 16909 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 01:26:10.186863 16909 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 01:26:10.186894 16909 net.cpp:157] Top shape: 1 3 (3)
I0412 01:26:10.186929 16909 net.cpp:157] Top shape: 1 3 (3)
I0412 01:26:10.186949 16909 net.cpp:165] Memory required for data: 346816548
I0412 01:26:10.186975 16909 layer_factory.hpp:77] Creating layer conv1a
I0412 01:26:10.187011 16909 net.cpp:100] Creating Layer conv1a
I0412 01:26:10.187031 16909 net.cpp:434] conv1a <- data_data_0_split_0
I0412 01:26:10.187063 16909 net.cpp:408] conv1a -> conv1a
I0412 01:26:10.209448 16909 net.cpp:150] Setting up conv1a
I0412 01:26:10.209481 16909 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 01:26:10.209486 16909 net.cpp:165] Memory required for data: 2813067300
I0412 01:26:10.209504 16909 layer_factory.hpp:77] Creating layer relu1a
I0412 01:26:10.209527 16909 net.cpp:100] Creating Layer relu1a
I0412 01:26:10.209532 16909 net.cpp:434] relu1a <- conv1a
I0412 01:26:10.209539 16909 net.cpp:395] relu1a -> conv1a (in-place)
I0412 01:26:10.209553 16909 net.cpp:150] Setting up relu1a
I0412 01:26:10.209560 16909 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 01:26:10.209564 16909 net.cpp:165] Memory required for data: 5279318052
I0412 01:26:10.209568 16909 layer_factory.hpp:77] Creating layer pool1
I0412 01:26:10.209595 16909 net.cpp:100] Creating Layer pool1
I0412 01:26:10.209601 16909 net.cpp:434] pool1 <- conv1a
I0412 01:26:10.209609 16909 net.cpp:408] pool1 -> pool1
I0412 01:26:10.209717 16909 net.cpp:150] Setting up pool1
I0412 01:26:10.209725 16909 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 01:26:10.209729 16909 net.cpp:165] Memory required for data: 5895880740
I0412 01:26:10.209734 16909 layer_factory.hpp:77] Creating layer conv2a
I0412 01:26:10.209750 16909 net.cpp:100] Creating Layer conv2a
I0412 01:26:10.209755 16909 net.cpp:434] conv2a <- pool1
I0412 01:26:10.209764 16909 net.cpp:408] conv2a -> conv2a
I0412 01:26:10.218610 16909 net.cpp:150] Setting up conv2a
I0412 01:26:10.218641 16909 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 01:26:10.218647 16909 net.cpp:165] Memory required for data: 7129006116
I0412 01:26:10.218664 16909 layer_factory.hpp:77] Creating layer relu2a
I0412 01:26:10.218680 16909 net.cpp:100] Creating Layer relu2a
I0412 01:26:10.218686 16909 net.cpp:434] relu2a <- conv2a
I0412 01:26:10.218694 16909 net.cpp:395] relu2a -> conv2a (in-place)
I0412 01:26:10.218708 16909 net.cpp:150] Setting up relu2a
I0412 01:26:10.218713 16909 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 01:26:10.218717 16909 net.cpp:165] Memory required for data: 8362131492
I0412 01:26:10.218721 16909 layer_factory.hpp:77] Creating layer pool2
I0412 01:26:10.218734 16909 net.cpp:100] Creating Layer pool2
I0412 01:26:10.218740 16909 net.cpp:434] pool2 <- conv2a
I0412 01:26:10.218753 16909 net.cpp:408] pool2 -> pool2
I0412 01:26:10.218865 16909 net.cpp:150] Setting up pool2
I0412 01:26:10.218874 16909 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 01:26:10.218878 16909 net.cpp:165] Memory required for data: 8516272164
I0412 01:26:10.218883 16909 layer_factory.hpp:77] Creating layer conv3a
I0412 01:26:10.218897 16909 net.cpp:100] Creating Layer conv3a
I0412 01:26:10.218904 16909 net.cpp:434] conv3a <- pool2
I0412 01:26:10.218912 16909 net.cpp:408] conv3a -> conv3a
I0412 01:26:10.228292 16909 net.cpp:150] Setting up conv3a
I0412 01:26:10.228353 16909 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:26:10.228359 16909 net.cpp:165] Memory required for data: 8824553508
I0412 01:26:10.228376 16909 layer_factory.hpp:77] Creating layer relu3a
I0412 01:26:10.228389 16909 net.cpp:100] Creating Layer relu3a
I0412 01:26:10.228394 16909 net.cpp:434] relu3a <- conv3a
I0412 01:26:10.228400 16909 net.cpp:395] relu3a -> conv3a (in-place)
I0412 01:26:10.228410 16909 net.cpp:150] Setting up relu3a
I0412 01:26:10.228415 16909 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:26:10.228420 16909 net.cpp:165] Memory required for data: 9132834852
I0412 01:26:10.228423 16909 layer_factory.hpp:77] Creating layer conv3b
I0412 01:26:10.228446 16909 net.cpp:100] Creating Layer conv3b
I0412 01:26:10.228451 16909 net.cpp:434] conv3b <- conv3a
I0412 01:26:10.228461 16909 net.cpp:408] conv3b -> conv3b
I0412 01:26:10.251929 16909 net.cpp:150] Setting up conv3b
I0412 01:26:10.251958 16909 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:26:10.251962 16909 net.cpp:165] Memory required for data: 9441116196
I0412 01:26:10.251976 16909 layer_factory.hpp:77] Creating layer relu3b
I0412 01:26:10.251988 16909 net.cpp:100] Creating Layer relu3b
I0412 01:26:10.251993 16909 net.cpp:434] relu3b <- conv3b
I0412 01:26:10.252004 16909 net.cpp:395] relu3b -> conv3b (in-place)
I0412 01:26:10.252017 16909 net.cpp:150] Setting up relu3b
I0412 01:26:10.252022 16909 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:26:10.252025 16909 net.cpp:165] Memory required for data: 9749397540
I0412 01:26:10.252028 16909 layer_factory.hpp:77] Creating layer pool3
I0412 01:26:10.252037 16909 net.cpp:100] Creating Layer pool3
I0412 01:26:10.252041 16909 net.cpp:434] pool3 <- conv3b
I0412 01:26:10.252058 16909 net.cpp:408] pool3 -> pool3
I0412 01:26:10.252164 16909 net.cpp:150] Setting up pool3
I0412 01:26:10.252193 16909 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 01:26:10.252212 16909 net.cpp:165] Memory required for data: 9787932708
I0412 01:26:10.252226 16909 layer_factory.hpp:77] Creating layer conv4a
I0412 01:26:10.252269 16909 net.cpp:100] Creating Layer conv4a
I0412 01:26:10.252297 16909 net.cpp:434] conv4a <- pool3
I0412 01:26:10.252318 16909 net.cpp:408] conv4a -> conv4a
I0412 01:26:10.314739 16909 net.cpp:150] Setting up conv4a
I0412 01:26:10.314764 16909 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:26:10.314767 16909 net.cpp:165] Memory required for data: 9865003044
I0412 01:26:10.314785 16909 layer_factory.hpp:77] Creating layer relu4a
I0412 01:26:10.314797 16909 net.cpp:100] Creating Layer relu4a
I0412 01:26:10.314803 16909 net.cpp:434] relu4a <- conv4a
I0412 01:26:10.314811 16909 net.cpp:395] relu4a -> conv4a (in-place)
I0412 01:26:10.314821 16909 net.cpp:150] Setting up relu4a
I0412 01:26:10.314827 16909 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:26:10.314829 16909 net.cpp:165] Memory required for data: 9942073380
I0412 01:26:10.314832 16909 layer_factory.hpp:77] Creating layer conv4b
I0412 01:26:10.314846 16909 net.cpp:100] Creating Layer conv4b
I0412 01:26:10.314864 16909 net.cpp:434] conv4b <- conv4a
I0412 01:26:10.314873 16909 net.cpp:408] conv4b -> conv4b
I0412 01:26:10.375058 16909 net.cpp:150] Setting up conv4b
I0412 01:26:10.375087 16909 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:26:10.375090 16909 net.cpp:165] Memory required for data: 10019143716
I0412 01:26:10.375098 16909 layer_factory.hpp:77] Creating layer relu4b
I0412 01:26:10.375108 16909 net.cpp:100] Creating Layer relu4b
I0412 01:26:10.375113 16909 net.cpp:434] relu4b <- conv4b
I0412 01:26:10.375120 16909 net.cpp:395] relu4b -> conv4b (in-place)
I0412 01:26:10.375128 16909 net.cpp:150] Setting up relu4b
I0412 01:26:10.375133 16909 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:26:10.375136 16909 net.cpp:165] Memory required for data: 10096214052
I0412 01:26:10.375138 16909 layer_factory.hpp:77] Creating layer pool4
I0412 01:26:10.375144 16909 net.cpp:100] Creating Layer pool4
I0412 01:26:10.375147 16909 net.cpp:434] pool4 <- conv4b
I0412 01:26:10.375154 16909 net.cpp:408] pool4 -> pool4
I0412 01:26:10.375208 16909 net.cpp:150] Setting up pool4
I0412 01:26:10.375219 16909 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:26:10.375223 16909 net.cpp:165] Memory required for data: 10105847844
I0412 01:26:10.375227 16909 layer_factory.hpp:77] Creating layer conv5a
I0412 01:26:10.375236 16909 net.cpp:100] Creating Layer conv5a
I0412 01:26:10.375241 16909 net.cpp:434] conv5a <- pool4
I0412 01:26:10.375247 16909 net.cpp:408] conv5a -> conv5a
I0412 01:26:10.448659 16909 net.cpp:150] Setting up conv5a
I0412 01:26:10.448726 16909 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:26:10.448742 16909 net.cpp:165] Memory required for data: 10115481636
I0412 01:26:10.448765 16909 layer_factory.hpp:77] Creating layer relu5a
I0412 01:26:10.448793 16909 net.cpp:100] Creating Layer relu5a
I0412 01:26:10.448812 16909 net.cpp:434] relu5a <- conv5a
I0412 01:26:10.448845 16909 net.cpp:395] relu5a -> conv5a (in-place)
I0412 01:26:10.448869 16909 net.cpp:150] Setting up relu5a
I0412 01:26:10.448890 16909 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:26:10.448905 16909 net.cpp:165] Memory required for data: 10125115428
I0412 01:26:10.448918 16909 layer_factory.hpp:77] Creating layer conv5b
I0412 01:26:10.448946 16909 net.cpp:100] Creating Layer conv5b
I0412 01:26:10.448962 16909 net.cpp:434] conv5b <- conv5a
I0412 01:26:10.448978 16909 net.cpp:408] conv5b -> conv5b
I0412 01:26:10.530812 16909 net.cpp:150] Setting up conv5b
I0412 01:26:10.530849 16909 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:26:10.530854 16909 net.cpp:165] Memory required for data: 10134749220
I0412 01:26:10.530864 16909 layer_factory.hpp:77] Creating layer relu5b
I0412 01:26:10.530877 16909 net.cpp:100] Creating Layer relu5b
I0412 01:26:10.530882 16909 net.cpp:434] relu5b <- conv5b
I0412 01:26:10.530890 16909 net.cpp:395] relu5b -> conv5b (in-place)
I0412 01:26:10.530900 16909 net.cpp:150] Setting up relu5b
I0412 01:26:10.530905 16909 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:26:10.530908 16909 net.cpp:165] Memory required for data: 10144383012
I0412 01:26:10.530911 16909 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 01:26:10.530920 16909 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 01:26:10.530925 16909 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 01:26:10.530930 16909 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 01:26:10.530946 16909 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 01:26:10.531008 16909 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 01:26:10.531034 16909 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:26:10.531062 16909 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:26:10.531071 16909 net.cpp:165] Memory required for data: 10163650596
I0412 01:26:10.531075 16909 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 01:26:10.531091 16909 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 01:26:10.531119 16909 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 01:26:10.531143 16909 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 01:26:10.595536 16909 net.cpp:150] Setting up rpn_conv/3x3
I0412 01:26:10.595561 16909 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 01:26:10.595566 16909 net.cpp:165] Memory required for data: 10166796324
I0412 01:26:10.595584 16909 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 01:26:10.595597 16909 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 01:26:10.595602 16909 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 01:26:10.595609 16909 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 01:26:10.595619 16909 net.cpp:150] Setting up rpn_relu/3x3
I0412 01:26:10.595624 16909 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 01:26:10.595628 16909 net.cpp:165] Memory required for data: 10169942052
I0412 01:26:10.595631 16909 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 01:26:10.595649 16909 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 01:26:10.595654 16909 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 01:26:10.595664 16909 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 01:26:10.671702 16909 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 01:26:10.671738 16909 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 01:26:10.671743 16909 net.cpp:165] Memory required for data: 10170728484
I0412 01:26:10.671757 16909 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 01:26:10.671769 16909 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 01:26:10.671777 16909 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 01:26:10.671783 16909 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 01:26:10.671795 16909 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 01:26:10.671803 16909 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 01:26:10.671813 16909 net.cpp:165] Memory required for data: 10171514916
I0412 01:26:10.671818 16909 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 01:26:10.671842 16909 net.cpp:100] Creating Layer rpn/output_pool
I0412 01:26:10.671850 16909 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 01:26:10.671857 16909 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 01:26:10.671927 16909 net.cpp:150] Setting up rpn/output_pool
I0412 01:26:10.671937 16909 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:26:10.671942 16909 net.cpp:165] Memory required for data: 10171711524
I0412 01:26:10.671949 16909 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 01:26:10.671970 16909 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 01:26:10.671977 16909 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 01:26:10.671984 16909 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 01:26:10.671995 16909 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 01:26:10.672052 16909 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 01:26:10.672066 16909 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:26:10.672073 16909 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:26:10.672077 16909 net.cpp:165] Memory required for data: 10172104740
I0412 01:26:10.672081 16909 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 01:26:10.672094 16909 net.cpp:100] Creating Layer rpn_cls_score
I0412 01:26:10.672125 16909 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 01:26:10.672138 16909 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 01:26:10.672955 16909 net.cpp:150] Setting up rpn_cls_score
I0412 01:26:10.672967 16909 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:26:10.672976 16909 net.cpp:165] Memory required for data: 10172133156
I0412 01:26:10.672986 16909 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 01:26:10.672996 16909 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 01:26:10.673002 16909 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 01:26:10.673013 16909 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 01:26:10.673025 16909 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 01:26:10.673099 16909 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 01:26:10.673110 16909 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:26:10.673116 16909 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:26:10.673121 16909 net.cpp:165] Memory required for data: 10172189988
I0412 01:26:10.673125 16909 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 01:26:10.673141 16909 net.cpp:100] Creating Layer rpn_twin_pred
I0412 01:26:10.673146 16909 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 01:26:10.673154 16909 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 01:26:10.673926 16909 net.cpp:150] Setting up rpn_twin_pred
I0412 01:26:10.673940 16909 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:26:10.673945 16909 net.cpp:165] Memory required for data: 10172218404
I0412 01:26:10.673954 16909 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:26:10.673962 16909 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:26:10.673967 16909 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 01:26:10.673979 16909 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 01:26:10.673987 16909 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 01:26:10.674079 16909 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:26:10.674090 16909 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:26:10.674096 16909 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:26:10.674099 16909 net.cpp:165] Memory required for data: 10172275236
I0412 01:26:10.674103 16909 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 01:26:10.674113 16909 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 01:26:10.674119 16909 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 01:26:10.674127 16909 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 01:26:10.674167 16909 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 01:26:10.674176 16909 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:26:10.674180 16909 net.cpp:165] Memory required for data: 10172303652
I0412 01:26:10.674187 16909 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:26:10.674196 16909 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:26:10.674203 16909 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 01:26:10.674209 16909 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 01:26:10.674226 16909 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 01:26:10.674252 16909 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 01:26:10.674357 16909 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:26:10.674371 16909 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:26:10.674376 16909 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:26:10.674382 16909 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:26:10.674386 16909 net.cpp:165] Memory required for data: 10172388900
I0412 01:26:10.674389 16909 layer_factory.hpp:77] Creating layer rpn-data
I0412 01:26:10.674861 16909 net.cpp:100] Creating Layer rpn-data
I0412 01:26:10.674875 16909 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 01:26:10.674883 16909 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 01:26:10.674893 16909 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 01:26:10.674906 16909 net.cpp:408] rpn-data -> rpn_labels
I0412 01:26:10.674932 16909 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 01:26:10.674947 16909 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 01:26:10.674959 16909 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 01:26:10.677543 16909 net.cpp:150] Setting up rpn-data
I0412 01:26:10.677562 16909 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:26:10.677565 16909 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:26:10.677569 16909 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:26:10.677573 16909 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:26:10.677577 16909 net.cpp:165] Memory required for data: 10172488356
I0412 01:26:10.677579 16909 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 01:26:10.677587 16909 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 01:26:10.677592 16909 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 01:26:10.677597 16909 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 01:26:10.677604 16909 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 01:26:10.677651 16909 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 01:26:10.677659 16909 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:26:10.677669 16909 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:26:10.677670 16909 net.cpp:165] Memory required for data: 10172516772
I0412 01:26:10.677673 16909 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 01:26:10.677680 16909 net.cpp:100] Creating Layer rpn_loss_cls
I0412 01:26:10.677685 16909 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 01:26:10.677690 16909 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 01:26:10.677695 16909 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 01:26:10.677702 16909 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 01:26:10.677826 16909 net.cpp:150] Setting up rpn_loss_cls
I0412 01:26:10.677834 16909 net.cpp:157] Top shape: (1)
I0412 01:26:10.677839 16909 net.cpp:160]     with loss weight 1
I0412 01:26:10.677851 16909 net.cpp:165] Memory required for data: 10172516776
I0412 01:26:10.677855 16909 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 01:26:10.677865 16909 net.cpp:100] Creating Layer rpn_loss_twin
I0412 01:26:10.677877 16909 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 01:26:10.677891 16909 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 01:26:10.677897 16909 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 01:26:10.677902 16909 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 01:26:10.677911 16909 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 01:26:10.678016 16909 net.cpp:150] Setting up rpn_loss_twin
I0412 01:26:10.678023 16909 net.cpp:157] Top shape: (1)
I0412 01:26:10.678027 16909 net.cpp:160]     with loss weight 1
I0412 01:26:10.678033 16909 net.cpp:165] Memory required for data: 10172516780
I0412 01:26:10.678038 16909 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 01:26:10.678047 16909 net.cpp:100] Creating Layer rpn_accuarcy
I0412 01:26:10.678052 16909 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 01:26:10.678066 16909 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 01:26:10.678078 16909 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 01:26:10.678089 16909 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 01:26:10.678140 16909 net.cpp:150] Setting up rpn_accuarcy
I0412 01:26:10.678148 16909 net.cpp:157] Top shape: (1)
I0412 01:26:10.678153 16909 net.cpp:157] Top shape: 2 (2)
I0412 01:26:10.678156 16909 net.cpp:165] Memory required for data: 10172516792
I0412 01:26:10.678160 16909 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 01:26:10.678169 16909 net.cpp:100] Creating Layer rpn_cls_prob
I0412 01:26:10.678174 16909 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 01:26:10.678181 16909 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 01:26:10.678261 16909 net.cpp:150] Setting up rpn_cls_prob
I0412 01:26:10.678267 16909 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:26:10.678272 16909 net.cpp:165] Memory required for data: 10172545208
I0412 01:26:10.678277 16909 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 01:26:10.678288 16909 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 01:26:10.678293 16909 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 01:26:10.678305 16909 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 01:26:10.678342 16909 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 01:26:10.678349 16909 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:26:10.678354 16909 net.cpp:165] Memory required for data: 10172573624
I0412 01:26:10.678359 16909 layer_factory.hpp:77] Creating layer proposal
I0412 01:26:10.678923 16909 net.cpp:100] Creating Layer proposal
I0412 01:26:10.678934 16909 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 01:26:10.678941 16909 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 01:26:10.678951 16909 net.cpp:408] proposal -> rpn_rois
I0412 01:26:10.682785 16909 net.cpp:150] Setting up proposal
I0412 01:26:10.682799 16909 net.cpp:157] Top shape: 1 3 (3)
I0412 01:26:10.682804 16909 net.cpp:165] Memory required for data: 10172573636
I0412 01:26:10.682809 16909 layer_factory.hpp:77] Creating layer roi-data
I0412 01:26:10.682951 16909 net.cpp:100] Creating Layer roi-data
I0412 01:26:10.682961 16909 net.cpp:434] roi-data <- rpn_rois
I0412 01:26:10.682967 16909 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 01:26:10.682976 16909 net.cpp:408] roi-data -> rois
I0412 01:26:10.682987 16909 net.cpp:408] roi-data -> labels
I0412 01:26:10.682996 16909 net.cpp:408] roi-data -> twin_targets
I0412 01:26:10.683004 16909 net.cpp:408] roi-data -> twin_inside_weights
I0412 01:26:10.683012 16909 net.cpp:408] roi-data -> twin_outside_weights
I0412 01:26:10.683347 16909 net.cpp:150] Setting up roi-data
I0412 01:26:10.683358 16909 net.cpp:157] Top shape: 1 3 (3)
I0412 01:26:10.683364 16909 net.cpp:157] Top shape: 1 1 (1)
I0412 01:26:10.683370 16909 net.cpp:157] Top shape: 1 402 (402)
I0412 01:26:10.683378 16909 net.cpp:157] Top shape: 1 402 (402)
I0412 01:26:10.683383 16909 net.cpp:157] Top shape: 1 402 (402)
I0412 01:26:10.683390 16909 net.cpp:165] Memory required for data: 10172578476
I0412 01:26:10.683395 16909 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 01:26:10.683404 16909 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 01:26:10.683418 16909 net.cpp:434] labels_roi-data_1_split <- labels
I0412 01:26:10.683425 16909 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 01:26:10.683436 16909 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 01:26:10.683495 16909 net.cpp:150] Setting up labels_roi-data_1_split
I0412 01:26:10.683513 16909 net.cpp:157] Top shape: 1 1 (1)
I0412 01:26:10.683522 16909 net.cpp:157] Top shape: 1 1 (1)
I0412 01:26:10.683527 16909 net.cpp:165] Memory required for data: 10172578484
I0412 01:26:10.683531 16909 layer_factory.hpp:77] Creating layer roi_pool5
I0412 01:26:10.683539 16909 net.cpp:100] Creating Layer roi_pool5
I0412 01:26:10.683569 16909 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 01:26:10.683580 16909 net.cpp:434] roi_pool5 <- rois
I0412 01:26:10.683586 16909 net.cpp:408] roi_pool5 -> pool5
I0412 01:26:10.683598 16909 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 01:26:10.683614 16909 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 01:26:10.683681 16909 net.cpp:150] Setting up roi_pool5
I0412 01:26:10.683689 16909 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 01:26:10.683692 16909 net.cpp:165] Memory required for data: 10172611252
I0412 01:26:10.683696 16909 layer_factory.hpp:77] Creating layer fc6
I0412 01:26:10.683704 16909 net.cpp:100] Creating Layer fc6
I0412 01:26:10.683708 16909 net.cpp:434] fc6 <- pool5
I0412 01:26:10.683715 16909 net.cpp:408] fc6 -> fc6
I0412 01:26:11.031371 16909 net.cpp:150] Setting up fc6
I0412 01:26:11.031453 16909 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:26:11.031476 16909 net.cpp:165] Memory required for data: 10172627636
I0412 01:26:11.031512 16909 layer_factory.hpp:77] Creating layer relu6
I0412 01:26:11.031563 16909 net.cpp:100] Creating Layer relu6
I0412 01:26:11.031589 16909 net.cpp:434] relu6 <- fc6
I0412 01:26:11.031622 16909 net.cpp:395] relu6 -> fc6 (in-place)
I0412 01:26:11.031662 16909 net.cpp:150] Setting up relu6
I0412 01:26:11.031687 16909 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:26:11.031708 16909 net.cpp:165] Memory required for data: 10172644020
I0412 01:26:11.031728 16909 layer_factory.hpp:77] Creating layer drop6
I0412 01:26:11.031754 16909 net.cpp:100] Creating Layer drop6
I0412 01:26:11.031774 16909 net.cpp:434] drop6 <- fc6
I0412 01:26:11.031805 16909 net.cpp:395] drop6 -> fc6 (in-place)
I0412 01:26:11.031878 16909 net.cpp:150] Setting up drop6
I0412 01:26:11.031909 16909 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:26:11.031970 16909 net.cpp:165] Memory required for data: 10172660404
I0412 01:26:11.032022 16909 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 01:26:11.032081 16909 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 01:26:11.032133 16909 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 01:26:11.032191 16909 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 01:26:11.032254 16909 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 01:26:11.032404 16909 net.cpp:150] Setting up fc6_drop6_0_split
I0412 01:26:11.032467 16909 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:26:11.032521 16909 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:26:11.032570 16909 net.cpp:165] Memory required for data: 10172693172
I0412 01:26:11.032624 16909 layer_factory.hpp:77] Creating layer cls_score
I0412 01:26:11.032681 16909 net.cpp:100] Creating Layer cls_score
I0412 01:26:11.032730 16909 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 01:26:11.032790 16909 net.cpp:408] cls_score -> cls_score
I0412 01:26:11.045295 16909 net.cpp:150] Setting up cls_score
I0412 01:26:11.045372 16909 net.cpp:157] Top shape: 1 201 (201)
I0412 01:26:11.045392 16909 net.cpp:165] Memory required for data: 10172693976
I0412 01:26:11.045428 16909 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 01:26:11.045457 16909 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 01:26:11.045495 16909 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 01:26:11.045526 16909 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 01:26:11.045557 16909 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 01:26:11.045661 16909 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 01:26:11.045689 16909 net.cpp:157] Top shape: 1 201 (201)
I0412 01:26:11.045711 16909 net.cpp:157] Top shape: 1 201 (201)
I0412 01:26:11.045732 16909 net.cpp:165] Memory required for data: 10172695584
I0412 01:26:11.045750 16909 layer_factory.hpp:77] Creating layer twin_pred
I0412 01:26:11.045786 16909 net.cpp:100] Creating Layer twin_pred
I0412 01:26:11.045809 16909 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 01:26:11.045842 16909 net.cpp:408] twin_pred -> twin_pred
I0412 01:26:11.068608 16909 net.cpp:150] Setting up twin_pred
I0412 01:26:11.068646 16909 net.cpp:157] Top shape: 1 402 (402)
I0412 01:26:11.068652 16909 net.cpp:165] Memory required for data: 10172697192
I0412 01:26:11.068666 16909 layer_factory.hpp:77] Creating layer loss_cls
I0412 01:26:11.068680 16909 net.cpp:100] Creating Layer loss_cls
I0412 01:26:11.068691 16909 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 01:26:11.068701 16909 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 01:26:11.068712 16909 net.cpp:408] loss_cls -> loss_cls
I0412 01:26:11.068737 16909 layer_factory.hpp:77] Creating layer loss_cls
I0412 01:26:11.068935 16909 net.cpp:150] Setting up loss_cls
I0412 01:26:11.068949 16909 net.cpp:157] Top shape: (1)
I0412 01:26:11.068956 16909 net.cpp:160]     with loss weight 1
I0412 01:26:11.068974 16909 net.cpp:165] Memory required for data: 10172697196
I0412 01:26:11.068982 16909 layer_factory.hpp:77] Creating layer loss_twin
I0412 01:26:11.068998 16909 net.cpp:100] Creating Layer loss_twin
I0412 01:26:11.069007 16909 net.cpp:434] loss_twin <- twin_pred
I0412 01:26:11.069013 16909 net.cpp:434] loss_twin <- twin_targets
I0412 01:26:11.069020 16909 net.cpp:434] loss_twin <- twin_inside_weights
I0412 01:26:11.069025 16909 net.cpp:434] loss_twin <- twin_outside_weights
I0412 01:26:11.069037 16909 net.cpp:408] loss_twin -> loss_twin
I0412 01:26:11.069221 16909 net.cpp:150] Setting up loss_twin
I0412 01:26:11.069236 16909 net.cpp:157] Top shape: (1)
I0412 01:26:11.069242 16909 net.cpp:160]     with loss weight 1
I0412 01:26:11.069252 16909 net.cpp:165] Memory required for data: 10172697200
I0412 01:26:11.069257 16909 layer_factory.hpp:77] Creating layer accuarcy
I0412 01:26:11.069270 16909 net.cpp:100] Creating Layer accuarcy
I0412 01:26:11.069281 16909 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 01:26:11.069293 16909 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 01:26:11.069303 16909 net.cpp:408] accuarcy -> accuarcy
I0412 01:26:11.069348 16909 net.cpp:150] Setting up accuarcy
I0412 01:26:11.069380 16909 net.cpp:157] Top shape: (1)
I0412 01:26:11.069401 16909 net.cpp:165] Memory required for data: 10172697204
I0412 01:26:11.069427 16909 net.cpp:228] accuarcy does not need backward computation.
I0412 01:26:11.069448 16909 net.cpp:226] loss_twin needs backward computation.
I0412 01:26:11.069474 16909 net.cpp:226] loss_cls needs backward computation.
I0412 01:26:11.069496 16909 net.cpp:226] twin_pred needs backward computation.
I0412 01:26:11.069515 16909 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 01:26:11.069545 16909 net.cpp:226] cls_score needs backward computation.
I0412 01:26:11.069561 16909 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 01:26:11.069583 16909 net.cpp:226] drop6 needs backward computation.
I0412 01:26:11.069602 16909 net.cpp:226] relu6 needs backward computation.
I0412 01:26:11.069628 16909 net.cpp:226] fc6 needs backward computation.
I0412 01:26:11.069648 16909 net.cpp:226] roi_pool5 needs backward computation.
I0412 01:26:11.069674 16909 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 01:26:11.069694 16909 net.cpp:226] roi-data needs backward computation.
I0412 01:26:11.069728 16909 net.cpp:226] proposal needs backward computation.
I0412 01:26:11.069751 16909 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 01:26:11.069777 16909 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 01:26:11.069798 16909 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 01:26:11.069823 16909 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 01:26:11.069844 16909 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 01:26:11.069875 16909 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 01:26:11.069896 16909 net.cpp:226] rpn-data needs backward computation.
I0412 01:26:11.069926 16909 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 01:26:11.069947 16909 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 01:26:11.069974 16909 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 01:26:11.069995 16909 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 01:26:11.070022 16909 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 01:26:11.070042 16909 net.cpp:226] rpn_cls_score needs backward computation.
I0412 01:26:11.070070 16909 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 01:26:11.070088 16909 net.cpp:226] rpn/output_pool needs backward computation.
I0412 01:26:11.070114 16909 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 01:26:11.070133 16909 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 01:26:11.070159 16909 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 01:26:11.070179 16909 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 01:26:11.070199 16909 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 01:26:11.070231 16909 net.cpp:226] relu5b needs backward computation.
I0412 01:26:11.070255 16909 net.cpp:226] conv5b needs backward computation.
I0412 01:26:11.070273 16909 net.cpp:226] relu5a needs backward computation.
I0412 01:26:11.070291 16909 net.cpp:226] conv5a needs backward computation.
I0412 01:26:11.070315 16909 net.cpp:226] pool4 needs backward computation.
I0412 01:26:11.070334 16909 net.cpp:226] relu4b needs backward computation.
I0412 01:26:11.070359 16909 net.cpp:226] conv4b needs backward computation.
I0412 01:26:11.070379 16909 net.cpp:226] relu4a needs backward computation.
I0412 01:26:11.070403 16909 net.cpp:226] conv4a needs backward computation.
I0412 01:26:11.070425 16909 net.cpp:226] pool3 needs backward computation.
I0412 01:26:11.070442 16909 net.cpp:226] relu3b needs backward computation.
I0412 01:26:11.070469 16909 net.cpp:226] conv3b needs backward computation.
I0412 01:26:11.070487 16909 net.cpp:226] relu3a needs backward computation.
I0412 01:26:11.070514 16909 net.cpp:226] conv3a needs backward computation.
I0412 01:26:11.070533 16909 net.cpp:228] pool2 does not need backward computation.
I0412 01:26:11.070561 16909 net.cpp:228] relu2a does not need backward computation.
I0412 01:26:11.070581 16909 net.cpp:228] conv2a does not need backward computation.
I0412 01:26:11.070611 16909 net.cpp:228] pool1 does not need backward computation.
I0412 01:26:11.070631 16909 net.cpp:228] relu1a does not need backward computation.
I0412 01:26:11.070657 16909 net.cpp:228] conv1a does not need backward computation.
I0412 01:26:11.070677 16909 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 01:26:11.070699 16909 net.cpp:228] data_data_0_split does not need backward computation.
I0412 01:26:11.070719 16909 net.cpp:228] data does not need backward computation.
I0412 01:26:11.070736 16909 net.cpp:270] This network produces output accuarcy
I0412 01:26:11.070762 16909 net.cpp:270] This network produces output loss_cls
I0412 01:26:11.070782 16909 net.cpp:270] This network produces output loss_twin
I0412 01:26:11.070808 16909 net.cpp:270] This network produces output rpn_accuarcy
I0412 01:26:11.070827 16909 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 01:26:11.070853 16909 net.cpp:270] This network produces output rpn_cls_loss
I0412 01:26:11.070873 16909 net.cpp:270] This network produces output rpn_loss_twin
I0412 01:26:11.070956 16909 net.cpp:283] Network initialization done.
I0412 01:26:11.071194 16909 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 01:26:11.267549 16909 net.cpp:761] Ignoring source layer pool5
I0412 01:26:11.294540 16909 net.cpp:761] Ignoring source layer fc7
I0412 01:26:11.294569 16909 net.cpp:761] Ignoring source layer relu7
I0412 01:26:11.294572 16909 net.cpp:761] Ignoring source layer drop7
I0412 01:26:11.294576 16909 net.cpp:761] Ignoring source layer fc8-200
I0412 01:26:11.294579 16909 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
99
(array([0]), array([97]))
(array([[3.1250000e-02, 3.8569803e+02]], dtype=float32), array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 0.]], dtype=float32))
(1, 101)
[[3.1250000e-02 3.8569803e+02]]
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 95, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 135, in forward
    print(np.concatenate(blob1, blob2))
TypeError: only integer scalar arrays can be converted to a scalar index
Terminating BlobFetcher
