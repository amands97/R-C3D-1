Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=0, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 0,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
print done
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}]
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 12:58:56.015067 21510 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 12:58:56.015106 21510 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 12:58:56.015663 21510 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 12:58:56.015934 21510 layer_factory.hpp:77] Creating layer data
I0412 12:58:56.027046 21510 net.cpp:100] Creating Layer data
I0412 12:58:56.027065 21510 net.cpp:408] data -> data
I0412 12:58:56.027077 21510 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 12:58:56.035809 21510 net.cpp:150] Setting up data
I0412 12:58:56.035830 21510 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 12:58:56.035836 21510 net.cpp:157] Top shape: 1 3 (3)
I0412 12:58:56.035840 21510 net.cpp:165] Memory required for data: 115605516
I0412 12:58:56.035847 21510 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 12:58:56.035861 21510 net.cpp:100] Creating Layer data_data_0_split
I0412 12:58:56.035867 21510 net.cpp:434] data_data_0_split <- data
I0412 12:58:56.035876 21510 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 12:58:56.035890 21510 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 12:58:56.035925 21510 net.cpp:150] Setting up data_data_0_split
I0412 12:58:56.035936 21510 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 12:58:56.035941 21510 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 12:58:56.035946 21510 net.cpp:165] Memory required for data: 346816524
I0412 12:58:56.035953 21510 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 12:58:56.035964 21510 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 12:58:56.035970 21510 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 12:58:56.035977 21510 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 12:58:56.035990 21510 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 12:58:56.036022 21510 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 12:58:56.036031 21510 net.cpp:157] Top shape: 1 3 (3)
I0412 12:58:56.036036 21510 net.cpp:157] Top shape: 1 3 (3)
I0412 12:58:56.036041 21510 net.cpp:165] Memory required for data: 346816548
I0412 12:58:56.036046 21510 layer_factory.hpp:77] Creating layer conv1a
I0412 12:58:56.036063 21510 net.cpp:100] Creating Layer conv1a
I0412 12:58:56.036068 21510 net.cpp:434] conv1a <- data_data_0_split_0
I0412 12:58:56.036077 21510 net.cpp:408] conv1a -> conv1a
I0412 12:58:56.054826 21510 net.cpp:150] Setting up conv1a
I0412 12:58:56.054862 21510 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 12:58:56.054867 21510 net.cpp:165] Memory required for data: 2813067300
I0412 12:58:56.054889 21510 layer_factory.hpp:77] Creating layer relu1a
I0412 12:58:56.054905 21510 net.cpp:100] Creating Layer relu1a
I0412 12:58:56.054911 21510 net.cpp:434] relu1a <- conv1a
I0412 12:58:56.054920 21510 net.cpp:395] relu1a -> conv1a (in-place)
I0412 12:58:56.054935 21510 net.cpp:150] Setting up relu1a
I0412 12:58:56.054944 21510 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 12:58:56.054946 21510 net.cpp:165] Memory required for data: 5279318052
I0412 12:58:56.054951 21510 layer_factory.hpp:77] Creating layer pool1
I0412 12:58:56.054962 21510 net.cpp:100] Creating Layer pool1
I0412 12:58:56.054991 21510 net.cpp:434] pool1 <- conv1a
I0412 12:58:56.054997 21510 net.cpp:408] pool1 -> pool1
I0412 12:58:56.055075 21510 net.cpp:150] Setting up pool1
I0412 12:58:56.055084 21510 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 12:58:56.055089 21510 net.cpp:165] Memory required for data: 5895880740
I0412 12:58:56.055094 21510 layer_factory.hpp:77] Creating layer conv2a
I0412 12:58:56.055109 21510 net.cpp:100] Creating Layer conv2a
I0412 12:58:56.055114 21510 net.cpp:434] conv2a <- pool1
I0412 12:58:56.055126 21510 net.cpp:408] conv2a -> conv2a
I0412 12:58:56.061851 21510 net.cpp:150] Setting up conv2a
I0412 12:58:56.061874 21510 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 12:58:56.061879 21510 net.cpp:165] Memory required for data: 7129006116
I0412 12:58:56.061895 21510 layer_factory.hpp:77] Creating layer relu2a
I0412 12:58:56.061910 21510 net.cpp:100] Creating Layer relu2a
I0412 12:58:56.061918 21510 net.cpp:434] relu2a <- conv2a
I0412 12:58:56.061925 21510 net.cpp:395] relu2a -> conv2a (in-place)
I0412 12:58:56.061938 21510 net.cpp:150] Setting up relu2a
I0412 12:58:56.061946 21510 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 12:58:56.061950 21510 net.cpp:165] Memory required for data: 8362131492
I0412 12:58:56.061954 21510 layer_factory.hpp:77] Creating layer pool2
I0412 12:58:56.061967 21510 net.cpp:100] Creating Layer pool2
I0412 12:58:56.061975 21510 net.cpp:434] pool2 <- conv2a
I0412 12:58:56.061980 21510 net.cpp:408] pool2 -> pool2
I0412 12:58:56.062041 21510 net.cpp:150] Setting up pool2
I0412 12:58:56.062052 21510 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 12:58:56.062055 21510 net.cpp:165] Memory required for data: 8516272164
I0412 12:58:56.062060 21510 layer_factory.hpp:77] Creating layer conv3a
I0412 12:58:56.062077 21510 net.cpp:100] Creating Layer conv3a
I0412 12:58:56.062083 21510 net.cpp:434] conv3a <- pool2
I0412 12:58:56.062091 21510 net.cpp:408] conv3a -> conv3a
I0412 12:58:56.070082 21510 net.cpp:150] Setting up conv3a
I0412 12:58:56.070102 21510 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 12:58:56.070107 21510 net.cpp:165] Memory required for data: 8824553508
I0412 12:58:56.070122 21510 layer_factory.hpp:77] Creating layer relu3a
I0412 12:58:56.070132 21510 net.cpp:100] Creating Layer relu3a
I0412 12:58:56.070137 21510 net.cpp:434] relu3a <- conv3a
I0412 12:58:56.070145 21510 net.cpp:395] relu3a -> conv3a (in-place)
I0412 12:58:56.070154 21510 net.cpp:150] Setting up relu3a
I0412 12:58:56.070160 21510 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 12:58:56.070165 21510 net.cpp:165] Memory required for data: 9132834852
I0412 12:58:56.070170 21510 layer_factory.hpp:77] Creating layer conv3b
I0412 12:58:56.070183 21510 net.cpp:100] Creating Layer conv3b
I0412 12:58:56.070190 21510 net.cpp:434] conv3b <- conv3a
I0412 12:58:56.070199 21510 net.cpp:408] conv3b -> conv3b
I0412 12:58:56.086182 21510 net.cpp:150] Setting up conv3b
I0412 12:58:56.086201 21510 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 12:58:56.086206 21510 net.cpp:165] Memory required for data: 9441116196
I0412 12:58:56.086216 21510 layer_factory.hpp:77] Creating layer relu3b
I0412 12:58:56.086226 21510 net.cpp:100] Creating Layer relu3b
I0412 12:58:56.086233 21510 net.cpp:434] relu3b <- conv3b
I0412 12:58:56.086242 21510 net.cpp:395] relu3b -> conv3b (in-place)
I0412 12:58:56.086253 21510 net.cpp:150] Setting up relu3b
I0412 12:58:56.086262 21510 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 12:58:56.086268 21510 net.cpp:165] Memory required for data: 9749397540
I0412 12:58:56.086272 21510 layer_factory.hpp:77] Creating layer pool3
I0412 12:58:56.086280 21510 net.cpp:100] Creating Layer pool3
I0412 12:58:56.086285 21510 net.cpp:434] pool3 <- conv3b
I0412 12:58:56.086298 21510 net.cpp:408] pool3 -> pool3
I0412 12:58:56.086355 21510 net.cpp:150] Setting up pool3
I0412 12:58:56.086364 21510 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 12:58:56.086369 21510 net.cpp:165] Memory required for data: 9787932708
I0412 12:58:56.086372 21510 layer_factory.hpp:77] Creating layer conv4a
I0412 12:58:56.086390 21510 net.cpp:100] Creating Layer conv4a
I0412 12:58:56.086395 21510 net.cpp:434] conv4a <- pool3
I0412 12:58:56.086401 21510 net.cpp:408] conv4a -> conv4a
I0412 12:58:56.118383 21510 net.cpp:150] Setting up conv4a
I0412 12:58:56.118412 21510 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 12:58:56.118417 21510 net.cpp:165] Memory required for data: 9865003044
I0412 12:58:56.118435 21510 layer_factory.hpp:77] Creating layer relu4a
I0412 12:58:56.118448 21510 net.cpp:100] Creating Layer relu4a
I0412 12:58:56.118455 21510 net.cpp:434] relu4a <- conv4a
I0412 12:58:56.118468 21510 net.cpp:395] relu4a -> conv4a (in-place)
I0412 12:58:56.118482 21510 net.cpp:150] Setting up relu4a
I0412 12:58:56.118494 21510 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 12:58:56.118499 21510 net.cpp:165] Memory required for data: 9942073380
I0412 12:58:56.118504 21510 layer_factory.hpp:77] Creating layer conv4b
I0412 12:58:56.118523 21510 net.cpp:100] Creating Layer conv4b
I0412 12:58:56.118544 21510 net.cpp:434] conv4b <- conv4a
I0412 12:58:56.118553 21510 net.cpp:408] conv4b -> conv4b
I0412 12:58:56.178881 21510 net.cpp:150] Setting up conv4b
I0412 12:58:56.178913 21510 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 12:58:56.178918 21510 net.cpp:165] Memory required for data: 10019143716
I0412 12:58:56.178930 21510 layer_factory.hpp:77] Creating layer relu4b
I0412 12:58:56.178942 21510 net.cpp:100] Creating Layer relu4b
I0412 12:58:56.178948 21510 net.cpp:434] relu4b <- conv4b
I0412 12:58:56.178957 21510 net.cpp:395] relu4b -> conv4b (in-place)
I0412 12:58:56.178970 21510 net.cpp:150] Setting up relu4b
I0412 12:58:56.178977 21510 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 12:58:56.178982 21510 net.cpp:165] Memory required for data: 10096214052
I0412 12:58:56.178987 21510 layer_factory.hpp:77] Creating layer pool4
I0412 12:58:56.178998 21510 net.cpp:100] Creating Layer pool4
I0412 12:58:56.179004 21510 net.cpp:434] pool4 <- conv4b
I0412 12:58:56.179013 21510 net.cpp:408] pool4 -> pool4
I0412 12:58:56.179059 21510 net.cpp:150] Setting up pool4
I0412 12:58:56.179067 21510 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:58:56.179072 21510 net.cpp:165] Memory required for data: 10105847844
I0412 12:58:56.179076 21510 layer_factory.hpp:77] Creating layer conv5a
I0412 12:58:56.179090 21510 net.cpp:100] Creating Layer conv5a
I0412 12:58:56.179095 21510 net.cpp:434] conv5a <- pool4
I0412 12:58:56.179107 21510 net.cpp:408] conv5a -> conv5a
I0412 12:58:56.239578 21510 net.cpp:150] Setting up conv5a
I0412 12:58:56.239612 21510 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:58:56.239617 21510 net.cpp:165] Memory required for data: 10115481636
I0412 12:58:56.239629 21510 layer_factory.hpp:77] Creating layer relu5a
I0412 12:58:56.239641 21510 net.cpp:100] Creating Layer relu5a
I0412 12:58:56.239647 21510 net.cpp:434] relu5a <- conv5a
I0412 12:58:56.239655 21510 net.cpp:395] relu5a -> conv5a (in-place)
I0412 12:58:56.239667 21510 net.cpp:150] Setting up relu5a
I0412 12:58:56.239675 21510 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:58:56.239679 21510 net.cpp:165] Memory required for data: 10125115428
I0412 12:58:56.239683 21510 layer_factory.hpp:77] Creating layer conv5b
I0412 12:58:56.239696 21510 net.cpp:100] Creating Layer conv5b
I0412 12:58:56.239701 21510 net.cpp:434] conv5b <- conv5a
I0412 12:58:56.239711 21510 net.cpp:408] conv5b -> conv5b
I0412 12:58:56.300189 21510 net.cpp:150] Setting up conv5b
I0412 12:58:56.300221 21510 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:58:56.300226 21510 net.cpp:165] Memory required for data: 10134749220
I0412 12:58:56.300237 21510 layer_factory.hpp:77] Creating layer relu5b
I0412 12:58:56.300248 21510 net.cpp:100] Creating Layer relu5b
I0412 12:58:56.300256 21510 net.cpp:434] relu5b <- conv5b
I0412 12:58:56.300266 21510 net.cpp:395] relu5b -> conv5b (in-place)
I0412 12:58:56.300281 21510 net.cpp:150] Setting up relu5b
I0412 12:58:56.300287 21510 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:58:56.300292 21510 net.cpp:165] Memory required for data: 10144383012
I0412 12:58:56.300295 21510 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 12:58:56.300303 21510 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 12:58:56.300307 21510 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 12:58:56.300313 21510 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 12:58:56.300345 21510 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 12:58:56.300384 21510 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 12:58:56.300393 21510 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:58:56.300398 21510 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:58:56.300403 21510 net.cpp:165] Memory required for data: 10163650596
I0412 12:58:56.300407 21510 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 12:58:56.300424 21510 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 12:58:56.300431 21510 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 12:58:56.300441 21510 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 12:58:56.361953 21510 net.cpp:150] Setting up rpn_conv/3x3
I0412 12:58:56.361979 21510 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 12:58:56.361984 21510 net.cpp:165] Memory required for data: 10166796324
I0412 12:58:56.362004 21510 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 12:58:56.362016 21510 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 12:58:56.362041 21510 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 12:58:56.362056 21510 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 12:58:56.362069 21510 net.cpp:150] Setting up rpn_relu/3x3
I0412 12:58:56.362076 21510 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 12:58:56.362080 21510 net.cpp:165] Memory required for data: 10169942052
I0412 12:58:56.362085 21510 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 12:58:56.362102 21510 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 12:58:56.362108 21510 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 12:58:56.362115 21510 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 12:58:56.420912 21510 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 12:58:56.420939 21510 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 12:58:56.420943 21510 net.cpp:165] Memory required for data: 10170728484
I0412 12:58:56.420953 21510 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 12:58:56.420964 21510 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 12:58:56.420970 21510 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 12:58:56.420979 21510 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 12:58:56.421005 21510 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 12:58:56.421013 21510 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 12:58:56.421017 21510 net.cpp:165] Memory required for data: 10171514916
I0412 12:58:56.421021 21510 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 12:58:56.421030 21510 net.cpp:100] Creating Layer rpn/output_pool
I0412 12:58:56.421036 21510 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 12:58:56.421047 21510 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 12:58:56.421084 21510 net.cpp:150] Setting up rpn/output_pool
I0412 12:58:56.421092 21510 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 12:58:56.421095 21510 net.cpp:165] Memory required for data: 10171711524
I0412 12:58:56.421100 21510 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 12:58:56.421113 21510 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 12:58:56.421118 21510 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 12:58:56.421124 21510 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 12:58:56.421133 21510 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 12:58:56.421165 21510 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 12:58:56.421174 21510 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 12:58:56.421180 21510 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 12:58:56.421185 21510 net.cpp:165] Memory required for data: 10172104740
I0412 12:58:56.421190 21510 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 12:58:56.421202 21510 net.cpp:100] Creating Layer rpn_cls_score
I0412 12:58:56.421208 21510 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 12:58:56.421216 21510 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 12:58:56.421670 21510 net.cpp:150] Setting up rpn_cls_score
I0412 12:58:56.421680 21510 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:58:56.421684 21510 net.cpp:165] Memory required for data: 10172133156
I0412 12:58:56.421691 21510 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 12:58:56.421700 21510 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 12:58:56.421707 21510 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 12:58:56.421715 21510 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 12:58:56.421723 21510 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 12:58:56.421756 21510 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 12:58:56.421764 21510 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:58:56.421771 21510 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:58:56.421777 21510 net.cpp:165] Memory required for data: 10172189988
I0412 12:58:56.421782 21510 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 12:58:56.421800 21510 net.cpp:100] Creating Layer rpn_twin_pred
I0412 12:58:56.421806 21510 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 12:58:56.421814 21510 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 12:58:56.422241 21510 net.cpp:150] Setting up rpn_twin_pred
I0412 12:58:56.422250 21510 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:58:56.422255 21510 net.cpp:165] Memory required for data: 10172218404
I0412 12:58:56.422261 21510 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 12:58:56.422271 21510 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 12:58:56.422276 21510 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 12:58:56.422283 21510 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 12:58:56.422292 21510 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 12:58:56.422327 21510 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 12:58:56.422333 21510 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:58:56.422338 21510 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:58:56.422343 21510 net.cpp:165] Memory required for data: 10172275236
I0412 12:58:56.422346 21510 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 12:58:56.422356 21510 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 12:58:56.422363 21510 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 12:58:56.422371 21510 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 12:58:56.422399 21510 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 12:58:56.422405 21510 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 12:58:56.422410 21510 net.cpp:165] Memory required for data: 10172303652
I0412 12:58:56.422413 21510 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 12:58:56.422420 21510 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 12:58:56.422425 21510 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 12:58:56.422435 21510 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 12:58:56.422451 21510 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 12:58:56.422459 21510 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 12:58:56.422507 21510 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 12:58:56.422515 21510 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 12:58:56.422521 21510 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 12:58:56.422526 21510 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 12:58:56.422530 21510 net.cpp:165] Memory required for data: 10172388900
I0412 12:58:56.422534 21510 layer_factory.hpp:77] Creating layer rpn-data
I0412 12:58:56.422950 21510 net.cpp:100] Creating Layer rpn-data
I0412 12:58:56.422961 21510 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 12:58:56.422968 21510 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 12:58:56.422973 21510 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 12:58:56.422982 21510 net.cpp:408] rpn-data -> rpn_labels
I0412 12:58:56.422993 21510 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 12:58:56.423002 21510 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 12:58:56.423012 21510 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 12:58:56.425232 21510 net.cpp:150] Setting up rpn-data
I0412 12:58:56.425246 21510 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 12:58:56.425252 21510 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:58:56.425258 21510 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:58:56.425263 21510 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:58:56.425267 21510 net.cpp:165] Memory required for data: 10172488356
I0412 12:58:56.425272 21510 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 12:58:56.425282 21510 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 12:58:56.425288 21510 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 12:58:56.425295 21510 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 12:58:56.425305 21510 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 12:58:56.425338 21510 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 12:58:56.425344 21510 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 12:58:56.425349 21510 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 12:58:56.425354 21510 net.cpp:165] Memory required for data: 10172516772
I0412 12:58:56.425357 21510 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 12:58:56.425367 21510 net.cpp:100] Creating Layer rpn_loss_cls
I0412 12:58:56.425374 21510 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 12:58:56.425379 21510 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 12:58:56.425385 21510 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 12:58:56.425398 21510 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 12:58:56.425475 21510 net.cpp:150] Setting up rpn_loss_cls
I0412 12:58:56.425483 21510 net.cpp:157] Top shape: (1)
I0412 12:58:56.425487 21510 net.cpp:160]     with loss weight 1
I0412 12:58:56.425501 21510 net.cpp:165] Memory required for data: 10172516776
I0412 12:58:56.425505 21510 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 12:58:56.425514 21510 net.cpp:100] Creating Layer rpn_loss_twin
I0412 12:58:56.425519 21510 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 12:58:56.425525 21510 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 12:58:56.425530 21510 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 12:58:56.425535 21510 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 12:58:56.425541 21510 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 12:58:56.425601 21510 net.cpp:150] Setting up rpn_loss_twin
I0412 12:58:56.425609 21510 net.cpp:157] Top shape: (1)
I0412 12:58:56.425612 21510 net.cpp:160]     with loss weight 1
I0412 12:58:56.425618 21510 net.cpp:165] Memory required for data: 10172516780
I0412 12:58:56.425623 21510 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 12:58:56.425631 21510 net.cpp:100] Creating Layer rpn_accuarcy
I0412 12:58:56.425637 21510 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 12:58:56.425642 21510 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 12:58:56.425648 21510 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 12:58:56.425657 21510 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 12:58:56.425690 21510 net.cpp:150] Setting up rpn_accuarcy
I0412 12:58:56.425696 21510 net.cpp:157] Top shape: (1)
I0412 12:58:56.425701 21510 net.cpp:157] Top shape: 2 (2)
I0412 12:58:56.425705 21510 net.cpp:165] Memory required for data: 10172516792
I0412 12:58:56.425709 21510 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 12:58:56.425715 21510 net.cpp:100] Creating Layer rpn_cls_prob
I0412 12:58:56.425724 21510 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 12:58:56.425730 21510 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 12:58:56.425783 21510 net.cpp:150] Setting up rpn_cls_prob
I0412 12:58:56.425791 21510 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 12:58:56.425796 21510 net.cpp:165] Memory required for data: 10172545208
I0412 12:58:56.425799 21510 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 12:58:56.425807 21510 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 12:58:56.425812 21510 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 12:58:56.425822 21510 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 12:58:56.425848 21510 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 12:58:56.425855 21510 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:58:56.425859 21510 net.cpp:165] Memory required for data: 10172573624
I0412 12:58:56.425865 21510 layer_factory.hpp:77] Creating layer proposal
I0412 12:58:56.426394 21510 net.cpp:100] Creating Layer proposal
I0412 12:58:56.426406 21510 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 12:58:56.426412 21510 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 12:58:56.426421 21510 net.cpp:408] proposal -> rpn_rois
I0412 12:58:56.430063 21510 net.cpp:150] Setting up proposal
I0412 12:58:56.430076 21510 net.cpp:157] Top shape: 1 3 (3)
I0412 12:58:56.430080 21510 net.cpp:165] Memory required for data: 10172573636
I0412 12:58:56.430085 21510 layer_factory.hpp:77] Creating layer roi-data
I0412 12:58:56.430213 21510 net.cpp:100] Creating Layer roi-data
I0412 12:58:56.430223 21510 net.cpp:434] roi-data <- rpn_rois
I0412 12:58:56.430229 21510 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 12:58:56.430239 21510 net.cpp:408] roi-data -> rois
I0412 12:58:56.430251 21510 net.cpp:408] roi-data -> labels
I0412 12:58:56.430260 21510 net.cpp:408] roi-data -> twin_targets
I0412 12:58:56.430269 21510 net.cpp:408] roi-data -> twin_inside_weights
I0412 12:58:56.430277 21510 net.cpp:408] roi-data -> twin_outside_weights
I0412 12:58:56.430557 21510 net.cpp:150] Setting up roi-data
I0412 12:58:56.430568 21510 net.cpp:157] Top shape: 1 3 (3)
I0412 12:58:56.430573 21510 net.cpp:157] Top shape: 1 1 (1)
I0412 12:58:56.430578 21510 net.cpp:157] Top shape: 1 402 (402)
I0412 12:58:56.430583 21510 net.cpp:157] Top shape: 1 402 (402)
I0412 12:58:56.430588 21510 net.cpp:157] Top shape: 1 402 (402)
I0412 12:58:56.430591 21510 net.cpp:165] Memory required for data: 10172578476
I0412 12:58:56.430596 21510 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 12:58:56.430603 21510 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 12:58:56.430608 21510 net.cpp:434] labels_roi-data_1_split <- labels
I0412 12:58:56.430616 21510 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 12:58:56.430627 21510 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 12:58:56.430656 21510 net.cpp:150] Setting up labels_roi-data_1_split
I0412 12:58:56.430663 21510 net.cpp:157] Top shape: 1 1 (1)
I0412 12:58:56.430667 21510 net.cpp:157] Top shape: 1 1 (1)
I0412 12:58:56.430671 21510 net.cpp:165] Memory required for data: 10172578484
I0412 12:58:56.430676 21510 layer_factory.hpp:77] Creating layer roi_pool5
I0412 12:58:56.430683 21510 net.cpp:100] Creating Layer roi_pool5
I0412 12:58:56.430688 21510 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 12:58:56.430696 21510 net.cpp:434] roi_pool5 <- rois
I0412 12:58:56.430701 21510 net.cpp:408] roi_pool5 -> pool5
I0412 12:58:56.430711 21510 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 12:58:56.430718 21510 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 12:58:56.430752 21510 net.cpp:150] Setting up roi_pool5
I0412 12:58:56.430758 21510 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 12:58:56.430763 21510 net.cpp:165] Memory required for data: 10172611252
I0412 12:58:56.430766 21510 layer_factory.hpp:77] Creating layer fc6
I0412 12:58:56.430776 21510 net.cpp:100] Creating Layer fc6
I0412 12:58:56.430783 21510 net.cpp:434] fc6 <- pool5
I0412 12:58:56.430788 21510 net.cpp:408] fc6 -> fc6
I0412 12:58:56.701975 21510 net.cpp:150] Setting up fc6
I0412 12:58:56.702006 21510 net.cpp:157] Top shape: 1 4096 (4096)
I0412 12:58:56.702010 21510 net.cpp:165] Memory required for data: 10172627636
I0412 12:58:56.702021 21510 layer_factory.hpp:77] Creating layer relu6
I0412 12:58:56.702033 21510 net.cpp:100] Creating Layer relu6
I0412 12:58:56.702039 21510 net.cpp:434] relu6 <- fc6
I0412 12:58:56.702050 21510 net.cpp:395] relu6 -> fc6 (in-place)
I0412 12:58:56.702064 21510 net.cpp:150] Setting up relu6
I0412 12:58:56.702069 21510 net.cpp:157] Top shape: 1 4096 (4096)
I0412 12:58:56.702073 21510 net.cpp:165] Memory required for data: 10172644020
I0412 12:58:56.702078 21510 layer_factory.hpp:77] Creating layer drop6
I0412 12:58:56.702087 21510 net.cpp:100] Creating Layer drop6
I0412 12:58:56.702092 21510 net.cpp:434] drop6 <- fc6
I0412 12:58:56.702098 21510 net.cpp:395] drop6 -> fc6 (in-place)
I0412 12:58:56.702124 21510 net.cpp:150] Setting up drop6
I0412 12:58:56.702133 21510 net.cpp:157] Top shape: 1 4096 (4096)
I0412 12:58:56.702137 21510 net.cpp:165] Memory required for data: 10172660404
I0412 12:58:56.702142 21510 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 12:58:56.702149 21510 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 12:58:56.702153 21510 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 12:58:56.702160 21510 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 12:58:56.702169 21510 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 12:58:56.702201 21510 net.cpp:150] Setting up fc6_drop6_0_split
I0412 12:58:56.702209 21510 net.cpp:157] Top shape: 1 4096 (4096)
I0412 12:58:56.702214 21510 net.cpp:157] Top shape: 1 4096 (4096)
I0412 12:58:56.702217 21510 net.cpp:165] Memory required for data: 10172693172
I0412 12:58:56.702224 21510 layer_factory.hpp:77] Creating layer cls_score
I0412 12:58:56.702234 21510 net.cpp:100] Creating Layer cls_score
I0412 12:58:56.702239 21510 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 12:58:56.702245 21510 net.cpp:408] cls_score -> cls_score
I0412 12:58:56.709254 21510 net.cpp:150] Setting up cls_score
I0412 12:58:56.709266 21510 net.cpp:157] Top shape: 1 201 (201)
I0412 12:58:56.709270 21510 net.cpp:165] Memory required for data: 10172693976
I0412 12:58:56.709281 21510 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 12:58:56.709290 21510 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 12:58:56.709295 21510 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 12:58:56.709305 21510 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 12:58:56.709314 21510 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 12:58:56.709348 21510 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 12:58:56.709354 21510 net.cpp:157] Top shape: 1 201 (201)
I0412 12:58:56.709359 21510 net.cpp:157] Top shape: 1 201 (201)
I0412 12:58:56.709363 21510 net.cpp:165] Memory required for data: 10172695584
I0412 12:58:56.709367 21510 layer_factory.hpp:77] Creating layer twin_pred
I0412 12:58:56.709375 21510 net.cpp:100] Creating Layer twin_pred
I0412 12:58:56.709380 21510 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 12:58:56.709388 21510 net.cpp:408] twin_pred -> twin_pred
I0412 12:58:56.722779 21510 net.cpp:150] Setting up twin_pred
I0412 12:58:56.722800 21510 net.cpp:157] Top shape: 1 402 (402)
I0412 12:58:56.722803 21510 net.cpp:165] Memory required for data: 10172697192
I0412 12:58:56.722813 21510 layer_factory.hpp:77] Creating layer loss_cls
I0412 12:58:56.722826 21510 net.cpp:100] Creating Layer loss_cls
I0412 12:58:56.722831 21510 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 12:58:56.722838 21510 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 12:58:56.722867 21510 net.cpp:408] loss_cls -> loss_cls
I0412 12:58:56.722882 21510 layer_factory.hpp:77] Creating layer loss_cls
I0412 12:58:56.722957 21510 net.cpp:150] Setting up loss_cls
I0412 12:58:56.722965 21510 net.cpp:157] Top shape: (1)
I0412 12:58:56.722970 21510 net.cpp:160]     with loss weight 1
I0412 12:58:56.722982 21510 net.cpp:165] Memory required for data: 10172697196
I0412 12:58:56.722987 21510 layer_factory.hpp:77] Creating layer loss_twin
I0412 12:58:56.722995 21510 net.cpp:100] Creating Layer loss_twin
I0412 12:58:56.723003 21510 net.cpp:434] loss_twin <- twin_pred
I0412 12:58:56.723009 21510 net.cpp:434] loss_twin <- twin_targets
I0412 12:58:56.723016 21510 net.cpp:434] loss_twin <- twin_inside_weights
I0412 12:58:56.723021 21510 net.cpp:434] loss_twin <- twin_outside_weights
I0412 12:58:56.723031 21510 net.cpp:408] loss_twin -> loss_twin
I0412 12:58:56.723112 21510 net.cpp:150] Setting up loss_twin
I0412 12:58:56.723121 21510 net.cpp:157] Top shape: (1)
I0412 12:58:56.723125 21510 net.cpp:160]     with loss weight 1
I0412 12:58:56.723132 21510 net.cpp:165] Memory required for data: 10172697200
I0412 12:58:56.723137 21510 layer_factory.hpp:77] Creating layer accuarcy
I0412 12:58:56.723146 21510 net.cpp:100] Creating Layer accuarcy
I0412 12:58:56.723151 21510 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 12:58:56.723158 21510 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 12:58:56.723166 21510 net.cpp:408] accuarcy -> accuarcy
I0412 12:58:56.723176 21510 net.cpp:150] Setting up accuarcy
I0412 12:58:56.723181 21510 net.cpp:157] Top shape: (1)
I0412 12:58:56.723186 21510 net.cpp:165] Memory required for data: 10172697204
I0412 12:58:56.723191 21510 net.cpp:228] accuarcy does not need backward computation.
I0412 12:58:56.723197 21510 net.cpp:226] loss_twin needs backward computation.
I0412 12:58:56.723202 21510 net.cpp:226] loss_cls needs backward computation.
I0412 12:58:56.723208 21510 net.cpp:226] twin_pred needs backward computation.
I0412 12:58:56.723212 21510 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 12:58:56.723217 21510 net.cpp:226] cls_score needs backward computation.
I0412 12:58:56.723222 21510 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 12:58:56.723229 21510 net.cpp:226] drop6 needs backward computation.
I0412 12:58:56.723233 21510 net.cpp:226] relu6 needs backward computation.
I0412 12:58:56.723237 21510 net.cpp:226] fc6 needs backward computation.
I0412 12:58:56.723242 21510 net.cpp:226] roi_pool5 needs backward computation.
I0412 12:58:56.723248 21510 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 12:58:56.723254 21510 net.cpp:226] roi-data needs backward computation.
I0412 12:58:56.723258 21510 net.cpp:226] proposal needs backward computation.
I0412 12:58:56.723266 21510 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 12:58:56.723271 21510 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 12:58:56.723278 21510 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 12:58:56.723284 21510 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 12:58:56.723290 21510 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 12:58:56.723296 21510 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 12:58:56.723304 21510 net.cpp:226] rpn-data needs backward computation.
I0412 12:58:56.723310 21510 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 12:58:56.723315 21510 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 12:58:56.723320 21510 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 12:58:56.723325 21510 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 12:58:56.723331 21510 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 12:58:56.723340 21510 net.cpp:226] rpn_cls_score needs backward computation.
I0412 12:58:56.723345 21510 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 12:58:56.723351 21510 net.cpp:226] rpn/output_pool needs backward computation.
I0412 12:58:56.723356 21510 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 12:58:56.723361 21510 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 12:58:56.723366 21510 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 12:58:56.723369 21510 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 12:58:56.723376 21510 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 12:58:56.723379 21510 net.cpp:226] relu5b needs backward computation.
I0412 12:58:56.723383 21510 net.cpp:226] conv5b needs backward computation.
I0412 12:58:56.723388 21510 net.cpp:226] relu5a needs backward computation.
I0412 12:58:56.723394 21510 net.cpp:226] conv5a needs backward computation.
I0412 12:58:56.723398 21510 net.cpp:226] pool4 needs backward computation.
I0412 12:58:56.723403 21510 net.cpp:226] relu4b needs backward computation.
I0412 12:58:56.723408 21510 net.cpp:226] conv4b needs backward computation.
I0412 12:58:56.723412 21510 net.cpp:226] relu4a needs backward computation.
I0412 12:58:56.723417 21510 net.cpp:226] conv4a needs backward computation.
I0412 12:58:56.723423 21510 net.cpp:226] pool3 needs backward computation.
I0412 12:58:56.723428 21510 net.cpp:226] relu3b needs backward computation.
I0412 12:58:56.723431 21510 net.cpp:226] conv3b needs backward computation.
I0412 12:58:56.723436 21510 net.cpp:226] relu3a needs backward computation.
I0412 12:58:56.723440 21510 net.cpp:226] conv3a needs backward computation.
I0412 12:58:56.723444 21510 net.cpp:228] pool2 does not need backward computation.
I0412 12:58:56.723451 21510 net.cpp:228] relu2a does not need backward computation.
I0412 12:58:56.723457 21510 net.cpp:228] conv2a does not need backward computation.
I0412 12:58:56.723461 21510 net.cpp:228] pool1 does not need backward computation.
I0412 12:58:56.723466 21510 net.cpp:228] relu1a does not need backward computation.
I0412 12:58:56.723470 21510 net.cpp:228] conv1a does not need backward computation.
I0412 12:58:56.723475 21510 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 12:58:56.723480 21510 net.cpp:228] data_data_0_split does not need backward computation.
I0412 12:58:56.723486 21510 net.cpp:228] data does not need backward computation.
I0412 12:58:56.723490 21510 net.cpp:270] This network produces output accuarcy
I0412 12:58:56.723495 21510 net.cpp:270] This network produces output loss_cls
I0412 12:58:56.723501 21510 net.cpp:270] This network produces output loss_twin
I0412 12:58:56.723505 21510 net.cpp:270] This network produces output rpn_accuarcy
I0412 12:58:56.723510 21510 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 12:58:56.723515 21510 net.cpp:270] This network produces output rpn_cls_loss
I0412 12:58:56.723518 21510 net.cpp:270] This network produces output rpn_loss_twin
I0412 12:58:56.723557 21510 net.cpp:283] Network initialization done.
I0412 12:58:56.723685 21510 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 12:58:56.878226 21510 net.cpp:761] Ignoring source layer pool5
I0412 12:58:56.899842 21510 net.cpp:761] Ignoring source layer fc7
I0412 12:58:56.899863 21510 net.cpp:761] Ignoring source layer relu7
I0412 12:58:56.899868 21510 net.cpp:761] Ignoring source layer drop7
I0412 12:58:56.899871 21510 net.cpp:761] Ignoring source layer fc8-200
I0412 12:58:56.899874 21510 net.cpp:761] Ignoring source layer loss
Solving...
F0412 12:58:58.085568 21510 syncedmem.cpp:56] Check failed: error == cudaSuccess (2 vs. 0)  out of memory
*** Check failure stack trace: ***
