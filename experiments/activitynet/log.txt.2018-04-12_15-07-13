Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=0, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 0,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
print done
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}]
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 15:07:14.273497 27503 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 15:07:14.273528 27503 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 15:07:14.274044 27503 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 15:07:14.274238 27503 layer_factory.hpp:77] Creating layer data
I0412 15:07:14.284392 27503 net.cpp:100] Creating Layer data
I0412 15:07:14.284406 27503 net.cpp:408] data -> data
I0412 15:07:14.284415 27503 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 15:07:14.284755 27503 net.cpp:150] Setting up data
I0412 15:07:14.284766 27503 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 15:07:14.284771 27503 net.cpp:157] Top shape: 1 3 (3)
I0412 15:07:14.284775 27503 net.cpp:165] Memory required for data: 115605516
I0412 15:07:14.284778 27503 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 15:07:14.284786 27503 net.cpp:100] Creating Layer data_data_0_split
I0412 15:07:14.284791 27503 net.cpp:434] data_data_0_split <- data
I0412 15:07:14.284797 27503 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 15:07:14.284804 27503 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 15:07:14.284813 27503 net.cpp:150] Setting up data_data_0_split
I0412 15:07:14.284819 27503 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 15:07:14.284823 27503 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 15:07:14.284827 27503 net.cpp:165] Memory required for data: 346816524
I0412 15:07:14.284831 27503 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 15:07:14.284835 27503 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 15:07:14.284840 27503 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 15:07:14.284845 27503 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 15:07:14.284852 27503 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 15:07:14.284857 27503 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 15:07:14.284862 27503 net.cpp:157] Top shape: 1 3 (3)
I0412 15:07:14.284867 27503 net.cpp:157] Top shape: 1 3 (3)
I0412 15:07:14.284868 27503 net.cpp:165] Memory required for data: 346816548
I0412 15:07:14.284873 27503 layer_factory.hpp:77] Creating layer conv1a
I0412 15:07:14.284881 27503 net.cpp:100] Creating Layer conv1a
I0412 15:07:14.284886 27503 net.cpp:434] conv1a <- data_data_0_split_0
I0412 15:07:14.284893 27503 net.cpp:408] conv1a -> conv1a
I0412 15:07:14.323817 27503 net.cpp:150] Setting up conv1a
I0412 15:07:14.323848 27503 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 15:07:14.323850 27503 net.cpp:165] Memory required for data: 2813067300
I0412 15:07:14.323864 27503 layer_factory.hpp:77] Creating layer relu1a
I0412 15:07:14.323876 27503 net.cpp:100] Creating Layer relu1a
I0412 15:07:14.323881 27503 net.cpp:434] relu1a <- conv1a
I0412 15:07:14.323887 27503 net.cpp:395] relu1a -> conv1a (in-place)
I0412 15:07:14.323896 27503 net.cpp:150] Setting up relu1a
I0412 15:07:14.323901 27503 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 15:07:14.323904 27503 net.cpp:165] Memory required for data: 5279318052
I0412 15:07:14.323907 27503 layer_factory.hpp:77] Creating layer pool1
I0412 15:07:14.323915 27503 net.cpp:100] Creating Layer pool1
I0412 15:07:14.323918 27503 net.cpp:434] pool1 <- conv1a
I0412 15:07:14.323923 27503 net.cpp:408] pool1 -> pool1
I0412 15:07:14.323933 27503 net.cpp:150] Setting up pool1
I0412 15:07:14.323938 27503 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 15:07:14.323941 27503 net.cpp:165] Memory required for data: 5895880740
I0412 15:07:14.323945 27503 layer_factory.hpp:77] Creating layer conv2a
I0412 15:07:14.323952 27503 net.cpp:100] Creating Layer conv2a
I0412 15:07:14.323956 27503 net.cpp:434] conv2a <- pool1
I0412 15:07:14.323961 27503 net.cpp:408] conv2a -> conv2a
I0412 15:07:14.339285 27503 net.cpp:150] Setting up conv2a
I0412 15:07:14.339301 27503 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 15:07:14.339304 27503 net.cpp:165] Memory required for data: 7129006116
I0412 15:07:14.339313 27503 layer_factory.hpp:77] Creating layer relu2a
I0412 15:07:14.339320 27503 net.cpp:100] Creating Layer relu2a
I0412 15:07:14.339325 27503 net.cpp:434] relu2a <- conv2a
I0412 15:07:14.339329 27503 net.cpp:395] relu2a -> conv2a (in-place)
I0412 15:07:14.339339 27503 net.cpp:150] Setting up relu2a
I0412 15:07:14.339344 27503 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 15:07:14.339346 27503 net.cpp:165] Memory required for data: 8362131492
I0412 15:07:14.339349 27503 layer_factory.hpp:77] Creating layer pool2
I0412 15:07:14.339356 27503 net.cpp:100] Creating Layer pool2
I0412 15:07:14.339359 27503 net.cpp:434] pool2 <- conv2a
I0412 15:07:14.339365 27503 net.cpp:408] pool2 -> pool2
I0412 15:07:14.339373 27503 net.cpp:150] Setting up pool2
I0412 15:07:14.339393 27503 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 15:07:14.339396 27503 net.cpp:165] Memory required for data: 8516272164
I0412 15:07:14.339401 27503 layer_factory.hpp:77] Creating layer conv3a
I0412 15:07:14.339408 27503 net.cpp:100] Creating Layer conv3a
I0412 15:07:14.339413 27503 net.cpp:434] conv3a <- pool2
I0412 15:07:14.339417 27503 net.cpp:408] conv3a -> conv3a
I0412 15:07:14.350284 27503 net.cpp:150] Setting up conv3a
I0412 15:07:14.350296 27503 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 15:07:14.350299 27503 net.cpp:165] Memory required for data: 8824553508
I0412 15:07:14.350308 27503 layer_factory.hpp:77] Creating layer relu3a
I0412 15:07:14.350316 27503 net.cpp:100] Creating Layer relu3a
I0412 15:07:14.350318 27503 net.cpp:434] relu3a <- conv3a
I0412 15:07:14.350325 27503 net.cpp:395] relu3a -> conv3a (in-place)
I0412 15:07:14.350332 27503 net.cpp:150] Setting up relu3a
I0412 15:07:14.350337 27503 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 15:07:14.350339 27503 net.cpp:165] Memory required for data: 9132834852
I0412 15:07:14.350342 27503 layer_factory.hpp:77] Creating layer conv3b
I0412 15:07:14.350350 27503 net.cpp:100] Creating Layer conv3b
I0412 15:07:14.350363 27503 net.cpp:434] conv3b <- conv3a
I0412 15:07:14.350368 27503 net.cpp:408] conv3b -> conv3b
I0412 15:07:14.371582 27503 net.cpp:150] Setting up conv3b
I0412 15:07:14.371594 27503 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 15:07:14.371598 27503 net.cpp:165] Memory required for data: 9441116196
I0412 15:07:14.371603 27503 layer_factory.hpp:77] Creating layer relu3b
I0412 15:07:14.371611 27503 net.cpp:100] Creating Layer relu3b
I0412 15:07:14.371618 27503 net.cpp:434] relu3b <- conv3b
I0412 15:07:14.371624 27503 net.cpp:395] relu3b -> conv3b (in-place)
I0412 15:07:14.371632 27503 net.cpp:150] Setting up relu3b
I0412 15:07:14.371636 27503 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 15:07:14.371640 27503 net.cpp:165] Memory required for data: 9749397540
I0412 15:07:14.371642 27503 layer_factory.hpp:77] Creating layer pool3
I0412 15:07:14.371647 27503 net.cpp:100] Creating Layer pool3
I0412 15:07:14.371652 27503 net.cpp:434] pool3 <- conv3b
I0412 15:07:14.371659 27503 net.cpp:408] pool3 -> pool3
I0412 15:07:14.371668 27503 net.cpp:150] Setting up pool3
I0412 15:07:14.371673 27503 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 15:07:14.371676 27503 net.cpp:165] Memory required for data: 9787932708
I0412 15:07:14.371680 27503 layer_factory.hpp:77] Creating layer conv4a
I0412 15:07:14.371686 27503 net.cpp:100] Creating Layer conv4a
I0412 15:07:14.371691 27503 net.cpp:434] conv4a <- pool3
I0412 15:07:14.371697 27503 net.cpp:408] conv4a -> conv4a
I0412 15:07:14.420047 27503 net.cpp:150] Setting up conv4a
I0412 15:07:14.420064 27503 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 15:07:14.420068 27503 net.cpp:165] Memory required for data: 9865003044
I0412 15:07:14.420078 27503 layer_factory.hpp:77] Creating layer relu4a
I0412 15:07:14.420086 27503 net.cpp:100] Creating Layer relu4a
I0412 15:07:14.420091 27503 net.cpp:434] relu4a <- conv4a
I0412 15:07:14.420097 27503 net.cpp:395] relu4a -> conv4a (in-place)
I0412 15:07:14.420105 27503 net.cpp:150] Setting up relu4a
I0412 15:07:14.420109 27503 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 15:07:14.420114 27503 net.cpp:165] Memory required for data: 9942073380
I0412 15:07:14.420116 27503 layer_factory.hpp:77] Creating layer conv4b
I0412 15:07:14.420128 27503 net.cpp:100] Creating Layer conv4b
I0412 15:07:14.420132 27503 net.cpp:434] conv4b <- conv4a
I0412 15:07:14.420136 27503 net.cpp:408] conv4b -> conv4b
I0412 15:07:14.513929 27503 net.cpp:150] Setting up conv4b
I0412 15:07:14.513954 27503 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 15:07:14.513958 27503 net.cpp:165] Memory required for data: 10019143716
I0412 15:07:14.513967 27503 layer_factory.hpp:77] Creating layer relu4b
I0412 15:07:14.513975 27503 net.cpp:100] Creating Layer relu4b
I0412 15:07:14.513980 27503 net.cpp:434] relu4b <- conv4b
I0412 15:07:14.513986 27503 net.cpp:395] relu4b -> conv4b (in-place)
I0412 15:07:14.513994 27503 net.cpp:150] Setting up relu4b
I0412 15:07:14.513999 27503 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 15:07:14.514001 27503 net.cpp:165] Memory required for data: 10096214052
I0412 15:07:14.514004 27503 layer_factory.hpp:77] Creating layer pool4
I0412 15:07:14.514014 27503 net.cpp:100] Creating Layer pool4
I0412 15:07:14.514017 27503 net.cpp:434] pool4 <- conv4b
I0412 15:07:14.514022 27503 net.cpp:408] pool4 -> pool4
I0412 15:07:14.514035 27503 net.cpp:150] Setting up pool4
I0412 15:07:14.514060 27503 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:07:14.514061 27503 net.cpp:165] Memory required for data: 10105847844
I0412 15:07:14.514065 27503 layer_factory.hpp:77] Creating layer conv5a
I0412 15:07:14.514075 27503 net.cpp:100] Creating Layer conv5a
I0412 15:07:14.514078 27503 net.cpp:434] conv5a <- pool4
I0412 15:07:14.514082 27503 net.cpp:408] conv5a -> conv5a
I0412 15:07:14.613768 27503 net.cpp:150] Setting up conv5a
I0412 15:07:14.613792 27503 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:07:14.613795 27503 net.cpp:165] Memory required for data: 10115481636
I0412 15:07:14.613802 27503 layer_factory.hpp:77] Creating layer relu5a
I0412 15:07:14.613812 27503 net.cpp:100] Creating Layer relu5a
I0412 15:07:14.613817 27503 net.cpp:434] relu5a <- conv5a
I0412 15:07:14.613824 27503 net.cpp:395] relu5a -> conv5a (in-place)
I0412 15:07:14.613832 27503 net.cpp:150] Setting up relu5a
I0412 15:07:14.613838 27503 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:07:14.613842 27503 net.cpp:165] Memory required for data: 10125115428
I0412 15:07:14.613844 27503 layer_factory.hpp:77] Creating layer conv5b
I0412 15:07:14.613853 27503 net.cpp:100] Creating Layer conv5b
I0412 15:07:14.613858 27503 net.cpp:434] conv5b <- conv5a
I0412 15:07:14.613863 27503 net.cpp:408] conv5b -> conv5b
I0412 15:07:14.709094 27503 net.cpp:150] Setting up conv5b
I0412 15:07:14.709120 27503 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:07:14.709123 27503 net.cpp:165] Memory required for data: 10134749220
I0412 15:07:14.709131 27503 layer_factory.hpp:77] Creating layer relu5b
I0412 15:07:14.709138 27503 net.cpp:100] Creating Layer relu5b
I0412 15:07:14.709142 27503 net.cpp:434] relu5b <- conv5b
I0412 15:07:14.709149 27503 net.cpp:395] relu5b -> conv5b (in-place)
I0412 15:07:14.709157 27503 net.cpp:150] Setting up relu5b
I0412 15:07:14.709161 27503 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:07:14.709163 27503 net.cpp:165] Memory required for data: 10144383012
I0412 15:07:14.709167 27503 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 15:07:14.709173 27503 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 15:07:14.709177 27503 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 15:07:14.709182 27503 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 15:07:14.709187 27503 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 15:07:14.709192 27503 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 15:07:14.709195 27503 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:07:14.709199 27503 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:07:14.709201 27503 net.cpp:165] Memory required for data: 10163650596
I0412 15:07:14.709204 27503 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 15:07:14.709213 27503 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 15:07:14.709218 27503 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 15:07:14.709223 27503 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 15:07:14.808979 27503 net.cpp:150] Setting up rpn_conv/3x3
I0412 15:07:14.809000 27503 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 15:07:14.809003 27503 net.cpp:165] Memory required for data: 10166796324
I0412 15:07:14.809018 27503 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 15:07:14.809026 27503 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 15:07:14.809031 27503 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 15:07:14.809037 27503 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 15:07:14.809044 27503 net.cpp:150] Setting up rpn_relu/3x3
I0412 15:07:14.809048 27503 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 15:07:14.809051 27503 net.cpp:165] Memory required for data: 10169942052
I0412 15:07:14.809054 27503 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 15:07:14.809063 27503 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 15:07:14.809067 27503 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 15:07:14.809072 27503 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 15:07:14.905478 27503 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 15:07:14.905503 27503 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 15:07:14.905506 27503 net.cpp:165] Memory required for data: 10170728484
I0412 15:07:14.905514 27503 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 15:07:14.905521 27503 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 15:07:14.905526 27503 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 15:07:14.905532 27503 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 15:07:14.905539 27503 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 15:07:14.905544 27503 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 15:07:14.905546 27503 net.cpp:165] Memory required for data: 10171514916
I0412 15:07:14.905550 27503 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 15:07:14.905555 27503 net.cpp:100] Creating Layer rpn/output_pool
I0412 15:07:14.905557 27503 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 15:07:14.905563 27503 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 15:07:14.905571 27503 net.cpp:150] Setting up rpn/output_pool
I0412 15:07:14.905575 27503 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 15:07:14.905578 27503 net.cpp:165] Memory required for data: 10171711524
I0412 15:07:14.905581 27503 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 15:07:14.905586 27503 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 15:07:14.905589 27503 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 15:07:14.905593 27503 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 15:07:14.905598 27503 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 15:07:14.905604 27503 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 15:07:14.905607 27503 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 15:07:14.905611 27503 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 15:07:14.905614 27503 net.cpp:165] Memory required for data: 10172104740
I0412 15:07:14.905617 27503 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 15:07:14.905627 27503 net.cpp:100] Creating Layer rpn_cls_score
I0412 15:07:14.905630 27503 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 15:07:14.905637 27503 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 15:07:14.905958 27503 net.cpp:150] Setting up rpn_cls_score
I0412 15:07:14.905966 27503 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:07:14.905968 27503 net.cpp:165] Memory required for data: 10172133156
I0412 15:07:14.905973 27503 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 15:07:14.905977 27503 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 15:07:14.905980 27503 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 15:07:14.905987 27503 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 15:07:14.905992 27503 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 15:07:14.905998 27503 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 15:07:14.906002 27503 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:07:14.906005 27503 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:07:14.906008 27503 net.cpp:165] Memory required for data: 10172189988
I0412 15:07:14.906011 27503 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 15:07:14.906023 27503 net.cpp:100] Creating Layer rpn_twin_pred
I0412 15:07:14.906025 27503 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 15:07:14.906031 27503 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 15:07:14.906352 27503 net.cpp:150] Setting up rpn_twin_pred
I0412 15:07:14.906358 27503 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:07:14.906360 27503 net.cpp:165] Memory required for data: 10172218404
I0412 15:07:14.906365 27503 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 15:07:14.906369 27503 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 15:07:14.906373 27503 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 15:07:14.906378 27503 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 15:07:14.906383 27503 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 15:07:14.906388 27503 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 15:07:14.906391 27503 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:07:14.906394 27503 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:07:14.906399 27503 net.cpp:165] Memory required for data: 10172275236
I0412 15:07:14.906401 27503 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 15:07:14.906409 27503 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 15:07:14.906412 27503 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 15:07:14.906416 27503 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 15:07:14.906424 27503 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 15:07:14.906428 27503 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 15:07:14.906431 27503 net.cpp:165] Memory required for data: 10172303652
I0412 15:07:14.906433 27503 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 15:07:14.906440 27503 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 15:07:14.906442 27503 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 15:07:14.906447 27503 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 15:07:14.906457 27503 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 15:07:14.906462 27503 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 15:07:14.906468 27503 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 15:07:14.906472 27503 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 15:07:14.906477 27503 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 15:07:14.906481 27503 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 15:07:14.906483 27503 net.cpp:165] Memory required for data: 10172388900
I0412 15:07:14.906486 27503 layer_factory.hpp:77] Creating layer rpn-data
I0412 15:07:14.906854 27503 net.cpp:100] Creating Layer rpn-data
I0412 15:07:14.906864 27503 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 15:07:14.906869 27503 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 15:07:14.906873 27503 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 15:07:14.906879 27503 net.cpp:408] rpn-data -> rpn_labels
I0412 15:07:14.906886 27503 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 15:07:14.906891 27503 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 15:07:14.906898 27503 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 15:07:14.909066 27503 net.cpp:150] Setting up rpn-data
I0412 15:07:14.909080 27503 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 15:07:14.909083 27503 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:07:14.909087 27503 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:07:14.909090 27503 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:07:14.909092 27503 net.cpp:165] Memory required for data: 10172488356
I0412 15:07:14.909096 27503 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 15:07:14.909101 27503 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 15:07:14.909104 27503 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 15:07:14.909109 27503 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 15:07:14.909116 27503 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 15:07:14.909121 27503 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 15:07:14.909126 27503 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 15:07:14.909129 27503 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 15:07:14.909132 27503 net.cpp:165] Memory required for data: 10172516772
I0412 15:07:14.909134 27503 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 15:07:14.909140 27503 net.cpp:100] Creating Layer rpn_loss_cls
I0412 15:07:14.909143 27503 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 15:07:14.909148 27503 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 15:07:14.909153 27503 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 15:07:14.909159 27503 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 15:07:14.909175 27503 net.cpp:150] Setting up rpn_loss_cls
I0412 15:07:14.909181 27503 net.cpp:157] Top shape: (1)
I0412 15:07:14.909184 27503 net.cpp:160]     with loss weight 1
I0412 15:07:14.909195 27503 net.cpp:165] Memory required for data: 10172516776
I0412 15:07:14.909198 27503 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 15:07:14.909205 27503 net.cpp:100] Creating Layer rpn_loss_twin
I0412 15:07:14.909209 27503 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 15:07:14.909212 27503 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 15:07:14.909216 27503 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 15:07:14.909220 27503 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 15:07:14.909225 27503 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 15:07:14.909247 27503 net.cpp:150] Setting up rpn_loss_twin
I0412 15:07:14.909255 27503 net.cpp:157] Top shape: (1)
I0412 15:07:14.909257 27503 net.cpp:160]     with loss weight 1
I0412 15:07:14.909260 27503 net.cpp:165] Memory required for data: 10172516780
I0412 15:07:14.909263 27503 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 15:07:14.909270 27503 net.cpp:100] Creating Layer rpn_accuarcy
I0412 15:07:14.909272 27503 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 15:07:14.909276 27503 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 15:07:14.909281 27503 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 15:07:14.909286 27503 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 15:07:14.909292 27503 net.cpp:150] Setting up rpn_accuarcy
I0412 15:07:14.909296 27503 net.cpp:157] Top shape: (1)
I0412 15:07:14.909299 27503 net.cpp:157] Top shape: 2 (2)
I0412 15:07:14.909302 27503 net.cpp:165] Memory required for data: 10172516792
I0412 15:07:14.909306 27503 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 15:07:14.909309 27503 net.cpp:100] Creating Layer rpn_cls_prob
I0412 15:07:14.909312 27503 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 15:07:14.909318 27503 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 15:07:14.909324 27503 net.cpp:150] Setting up rpn_cls_prob
I0412 15:07:14.909329 27503 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 15:07:14.909332 27503 net.cpp:165] Memory required for data: 10172545208
I0412 15:07:14.909335 27503 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 15:07:14.909340 27503 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 15:07:14.909343 27503 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 15:07:14.909349 27503 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 15:07:14.909355 27503 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 15:07:14.909360 27503 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:07:14.909363 27503 net.cpp:165] Memory required for data: 10172573624
I0412 15:07:14.909365 27503 layer_factory.hpp:77] Creating layer proposal
I0412 15:07:14.909874 27503 net.cpp:100] Creating Layer proposal
I0412 15:07:14.909885 27503 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 15:07:14.909890 27503 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 15:07:14.909896 27503 net.cpp:408] proposal -> rpn_rois
I0412 15:07:14.911849 27503 net.cpp:150] Setting up proposal
I0412 15:07:14.911861 27503 net.cpp:157] Top shape: 1 3 (3)
I0412 15:07:14.911865 27503 net.cpp:165] Memory required for data: 10172573636
I0412 15:07:14.911869 27503 layer_factory.hpp:77] Creating layer roi-data
I0412 15:07:14.911978 27503 net.cpp:100] Creating Layer roi-data
I0412 15:07:14.911988 27503 net.cpp:434] roi-data <- rpn_rois
I0412 15:07:14.911993 27503 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 15:07:14.911998 27503 net.cpp:408] roi-data -> rois
I0412 15:07:14.912004 27503 net.cpp:408] roi-data -> labels
I0412 15:07:14.912009 27503 net.cpp:408] roi-data -> twin_targets
I0412 15:07:14.912014 27503 net.cpp:408] roi-data -> twin_inside_weights
I0412 15:07:14.912021 27503 net.cpp:408] roi-data -> twin_outside_weights
I0412 15:07:14.912237 27503 net.cpp:150] Setting up roi-data
I0412 15:07:14.912248 27503 net.cpp:157] Top shape: 1 3 (3)
I0412 15:07:14.912251 27503 net.cpp:157] Top shape: 1 1 (1)
I0412 15:07:14.912256 27503 net.cpp:157] Top shape: 1 402 (402)
I0412 15:07:14.912259 27503 net.cpp:157] Top shape: 1 402 (402)
I0412 15:07:14.912263 27503 net.cpp:157] Top shape: 1 402 (402)
I0412 15:07:14.912266 27503 net.cpp:165] Memory required for data: 10172578476
I0412 15:07:14.912269 27503 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 15:07:14.912274 27503 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 15:07:14.912277 27503 net.cpp:434] labels_roi-data_1_split <- labels
I0412 15:07:14.912282 27503 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 15:07:14.912288 27503 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 15:07:14.912294 27503 net.cpp:150] Setting up labels_roi-data_1_split
I0412 15:07:14.912298 27503 net.cpp:157] Top shape: 1 1 (1)
I0412 15:07:14.912302 27503 net.cpp:157] Top shape: 1 1 (1)
I0412 15:07:14.912304 27503 net.cpp:165] Memory required for data: 10172578484
I0412 15:07:14.912307 27503 layer_factory.hpp:77] Creating layer roi_pool5
I0412 15:07:14.912312 27503 net.cpp:100] Creating Layer roi_pool5
I0412 15:07:14.912315 27503 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 15:07:14.912319 27503 net.cpp:434] roi_pool5 <- rois
I0412 15:07:14.912323 27503 net.cpp:408] roi_pool5 -> pool5
I0412 15:07:14.912343 27503 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 15:07:14.912349 27503 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 15:07:14.912355 27503 net.cpp:150] Setting up roi_pool5
I0412 15:07:14.912359 27503 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 15:07:14.912362 27503 net.cpp:165] Memory required for data: 10172611252
I0412 15:07:14.912364 27503 layer_factory.hpp:77] Creating layer fc6
I0412 15:07:14.912372 27503 net.cpp:100] Creating Layer fc6
I0412 15:07:14.912375 27503 net.cpp:434] fc6 <- pool5
I0412 15:07:14.912380 27503 net.cpp:408] fc6 -> fc6
I0412 15:07:15.382066 27503 net.cpp:150] Setting up fc6
I0412 15:07:15.382097 27503 net.cpp:157] Top shape: 1 4096 (4096)
I0412 15:07:15.382099 27503 net.cpp:165] Memory required for data: 10172627636
I0412 15:07:15.382110 27503 layer_factory.hpp:77] Creating layer relu6
I0412 15:07:15.382119 27503 net.cpp:100] Creating Layer relu6
I0412 15:07:15.382124 27503 net.cpp:434] relu6 <- fc6
I0412 15:07:15.382130 27503 net.cpp:395] relu6 -> fc6 (in-place)
I0412 15:07:15.382138 27503 net.cpp:150] Setting up relu6
I0412 15:07:15.382143 27503 net.cpp:157] Top shape: 1 4096 (4096)
I0412 15:07:15.382144 27503 net.cpp:165] Memory required for data: 10172644020
I0412 15:07:15.382148 27503 layer_factory.hpp:77] Creating layer drop6
I0412 15:07:15.382153 27503 net.cpp:100] Creating Layer drop6
I0412 15:07:15.382156 27503 net.cpp:434] drop6 <- fc6
I0412 15:07:15.382160 27503 net.cpp:395] drop6 -> fc6 (in-place)
I0412 15:07:15.382165 27503 net.cpp:150] Setting up drop6
I0412 15:07:15.382169 27503 net.cpp:157] Top shape: 1 4096 (4096)
I0412 15:07:15.382172 27503 net.cpp:165] Memory required for data: 10172660404
I0412 15:07:15.382174 27503 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 15:07:15.382179 27503 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 15:07:15.382182 27503 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 15:07:15.382186 27503 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 15:07:15.382192 27503 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 15:07:15.382200 27503 net.cpp:150] Setting up fc6_drop6_0_split
I0412 15:07:15.382202 27503 net.cpp:157] Top shape: 1 4096 (4096)
I0412 15:07:15.382205 27503 net.cpp:157] Top shape: 1 4096 (4096)
I0412 15:07:15.382208 27503 net.cpp:165] Memory required for data: 10172693172
I0412 15:07:15.382211 27503 layer_factory.hpp:77] Creating layer cls_score
I0412 15:07:15.382216 27503 net.cpp:100] Creating Layer cls_score
I0412 15:07:15.382220 27503 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 15:07:15.382225 27503 net.cpp:408] cls_score -> cls_score
I0412 15:07:15.392294 27503 net.cpp:150] Setting up cls_score
I0412 15:07:15.392303 27503 net.cpp:157] Top shape: 1 201 (201)
I0412 15:07:15.392307 27503 net.cpp:165] Memory required for data: 10172693976
I0412 15:07:15.392312 27503 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 15:07:15.392316 27503 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 15:07:15.392319 27503 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 15:07:15.392324 27503 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 15:07:15.392350 27503 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 15:07:15.392356 27503 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 15:07:15.392360 27503 net.cpp:157] Top shape: 1 201 (201)
I0412 15:07:15.392364 27503 net.cpp:157] Top shape: 1 201 (201)
I0412 15:07:15.392365 27503 net.cpp:165] Memory required for data: 10172695584
I0412 15:07:15.392369 27503 layer_factory.hpp:77] Creating layer twin_pred
I0412 15:07:15.392376 27503 net.cpp:100] Creating Layer twin_pred
I0412 15:07:15.392379 27503 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 15:07:15.392385 27503 net.cpp:408] twin_pred -> twin_pred
I0412 15:07:15.412148 27503 net.cpp:150] Setting up twin_pred
I0412 15:07:15.412159 27503 net.cpp:157] Top shape: 1 402 (402)
I0412 15:07:15.412163 27503 net.cpp:165] Memory required for data: 10172697192
I0412 15:07:15.412168 27503 layer_factory.hpp:77] Creating layer loss_cls
I0412 15:07:15.412174 27503 net.cpp:100] Creating Layer loss_cls
I0412 15:07:15.412178 27503 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 15:07:15.412181 27503 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 15:07:15.412186 27503 net.cpp:408] loss_cls -> loss_cls
I0412 15:07:15.412194 27503 layer_factory.hpp:77] Creating layer loss_cls
I0412 15:07:15.412206 27503 net.cpp:150] Setting up loss_cls
I0412 15:07:15.412210 27503 net.cpp:157] Top shape: (1)
I0412 15:07:15.412214 27503 net.cpp:160]     with loss weight 1
I0412 15:07:15.412223 27503 net.cpp:165] Memory required for data: 10172697196
I0412 15:07:15.412226 27503 layer_factory.hpp:77] Creating layer loss_twin
I0412 15:07:15.412232 27503 net.cpp:100] Creating Layer loss_twin
I0412 15:07:15.412236 27503 net.cpp:434] loss_twin <- twin_pred
I0412 15:07:15.412240 27503 net.cpp:434] loss_twin <- twin_targets
I0412 15:07:15.412243 27503 net.cpp:434] loss_twin <- twin_inside_weights
I0412 15:07:15.412246 27503 net.cpp:434] loss_twin <- twin_outside_weights
I0412 15:07:15.412252 27503 net.cpp:408] loss_twin -> loss_twin
I0412 15:07:15.412271 27503 net.cpp:150] Setting up loss_twin
I0412 15:07:15.412276 27503 net.cpp:157] Top shape: (1)
I0412 15:07:15.412279 27503 net.cpp:160]     with loss weight 1
I0412 15:07:15.412283 27503 net.cpp:165] Memory required for data: 10172697200
I0412 15:07:15.412286 27503 layer_factory.hpp:77] Creating layer accuarcy
I0412 15:07:15.412293 27503 net.cpp:100] Creating Layer accuarcy
I0412 15:07:15.412297 27503 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 15:07:15.412300 27503 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 15:07:15.412304 27503 net.cpp:408] accuarcy -> accuarcy
I0412 15:07:15.412312 27503 net.cpp:150] Setting up accuarcy
I0412 15:07:15.412314 27503 net.cpp:157] Top shape: (1)
I0412 15:07:15.412317 27503 net.cpp:165] Memory required for data: 10172697204
I0412 15:07:15.412322 27503 net.cpp:228] accuarcy does not need backward computation.
I0412 15:07:15.412339 27503 net.cpp:226] loss_twin needs backward computation.
I0412 15:07:15.412343 27503 net.cpp:226] loss_cls needs backward computation.
I0412 15:07:15.412348 27503 net.cpp:226] twin_pred needs backward computation.
I0412 15:07:15.412350 27503 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 15:07:15.412353 27503 net.cpp:226] cls_score needs backward computation.
I0412 15:07:15.412355 27503 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 15:07:15.412359 27503 net.cpp:226] drop6 needs backward computation.
I0412 15:07:15.412362 27503 net.cpp:226] relu6 needs backward computation.
I0412 15:07:15.412365 27503 net.cpp:226] fc6 needs backward computation.
I0412 15:07:15.412369 27503 net.cpp:226] roi_pool5 needs backward computation.
I0412 15:07:15.412372 27503 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 15:07:15.412376 27503 net.cpp:226] roi-data needs backward computation.
I0412 15:07:15.412380 27503 net.cpp:226] proposal needs backward computation.
I0412 15:07:15.412384 27503 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 15:07:15.412387 27503 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 15:07:15.412391 27503 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 15:07:15.412396 27503 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 15:07:15.412402 27503 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 15:07:15.412407 27503 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 15:07:15.412411 27503 net.cpp:226] rpn-data needs backward computation.
I0412 15:07:15.412415 27503 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 15:07:15.412418 27503 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 15:07:15.412423 27503 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 15:07:15.412427 27503 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 15:07:15.412431 27503 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 15:07:15.412434 27503 net.cpp:226] rpn_cls_score needs backward computation.
I0412 15:07:15.412437 27503 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 15:07:15.412441 27503 net.cpp:226] rpn/output_pool needs backward computation.
I0412 15:07:15.412444 27503 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 15:07:15.412448 27503 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 15:07:15.412452 27503 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 15:07:15.412456 27503 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 15:07:15.412459 27503 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 15:07:15.412462 27503 net.cpp:226] relu5b needs backward computation.
I0412 15:07:15.412467 27503 net.cpp:226] conv5b needs backward computation.
I0412 15:07:15.412469 27503 net.cpp:226] relu5a needs backward computation.
I0412 15:07:15.412473 27503 net.cpp:226] conv5a needs backward computation.
I0412 15:07:15.412477 27503 net.cpp:226] pool4 needs backward computation.
I0412 15:07:15.412480 27503 net.cpp:226] relu4b needs backward computation.
I0412 15:07:15.412483 27503 net.cpp:226] conv4b needs backward computation.
I0412 15:07:15.412487 27503 net.cpp:226] relu4a needs backward computation.
I0412 15:07:15.412489 27503 net.cpp:226] conv4a needs backward computation.
I0412 15:07:15.412492 27503 net.cpp:226] pool3 needs backward computation.
I0412 15:07:15.412495 27503 net.cpp:226] relu3b needs backward computation.
I0412 15:07:15.412498 27503 net.cpp:226] conv3b needs backward computation.
I0412 15:07:15.412501 27503 net.cpp:226] relu3a needs backward computation.
I0412 15:07:15.412504 27503 net.cpp:226] conv3a needs backward computation.
I0412 15:07:15.412508 27503 net.cpp:228] pool2 does not need backward computation.
I0412 15:07:15.412511 27503 net.cpp:228] relu2a does not need backward computation.
I0412 15:07:15.412514 27503 net.cpp:228] conv2a does not need backward computation.
I0412 15:07:15.412518 27503 net.cpp:228] pool1 does not need backward computation.
I0412 15:07:15.412521 27503 net.cpp:228] relu1a does not need backward computation.
I0412 15:07:15.412524 27503 net.cpp:228] conv1a does not need backward computation.
I0412 15:07:15.412529 27503 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 15:07:15.412533 27503 net.cpp:228] data_data_0_split does not need backward computation.
I0412 15:07:15.412539 27503 net.cpp:228] data does not need backward computation.
I0412 15:07:15.412540 27503 net.cpp:270] This network produces output accuarcy
I0412 15:07:15.412544 27503 net.cpp:270] This network produces output loss_cls
I0412 15:07:15.412546 27503 net.cpp:270] This network produces output loss_twin
I0412 15:07:15.412550 27503 net.cpp:270] This network produces output rpn_accuarcy
I0412 15:07:15.412554 27503 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 15:07:15.412556 27503 net.cpp:270] This network produces output rpn_cls_loss
I0412 15:07:15.412559 27503 net.cpp:270] This network produces output rpn_loss_twin
I0412 15:07:15.412595 27503 net.cpp:283] Network initialization done.
I0412 15:07:15.412719 27503 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 15:07:16.072065 27503 net.cpp:761] Ignoring source layer pool5
I0412 15:07:16.093459 27503 net.cpp:761] Ignoring source layer fc7
I0412 15:07:16.093478 27503 net.cpp:761] Ignoring source layer relu7
I0412 15:07:16.093482 27503 net.cpp:761] Ignoring source layer drop7
I0412 15:07:16.093484 27503 net.cpp:761] Ignoring source layer fc8-200
I0412 15:07:16.093487 27503 net.cpp:761] Ignoring source layer loss
Solving...
F0412 15:07:40.111536 27503 syncedmem.hpp:25] Check failed: *ptr host allocation of size 18446744073176875008 failed
*** Check failure stack trace: ***
