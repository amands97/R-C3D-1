Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 02:04:03.776043  6979 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 02:04:03.776083  6979 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 02:04:03.776823  6979 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 02:04:03.777027  6979 layer_factory.hpp:77] Creating layer data
I0412 02:04:03.789958  6979 net.cpp:100] Creating Layer data
I0412 02:04:03.789983  6979 net.cpp:408] data -> data
I0412 02:04:03.789993  6979 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 02:04:03.846047  6979 net.cpp:150] Setting up data
I0412 02:04:03.846076  6979 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 02:04:03.846083  6979 net.cpp:157] Top shape: 1 3 (3)
I0412 02:04:03.846088  6979 net.cpp:165] Memory required for data: 115605516
I0412 02:04:03.846099  6979 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 02:04:03.846115  6979 net.cpp:100] Creating Layer data_data_0_split
I0412 02:04:03.846123  6979 net.cpp:434] data_data_0_split <- data
I0412 02:04:03.846132  6979 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 02:04:03.846146  6979 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 02:04:03.846197  6979 net.cpp:150] Setting up data_data_0_split
I0412 02:04:03.846207  6979 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 02:04:03.846215  6979 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 02:04:03.846218  6979 net.cpp:165] Memory required for data: 346816524
I0412 02:04:03.846225  6979 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 02:04:03.846235  6979 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 02:04:03.846240  6979 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 02:04:03.846247  6979 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 02:04:03.846256  6979 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 02:04:03.846303  6979 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 02:04:03.846312  6979 net.cpp:157] Top shape: 1 3 (3)
I0412 02:04:03.846318  6979 net.cpp:157] Top shape: 1 3 (3)
I0412 02:04:03.846321  6979 net.cpp:165] Memory required for data: 346816548
I0412 02:04:03.846326  6979 layer_factory.hpp:77] Creating layer conv1a
I0412 02:04:03.846343  6979 net.cpp:100] Creating Layer conv1a
I0412 02:04:03.846349  6979 net.cpp:434] conv1a <- data_data_0_split_0
I0412 02:04:03.846355  6979 net.cpp:408] conv1a -> conv1a
I0412 02:04:03.868171  6979 net.cpp:150] Setting up conv1a
I0412 02:04:03.868387  6979 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 02:04:03.868432  6979 net.cpp:165] Memory required for data: 2813067300
I0412 02:04:03.868484  6979 layer_factory.hpp:77] Creating layer relu1a
I0412 02:04:03.868533  6979 net.cpp:100] Creating Layer relu1a
I0412 02:04:03.868571  6979 net.cpp:434] relu1a <- conv1a
I0412 02:04:03.868611  6979 net.cpp:395] relu1a -> conv1a (in-place)
I0412 02:04:03.868656  6979 net.cpp:150] Setting up relu1a
I0412 02:04:03.868697  6979 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 02:04:03.868734  6979 net.cpp:165] Memory required for data: 5279318052
I0412 02:04:03.868767  6979 layer_factory.hpp:77] Creating layer pool1
I0412 02:04:03.868813  6979 net.cpp:100] Creating Layer pool1
I0412 02:04:03.868852  6979 net.cpp:434] pool1 <- conv1a
I0412 02:04:03.868887  6979 net.cpp:408] pool1 -> pool1
I0412 02:04:03.869027  6979 net.cpp:150] Setting up pool1
I0412 02:04:03.869076  6979 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 02:04:03.869114  6979 net.cpp:165] Memory required for data: 5895880740
I0412 02:04:03.869150  6979 layer_factory.hpp:77] Creating layer conv2a
I0412 02:04:03.869196  6979 net.cpp:100] Creating Layer conv2a
I0412 02:04:03.869230  6979 net.cpp:434] conv2a <- pool1
I0412 02:04:03.869264  6979 net.cpp:408] conv2a -> conv2a
I0412 02:04:03.882614  6979 net.cpp:150] Setting up conv2a
I0412 02:04:03.882654  6979 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 02:04:03.882661  6979 net.cpp:165] Memory required for data: 7129006116
I0412 02:04:03.882678  6979 layer_factory.hpp:77] Creating layer relu2a
I0412 02:04:03.882692  6979 net.cpp:100] Creating Layer relu2a
I0412 02:04:03.882696  6979 net.cpp:434] relu2a <- conv2a
I0412 02:04:03.882702  6979 net.cpp:395] relu2a -> conv2a (in-place)
I0412 02:04:03.882714  6979 net.cpp:150] Setting up relu2a
I0412 02:04:03.882720  6979 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 02:04:03.882725  6979 net.cpp:165] Memory required for data: 8362131492
I0412 02:04:03.882730  6979 layer_factory.hpp:77] Creating layer pool2
I0412 02:04:03.882745  6979 net.cpp:100] Creating Layer pool2
I0412 02:04:03.882747  6979 net.cpp:434] pool2 <- conv2a
I0412 02:04:03.882752  6979 net.cpp:408] pool2 -> pool2
I0412 02:04:03.882860  6979 net.cpp:150] Setting up pool2
I0412 02:04:03.882870  6979 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 02:04:03.882874  6979 net.cpp:165] Memory required for data: 8516272164
I0412 02:04:03.882877  6979 layer_factory.hpp:77] Creating layer conv3a
I0412 02:04:03.882889  6979 net.cpp:100] Creating Layer conv3a
I0412 02:04:03.882894  6979 net.cpp:434] conv3a <- pool2
I0412 02:04:03.882899  6979 net.cpp:408] conv3a -> conv3a
I0412 02:04:03.891644  6979 net.cpp:150] Setting up conv3a
I0412 02:04:03.891664  6979 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 02:04:03.891670  6979 net.cpp:165] Memory required for data: 8824553508
I0412 02:04:03.891686  6979 layer_factory.hpp:77] Creating layer relu3a
I0412 02:04:03.891697  6979 net.cpp:100] Creating Layer relu3a
I0412 02:04:03.891702  6979 net.cpp:434] relu3a <- conv3a
I0412 02:04:03.891711  6979 net.cpp:395] relu3a -> conv3a (in-place)
I0412 02:04:03.891721  6979 net.cpp:150] Setting up relu3a
I0412 02:04:03.891728  6979 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 02:04:03.891732  6979 net.cpp:165] Memory required for data: 9132834852
I0412 02:04:03.891738  6979 layer_factory.hpp:77] Creating layer conv3b
I0412 02:04:03.891749  6979 net.cpp:100] Creating Layer conv3b
I0412 02:04:03.891755  6979 net.cpp:434] conv3b <- conv3a
I0412 02:04:03.891764  6979 net.cpp:408] conv3b -> conv3b
I0412 02:04:03.919037  6979 net.cpp:150] Setting up conv3b
I0412 02:04:03.919116  6979 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 02:04:03.919137  6979 net.cpp:165] Memory required for data: 9441116196
I0412 02:04:03.919163  6979 layer_factory.hpp:77] Creating layer relu3b
I0412 02:04:03.919193  6979 net.cpp:100] Creating Layer relu3b
I0412 02:04:03.919214  6979 net.cpp:434] relu3b <- conv3b
I0412 02:04:03.919239  6979 net.cpp:395] relu3b -> conv3b (in-place)
I0412 02:04:03.919266  6979 net.cpp:150] Setting up relu3b
I0412 02:04:03.919288  6979 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 02:04:03.919307  6979 net.cpp:165] Memory required for data: 9749397540
I0412 02:04:03.919324  6979 layer_factory.hpp:77] Creating layer pool3
I0412 02:04:03.919348  6979 net.cpp:100] Creating Layer pool3
I0412 02:04:03.919366  6979 net.cpp:434] pool3 <- conv3b
I0412 02:04:03.919389  6979 net.cpp:408] pool3 -> pool3
I0412 02:04:03.919495  6979 net.cpp:150] Setting up pool3
I0412 02:04:03.919522  6979 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 02:04:03.919541  6979 net.cpp:165] Memory required for data: 9787932708
I0412 02:04:03.919560  6979 layer_factory.hpp:77] Creating layer conv4a
I0412 02:04:03.919592  6979 net.cpp:100] Creating Layer conv4a
I0412 02:04:03.919613  6979 net.cpp:434] conv4a <- pool3
I0412 02:04:03.919641  6979 net.cpp:408] conv4a -> conv4a
I0412 02:04:03.990811  6979 net.cpp:150] Setting up conv4a
I0412 02:04:03.990885  6979 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 02:04:03.990906  6979 net.cpp:165] Memory required for data: 9865003044
I0412 02:04:03.990941  6979 layer_factory.hpp:77] Creating layer relu4a
I0412 02:04:03.990969  6979 net.cpp:100] Creating Layer relu4a
I0412 02:04:03.990991  6979 net.cpp:434] relu4a <- conv4a
I0412 02:04:03.991016  6979 net.cpp:395] relu4a -> conv4a (in-place)
I0412 02:04:03.991046  6979 net.cpp:150] Setting up relu4a
I0412 02:04:03.991067  6979 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 02:04:03.991086  6979 net.cpp:165] Memory required for data: 9942073380
I0412 02:04:03.991103  6979 layer_factory.hpp:77] Creating layer conv4b
I0412 02:04:03.991143  6979 net.cpp:100] Creating Layer conv4b
I0412 02:04:03.991164  6979 net.cpp:434] conv4b <- conv4a
I0412 02:04:03.991189  6979 net.cpp:408] conv4b -> conv4b
I0412 02:04:04.069494  6979 net.cpp:150] Setting up conv4b
I0412 02:04:04.069524  6979 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 02:04:04.069528  6979 net.cpp:165] Memory required for data: 10019143716
I0412 02:04:04.069537  6979 layer_factory.hpp:77] Creating layer relu4b
I0412 02:04:04.069548  6979 net.cpp:100] Creating Layer relu4b
I0412 02:04:04.069556  6979 net.cpp:434] relu4b <- conv4b
I0412 02:04:04.069569  6979 net.cpp:395] relu4b -> conv4b (in-place)
I0412 02:04:04.069581  6979 net.cpp:150] Setting up relu4b
I0412 02:04:04.069589  6979 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 02:04:04.069595  6979 net.cpp:165] Memory required for data: 10096214052
I0412 02:04:04.069600  6979 layer_factory.hpp:77] Creating layer pool4
I0412 02:04:04.069609  6979 net.cpp:100] Creating Layer pool4
I0412 02:04:04.069617  6979 net.cpp:434] pool4 <- conv4b
I0412 02:04:04.069624  6979 net.cpp:408] pool4 -> pool4
I0412 02:04:04.069684  6979 net.cpp:150] Setting up pool4
I0412 02:04:04.069694  6979 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:04:04.069699  6979 net.cpp:165] Memory required for data: 10105847844
I0412 02:04:04.069702  6979 layer_factory.hpp:77] Creating layer conv5a
I0412 02:04:04.069717  6979 net.cpp:100] Creating Layer conv5a
I0412 02:04:04.069726  6979 net.cpp:434] conv5a <- pool4
I0412 02:04:04.069737  6979 net.cpp:408] conv5a -> conv5a
I0412 02:04:04.156867  6979 net.cpp:150] Setting up conv5a
I0412 02:04:04.156898  6979 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:04:04.156903  6979 net.cpp:165] Memory required for data: 10115481636
I0412 02:04:04.156915  6979 layer_factory.hpp:77] Creating layer relu5a
I0412 02:04:04.156932  6979 net.cpp:100] Creating Layer relu5a
I0412 02:04:04.156944  6979 net.cpp:434] relu5a <- conv5a
I0412 02:04:04.156957  6979 net.cpp:395] relu5a -> conv5a (in-place)
I0412 02:04:04.156970  6979 net.cpp:150] Setting up relu5a
I0412 02:04:04.156985  6979 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:04:04.156988  6979 net.cpp:165] Memory required for data: 10125115428
I0412 02:04:04.156994  6979 layer_factory.hpp:77] Creating layer conv5b
I0412 02:04:04.157007  6979 net.cpp:100] Creating Layer conv5b
I0412 02:04:04.157013  6979 net.cpp:434] conv5b <- conv5a
I0412 02:04:04.157023  6979 net.cpp:408] conv5b -> conv5b
I0412 02:04:04.236905  6979 net.cpp:150] Setting up conv5b
I0412 02:04:04.237110  6979 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:04:04.237138  6979 net.cpp:165] Memory required for data: 10134749220
I0412 02:04:04.237167  6979 layer_factory.hpp:77] Creating layer relu5b
I0412 02:04:04.237195  6979 net.cpp:100] Creating Layer relu5b
I0412 02:04:04.237217  6979 net.cpp:434] relu5b <- conv5b
I0412 02:04:04.237242  6979 net.cpp:395] relu5b -> conv5b (in-place)
I0412 02:04:04.237270  6979 net.cpp:150] Setting up relu5b
I0412 02:04:04.237294  6979 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:04:04.237314  6979 net.cpp:165] Memory required for data: 10144383012
I0412 02:04:04.237334  6979 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 02:04:04.237357  6979 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 02:04:04.237378  6979 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 02:04:04.237403  6979 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 02:04:04.237428  6979 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 02:04:04.237509  6979 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 02:04:04.237530  6979 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:04:04.237547  6979 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:04:04.237567  6979 net.cpp:165] Memory required for data: 10163650596
I0412 02:04:04.237625  6979 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 02:04:04.237686  6979 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 02:04:04.237731  6979 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 02:04:04.237776  6979 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 02:04:04.316820  6979 net.cpp:150] Setting up rpn_conv/3x3
I0412 02:04:04.316851  6979 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 02:04:04.316855  6979 net.cpp:165] Memory required for data: 10166796324
I0412 02:04:04.316879  6979 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 02:04:04.316892  6979 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 02:04:04.316900  6979 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 02:04:04.316908  6979 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 02:04:04.316921  6979 net.cpp:150] Setting up rpn_relu/3x3
I0412 02:04:04.316927  6979 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 02:04:04.316931  6979 net.cpp:165] Memory required for data: 10169942052
I0412 02:04:04.316936  6979 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 02:04:04.316951  6979 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 02:04:04.316956  6979 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 02:04:04.316967  6979 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 02:04:04.399741  6979 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 02:04:04.399775  6979 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 02:04:04.399778  6979 net.cpp:165] Memory required for data: 10170728484
I0412 02:04:04.399787  6979 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 02:04:04.399799  6979 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 02:04:04.399803  6979 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 02:04:04.399809  6979 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 02:04:04.399818  6979 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 02:04:04.399824  6979 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 02:04:04.399828  6979 net.cpp:165] Memory required for data: 10171514916
I0412 02:04:04.399832  6979 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 02:04:04.399839  6979 net.cpp:100] Creating Layer rpn/output_pool
I0412 02:04:04.399843  6979 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 02:04:04.399848  6979 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 02:04:04.399893  6979 net.cpp:150] Setting up rpn/output_pool
I0412 02:04:04.399901  6979 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 02:04:04.399904  6979 net.cpp:165] Memory required for data: 10171711524
I0412 02:04:04.399907  6979 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 02:04:04.399914  6979 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 02:04:04.399919  6979 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 02:04:04.399924  6979 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 02:04:04.399931  6979 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 02:04:04.399969  6979 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 02:04:04.399976  6979 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 02:04:04.399979  6979 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 02:04:04.399983  6979 net.cpp:165] Memory required for data: 10172104740
I0412 02:04:04.399986  6979 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 02:04:04.399997  6979 net.cpp:100] Creating Layer rpn_cls_score
I0412 02:04:04.400002  6979 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 02:04:04.400007  6979 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 02:04:04.400599  6979 net.cpp:150] Setting up rpn_cls_score
I0412 02:04:04.400609  6979 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:04:04.400612  6979 net.cpp:165] Memory required for data: 10172133156
I0412 02:04:04.400617  6979 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 02:04:04.400624  6979 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 02:04:04.400626  6979 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 02:04:04.400632  6979 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 02:04:04.400638  6979 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 02:04:04.400683  6979 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 02:04:04.400691  6979 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:04:04.400693  6979 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:04:04.400696  6979 net.cpp:165] Memory required for data: 10172189988
I0412 02:04:04.400699  6979 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 02:04:04.400712  6979 net.cpp:100] Creating Layer rpn_twin_pred
I0412 02:04:04.400717  6979 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 02:04:04.400722  6979 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 02:04:04.401249  6979 net.cpp:150] Setting up rpn_twin_pred
I0412 02:04:04.401257  6979 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:04:04.401260  6979 net.cpp:165] Memory required for data: 10172218404
I0412 02:04:04.401266  6979 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 02:04:04.401273  6979 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 02:04:04.401275  6979 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 02:04:04.401281  6979 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 02:04:04.401288  6979 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 02:04:04.401326  6979 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 02:04:04.401334  6979 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:04:04.401336  6979 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:04:04.401341  6979 net.cpp:165] Memory required for data: 10172275236
I0412 02:04:04.401345  6979 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 02:04:04.401351  6979 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 02:04:04.401357  6979 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 02:04:04.401362  6979 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 02:04:04.401389  6979 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 02:04:04.401396  6979 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:04:04.401399  6979 net.cpp:165] Memory required for data: 10172303652
I0412 02:04:04.401404  6979 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 02:04:04.401409  6979 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 02:04:04.401413  6979 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 02:04:04.401419  6979 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 02:04:04.401432  6979 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 02:04:04.401437  6979 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 02:04:04.401484  6979 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 02:04:04.401490  6979 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:04:04.401494  6979 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:04:04.401500  6979 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:04:04.401502  6979 net.cpp:165] Memory required for data: 10172388900
I0412 02:04:04.401506  6979 layer_factory.hpp:77] Creating layer rpn-data
I0412 02:04:04.401908  6979 net.cpp:100] Creating Layer rpn-data
I0412 02:04:04.401919  6979 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 02:04:04.401924  6979 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 02:04:04.401929  6979 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 02:04:04.401937  6979 net.cpp:408] rpn-data -> rpn_labels
I0412 02:04:04.401944  6979 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 02:04:04.401952  6979 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 02:04:04.401957  6979 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 02:04:04.404660  6979 net.cpp:150] Setting up rpn-data
I0412 02:04:04.404739  6979 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 02:04:04.404744  6979 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:04:04.404749  6979 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:04:04.404752  6979 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:04:04.404755  6979 net.cpp:165] Memory required for data: 10172488356
I0412 02:04:04.404767  6979 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 02:04:04.404788  6979 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 02:04:04.404796  6979 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 02:04:04.404806  6979 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 02:04:04.404819  6979 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 02:04:04.404861  6979 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 02:04:04.404868  6979 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 02:04:04.404872  6979 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 02:04:04.404875  6979 net.cpp:165] Memory required for data: 10172516772
I0412 02:04:04.404880  6979 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 02:04:04.404887  6979 net.cpp:100] Creating Layer rpn_loss_cls
I0412 02:04:04.404892  6979 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 02:04:04.404896  6979 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 02:04:04.404901  6979 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 02:04:04.404909  6979 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 02:04:04.405071  6979 net.cpp:150] Setting up rpn_loss_cls
I0412 02:04:04.405083  6979 net.cpp:157] Top shape: (1)
I0412 02:04:04.405088  6979 net.cpp:160]     with loss weight 1
I0412 02:04:04.405138  6979 net.cpp:165] Memory required for data: 10172516776
I0412 02:04:04.405143  6979 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 02:04:04.405153  6979 net.cpp:100] Creating Layer rpn_loss_twin
I0412 02:04:04.405179  6979 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 02:04:04.405200  6979 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 02:04:04.405217  6979 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 02:04:04.405239  6979 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 02:04:04.405259  6979 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 02:04:04.405416  6979 net.cpp:150] Setting up rpn_loss_twin
I0412 02:04:04.405429  6979 net.cpp:157] Top shape: (1)
I0412 02:04:04.405433  6979 net.cpp:160]     with loss weight 1
I0412 02:04:04.405441  6979 net.cpp:165] Memory required for data: 10172516780
I0412 02:04:04.405448  6979 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 02:04:04.405458  6979 net.cpp:100] Creating Layer rpn_accuarcy
I0412 02:04:04.405464  6979 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 02:04:04.405472  6979 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 02:04:04.405481  6979 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 02:04:04.405514  6979 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 02:04:04.405599  6979 net.cpp:150] Setting up rpn_accuarcy
I0412 02:04:04.405611  6979 net.cpp:157] Top shape: (1)
I0412 02:04:04.405617  6979 net.cpp:157] Top shape: 2 (2)
I0412 02:04:04.405622  6979 net.cpp:165] Memory required for data: 10172516792
I0412 02:04:04.405625  6979 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 02:04:04.405632  6979 net.cpp:100] Creating Layer rpn_cls_prob
I0412 02:04:04.405640  6979 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 02:04:04.405647  6979 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 02:04:04.405760  6979 net.cpp:150] Setting up rpn_cls_prob
I0412 02:04:04.405771  6979 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:04:04.405793  6979 net.cpp:165] Memory required for data: 10172545208
I0412 02:04:04.405823  6979 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 02:04:04.405839  6979 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 02:04:04.405845  6979 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 02:04:04.405855  6979 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 02:04:04.405902  6979 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 02:04:04.405915  6979 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:04:04.405921  6979 net.cpp:165] Memory required for data: 10172573624
I0412 02:04:04.405926  6979 layer_factory.hpp:77] Creating layer proposal
I0412 02:04:04.406817  6979 net.cpp:100] Creating Layer proposal
I0412 02:04:04.406832  6979 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 02:04:04.406841  6979 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 02:04:04.406852  6979 net.cpp:408] proposal -> rpn_rois
I0412 02:04:04.414125  6979 net.cpp:150] Setting up proposal
I0412 02:04:04.414152  6979 net.cpp:157] Top shape: 1 3 (3)
I0412 02:04:04.414157  6979 net.cpp:165] Memory required for data: 10172573636
I0412 02:04:04.414166  6979 layer_factory.hpp:77] Creating layer roi-data
I0412 02:04:04.414356  6979 net.cpp:100] Creating Layer roi-data
I0412 02:04:04.414367  6979 net.cpp:434] roi-data <- rpn_rois
I0412 02:04:04.414376  6979 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 02:04:04.414386  6979 net.cpp:408] roi-data -> rois
I0412 02:04:04.414399  6979 net.cpp:408] roi-data -> labels
I0412 02:04:04.414409  6979 net.cpp:408] roi-data -> twin_targets
I0412 02:04:04.414420  6979 net.cpp:408] roi-data -> twin_inside_weights
I0412 02:04:04.414433  6979 net.cpp:408] roi-data -> twin_outside_weights
I0412 02:04:04.414880  6979 net.cpp:150] Setting up roi-data
I0412 02:04:04.414892  6979 net.cpp:157] Top shape: 1 3 (3)
I0412 02:04:04.414898  6979 net.cpp:157] Top shape: 1 1 (1)
I0412 02:04:04.414903  6979 net.cpp:157] Top shape: 1 402 (402)
I0412 02:04:04.414908  6979 net.cpp:157] Top shape: 1 402 (402)
I0412 02:04:04.414913  6979 net.cpp:157] Top shape: 1 402 (402)
I0412 02:04:04.414917  6979 net.cpp:165] Memory required for data: 10172578476
I0412 02:04:04.414923  6979 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 02:04:04.414933  6979 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 02:04:04.414938  6979 net.cpp:434] labels_roi-data_1_split <- labels
I0412 02:04:04.414945  6979 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 02:04:04.414955  6979 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 02:04:04.414997  6979 net.cpp:150] Setting up labels_roi-data_1_split
I0412 02:04:04.415004  6979 net.cpp:157] Top shape: 1 1 (1)
I0412 02:04:04.415009  6979 net.cpp:157] Top shape: 1 1 (1)
I0412 02:04:04.415014  6979 net.cpp:165] Memory required for data: 10172578484
I0412 02:04:04.415019  6979 layer_factory.hpp:77] Creating layer roi_pool5
I0412 02:04:04.415027  6979 net.cpp:100] Creating Layer roi_pool5
I0412 02:04:04.415033  6979 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 02:04:04.415040  6979 net.cpp:434] roi_pool5 <- rois
I0412 02:04:04.415047  6979 net.cpp:408] roi_pool5 -> pool5
I0412 02:04:04.415057  6979 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 02:04:04.415069  6979 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 02:04:04.415117  6979 net.cpp:150] Setting up roi_pool5
I0412 02:04:04.415124  6979 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 02:04:04.415129  6979 net.cpp:165] Memory required for data: 10172611252
I0412 02:04:04.415133  6979 layer_factory.hpp:77] Creating layer fc6
I0412 02:04:04.415145  6979 net.cpp:100] Creating Layer fc6
I0412 02:04:04.415151  6979 net.cpp:434] fc6 <- pool5
I0412 02:04:04.415158  6979 net.cpp:408] fc6 -> fc6
I0412 02:04:04.784672  6979 net.cpp:150] Setting up fc6
I0412 02:04:04.784705  6979 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:04:04.784710  6979 net.cpp:165] Memory required for data: 10172627636
I0412 02:04:04.784724  6979 layer_factory.hpp:77] Creating layer relu6
I0412 02:04:04.784737  6979 net.cpp:100] Creating Layer relu6
I0412 02:04:04.784746  6979 net.cpp:434] relu6 <- fc6
I0412 02:04:04.784754  6979 net.cpp:395] relu6 -> fc6 (in-place)
I0412 02:04:04.784765  6979 net.cpp:150] Setting up relu6
I0412 02:04:04.784772  6979 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:04:04.784776  6979 net.cpp:165] Memory required for data: 10172644020
I0412 02:04:04.784781  6979 layer_factory.hpp:77] Creating layer drop6
I0412 02:04:04.784791  6979 net.cpp:100] Creating Layer drop6
I0412 02:04:04.784807  6979 net.cpp:434] drop6 <- fc6
I0412 02:04:04.784816  6979 net.cpp:395] drop6 -> fc6 (in-place)
I0412 02:04:04.784848  6979 net.cpp:150] Setting up drop6
I0412 02:04:04.784857  6979 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:04:04.784862  6979 net.cpp:165] Memory required for data: 10172660404
I0412 02:04:04.784868  6979 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 02:04:04.784880  6979 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 02:04:04.784895  6979 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 02:04:04.784905  6979 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 02:04:04.784917  6979 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 02:04:04.784970  6979 net.cpp:150] Setting up fc6_drop6_0_split
I0412 02:04:04.784977  6979 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:04:04.784983  6979 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:04:04.784989  6979 net.cpp:165] Memory required for data: 10172693172
I0412 02:04:04.784996  6979 layer_factory.hpp:77] Creating layer cls_score
I0412 02:04:04.785007  6979 net.cpp:100] Creating Layer cls_score
I0412 02:04:04.785022  6979 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 02:04:04.785033  6979 net.cpp:408] cls_score -> cls_score
I0412 02:04:04.799127  6979 net.cpp:150] Setting up cls_score
I0412 02:04:04.799154  6979 net.cpp:157] Top shape: 1 201 (201)
I0412 02:04:04.799156  6979 net.cpp:165] Memory required for data: 10172693976
I0412 02:04:04.799168  6979 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 02:04:04.799180  6979 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 02:04:04.799185  6979 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 02:04:04.799196  6979 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 02:04:04.799207  6979 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 02:04:04.799253  6979 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 02:04:04.799259  6979 net.cpp:157] Top shape: 1 201 (201)
I0412 02:04:04.799266  6979 net.cpp:157] Top shape: 1 201 (201)
I0412 02:04:04.799273  6979 net.cpp:165] Memory required for data: 10172695584
I0412 02:04:04.799276  6979 layer_factory.hpp:77] Creating layer twin_pred
I0412 02:04:04.799288  6979 net.cpp:100] Creating Layer twin_pred
I0412 02:04:04.799293  6979 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 02:04:04.799304  6979 net.cpp:408] twin_pred -> twin_pred
I0412 02:04:04.813709  6979 net.cpp:150] Setting up twin_pred
I0412 02:04:04.813740  6979 net.cpp:157] Top shape: 1 402 (402)
I0412 02:04:04.813745  6979 net.cpp:165] Memory required for data: 10172697192
I0412 02:04:04.813755  6979 layer_factory.hpp:77] Creating layer loss_cls
I0412 02:04:04.813771  6979 net.cpp:100] Creating Layer loss_cls
I0412 02:04:04.813777  6979 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 02:04:04.813787  6979 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 02:04:04.813796  6979 net.cpp:408] loss_cls -> loss_cls
I0412 02:04:04.813812  6979 layer_factory.hpp:77] Creating layer loss_cls
I0412 02:04:04.813940  6979 net.cpp:150] Setting up loss_cls
I0412 02:04:04.813946  6979 net.cpp:157] Top shape: (1)
I0412 02:04:04.813951  6979 net.cpp:160]     with loss weight 1
I0412 02:04:04.813964  6979 net.cpp:165] Memory required for data: 10172697196
I0412 02:04:04.813971  6979 layer_factory.hpp:77] Creating layer loss_twin
I0412 02:04:04.813978  6979 net.cpp:100] Creating Layer loss_twin
I0412 02:04:04.813987  6979 net.cpp:434] loss_twin <- twin_pred
I0412 02:04:04.813992  6979 net.cpp:434] loss_twin <- twin_targets
I0412 02:04:04.813997  6979 net.cpp:434] loss_twin <- twin_inside_weights
I0412 02:04:04.814003  6979 net.cpp:434] loss_twin <- twin_outside_weights
I0412 02:04:04.814013  6979 net.cpp:408] loss_twin -> loss_twin
I0412 02:04:04.814126  6979 net.cpp:150] Setting up loss_twin
I0412 02:04:04.814134  6979 net.cpp:157] Top shape: (1)
I0412 02:04:04.814137  6979 net.cpp:160]     with loss weight 1
I0412 02:04:04.814142  6979 net.cpp:165] Memory required for data: 10172697200
I0412 02:04:04.814149  6979 layer_factory.hpp:77] Creating layer accuarcy
I0412 02:04:04.814158  6979 net.cpp:100] Creating Layer accuarcy
I0412 02:04:04.814165  6979 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 02:04:04.814172  6979 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 02:04:04.814179  6979 net.cpp:408] accuarcy -> accuarcy
I0412 02:04:04.814189  6979 net.cpp:150] Setting up accuarcy
I0412 02:04:04.814195  6979 net.cpp:157] Top shape: (1)
I0412 02:04:04.814200  6979 net.cpp:165] Memory required for data: 10172697204
I0412 02:04:04.814205  6979 net.cpp:228] accuarcy does not need backward computation.
I0412 02:04:04.814209  6979 net.cpp:226] loss_twin needs backward computation.
I0412 02:04:04.814215  6979 net.cpp:226] loss_cls needs backward computation.
I0412 02:04:04.814220  6979 net.cpp:226] twin_pred needs backward computation.
I0412 02:04:04.814225  6979 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 02:04:04.814230  6979 net.cpp:226] cls_score needs backward computation.
I0412 02:04:04.814234  6979 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 02:04:04.814239  6979 net.cpp:226] drop6 needs backward computation.
I0412 02:04:04.814244  6979 net.cpp:226] relu6 needs backward computation.
I0412 02:04:04.814245  6979 net.cpp:226] fc6 needs backward computation.
I0412 02:04:04.814249  6979 net.cpp:226] roi_pool5 needs backward computation.
I0412 02:04:04.814254  6979 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 02:04:04.814256  6979 net.cpp:226] roi-data needs backward computation.
I0412 02:04:04.814261  6979 net.cpp:226] proposal needs backward computation.
I0412 02:04:04.814266  6979 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 02:04:04.814271  6979 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 02:04:04.814276  6979 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 02:04:04.814306  6979 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 02:04:04.814324  6979 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 02:04:04.814343  6979 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 02:04:04.814362  6979 net.cpp:226] rpn-data needs backward computation.
I0412 02:04:04.814371  6979 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 02:04:04.814376  6979 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 02:04:04.814383  6979 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 02:04:04.814386  6979 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 02:04:04.814394  6979 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 02:04:04.814402  6979 net.cpp:226] rpn_cls_score needs backward computation.
I0412 02:04:04.814410  6979 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 02:04:04.814419  6979 net.cpp:226] rpn/output_pool needs backward computation.
I0412 02:04:04.814424  6979 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 02:04:04.814430  6979 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 02:04:04.814435  6979 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 02:04:04.814440  6979 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 02:04:04.814443  6979 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 02:04:04.814446  6979 net.cpp:226] relu5b needs backward computation.
I0412 02:04:04.814450  6979 net.cpp:226] conv5b needs backward computation.
I0412 02:04:04.814453  6979 net.cpp:226] relu5a needs backward computation.
I0412 02:04:04.814456  6979 net.cpp:226] conv5a needs backward computation.
I0412 02:04:04.814460  6979 net.cpp:226] pool4 needs backward computation.
I0412 02:04:04.814463  6979 net.cpp:226] relu4b needs backward computation.
I0412 02:04:04.814467  6979 net.cpp:226] conv4b needs backward computation.
I0412 02:04:04.814471  6979 net.cpp:226] relu4a needs backward computation.
I0412 02:04:04.814473  6979 net.cpp:226] conv4a needs backward computation.
I0412 02:04:04.814477  6979 net.cpp:226] pool3 needs backward computation.
I0412 02:04:04.814481  6979 net.cpp:226] relu3b needs backward computation.
I0412 02:04:04.814484  6979 net.cpp:226] conv3b needs backward computation.
I0412 02:04:04.814487  6979 net.cpp:226] relu3a needs backward computation.
I0412 02:04:04.814492  6979 net.cpp:226] conv3a needs backward computation.
I0412 02:04:04.814496  6979 net.cpp:228] pool2 does not need backward computation.
I0412 02:04:04.814501  6979 net.cpp:228] relu2a does not need backward computation.
I0412 02:04:04.814503  6979 net.cpp:228] conv2a does not need backward computation.
I0412 02:04:04.814507  6979 net.cpp:228] pool1 does not need backward computation.
I0412 02:04:04.814510  6979 net.cpp:228] relu1a does not need backward computation.
I0412 02:04:04.814514  6979 net.cpp:228] conv1a does not need backward computation.
I0412 02:04:04.814522  6979 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 02:04:04.814527  6979 net.cpp:228] data_data_0_split does not need backward computation.
I0412 02:04:04.814532  6979 net.cpp:228] data does not need backward computation.
I0412 02:04:04.814537  6979 net.cpp:270] This network produces output accuarcy
I0412 02:04:04.814541  6979 net.cpp:270] This network produces output loss_cls
I0412 02:04:04.814548  6979 net.cpp:270] This network produces output loss_twin
I0412 02:04:04.814553  6979 net.cpp:270] This network produces output rpn_accuarcy
I0412 02:04:04.814558  6979 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 02:04:04.814564  6979 net.cpp:270] This network produces output rpn_cls_loss
I0412 02:04:04.814570  6979 net.cpp:270] This network produces output rpn_loss_twin
I0412 02:04:04.814610  6979 net.cpp:283] Network initialization done.
I0412 02:04:04.814740  6979 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 02:04:05.001685  6979 net.cpp:761] Ignoring source layer pool5
I0412 02:04:05.028898  6979 net.cpp:761] Ignoring source layer fc7
I0412 02:04:05.028969  6979 net.cpp:761] Ignoring source layer relu7
I0412 02:04:05.028983  6979 net.cpp:761] Ignoring source layer drop7
I0412 02:04:05.028996  6979 net.cpp:761] Ignoring source layer fc8-200
I0412 02:04:05.029009  6979 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
F0412 02:04:05.052220  6979 syncedmem.cpp:56] Check failed: error == cudaSuccess (2 vs. 0)  out of memory
*** Check failure stack trace: ***
99
(array([0]), array([97]))
99
(array([0]), array([97]))
99
(array([0]), array([97]))
99
(array([0]), array([97]))
99
(array([0]), array([97]))
