Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=3, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 3,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
print done
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}]
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 23:36:35.939932 24940 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 23:36:35.940073 24940 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 23:36:35.941006 24940 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 23:36:35.948215 24940 layer_factory.hpp:77] Creating layer data
I0412 23:36:36.034382 24940 net.cpp:100] Creating Layer data
I0412 23:36:36.034420 24940 net.cpp:408] data -> data
I0412 23:36:36.034433 24940 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 23:36:36.051757 24940 net.cpp:150] Setting up data
I0412 23:36:36.051802 24940 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 23:36:36.051823 24940 net.cpp:157] Top shape: 1 3 (3)
I0412 23:36:36.051841 24940 net.cpp:165] Memory required for data: 115605516
I0412 23:36:36.051862 24940 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 23:36:36.051894 24940 net.cpp:100] Creating Layer data_data_0_split
I0412 23:36:36.051914 24940 net.cpp:434] data_data_0_split <- data
I0412 23:36:36.051936 24940 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 23:36:36.051972 24940 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 23:36:36.052090 24940 net.cpp:150] Setting up data_data_0_split
I0412 23:36:36.052119 24940 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 23:36:36.052139 24940 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 23:36:36.052156 24940 net.cpp:165] Memory required for data: 346816524
I0412 23:36:36.052175 24940 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 23:36:36.052196 24940 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 23:36:36.052213 24940 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 23:36:36.052234 24940 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 23:36:36.052260 24940 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 23:36:36.052366 24940 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 23:36:36.052392 24940 net.cpp:157] Top shape: 1 3 (3)
I0412 23:36:36.052412 24940 net.cpp:157] Top shape: 1 3 (3)
I0412 23:36:36.052428 24940 net.cpp:165] Memory required for data: 346816548
I0412 23:36:36.052445 24940 layer_factory.hpp:77] Creating layer conv1a
I0412 23:36:36.052479 24940 net.cpp:100] Creating Layer conv1a
I0412 23:36:36.052497 24940 net.cpp:434] conv1a <- data_data_0_split_0
I0412 23:36:36.052520 24940 net.cpp:408] conv1a -> conv1a
I0412 23:36:36.091140 24940 net.cpp:150] Setting up conv1a
I0412 23:36:36.091225 24940 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 23:36:36.091245 24940 net.cpp:165] Memory required for data: 2813067300
I0412 23:36:36.091279 24940 layer_factory.hpp:77] Creating layer relu1a
I0412 23:36:36.091310 24940 net.cpp:100] Creating Layer relu1a
I0412 23:36:36.091331 24940 net.cpp:434] relu1a <- conv1a
I0412 23:36:36.091353 24940 net.cpp:395] relu1a -> conv1a (in-place)
I0412 23:36:36.091379 24940 net.cpp:150] Setting up relu1a
I0412 23:36:36.091401 24940 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 23:36:36.091418 24940 net.cpp:165] Memory required for data: 5279318052
I0412 23:36:36.091436 24940 layer_factory.hpp:77] Creating layer pool1
I0412 23:36:36.091459 24940 net.cpp:100] Creating Layer pool1
I0412 23:36:36.091477 24940 net.cpp:434] pool1 <- conv1a
I0412 23:36:36.091500 24940 net.cpp:408] pool1 -> pool1
I0412 23:36:36.091646 24940 net.cpp:150] Setting up pool1
I0412 23:36:36.091670 24940 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 23:36:36.091697 24940 net.cpp:165] Memory required for data: 5895880740
I0412 23:36:36.091717 24940 layer_factory.hpp:77] Creating layer conv2a
I0412 23:36:36.091745 24940 net.cpp:100] Creating Layer conv2a
I0412 23:36:36.091765 24940 net.cpp:434] conv2a <- pool1
I0412 23:36:36.091789 24940 net.cpp:408] conv2a -> conv2a
I0412 23:36:36.103106 24940 net.cpp:150] Setting up conv2a
I0412 23:36:36.103269 24940 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 23:36:36.103322 24940 net.cpp:165] Memory required for data: 7129006116
I0412 23:36:36.103385 24940 layer_factory.hpp:77] Creating layer relu2a
I0412 23:36:36.103440 24940 net.cpp:100] Creating Layer relu2a
I0412 23:36:36.103487 24940 net.cpp:434] relu2a <- conv2a
I0412 23:36:36.103536 24940 net.cpp:395] relu2a -> conv2a (in-place)
I0412 23:36:36.103585 24940 net.cpp:150] Setting up relu2a
I0412 23:36:36.103628 24940 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 23:36:36.103667 24940 net.cpp:165] Memory required for data: 8362131492
I0412 23:36:36.103703 24940 layer_factory.hpp:77] Creating layer pool2
I0412 23:36:36.103751 24940 net.cpp:100] Creating Layer pool2
I0412 23:36:36.103791 24940 net.cpp:434] pool2 <- conv2a
I0412 23:36:36.103835 24940 net.cpp:408] pool2 -> pool2
I0412 23:36:36.103996 24940 net.cpp:150] Setting up pool2
I0412 23:36:36.104049 24940 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 23:36:36.104095 24940 net.cpp:165] Memory required for data: 8516272164
I0412 23:36:36.104136 24940 layer_factory.hpp:77] Creating layer conv3a
I0412 23:36:36.104187 24940 net.cpp:100] Creating Layer conv3a
I0412 23:36:36.104230 24940 net.cpp:434] conv3a <- pool2
I0412 23:36:36.104277 24940 net.cpp:408] conv3a -> conv3a
I0412 23:36:36.119902 24940 net.cpp:150] Setting up conv3a
I0412 23:36:36.120082 24940 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 23:36:36.120132 24940 net.cpp:165] Memory required for data: 8824553508
I0412 23:36:36.120185 24940 layer_factory.hpp:77] Creating layer relu3a
I0412 23:36:36.120237 24940 net.cpp:100] Creating Layer relu3a
I0412 23:36:36.120280 24940 net.cpp:434] relu3a <- conv3a
I0412 23:36:36.120357 24940 net.cpp:395] relu3a -> conv3a (in-place)
I0412 23:36:36.122068 24940 net.cpp:150] Setting up relu3a
I0412 23:36:36.122138 24940 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 23:36:36.122195 24940 net.cpp:165] Memory required for data: 9132834852
I0412 23:36:36.122254 24940 layer_factory.hpp:77] Creating layer conv3b
I0412 23:36:36.122320 24940 net.cpp:100] Creating Layer conv3b
I0412 23:36:36.122367 24940 net.cpp:434] conv3b <- conv3a
I0412 23:36:36.122411 24940 net.cpp:408] conv3b -> conv3b
I0412 23:36:36.196540 24940 net.cpp:150] Setting up conv3b
I0412 23:36:36.196708 24940 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 23:36:36.196756 24940 net.cpp:165] Memory required for data: 9441116196
I0412 23:36:36.200387 24940 layer_factory.hpp:77] Creating layer relu3b
I0412 23:36:36.200444 24940 net.cpp:100] Creating Layer relu3b
I0412 23:36:36.200484 24940 net.cpp:434] relu3b <- conv3b
I0412 23:36:36.200526 24940 net.cpp:395] relu3b -> conv3b (in-place)
I0412 23:36:36.200572 24940 net.cpp:150] Setting up relu3b
I0412 23:36:36.200620 24940 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 23:36:36.202330 24940 net.cpp:165] Memory required for data: 9749397540
I0412 23:36:36.202371 24940 layer_factory.hpp:77] Creating layer pool3
I0412 23:36:36.202419 24940 net.cpp:100] Creating Layer pool3
I0412 23:36:36.202458 24940 net.cpp:434] pool3 <- conv3b
I0412 23:36:36.202498 24940 net.cpp:408] pool3 -> pool3
I0412 23:36:36.202641 24940 net.cpp:150] Setting up pool3
I0412 23:36:36.202702 24940 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 23:36:36.202734 24940 net.cpp:165] Memory required for data: 9787932708
I0412 23:36:36.202764 24940 layer_factory.hpp:77] Creating layer conv4a
I0412 23:36:36.202811 24940 net.cpp:100] Creating Layer conv4a
I0412 23:36:36.202844 24940 net.cpp:434] conv4a <- pool3
I0412 23:36:36.202889 24940 net.cpp:408] conv4a -> conv4a
I0412 23:36:36.434818 24940 net.cpp:150] Setting up conv4a
I0412 23:36:36.436447 24940 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 23:36:36.436511 24940 net.cpp:165] Memory required for data: 9865003044
I0412 23:36:36.436568 24940 layer_factory.hpp:77] Creating layer relu4a
I0412 23:36:36.436620 24940 net.cpp:100] Creating Layer relu4a
I0412 23:36:36.436667 24940 net.cpp:434] relu4a <- conv4a
I0412 23:36:36.436712 24940 net.cpp:395] relu4a -> conv4a (in-place)
I0412 23:36:36.436760 24940 net.cpp:150] Setting up relu4a
I0412 23:36:36.436801 24940 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 23:36:36.436839 24940 net.cpp:165] Memory required for data: 9942073380
I0412 23:36:36.436877 24940 layer_factory.hpp:77] Creating layer conv4b
I0412 23:36:36.436928 24940 net.cpp:100] Creating Layer conv4b
I0412 23:36:36.436964 24940 net.cpp:434] conv4b <- conv4a
I0412 23:36:36.437000 24940 net.cpp:408] conv4b -> conv4b
I0412 23:36:36.721652 24940 net.cpp:150] Setting up conv4b
I0412 23:36:36.721868 24940 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 23:36:36.721920 24940 net.cpp:165] Memory required for data: 10019143716
I0412 23:36:36.721992 24940 layer_factory.hpp:77] Creating layer relu4b
I0412 23:36:36.722057 24940 net.cpp:100] Creating Layer relu4b
I0412 23:36:36.722110 24940 net.cpp:434] relu4b <- conv4b
I0412 23:36:36.722172 24940 net.cpp:395] relu4b -> conv4b (in-place)
I0412 23:36:36.722239 24940 net.cpp:150] Setting up relu4b
I0412 23:36:36.722298 24940 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 23:36:36.722352 24940 net.cpp:165] Memory required for data: 10096214052
I0412 23:36:36.722404 24940 layer_factory.hpp:77] Creating layer pool4
I0412 23:36:36.722457 24940 net.cpp:100] Creating Layer pool4
I0412 23:36:36.722504 24940 net.cpp:434] pool4 <- conv4b
I0412 23:36:36.722568 24940 net.cpp:408] pool4 -> pool4
I0412 23:36:36.722740 24940 net.cpp:150] Setting up pool4
I0412 23:36:36.722826 24940 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:36:36.722877 24940 net.cpp:165] Memory required for data: 10105847844
I0412 23:36:36.722924 24940 layer_factory.hpp:77] Creating layer conv5a
I0412 23:36:36.722982 24940 net.cpp:100] Creating Layer conv5a
I0412 23:36:36.723026 24940 net.cpp:434] conv5a <- pool4
I0412 23:36:36.723081 24940 net.cpp:408] conv5a -> conv5a
I0412 23:36:37.143374 24940 net.cpp:150] Setting up conv5a
I0412 23:36:37.143580 24940 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:36:37.143623 24940 net.cpp:165] Memory required for data: 10115481636
I0412 23:36:37.143672 24940 layer_factory.hpp:77] Creating layer relu5a
I0412 23:36:37.143720 24940 net.cpp:100] Creating Layer relu5a
I0412 23:36:37.143760 24940 net.cpp:434] relu5a <- conv5a
I0412 23:36:37.143813 24940 net.cpp:395] relu5a -> conv5a (in-place)
I0412 23:36:37.143858 24940 net.cpp:150] Setting up relu5a
I0412 23:36:37.143898 24940 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:36:37.143934 24940 net.cpp:165] Memory required for data: 10125115428
I0412 23:36:37.143965 24940 layer_factory.hpp:77] Creating layer conv5b
I0412 23:36:37.144009 24940 net.cpp:100] Creating Layer conv5b
I0412 23:36:37.144042 24940 net.cpp:434] conv5b <- conv5a
I0412 23:36:37.144078 24940 net.cpp:408] conv5b -> conv5b
I0412 23:36:37.510972 24940 net.cpp:150] Setting up conv5b
I0412 23:36:37.531913 24940 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:36:37.532407 24940 net.cpp:165] Memory required for data: 10134749220
I0412 23:36:37.532510 24940 layer_factory.hpp:77] Creating layer relu5b
I0412 23:36:37.532649 24940 net.cpp:100] Creating Layer relu5b
I0412 23:36:37.532783 24940 net.cpp:434] relu5b <- conv5b
I0412 23:36:37.532893 24940 net.cpp:395] relu5b -> conv5b (in-place)
I0412 23:36:37.533062 24940 net.cpp:150] Setting up relu5b
I0412 23:36:37.533205 24940 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:36:37.533301 24940 net.cpp:165] Memory required for data: 10144383012
I0412 23:36:37.533390 24940 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 23:36:37.533496 24940 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 23:36:37.533608 24940 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 23:36:37.533735 24940 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 23:36:37.533867 24940 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 23:36:37.534127 24940 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 23:36:37.534929 24940 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:36:37.535043 24940 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 23:36:37.535121 24940 net.cpp:165] Memory required for data: 10163650596
I0412 23:36:37.535193 24940 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 23:36:37.535317 24940 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 23:36:37.535475 24940 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 23:36:37.535562 24940 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 23:36:38.001305 24940 net.cpp:150] Setting up rpn_conv/3x3
I0412 23:36:38.001472 24940 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 23:36:38.001515 24940 net.cpp:165] Memory required for data: 10166796324
I0412 23:36:38.001574 24940 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 23:36:38.001627 24940 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 23:36:38.001668 24940 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 23:36:38.001713 24940 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 23:36:38.001760 24940 net.cpp:150] Setting up rpn_relu/3x3
I0412 23:36:38.001803 24940 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 23:36:38.001840 24940 net.cpp:165] Memory required for data: 10169942052
I0412 23:36:38.001879 24940 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 23:36:38.001927 24940 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 23:36:38.001962 24940 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 23:36:38.002002 24940 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 23:36:38.185238 24940 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 23:36:38.185415 24940 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 23:36:38.185465 24940 net.cpp:165] Memory required for data: 10170728484
I0412 23:36:38.185508 24940 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 23:36:38.185571 24940 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 23:36:38.185613 24940 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 23:36:38.185665 24940 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 23:36:38.185714 24940 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 23:36:38.185753 24940 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 23:36:38.185761 24940 net.cpp:165] Memory required for data: 10171514916
I0412 23:36:38.185765 24940 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 23:36:38.185806 24940 net.cpp:100] Creating Layer rpn/output_pool
I0412 23:36:38.185824 24940 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 23:36:38.185845 24940 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 23:36:38.185945 24940 net.cpp:150] Setting up rpn/output_pool
I0412 23:36:38.185992 24940 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 23:36:38.186028 24940 net.cpp:165] Memory required for data: 10171711524
I0412 23:36:38.186061 24940 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 23:36:38.186097 24940 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 23:36:38.186128 24940 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 23:36:38.186164 24940 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 23:36:38.186202 24940 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 23:36:38.186290 24940 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 23:36:38.186334 24940 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 23:36:38.186372 24940 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 23:36:38.186404 24940 net.cpp:165] Memory required for data: 10172104740
I0412 23:36:38.186444 24940 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 23:36:38.186489 24940 net.cpp:100] Creating Layer rpn_cls_score
I0412 23:36:38.186523 24940 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 23:36:38.186560 24940 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 23:36:38.187456 24940 net.cpp:150] Setting up rpn_cls_score
I0412 23:36:38.187485 24940 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:36:38.187500 24940 net.cpp:165] Memory required for data: 10172133156
I0412 23:36:38.187518 24940 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 23:36:38.187536 24940 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 23:36:38.187549 24940 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 23:36:38.187567 24940 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 23:36:38.187585 24940 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 23:36:38.187665 24940 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 23:36:38.187692 24940 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:36:38.187711 24940 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:36:38.187726 24940 net.cpp:165] Memory required for data: 10172189988
I0412 23:36:38.187741 24940 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 23:36:38.187772 24940 net.cpp:100] Creating Layer rpn_twin_pred
I0412 23:36:38.187791 24940 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 23:36:38.187810 24940 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 23:36:38.188652 24940 net.cpp:150] Setting up rpn_twin_pred
I0412 23:36:38.188707 24940 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:36:38.188742 24940 net.cpp:165] Memory required for data: 10172218404
I0412 23:36:38.188778 24940 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 23:36:38.188817 24940 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 23:36:38.188850 24940 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 23:36:38.188884 24940 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 23:36:38.188921 24940 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 23:36:38.189026 24940 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 23:36:38.189070 24940 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:36:38.189108 24940 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:36:38.189138 24940 net.cpp:165] Memory required for data: 10172275236
I0412 23:36:38.189168 24940 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 23:36:38.189204 24940 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 23:36:38.189235 24940 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 23:36:38.189268 24940 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 23:36:38.189342 24940 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 23:36:38.189380 24940 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 23:36:38.189410 24940 net.cpp:165] Memory required for data: 10172303652
I0412 23:36:38.189440 24940 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 23:36:38.189473 24940 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 23:36:38.189503 24940 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 23:36:38.189538 24940 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 23:36:38.189584 24940 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 23:36:38.189622 24940 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 23:36:38.189738 24940 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 23:36:38.189750 24940 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 23:36:38.189780 24940 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 23:36:38.189788 24940 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 23:36:38.189810 24940 net.cpp:165] Memory required for data: 10172388900
I0412 23:36:38.189824 24940 layer_factory.hpp:77] Creating layer rpn-data
I0412 23:36:38.190390 24940 net.cpp:100] Creating Layer rpn-data
I0412 23:36:38.190466 24940 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 23:36:38.190503 24940 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 23:36:38.190536 24940 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 23:36:38.190572 24940 net.cpp:408] rpn-data -> rpn_labels
I0412 23:36:38.190587 24940 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 23:36:38.190621 24940 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 23:36:38.190647 24940 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 23:36:38.194452 24940 net.cpp:150] Setting up rpn-data
I0412 23:36:38.194584 24940 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 23:36:38.194620 24940 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:36:38.194651 24940 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:36:38.194684 24940 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:36:38.194712 24940 net.cpp:165] Memory required for data: 10172488356
I0412 23:36:38.194746 24940 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 23:36:38.194784 24940 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 23:36:38.194821 24940 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 23:36:38.194864 24940 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 23:36:38.194905 24940 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 23:36:38.194993 24940 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 23:36:38.195053 24940 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 23:36:38.195086 24940 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 23:36:38.195116 24940 net.cpp:165] Memory required for data: 10172516772
I0412 23:36:38.195145 24940 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 23:36:38.195181 24940 net.cpp:100] Creating Layer rpn_loss_cls
I0412 23:36:38.195212 24940 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 23:36:38.195245 24940 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 23:36:38.195278 24940 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 23:36:38.195317 24940 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 23:36:38.195525 24940 net.cpp:150] Setting up rpn_loss_cls
I0412 23:36:38.195578 24940 net.cpp:157] Top shape: (1)
I0412 23:36:38.195608 24940 net.cpp:160]     with loss weight 1
I0412 23:36:38.195657 24940 net.cpp:165] Memory required for data: 10172516776
I0412 23:36:38.195688 24940 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 23:36:38.195722 24940 net.cpp:100] Creating Layer rpn_loss_twin
I0412 23:36:38.195753 24940 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 23:36:38.195785 24940 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 23:36:38.195817 24940 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 23:36:38.195849 24940 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 23:36:38.195883 24940 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 23:36:38.196049 24940 net.cpp:150] Setting up rpn_loss_twin
I0412 23:36:38.196102 24940 net.cpp:157] Top shape: (1)
I0412 23:36:38.196132 24940 net.cpp:160]     with loss weight 1
I0412 23:36:38.196166 24940 net.cpp:165] Memory required for data: 10172516780
I0412 23:36:38.196195 24940 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 23:36:38.196230 24940 net.cpp:100] Creating Layer rpn_accuarcy
I0412 23:36:38.196262 24940 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 23:36:38.196306 24940 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 23:36:38.196389 24940 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 23:36:38.196435 24940 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 23:36:38.196534 24940 net.cpp:150] Setting up rpn_accuarcy
I0412 23:36:38.196586 24940 net.cpp:157] Top shape: (1)
I0412 23:36:38.196619 24940 net.cpp:157] Top shape: 2 (2)
I0412 23:36:38.196647 24940 net.cpp:165] Memory required for data: 10172516792
I0412 23:36:38.196678 24940 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 23:36:38.196689 24940 net.cpp:100] Creating Layer rpn_cls_prob
I0412 23:36:38.196694 24940 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 23:36:38.196703 24940 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 23:36:38.196804 24940 net.cpp:150] Setting up rpn_cls_prob
I0412 23:36:38.196846 24940 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 23:36:38.196877 24940 net.cpp:165] Memory required for data: 10172545208
I0412 23:36:38.196907 24940 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 23:36:38.196943 24940 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 23:36:38.196974 24940 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 23:36:38.197013 24940 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 23:36:38.197082 24940 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 23:36:38.197093 24940 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 23:36:38.197115 24940 net.cpp:165] Memory required for data: 10172573624
I0412 23:36:38.197149 24940 layer_factory.hpp:77] Creating layer proposal
I0412 23:36:38.198015 24940 net.cpp:100] Creating Layer proposal
I0412 23:36:38.198087 24940 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 23:36:38.198125 24940 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 23:36:38.198163 24940 net.cpp:408] proposal -> rpn_rois
I0412 23:36:38.206812 24940 net.cpp:150] Setting up proposal
I0412 23:36:38.206851 24940 net.cpp:157] Top shape: 1 3 (3)
I0412 23:36:38.206856 24940 net.cpp:165] Memory required for data: 10172573636
I0412 23:36:38.206863 24940 layer_factory.hpp:77] Creating layer roi-data
I0412 23:36:38.207360 24940 net.cpp:100] Creating Layer roi-data
I0412 23:36:38.207379 24940 net.cpp:434] roi-data <- rpn_rois
I0412 23:36:38.207392 24940 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 23:36:38.207402 24940 net.cpp:408] roi-data -> rois
I0412 23:36:38.207417 24940 net.cpp:408] roi-data -> labels
I0412 23:36:38.207427 24940 net.cpp:408] roi-data -> twin_targets
I0412 23:36:38.207435 24940 net.cpp:408] roi-data -> twin_inside_weights
I0412 23:36:38.207445 24940 net.cpp:408] roi-data -> twin_outside_weights
I0412 23:36:38.208117 24940 net.cpp:150] Setting up roi-data
I0412 23:36:38.208135 24940 net.cpp:157] Top shape: 1 3 (3)
I0412 23:36:38.208139 24940 net.cpp:157] Top shape: 1 1 (1)
I0412 23:36:38.208143 24940 net.cpp:157] Top shape: 1 402 (402)
I0412 23:36:38.208147 24940 net.cpp:157] Top shape: 1 402 (402)
I0412 23:36:38.208150 24940 net.cpp:157] Top shape: 1 402 (402)
I0412 23:36:38.208153 24940 net.cpp:165] Memory required for data: 10172578476
I0412 23:36:38.208158 24940 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 23:36:38.208168 24940 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 23:36:38.208171 24940 net.cpp:434] labels_roi-data_1_split <- labels
I0412 23:36:38.208176 24940 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 23:36:38.208184 24940 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 23:36:38.208227 24940 net.cpp:150] Setting up labels_roi-data_1_split
I0412 23:36:38.208235 24940 net.cpp:157] Top shape: 1 1 (1)
I0412 23:36:38.208240 24940 net.cpp:157] Top shape: 1 1 (1)
I0412 23:36:38.208245 24940 net.cpp:165] Memory required for data: 10172578484
I0412 23:36:38.208248 24940 layer_factory.hpp:77] Creating layer roi_pool5
I0412 23:36:38.208258 24940 net.cpp:100] Creating Layer roi_pool5
I0412 23:36:38.209058 24940 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 23:36:38.209084 24940 net.cpp:434] roi_pool5 <- rois
I0412 23:36:38.209103 24940 net.cpp:408] roi_pool5 -> pool5
I0412 23:36:38.209115 24940 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 23:36:38.209128 24940 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 23:36:38.209195 24940 net.cpp:150] Setting up roi_pool5
I0412 23:36:38.209203 24940 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 23:36:38.209208 24940 net.cpp:165] Memory required for data: 10172611252
I0412 23:36:38.209213 24940 layer_factory.hpp:77] Creating layer fc6
I0412 23:36:38.209223 24940 net.cpp:100] Creating Layer fc6
I0412 23:36:38.209230 24940 net.cpp:434] fc6 <- pool5
I0412 23:36:38.209237 24940 net.cpp:408] fc6 -> fc6
I0412 23:36:39.169236 24940 net.cpp:150] Setting up fc6
I0412 23:36:39.169277 24940 net.cpp:157] Top shape: 1 4096 (4096)
I0412 23:36:39.169281 24940 net.cpp:165] Memory required for data: 10172627636
I0412 23:36:39.169410 24940 layer_factory.hpp:77] Creating layer relu6
I0412 23:36:39.169453 24940 net.cpp:100] Creating Layer relu6
I0412 23:36:39.169464 24940 net.cpp:434] relu6 <- fc6
I0412 23:36:39.169523 24940 net.cpp:395] relu6 -> fc6 (in-place)
I0412 23:36:39.169559 24940 net.cpp:150] Setting up relu6
I0412 23:36:39.169567 24940 net.cpp:157] Top shape: 1 4096 (4096)
I0412 23:36:39.169592 24940 net.cpp:165] Memory required for data: 10172644020
I0412 23:36:39.169616 24940 layer_factory.hpp:77] Creating layer drop6
I0412 23:36:39.169663 24940 net.cpp:100] Creating Layer drop6
I0412 23:36:39.169670 24940 net.cpp:434] drop6 <- fc6
I0412 23:36:39.169714 24940 net.cpp:395] drop6 -> fc6 (in-place)
I0412 23:36:39.169780 24940 net.cpp:150] Setting up drop6
I0412 23:36:39.169790 24940 net.cpp:157] Top shape: 1 4096 (4096)
I0412 23:36:39.169816 24940 net.cpp:165] Memory required for data: 10172660404
I0412 23:36:39.169842 24940 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 23:36:39.169889 24940 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 23:36:39.169898 24940 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 23:36:39.169940 24940 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 23:36:39.169971 24940 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 23:36:39.170053 24940 net.cpp:150] Setting up fc6_drop6_0_split
I0412 23:36:39.170063 24940 net.cpp:157] Top shape: 1 4096 (4096)
I0412 23:36:39.170106 24940 net.cpp:157] Top shape: 1 4096 (4096)
I0412 23:36:39.170115 24940 net.cpp:165] Memory required for data: 10172693172
I0412 23:36:39.170140 24940 layer_factory.hpp:77] Creating layer cls_score
I0412 23:36:39.170189 24940 net.cpp:100] Creating Layer cls_score
I0412 23:36:39.170197 24940 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 23:36:39.170243 24940 net.cpp:408] cls_score -> cls_score
I0412 23:36:39.473887 24940 net.cpp:150] Setting up cls_score
I0412 23:36:39.473947 24940 net.cpp:157] Top shape: 1 201 (201)
I0412 23:36:39.473960 24940 net.cpp:165] Memory required for data: 10172693976
I0412 23:36:39.473981 24940 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 23:36:39.474000 24940 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 23:36:39.474015 24940 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 23:36:39.474035 24940 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 23:36:39.474056 24940 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 23:36:39.474129 24940 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 23:36:39.474148 24940 net.cpp:157] Top shape: 1 201 (201)
I0412 23:36:39.474162 24940 net.cpp:157] Top shape: 1 201 (201)
I0412 23:36:39.474174 24940 net.cpp:165] Memory required for data: 10172695584
I0412 23:36:39.474186 24940 layer_factory.hpp:77] Creating layer twin_pred
I0412 23:36:39.474206 24940 net.cpp:100] Creating Layer twin_pred
I0412 23:36:39.474220 24940 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 23:36:39.474239 24940 net.cpp:408] twin_pred -> twin_pred
I0412 23:36:39.606406 24940 net.cpp:150] Setting up twin_pred
I0412 23:36:39.606570 24940 net.cpp:157] Top shape: 1 402 (402)
I0412 23:36:39.606616 24940 net.cpp:165] Memory required for data: 10172697192
I0412 23:36:39.606667 24940 layer_factory.hpp:77] Creating layer loss_cls
I0412 23:36:39.606714 24940 net.cpp:100] Creating Layer loss_cls
I0412 23:36:39.606760 24940 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 23:36:39.606814 24940 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 23:36:39.606851 24940 net.cpp:408] loss_cls -> loss_cls
I0412 23:36:39.606904 24940 layer_factory.hpp:77] Creating layer loss_cls
I0412 23:36:39.607164 24940 net.cpp:150] Setting up loss_cls
I0412 23:36:39.607213 24940 net.cpp:157] Top shape: (1)
I0412 23:36:39.607251 24940 net.cpp:160]     with loss weight 1
I0412 23:36:39.607298 24940 net.cpp:165] Memory required for data: 10172697196
I0412 23:36:39.607342 24940 layer_factory.hpp:77] Creating layer loss_twin
I0412 23:36:39.607385 24940 net.cpp:100] Creating Layer loss_twin
I0412 23:36:39.607422 24940 net.cpp:434] loss_twin <- twin_pred
I0412 23:36:39.607453 24940 net.cpp:434] loss_twin <- twin_targets
I0412 23:36:39.607484 24940 net.cpp:434] loss_twin <- twin_inside_weights
I0412 23:36:39.607520 24940 net.cpp:434] loss_twin <- twin_outside_weights
I0412 23:36:39.607555 24940 net.cpp:408] loss_twin -> loss_twin
I0412 23:36:39.607769 24940 net.cpp:150] Setting up loss_twin
I0412 23:36:39.607815 24940 net.cpp:157] Top shape: (1)
I0412 23:36:39.607849 24940 net.cpp:160]     with loss weight 1
I0412 23:36:39.607889 24940 net.cpp:165] Memory required for data: 10172697200
I0412 23:36:39.607924 24940 layer_factory.hpp:77] Creating layer accuarcy
I0412 23:36:39.607964 24940 net.cpp:100] Creating Layer accuarcy
I0412 23:36:39.607996 24940 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 23:36:39.608033 24940 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 23:36:39.608073 24940 net.cpp:408] accuarcy -> accuarcy
I0412 23:36:39.608146 24940 net.cpp:150] Setting up accuarcy
I0412 23:36:39.608199 24940 net.cpp:157] Top shape: (1)
I0412 23:36:39.608237 24940 net.cpp:165] Memory required for data: 10172697204
I0412 23:36:39.608269 24940 net.cpp:228] accuarcy does not need backward computation.
I0412 23:36:39.608300 24940 net.cpp:226] loss_twin needs backward computation.
I0412 23:36:39.608312 24940 net.cpp:226] loss_cls needs backward computation.
I0412 23:36:39.608320 24940 net.cpp:226] twin_pred needs backward computation.
I0412 23:36:39.608371 24940 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 23:36:39.608404 24940 net.cpp:226] cls_score needs backward computation.
I0412 23:36:39.608438 24940 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 23:36:39.608500 24940 net.cpp:226] drop6 needs backward computation.
I0412 23:36:39.608536 24940 net.cpp:226] relu6 needs backward computation.
I0412 23:36:39.608546 24940 net.cpp:226] fc6 needs backward computation.
I0412 23:36:39.608551 24940 net.cpp:226] roi_pool5 needs backward computation.
I0412 23:36:39.608618 24940 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 23:36:39.608661 24940 net.cpp:226] roi-data needs backward computation.
I0412 23:36:39.608700 24940 net.cpp:226] proposal needs backward computation.
I0412 23:36:39.608755 24940 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 23:36:39.608793 24940 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 23:36:39.608834 24940 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 23:36:39.608876 24940 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 23:36:39.608928 24940 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 23:36:39.608979 24940 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 23:36:39.609019 24940 net.cpp:226] rpn-data needs backward computation.
I0412 23:36:39.609061 24940 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 23:36:39.609099 24940 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 23:36:39.609151 24940 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 23:36:39.609197 24940 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 23:36:39.609241 24940 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 23:36:39.609280 24940 net.cpp:226] rpn_cls_score needs backward computation.
I0412 23:36:39.609319 24940 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 23:36:39.609364 24940 net.cpp:226] rpn/output_pool needs backward computation.
I0412 23:36:39.609413 24940 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 23:36:39.609452 24940 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 23:36:39.609489 24940 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 23:36:39.609530 24940 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 23:36:39.609573 24940 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 23:36:39.609624 24940 net.cpp:226] relu5b needs backward computation.
I0412 23:36:39.609669 24940 net.cpp:226] conv5b needs backward computation.
I0412 23:36:39.609719 24940 net.cpp:226] relu5a needs backward computation.
I0412 23:36:39.609761 24940 net.cpp:226] conv5a needs backward computation.
I0412 23:36:39.609798 24940 net.cpp:226] pool4 needs backward computation.
I0412 23:36:39.609848 24940 net.cpp:226] relu4b needs backward computation.
I0412 23:36:39.609891 24940 net.cpp:226] conv4b needs backward computation.
I0412 23:36:39.609943 24940 net.cpp:226] relu4a needs backward computation.
I0412 23:36:39.609987 24940 net.cpp:226] conv4a needs backward computation.
I0412 23:36:39.610031 24940 net.cpp:226] pool3 needs backward computation.
I0412 23:36:39.610071 24940 net.cpp:226] relu3b needs backward computation.
I0412 23:36:39.610110 24940 net.cpp:226] conv3b needs backward computation.
I0412 23:36:39.610155 24940 net.cpp:226] relu3a needs backward computation.
I0412 23:36:39.610199 24940 net.cpp:226] conv3a needs backward computation.
I0412 23:36:39.610239 24940 net.cpp:228] pool2 does not need backward computation.
I0412 23:36:39.610265 24940 net.cpp:228] relu2a does not need backward computation.
I0412 23:36:39.610293 24940 net.cpp:228] conv2a does not need backward computation.
I0412 23:36:39.610321 24940 net.cpp:228] pool1 does not need backward computation.
I0412 23:36:39.610348 24940 net.cpp:228] relu1a does not need backward computation.
I0412 23:36:39.610371 24940 net.cpp:228] conv1a does not need backward computation.
I0412 23:36:39.610393 24940 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 23:36:39.610416 24940 net.cpp:228] data_data_0_split does not need backward computation.
I0412 23:36:39.610436 24940 net.cpp:228] data does not need backward computation.
I0412 23:36:39.610455 24940 net.cpp:270] This network produces output accuarcy
I0412 23:36:39.610472 24940 net.cpp:270] This network produces output loss_cls
I0412 23:36:39.610494 24940 net.cpp:270] This network produces output loss_twin
I0412 23:36:39.610520 24940 net.cpp:270] This network produces output rpn_accuarcy
I0412 23:36:39.610538 24940 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 23:36:39.610568 24940 net.cpp:270] This network produces output rpn_cls_loss
I0412 23:36:39.610596 24940 net.cpp:270] This network produces output rpn_loss_twin
I0412 23:36:39.610711 24940 net.cpp:283] Network initialization done.
I0412 23:36:39.611021 24940 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 23:36:44.255463 24940 net.cpp:761] Ignoring source layer pool5
I0412 23:36:44.490357 24940 net.cpp:761] Ignoring source layer fc7
I0412 23:36:44.516373 24940 net.cpp:761] Ignoring source layer relu7
I0412 23:36:44.516496 24940 net.cpp:761] Ignoring source layer drop7
I0412 23:36:44.516535 24940 net.cpp:761] Ignoring source layer fc8-200
I0412 23:36:44.516566 24940 net.cpp:761] Ignoring source layer loss
Solving...
F0412 23:36:54.472926 24940 syncedmem.cpp:56] Check failed: error == cudaSuccess (2 vs. 0)  out of memory
*** Check failure stack trace: ***
