Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=0, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 0,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
print done
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}]
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 15:01:59.112656 26388 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 15:01:59.112687 26388 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 15:01:59.119061 26388 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 15:01:59.119282 26388 layer_factory.hpp:77] Creating layer data
I0412 15:01:59.131216 26388 net.cpp:100] Creating Layer data
I0412 15:01:59.131230 26388 net.cpp:408] data -> data
I0412 15:01:59.131242 26388 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 15:01:59.131636 26388 net.cpp:150] Setting up data
I0412 15:01:59.131650 26388 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 15:01:59.131656 26388 net.cpp:157] Top shape: 1 3 (3)
I0412 15:01:59.131659 26388 net.cpp:165] Memory required for data: 115605516
I0412 15:01:59.131667 26388 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 15:01:59.131675 26388 net.cpp:100] Creating Layer data_data_0_split
I0412 15:01:59.131681 26388 net.cpp:434] data_data_0_split <- data
I0412 15:01:59.131688 26388 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 15:01:59.131695 26388 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 15:01:59.131702 26388 net.cpp:150] Setting up data_data_0_split
I0412 15:01:59.131706 26388 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 15:01:59.131711 26388 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 15:01:59.131716 26388 net.cpp:165] Memory required for data: 346816524
I0412 15:01:59.131718 26388 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 15:01:59.131724 26388 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 15:01:59.131727 26388 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 15:01:59.131732 26388 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 15:01:59.131741 26388 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 15:01:59.131752 26388 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 15:01:59.131759 26388 net.cpp:157] Top shape: 1 3 (3)
I0412 15:01:59.131763 26388 net.cpp:157] Top shape: 1 3 (3)
I0412 15:01:59.131765 26388 net.cpp:165] Memory required for data: 346816548
I0412 15:01:59.131769 26388 layer_factory.hpp:77] Creating layer conv1a
I0412 15:01:59.131778 26388 net.cpp:100] Creating Layer conv1a
I0412 15:01:59.131780 26388 net.cpp:434] conv1a <- data_data_0_split_0
I0412 15:01:59.131785 26388 net.cpp:408] conv1a -> conv1a
I0412 15:01:59.150916 26388 net.cpp:150] Setting up conv1a
I0412 15:01:59.150948 26388 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 15:01:59.150952 26388 net.cpp:165] Memory required for data: 2813067300
I0412 15:01:59.150965 26388 layer_factory.hpp:77] Creating layer relu1a
I0412 15:01:59.150977 26388 net.cpp:100] Creating Layer relu1a
I0412 15:01:59.150982 26388 net.cpp:434] relu1a <- conv1a
I0412 15:01:59.150990 26388 net.cpp:395] relu1a -> conv1a (in-place)
I0412 15:01:59.151000 26388 net.cpp:150] Setting up relu1a
I0412 15:01:59.151006 26388 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 15:01:59.151010 26388 net.cpp:165] Memory required for data: 5279318052
I0412 15:01:59.151012 26388 layer_factory.hpp:77] Creating layer pool1
I0412 15:01:59.151021 26388 net.cpp:100] Creating Layer pool1
I0412 15:01:59.151026 26388 net.cpp:434] pool1 <- conv1a
I0412 15:01:59.151031 26388 net.cpp:408] pool1 -> pool1
I0412 15:01:59.151042 26388 net.cpp:150] Setting up pool1
I0412 15:01:59.151048 26388 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 15:01:59.151051 26388 net.cpp:165] Memory required for data: 5895880740
I0412 15:01:59.151054 26388 layer_factory.hpp:77] Creating layer conv2a
I0412 15:01:59.151063 26388 net.cpp:100] Creating Layer conv2a
I0412 15:01:59.151067 26388 net.cpp:434] conv2a <- pool1
I0412 15:01:59.151074 26388 net.cpp:408] conv2a -> conv2a
I0412 15:01:59.173821 26388 net.cpp:150] Setting up conv2a
I0412 15:01:59.173840 26388 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 15:01:59.173843 26388 net.cpp:165] Memory required for data: 7129006116
I0412 15:01:59.173857 26388 layer_factory.hpp:77] Creating layer relu2a
I0412 15:01:59.173866 26388 net.cpp:100] Creating Layer relu2a
I0412 15:01:59.173868 26388 net.cpp:434] relu2a <- conv2a
I0412 15:01:59.173873 26388 net.cpp:395] relu2a -> conv2a (in-place)
I0412 15:01:59.173878 26388 net.cpp:150] Setting up relu2a
I0412 15:01:59.173883 26388 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 15:01:59.173887 26388 net.cpp:165] Memory required for data: 8362131492
I0412 15:01:59.173892 26388 layer_factory.hpp:77] Creating layer pool2
I0412 15:01:59.173899 26388 net.cpp:100] Creating Layer pool2
I0412 15:01:59.173903 26388 net.cpp:434] pool2 <- conv2a
I0412 15:01:59.173908 26388 net.cpp:408] pool2 -> pool2
I0412 15:01:59.173919 26388 net.cpp:150] Setting up pool2
I0412 15:01:59.173926 26388 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 15:01:59.173929 26388 net.cpp:165] Memory required for data: 8516272164
I0412 15:01:59.173933 26388 layer_factory.hpp:77] Creating layer conv3a
I0412 15:01:59.173939 26388 net.cpp:100] Creating Layer conv3a
I0412 15:01:59.173943 26388 net.cpp:434] conv3a <- pool2
I0412 15:01:59.173949 26388 net.cpp:408] conv3a -> conv3a
I0412 15:01:59.187057 26388 net.cpp:150] Setting up conv3a
I0412 15:01:59.187072 26388 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 15:01:59.187077 26388 net.cpp:165] Memory required for data: 8824553508
I0412 15:01:59.187085 26388 layer_factory.hpp:77] Creating layer relu3a
I0412 15:01:59.187093 26388 net.cpp:100] Creating Layer relu3a
I0412 15:01:59.187096 26388 net.cpp:434] relu3a <- conv3a
I0412 15:01:59.187100 26388 net.cpp:395] relu3a -> conv3a (in-place)
I0412 15:01:59.187106 26388 net.cpp:150] Setting up relu3a
I0412 15:01:59.187110 26388 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 15:01:59.187114 26388 net.cpp:165] Memory required for data: 9132834852
I0412 15:01:59.187119 26388 layer_factory.hpp:77] Creating layer conv3b
I0412 15:01:59.187129 26388 net.cpp:100] Creating Layer conv3b
I0412 15:01:59.187132 26388 net.cpp:434] conv3b <- conv3a
I0412 15:01:59.187141 26388 net.cpp:408] conv3b -> conv3b
I0412 15:01:59.212694 26388 net.cpp:150] Setting up conv3b
I0412 15:01:59.212709 26388 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 15:01:59.212713 26388 net.cpp:165] Memory required for data: 9441116196
I0412 15:01:59.212720 26388 layer_factory.hpp:77] Creating layer relu3b
I0412 15:01:59.212730 26388 net.cpp:100] Creating Layer relu3b
I0412 15:01:59.212734 26388 net.cpp:434] relu3b <- conv3b
I0412 15:01:59.212741 26388 net.cpp:395] relu3b -> conv3b (in-place)
I0412 15:01:59.212749 26388 net.cpp:150] Setting up relu3b
I0412 15:01:59.212754 26388 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 15:01:59.212759 26388 net.cpp:165] Memory required for data: 9749397540
I0412 15:01:59.212761 26388 layer_factory.hpp:77] Creating layer pool3
I0412 15:01:59.212766 26388 net.cpp:100] Creating Layer pool3
I0412 15:01:59.212769 26388 net.cpp:434] pool3 <- conv3b
I0412 15:01:59.212774 26388 net.cpp:408] pool3 -> pool3
I0412 15:01:59.212783 26388 net.cpp:150] Setting up pool3
I0412 15:01:59.212790 26388 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 15:01:59.212795 26388 net.cpp:165] Memory required for data: 9787932708
I0412 15:01:59.212798 26388 layer_factory.hpp:77] Creating layer conv4a
I0412 15:01:59.212808 26388 net.cpp:100] Creating Layer conv4a
I0412 15:01:59.212815 26388 net.cpp:434] conv4a <- pool3
I0412 15:01:59.212821 26388 net.cpp:408] conv4a -> conv4a
I0412 15:01:59.263646 26388 net.cpp:150] Setting up conv4a
I0412 15:01:59.263670 26388 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 15:01:59.263674 26388 net.cpp:165] Memory required for data: 9865003044
I0412 15:01:59.263687 26388 layer_factory.hpp:77] Creating layer relu4a
I0412 15:01:59.263695 26388 net.cpp:100] Creating Layer relu4a
I0412 15:01:59.263700 26388 net.cpp:434] relu4a <- conv4a
I0412 15:01:59.263706 26388 net.cpp:395] relu4a -> conv4a (in-place)
I0412 15:01:59.263715 26388 net.cpp:150] Setting up relu4a
I0412 15:01:59.263720 26388 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 15:01:59.263722 26388 net.cpp:165] Memory required for data: 9942073380
I0412 15:01:59.263725 26388 layer_factory.hpp:77] Creating layer conv4b
I0412 15:01:59.263736 26388 net.cpp:100] Creating Layer conv4b
I0412 15:01:59.263739 26388 net.cpp:434] conv4b <- conv4a
I0412 15:01:59.263746 26388 net.cpp:408] conv4b -> conv4b
I0412 15:01:59.359382 26388 net.cpp:150] Setting up conv4b
I0412 15:01:59.359410 26388 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 15:01:59.359413 26388 net.cpp:165] Memory required for data: 10019143716
I0412 15:01:59.359421 26388 layer_factory.hpp:77] Creating layer relu4b
I0412 15:01:59.359429 26388 net.cpp:100] Creating Layer relu4b
I0412 15:01:59.359434 26388 net.cpp:434] relu4b <- conv4b
I0412 15:01:59.359439 26388 net.cpp:395] relu4b -> conv4b (in-place)
I0412 15:01:59.359447 26388 net.cpp:150] Setting up relu4b
I0412 15:01:59.359452 26388 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 15:01:59.359454 26388 net.cpp:165] Memory required for data: 10096214052
I0412 15:01:59.359457 26388 layer_factory.hpp:77] Creating layer pool4
I0412 15:01:59.359464 26388 net.cpp:100] Creating Layer pool4
I0412 15:01:59.359467 26388 net.cpp:434] pool4 <- conv4b
I0412 15:01:59.359472 26388 net.cpp:408] pool4 -> pool4
I0412 15:01:59.359480 26388 net.cpp:150] Setting up pool4
I0412 15:01:59.359488 26388 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:01:59.359490 26388 net.cpp:165] Memory required for data: 10105847844
I0412 15:01:59.359493 26388 layer_factory.hpp:77] Creating layer conv5a
I0412 15:01:59.359501 26388 net.cpp:100] Creating Layer conv5a
I0412 15:01:59.359503 26388 net.cpp:434] conv5a <- pool4
I0412 15:01:59.359509 26388 net.cpp:408] conv5a -> conv5a
I0412 15:01:59.463768 26388 net.cpp:150] Setting up conv5a
I0412 15:01:59.463795 26388 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:01:59.463798 26388 net.cpp:165] Memory required for data: 10115481636
I0412 15:01:59.463805 26388 layer_factory.hpp:77] Creating layer relu5a
I0412 15:01:59.463814 26388 net.cpp:100] Creating Layer relu5a
I0412 15:01:59.463817 26388 net.cpp:434] relu5a <- conv5a
I0412 15:01:59.463824 26388 net.cpp:395] relu5a -> conv5a (in-place)
I0412 15:01:59.463831 26388 net.cpp:150] Setting up relu5a
I0412 15:01:59.463835 26388 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:01:59.463837 26388 net.cpp:165] Memory required for data: 10125115428
I0412 15:01:59.463840 26388 layer_factory.hpp:77] Creating layer conv5b
I0412 15:01:59.463850 26388 net.cpp:100] Creating Layer conv5b
I0412 15:01:59.463855 26388 net.cpp:434] conv5b <- conv5a
I0412 15:01:59.463860 26388 net.cpp:408] conv5b -> conv5b
I0412 15:01:59.565533 26388 net.cpp:150] Setting up conv5b
I0412 15:01:59.565565 26388 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:01:59.565568 26388 net.cpp:165] Memory required for data: 10134749220
I0412 15:01:59.565577 26388 layer_factory.hpp:77] Creating layer relu5b
I0412 15:01:59.565584 26388 net.cpp:100] Creating Layer relu5b
I0412 15:01:59.565588 26388 net.cpp:434] relu5b <- conv5b
I0412 15:01:59.565594 26388 net.cpp:395] relu5b -> conv5b (in-place)
I0412 15:01:59.565603 26388 net.cpp:150] Setting up relu5b
I0412 15:01:59.565606 26388 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:01:59.565609 26388 net.cpp:165] Memory required for data: 10144383012
I0412 15:01:59.565613 26388 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 15:01:59.565616 26388 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 15:01:59.565619 26388 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 15:01:59.565625 26388 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 15:01:59.565631 26388 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 15:01:59.565637 26388 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 15:01:59.565640 26388 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:01:59.565644 26388 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:01:59.565646 26388 net.cpp:165] Memory required for data: 10163650596
I0412 15:01:59.565649 26388 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 15:01:59.565659 26388 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 15:01:59.565661 26388 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 15:01:59.565667 26388 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 15:01:59.672186 26388 net.cpp:150] Setting up rpn_conv/3x3
I0412 15:01:59.672214 26388 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 15:01:59.672217 26388 net.cpp:165] Memory required for data: 10166796324
I0412 15:01:59.672233 26388 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 15:01:59.672241 26388 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 15:01:59.672247 26388 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 15:01:59.672252 26388 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 15:01:59.672260 26388 net.cpp:150] Setting up rpn_relu/3x3
I0412 15:01:59.672264 26388 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 15:01:59.672266 26388 net.cpp:165] Memory required for data: 10169942052
I0412 15:01:59.672269 26388 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 15:01:59.672278 26388 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 15:01:59.672281 26388 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 15:01:59.672286 26388 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 15:01:59.770680 26388 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 15:01:59.770704 26388 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 15:01:59.770706 26388 net.cpp:165] Memory required for data: 10170728484
I0412 15:01:59.770714 26388 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 15:01:59.770720 26388 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 15:01:59.770725 26388 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 15:01:59.770730 26388 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 15:01:59.770738 26388 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 15:01:59.770741 26388 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 15:01:59.770745 26388 net.cpp:165] Memory required for data: 10171514916
I0412 15:01:59.770747 26388 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 15:01:59.770752 26388 net.cpp:100] Creating Layer rpn/output_pool
I0412 15:01:59.770756 26388 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 15:01:59.770761 26388 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 15:01:59.770769 26388 net.cpp:150] Setting up rpn/output_pool
I0412 15:01:59.770773 26388 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 15:01:59.770776 26388 net.cpp:165] Memory required for data: 10171711524
I0412 15:01:59.770778 26388 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 15:01:59.770784 26388 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 15:01:59.770787 26388 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 15:01:59.770792 26388 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 15:01:59.770797 26388 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 15:01:59.770802 26388 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 15:01:59.770807 26388 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 15:01:59.770809 26388 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 15:01:59.770812 26388 net.cpp:165] Memory required for data: 10172104740
I0412 15:01:59.770814 26388 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 15:01:59.770829 26388 net.cpp:100] Creating Layer rpn_cls_score
I0412 15:01:59.770833 26388 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 15:01:59.770838 26388 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 15:01:59.771154 26388 net.cpp:150] Setting up rpn_cls_score
I0412 15:01:59.771162 26388 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:01:59.771164 26388 net.cpp:165] Memory required for data: 10172133156
I0412 15:01:59.771169 26388 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 15:01:59.771173 26388 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 15:01:59.771176 26388 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 15:01:59.771183 26388 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 15:01:59.771188 26388 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 15:01:59.771193 26388 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 15:01:59.771196 26388 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:01:59.771199 26388 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:01:59.771203 26388 net.cpp:165] Memory required for data: 10172189988
I0412 15:01:59.771205 26388 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 15:01:59.771217 26388 net.cpp:100] Creating Layer rpn_twin_pred
I0412 15:01:59.771220 26388 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 15:01:59.771225 26388 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 15:01:59.771543 26388 net.cpp:150] Setting up rpn_twin_pred
I0412 15:01:59.771551 26388 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:01:59.771554 26388 net.cpp:165] Memory required for data: 10172218404
I0412 15:01:59.771559 26388 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 15:01:59.771562 26388 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 15:01:59.771566 26388 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 15:01:59.771569 26388 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 15:01:59.771575 26388 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 15:01:59.771581 26388 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 15:01:59.771585 26388 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:01:59.771589 26388 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:01:59.771591 26388 net.cpp:165] Memory required for data: 10172275236
I0412 15:01:59.771595 26388 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 15:01:59.771600 26388 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 15:01:59.771603 26388 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 15:01:59.771608 26388 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 15:01:59.771616 26388 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 15:01:59.771620 26388 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 15:01:59.771622 26388 net.cpp:165] Memory required for data: 10172303652
I0412 15:01:59.771625 26388 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 15:01:59.771630 26388 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 15:01:59.771632 26388 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 15:01:59.771637 26388 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 15:01:59.771648 26388 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 15:01:59.771652 26388 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 15:01:59.771658 26388 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 15:01:59.771662 26388 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 15:01:59.771667 26388 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 15:01:59.771669 26388 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 15:01:59.771672 26388 net.cpp:165] Memory required for data: 10172388900
I0412 15:01:59.771674 26388 layer_factory.hpp:77] Creating layer rpn-data
I0412 15:01:59.775197 26388 net.cpp:100] Creating Layer rpn-data
I0412 15:01:59.775208 26388 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 15:01:59.775214 26388 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 15:01:59.775218 26388 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 15:01:59.775223 26388 net.cpp:408] rpn-data -> rpn_labels
I0412 15:01:59.775230 26388 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 15:01:59.775235 26388 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 15:01:59.775241 26388 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 15:01:59.777400 26388 net.cpp:150] Setting up rpn-data
I0412 15:01:59.777413 26388 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 15:01:59.777417 26388 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:01:59.777421 26388 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:01:59.777424 26388 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:01:59.777427 26388 net.cpp:165] Memory required for data: 10172488356
I0412 15:01:59.777431 26388 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 15:01:59.777436 26388 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 15:01:59.777439 26388 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 15:01:59.777444 26388 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 15:01:59.777451 26388 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 15:01:59.777456 26388 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 15:01:59.777460 26388 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 15:01:59.777463 26388 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 15:01:59.777467 26388 net.cpp:165] Memory required for data: 10172516772
I0412 15:01:59.777469 26388 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 15:01:59.777474 26388 net.cpp:100] Creating Layer rpn_loss_cls
I0412 15:01:59.777477 26388 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 15:01:59.777482 26388 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 15:01:59.777485 26388 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 15:01:59.777492 26388 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 15:01:59.777508 26388 net.cpp:150] Setting up rpn_loss_cls
I0412 15:01:59.777513 26388 net.cpp:157] Top shape: (1)
I0412 15:01:59.777515 26388 net.cpp:160]     with loss weight 1
I0412 15:01:59.777529 26388 net.cpp:165] Memory required for data: 10172516776
I0412 15:01:59.777531 26388 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 15:01:59.777536 26388 net.cpp:100] Creating Layer rpn_loss_twin
I0412 15:01:59.777539 26388 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 15:01:59.777544 26388 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 15:01:59.777546 26388 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 15:01:59.777549 26388 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 15:01:59.777554 26388 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 15:01:59.777573 26388 net.cpp:150] Setting up rpn_loss_twin
I0412 15:01:59.777578 26388 net.cpp:157] Top shape: (1)
I0412 15:01:59.777580 26388 net.cpp:160]     with loss weight 1
I0412 15:01:59.777585 26388 net.cpp:165] Memory required for data: 10172516780
I0412 15:01:59.777587 26388 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 15:01:59.777592 26388 net.cpp:100] Creating Layer rpn_accuarcy
I0412 15:01:59.777596 26388 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 15:01:59.777601 26388 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 15:01:59.777604 26388 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 15:01:59.777611 26388 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 15:01:59.777616 26388 net.cpp:150] Setting up rpn_accuarcy
I0412 15:01:59.777619 26388 net.cpp:157] Top shape: (1)
I0412 15:01:59.777623 26388 net.cpp:157] Top shape: 2 (2)
I0412 15:01:59.777626 26388 net.cpp:165] Memory required for data: 10172516792
I0412 15:01:59.777628 26388 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 15:01:59.777631 26388 net.cpp:100] Creating Layer rpn_cls_prob
I0412 15:01:59.777634 26388 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 15:01:59.777638 26388 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 15:01:59.777643 26388 net.cpp:150] Setting up rpn_cls_prob
I0412 15:01:59.777647 26388 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 15:01:59.777649 26388 net.cpp:165] Memory required for data: 10172545208
I0412 15:01:59.777652 26388 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 15:01:59.777658 26388 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 15:01:59.777662 26388 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 15:01:59.777667 26388 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 15:01:59.777673 26388 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 15:01:59.777676 26388 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:01:59.777678 26388 net.cpp:165] Memory required for data: 10172573624
I0412 15:01:59.777681 26388 layer_factory.hpp:77] Creating layer proposal
I0412 15:01:59.778496 26388 net.cpp:100] Creating Layer proposal
I0412 15:01:59.778506 26388 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 15:01:59.778512 26388 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 15:01:59.778517 26388 net.cpp:408] proposal -> rpn_rois
I0412 15:01:59.780501 26388 net.cpp:150] Setting up proposal
I0412 15:01:59.780514 26388 net.cpp:157] Top shape: 1 3 (3)
I0412 15:01:59.780517 26388 net.cpp:165] Memory required for data: 10172573636
I0412 15:01:59.780520 26388 layer_factory.hpp:77] Creating layer roi-data
I0412 15:01:59.780738 26388 net.cpp:100] Creating Layer roi-data
I0412 15:01:59.780747 26388 net.cpp:434] roi-data <- rpn_rois
I0412 15:01:59.780752 26388 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 15:01:59.780758 26388 net.cpp:408] roi-data -> rois
I0412 15:01:59.780764 26388 net.cpp:408] roi-data -> labels
I0412 15:01:59.780769 26388 net.cpp:408] roi-data -> twin_targets
I0412 15:01:59.780774 26388 net.cpp:408] roi-data -> twin_inside_weights
I0412 15:01:59.780779 26388 net.cpp:408] roi-data -> twin_outside_weights
I0412 15:01:59.780998 26388 net.cpp:150] Setting up roi-data
I0412 15:01:59.781008 26388 net.cpp:157] Top shape: 1 3 (3)
I0412 15:01:59.781011 26388 net.cpp:157] Top shape: 1 1 (1)
I0412 15:01:59.781014 26388 net.cpp:157] Top shape: 1 402 (402)
I0412 15:01:59.781018 26388 net.cpp:157] Top shape: 1 402 (402)
I0412 15:01:59.781020 26388 net.cpp:157] Top shape: 1 402 (402)
I0412 15:01:59.781023 26388 net.cpp:165] Memory required for data: 10172578476
I0412 15:01:59.781028 26388 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 15:01:59.781033 26388 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 15:01:59.781035 26388 net.cpp:434] labels_roi-data_1_split <- labels
I0412 15:01:59.781040 26388 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 15:01:59.781046 26388 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 15:01:59.781052 26388 net.cpp:150] Setting up labels_roi-data_1_split
I0412 15:01:59.781056 26388 net.cpp:157] Top shape: 1 1 (1)
I0412 15:01:59.781059 26388 net.cpp:157] Top shape: 1 1 (1)
I0412 15:01:59.781061 26388 net.cpp:165] Memory required for data: 10172578484
I0412 15:01:59.781064 26388 layer_factory.hpp:77] Creating layer roi_pool5
I0412 15:01:59.781069 26388 net.cpp:100] Creating Layer roi_pool5
I0412 15:01:59.781072 26388 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 15:01:59.781076 26388 net.cpp:434] roi_pool5 <- rois
I0412 15:01:59.781080 26388 net.cpp:408] roi_pool5 -> pool5
I0412 15:01:59.781085 26388 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 15:01:59.781091 26388 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 15:01:59.781097 26388 net.cpp:150] Setting up roi_pool5
I0412 15:01:59.781100 26388 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 15:01:59.781105 26388 net.cpp:165] Memory required for data: 10172611252
I0412 15:01:59.781107 26388 layer_factory.hpp:77] Creating layer fc6
I0412 15:01:59.781113 26388 net.cpp:100] Creating Layer fc6
I0412 15:01:59.781116 26388 net.cpp:434] fc6 <- pool5
I0412 15:01:59.781121 26388 net.cpp:408] fc6 -> fc6
I0412 15:02:00.254175 26388 net.cpp:150] Setting up fc6
I0412 15:02:00.254207 26388 net.cpp:157] Top shape: 1 4096 (4096)
I0412 15:02:00.254211 26388 net.cpp:165] Memory required for data: 10172627636
I0412 15:02:00.254221 26388 layer_factory.hpp:77] Creating layer relu6
I0412 15:02:00.254230 26388 net.cpp:100] Creating Layer relu6
I0412 15:02:00.254235 26388 net.cpp:434] relu6 <- fc6
I0412 15:02:00.254241 26388 net.cpp:395] relu6 -> fc6 (in-place)
I0412 15:02:00.254250 26388 net.cpp:150] Setting up relu6
I0412 15:02:00.254253 26388 net.cpp:157] Top shape: 1 4096 (4096)
I0412 15:02:00.254256 26388 net.cpp:165] Memory required for data: 10172644020
I0412 15:02:00.254258 26388 layer_factory.hpp:77] Creating layer drop6
I0412 15:02:00.254264 26388 net.cpp:100] Creating Layer drop6
I0412 15:02:00.254266 26388 net.cpp:434] drop6 <- fc6
I0412 15:02:00.254271 26388 net.cpp:395] drop6 -> fc6 (in-place)
I0412 15:02:00.254276 26388 net.cpp:150] Setting up drop6
I0412 15:02:00.254278 26388 net.cpp:157] Top shape: 1 4096 (4096)
I0412 15:02:00.254281 26388 net.cpp:165] Memory required for data: 10172660404
I0412 15:02:00.254284 26388 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 15:02:00.254289 26388 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 15:02:00.254292 26388 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 15:02:00.254295 26388 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 15:02:00.254302 26388 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 15:02:00.254307 26388 net.cpp:150] Setting up fc6_drop6_0_split
I0412 15:02:00.254310 26388 net.cpp:157] Top shape: 1 4096 (4096)
I0412 15:02:00.254313 26388 net.cpp:157] Top shape: 1 4096 (4096)
I0412 15:02:00.254317 26388 net.cpp:165] Memory required for data: 10172693172
I0412 15:02:00.254319 26388 layer_factory.hpp:77] Creating layer cls_score
I0412 15:02:00.254324 26388 net.cpp:100] Creating Layer cls_score
I0412 15:02:00.254328 26388 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 15:02:00.254331 26388 net.cpp:408] cls_score -> cls_score
I0412 15:02:00.264387 26388 net.cpp:150] Setting up cls_score
I0412 15:02:00.264397 26388 net.cpp:157] Top shape: 1 201 (201)
I0412 15:02:00.264400 26388 net.cpp:165] Memory required for data: 10172693976
I0412 15:02:00.264405 26388 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 15:02:00.264410 26388 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 15:02:00.264413 26388 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 15:02:00.264417 26388 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 15:02:00.264423 26388 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 15:02:00.264431 26388 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 15:02:00.264434 26388 net.cpp:157] Top shape: 1 201 (201)
I0412 15:02:00.264438 26388 net.cpp:157] Top shape: 1 201 (201)
I0412 15:02:00.264441 26388 net.cpp:165] Memory required for data: 10172695584
I0412 15:02:00.264443 26388 layer_factory.hpp:77] Creating layer twin_pred
I0412 15:02:00.264447 26388 net.cpp:100] Creating Layer twin_pred
I0412 15:02:00.264451 26388 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 15:02:00.264457 26388 net.cpp:408] twin_pred -> twin_pred
I0412 15:02:00.287576 26388 net.cpp:150] Setting up twin_pred
I0412 15:02:00.287590 26388 net.cpp:157] Top shape: 1 402 (402)
I0412 15:02:00.287593 26388 net.cpp:165] Memory required for data: 10172697192
I0412 15:02:00.287600 26388 layer_factory.hpp:77] Creating layer loss_cls
I0412 15:02:00.287607 26388 net.cpp:100] Creating Layer loss_cls
I0412 15:02:00.287611 26388 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 15:02:00.287614 26388 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 15:02:00.287618 26388 net.cpp:408] loss_cls -> loss_cls
I0412 15:02:00.287626 26388 layer_factory.hpp:77] Creating layer loss_cls
I0412 15:02:00.287639 26388 net.cpp:150] Setting up loss_cls
I0412 15:02:00.287643 26388 net.cpp:157] Top shape: (1)
I0412 15:02:00.287647 26388 net.cpp:160]     with loss weight 1
I0412 15:02:00.287657 26388 net.cpp:165] Memory required for data: 10172697196
I0412 15:02:00.287658 26388 layer_factory.hpp:77] Creating layer loss_twin
I0412 15:02:00.287664 26388 net.cpp:100] Creating Layer loss_twin
I0412 15:02:00.287668 26388 net.cpp:434] loss_twin <- twin_pred
I0412 15:02:00.287672 26388 net.cpp:434] loss_twin <- twin_targets
I0412 15:02:00.287675 26388 net.cpp:434] loss_twin <- twin_inside_weights
I0412 15:02:00.287679 26388 net.cpp:434] loss_twin <- twin_outside_weights
I0412 15:02:00.287684 26388 net.cpp:408] loss_twin -> loss_twin
I0412 15:02:00.287703 26388 net.cpp:150] Setting up loss_twin
I0412 15:02:00.287709 26388 net.cpp:157] Top shape: (1)
I0412 15:02:00.287711 26388 net.cpp:160]     with loss weight 1
I0412 15:02:00.287714 26388 net.cpp:165] Memory required for data: 10172697200
I0412 15:02:00.287719 26388 layer_factory.hpp:77] Creating layer accuarcy
I0412 15:02:00.287724 26388 net.cpp:100] Creating Layer accuarcy
I0412 15:02:00.287729 26388 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 15:02:00.287734 26388 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 15:02:00.287739 26388 net.cpp:408] accuarcy -> accuarcy
I0412 15:02:00.287744 26388 net.cpp:150] Setting up accuarcy
I0412 15:02:00.287746 26388 net.cpp:157] Top shape: (1)
I0412 15:02:00.287750 26388 net.cpp:165] Memory required for data: 10172697204
I0412 15:02:00.287752 26388 net.cpp:228] accuarcy does not need backward computation.
I0412 15:02:00.287755 26388 net.cpp:226] loss_twin needs backward computation.
I0412 15:02:00.287758 26388 net.cpp:226] loss_cls needs backward computation.
I0412 15:02:00.287762 26388 net.cpp:226] twin_pred needs backward computation.
I0412 15:02:00.287765 26388 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 15:02:00.287768 26388 net.cpp:226] cls_score needs backward computation.
I0412 15:02:00.287771 26388 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 15:02:00.287775 26388 net.cpp:226] drop6 needs backward computation.
I0412 15:02:00.287777 26388 net.cpp:226] relu6 needs backward computation.
I0412 15:02:00.287781 26388 net.cpp:226] fc6 needs backward computation.
I0412 15:02:00.287783 26388 net.cpp:226] roi_pool5 needs backward computation.
I0412 15:02:00.287787 26388 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 15:02:00.287791 26388 net.cpp:226] roi-data needs backward computation.
I0412 15:02:00.287794 26388 net.cpp:226] proposal needs backward computation.
I0412 15:02:00.287798 26388 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 15:02:00.287803 26388 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 15:02:00.287807 26388 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 15:02:00.287811 26388 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 15:02:00.287814 26388 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 15:02:00.287820 26388 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 15:02:00.287824 26388 net.cpp:226] rpn-data needs backward computation.
I0412 15:02:00.287828 26388 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 15:02:00.287832 26388 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 15:02:00.287835 26388 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 15:02:00.287839 26388 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 15:02:00.287842 26388 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 15:02:00.287845 26388 net.cpp:226] rpn_cls_score needs backward computation.
I0412 15:02:00.287849 26388 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 15:02:00.287853 26388 net.cpp:226] rpn/output_pool needs backward computation.
I0412 15:02:00.287855 26388 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 15:02:00.287858 26388 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 15:02:00.287863 26388 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 15:02:00.287865 26388 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 15:02:00.287868 26388 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 15:02:00.287871 26388 net.cpp:226] relu5b needs backward computation.
I0412 15:02:00.287874 26388 net.cpp:226] conv5b needs backward computation.
I0412 15:02:00.287878 26388 net.cpp:226] relu5a needs backward computation.
I0412 15:02:00.287880 26388 net.cpp:226] conv5a needs backward computation.
I0412 15:02:00.287883 26388 net.cpp:226] pool4 needs backward computation.
I0412 15:02:00.287888 26388 net.cpp:226] relu4b needs backward computation.
I0412 15:02:00.287889 26388 net.cpp:226] conv4b needs backward computation.
I0412 15:02:00.287892 26388 net.cpp:226] relu4a needs backward computation.
I0412 15:02:00.287895 26388 net.cpp:226] conv4a needs backward computation.
I0412 15:02:00.287899 26388 net.cpp:226] pool3 needs backward computation.
I0412 15:02:00.287902 26388 net.cpp:226] relu3b needs backward computation.
I0412 15:02:00.287904 26388 net.cpp:226] conv3b needs backward computation.
I0412 15:02:00.287909 26388 net.cpp:226] relu3a needs backward computation.
I0412 15:02:00.287911 26388 net.cpp:226] conv3a needs backward computation.
I0412 15:02:00.287914 26388 net.cpp:228] pool2 does not need backward computation.
I0412 15:02:00.287917 26388 net.cpp:228] relu2a does not need backward computation.
I0412 15:02:00.287921 26388 net.cpp:228] conv2a does not need backward computation.
I0412 15:02:00.287925 26388 net.cpp:228] pool1 does not need backward computation.
I0412 15:02:00.287928 26388 net.cpp:228] relu1a does not need backward computation.
I0412 15:02:00.287931 26388 net.cpp:228] conv1a does not need backward computation.
I0412 15:02:00.287935 26388 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 15:02:00.287940 26388 net.cpp:228] data_data_0_split does not need backward computation.
I0412 15:02:00.287943 26388 net.cpp:228] data does not need backward computation.
I0412 15:02:00.287945 26388 net.cpp:270] This network produces output accuarcy
I0412 15:02:00.287948 26388 net.cpp:270] This network produces output loss_cls
I0412 15:02:00.287951 26388 net.cpp:270] This network produces output loss_twin
I0412 15:02:00.287956 26388 net.cpp:270] This network produces output rpn_accuarcy
I0412 15:02:00.287959 26388 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 15:02:00.287962 26388 net.cpp:270] This network produces output rpn_cls_loss
I0412 15:02:00.287966 26388 net.cpp:270] This network produces output rpn_loss_twin
I0412 15:02:00.287999 26388 net.cpp:283] Network initialization done.
I0412 15:02:00.288116 26388 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 15:02:02.573160 26388 net.cpp:761] Ignoring source layer pool5
I0412 15:02:02.606914 26388 net.cpp:761] Ignoring source layer fc7
I0412 15:02:02.606936 26388 net.cpp:761] Ignoring source layer relu7
I0412 15:02:02.606941 26388 net.cpp:761] Ignoring source layer drop7
I0412 15:02:02.606945 26388 net.cpp:761] Ignoring source layer fc8-200
I0412 15:02:02.606951 26388 net.cpp:761] Ignoring source layer loss
Solving...
F0412 15:02:26.720793 26388 syncedmem.hpp:25] Check failed: *ptr host allocation of size 18446744073176875008 failed
*** Check failure stack trace: ***
