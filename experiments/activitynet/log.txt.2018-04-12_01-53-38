Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 01:53:40.646838 23821 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 01:53:40.646883 23821 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 01:53:40.647812 23821 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 01:53:40.648120 23821 layer_factory.hpp:77] Creating layer data
I0412 01:53:40.665225 23821 net.cpp:100] Creating Layer data
I0412 01:53:40.665257 23821 net.cpp:408] data -> data
I0412 01:53:40.665273 23821 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 01:53:40.678508 23821 net.cpp:150] Setting up data
I0412 01:53:40.678535 23821 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:53:40.678544 23821 net.cpp:157] Top shape: 1 3 (3)
I0412 01:53:40.678547 23821 net.cpp:165] Memory required for data: 115605516
I0412 01:53:40.678555 23821 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 01:53:40.678571 23821 net.cpp:100] Creating Layer data_data_0_split
I0412 01:53:40.678578 23821 net.cpp:434] data_data_0_split <- data
I0412 01:53:40.678591 23821 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 01:53:40.678604 23821 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 01:53:40.678671 23821 net.cpp:150] Setting up data_data_0_split
I0412 01:53:40.678683 23821 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:53:40.678689 23821 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:53:40.678694 23821 net.cpp:165] Memory required for data: 346816524
I0412 01:53:40.678699 23821 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 01:53:40.678707 23821 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 01:53:40.678712 23821 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 01:53:40.678722 23821 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 01:53:40.678732 23821 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 01:53:40.678788 23821 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 01:53:40.678797 23821 net.cpp:157] Top shape: 1 3 (3)
I0412 01:53:40.678803 23821 net.cpp:157] Top shape: 1 3 (3)
I0412 01:53:40.678807 23821 net.cpp:165] Memory required for data: 346816548
I0412 01:53:40.678812 23821 layer_factory.hpp:77] Creating layer conv1a
I0412 01:53:40.678828 23821 net.cpp:100] Creating Layer conv1a
I0412 01:53:40.678834 23821 net.cpp:434] conv1a <- data_data_0_split_0
I0412 01:53:40.678844 23821 net.cpp:408] conv1a -> conv1a
I0412 01:53:40.702380 23821 net.cpp:150] Setting up conv1a
I0412 01:53:40.702417 23821 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 01:53:40.702424 23821 net.cpp:165] Memory required for data: 2813067300
I0412 01:53:40.702442 23821 layer_factory.hpp:77] Creating layer relu1a
I0412 01:53:40.702461 23821 net.cpp:100] Creating Layer relu1a
I0412 01:53:40.702466 23821 net.cpp:434] relu1a <- conv1a
I0412 01:53:40.702472 23821 net.cpp:395] relu1a -> conv1a (in-place)
I0412 01:53:40.702484 23821 net.cpp:150] Setting up relu1a
I0412 01:53:40.702491 23821 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 01:53:40.702494 23821 net.cpp:165] Memory required for data: 5279318052
I0412 01:53:40.702497 23821 layer_factory.hpp:77] Creating layer pool1
I0412 01:53:40.702507 23821 net.cpp:100] Creating Layer pool1
I0412 01:53:40.702512 23821 net.cpp:434] pool1 <- conv1a
I0412 01:53:40.702517 23821 net.cpp:408] pool1 -> pool1
I0412 01:53:40.702633 23821 net.cpp:150] Setting up pool1
I0412 01:53:40.702641 23821 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 01:53:40.702646 23821 net.cpp:165] Memory required for data: 5895880740
I0412 01:53:40.702649 23821 layer_factory.hpp:77] Creating layer conv2a
I0412 01:53:40.702664 23821 net.cpp:100] Creating Layer conv2a
I0412 01:53:40.702668 23821 net.cpp:434] conv2a <- pool1
I0412 01:53:40.702677 23821 net.cpp:408] conv2a -> conv2a
I0412 01:53:40.712941 23821 net.cpp:150] Setting up conv2a
I0412 01:53:40.712980 23821 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 01:53:40.712983 23821 net.cpp:165] Memory required for data: 7129006116
I0412 01:53:40.713002 23821 layer_factory.hpp:77] Creating layer relu2a
I0412 01:53:40.713016 23821 net.cpp:100] Creating Layer relu2a
I0412 01:53:40.713022 23821 net.cpp:434] relu2a <- conv2a
I0412 01:53:40.713030 23821 net.cpp:395] relu2a -> conv2a (in-place)
I0412 01:53:40.713042 23821 net.cpp:150] Setting up relu2a
I0412 01:53:40.713047 23821 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 01:53:40.713052 23821 net.cpp:165] Memory required for data: 8362131492
I0412 01:53:40.713054 23821 layer_factory.hpp:77] Creating layer pool2
I0412 01:53:40.713066 23821 net.cpp:100] Creating Layer pool2
I0412 01:53:40.713070 23821 net.cpp:434] pool2 <- conv2a
I0412 01:53:40.713076 23821 net.cpp:408] pool2 -> pool2
I0412 01:53:40.713179 23821 net.cpp:150] Setting up pool2
I0412 01:53:40.713191 23821 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 01:53:40.713193 23821 net.cpp:165] Memory required for data: 8516272164
I0412 01:53:40.713198 23821 layer_factory.hpp:77] Creating layer conv3a
I0412 01:53:40.713212 23821 net.cpp:100] Creating Layer conv3a
I0412 01:53:40.713215 23821 net.cpp:434] conv3a <- pool2
I0412 01:53:40.713224 23821 net.cpp:408] conv3a -> conv3a
I0412 01:53:40.725962 23821 net.cpp:150] Setting up conv3a
I0412 01:53:40.726028 23821 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:53:40.726045 23821 net.cpp:165] Memory required for data: 8824553508
I0412 01:53:40.726070 23821 layer_factory.hpp:77] Creating layer relu3a
I0412 01:53:40.726091 23821 net.cpp:100] Creating Layer relu3a
I0412 01:53:40.726106 23821 net.cpp:434] relu3a <- conv3a
I0412 01:53:40.726125 23821 net.cpp:395] relu3a -> conv3a (in-place)
I0412 01:53:40.726145 23821 net.cpp:150] Setting up relu3a
I0412 01:53:40.726161 23821 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:53:40.726174 23821 net.cpp:165] Memory required for data: 9132834852
I0412 01:53:40.726187 23821 layer_factory.hpp:77] Creating layer conv3b
I0412 01:53:40.726213 23821 net.cpp:100] Creating Layer conv3b
I0412 01:53:40.726228 23821 net.cpp:434] conv3b <- conv3a
I0412 01:53:40.726246 23821 net.cpp:408] conv3b -> conv3b
I0412 01:53:40.750860 23821 net.cpp:150] Setting up conv3b
I0412 01:53:40.750885 23821 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:53:40.750888 23821 net.cpp:165] Memory required for data: 9441116196
I0412 01:53:40.750898 23821 layer_factory.hpp:77] Creating layer relu3b
I0412 01:53:40.750908 23821 net.cpp:100] Creating Layer relu3b
I0412 01:53:40.750913 23821 net.cpp:434] relu3b <- conv3b
I0412 01:53:40.750921 23821 net.cpp:395] relu3b -> conv3b (in-place)
I0412 01:53:40.750931 23821 net.cpp:150] Setting up relu3b
I0412 01:53:40.750936 23821 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:53:40.750938 23821 net.cpp:165] Memory required for data: 9749397540
I0412 01:53:40.750941 23821 layer_factory.hpp:77] Creating layer pool3
I0412 01:53:40.750947 23821 net.cpp:100] Creating Layer pool3
I0412 01:53:40.750952 23821 net.cpp:434] pool3 <- conv3b
I0412 01:53:40.750957 23821 net.cpp:408] pool3 -> pool3
I0412 01:53:40.751009 23821 net.cpp:150] Setting up pool3
I0412 01:53:40.751016 23821 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 01:53:40.751020 23821 net.cpp:165] Memory required for data: 9787932708
I0412 01:53:40.751024 23821 layer_factory.hpp:77] Creating layer conv4a
I0412 01:53:40.751036 23821 net.cpp:100] Creating Layer conv4a
I0412 01:53:40.751040 23821 net.cpp:434] conv4a <- pool3
I0412 01:53:40.751045 23821 net.cpp:408] conv4a -> conv4a
I0412 01:53:40.797340 23821 net.cpp:150] Setting up conv4a
I0412 01:53:40.797366 23821 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:53:40.797369 23821 net.cpp:165] Memory required for data: 9865003044
I0412 01:53:40.797386 23821 layer_factory.hpp:77] Creating layer relu4a
I0412 01:53:40.797395 23821 net.cpp:100] Creating Layer relu4a
I0412 01:53:40.797399 23821 net.cpp:434] relu4a <- conv4a
I0412 01:53:40.797406 23821 net.cpp:395] relu4a -> conv4a (in-place)
I0412 01:53:40.797415 23821 net.cpp:150] Setting up relu4a
I0412 01:53:40.797418 23821 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:53:40.797421 23821 net.cpp:165] Memory required for data: 9942073380
I0412 01:53:40.797423 23821 layer_factory.hpp:77] Creating layer conv4b
I0412 01:53:40.797436 23821 net.cpp:100] Creating Layer conv4b
I0412 01:53:40.797439 23821 net.cpp:434] conv4b <- conv4a
I0412 01:53:40.797444 23821 net.cpp:408] conv4b -> conv4b
I0412 01:53:40.876533 23821 net.cpp:150] Setting up conv4b
I0412 01:53:40.876612 23821 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:53:40.876629 23821 net.cpp:165] Memory required for data: 10019143716
I0412 01:53:40.876648 23821 layer_factory.hpp:77] Creating layer relu4b
I0412 01:53:40.876670 23821 net.cpp:100] Creating Layer relu4b
I0412 01:53:40.876687 23821 net.cpp:434] relu4b <- conv4b
I0412 01:53:40.876706 23821 net.cpp:395] relu4b -> conv4b (in-place)
I0412 01:53:40.876729 23821 net.cpp:150] Setting up relu4b
I0412 01:53:40.876745 23821 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:53:40.876763 23821 net.cpp:165] Memory required for data: 10096214052
I0412 01:53:40.876777 23821 layer_factory.hpp:77] Creating layer pool4
I0412 01:53:40.876796 23821 net.cpp:100] Creating Layer pool4
I0412 01:53:40.876813 23821 net.cpp:434] pool4 <- conv4b
I0412 01:53:40.876833 23821 net.cpp:408] pool4 -> pool4
I0412 01:53:40.876912 23821 net.cpp:150] Setting up pool4
I0412 01:53:40.876935 23821 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:53:40.876953 23821 net.cpp:165] Memory required for data: 10105847844
I0412 01:53:40.876969 23821 layer_factory.hpp:77] Creating layer conv5a
I0412 01:53:40.876993 23821 net.cpp:100] Creating Layer conv5a
I0412 01:53:40.877009 23821 net.cpp:434] conv5a <- pool4
I0412 01:53:40.877029 23821 net.cpp:408] conv5a -> conv5a
I0412 01:53:40.967258 23821 net.cpp:150] Setting up conv5a
I0412 01:53:40.967326 23821 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:53:40.967342 23821 net.cpp:165] Memory required for data: 10115481636
I0412 01:53:40.967365 23821 layer_factory.hpp:77] Creating layer relu5a
I0412 01:53:40.967384 23821 net.cpp:100] Creating Layer relu5a
I0412 01:53:40.967399 23821 net.cpp:434] relu5a <- conv5a
I0412 01:53:40.967420 23821 net.cpp:395] relu5a -> conv5a (in-place)
I0412 01:53:40.967442 23821 net.cpp:150] Setting up relu5a
I0412 01:53:40.967458 23821 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:53:40.967470 23821 net.cpp:165] Memory required for data: 10125115428
I0412 01:53:40.967484 23821 layer_factory.hpp:77] Creating layer conv5b
I0412 01:53:40.967506 23821 net.cpp:100] Creating Layer conv5b
I0412 01:53:40.967521 23821 net.cpp:434] conv5b <- conv5a
I0412 01:53:40.967538 23821 net.cpp:408] conv5b -> conv5b
I0412 01:53:41.060992 23821 net.cpp:150] Setting up conv5b
I0412 01:53:41.061027 23821 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:53:41.061033 23821 net.cpp:165] Memory required for data: 10134749220
I0412 01:53:41.061043 23821 layer_factory.hpp:77] Creating layer relu5b
I0412 01:53:41.061056 23821 net.cpp:100] Creating Layer relu5b
I0412 01:53:41.061064 23821 net.cpp:434] relu5b <- conv5b
I0412 01:53:41.061074 23821 net.cpp:395] relu5b -> conv5b (in-place)
I0412 01:53:41.061085 23821 net.cpp:150] Setting up relu5b
I0412 01:53:41.061092 23821 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:53:41.061098 23821 net.cpp:165] Memory required for data: 10144383012
I0412 01:53:41.061102 23821 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 01:53:41.061112 23821 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 01:53:41.061118 23821 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 01:53:41.061125 23821 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 01:53:41.061133 23821 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 01:53:41.061190 23821 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 01:53:41.061219 23821 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:53:41.061236 23821 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:53:41.061250 23821 net.cpp:165] Memory required for data: 10163650596
I0412 01:53:41.061264 23821 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 01:53:41.061288 23821 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 01:53:41.061295 23821 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 01:53:41.061305 23821 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 01:53:41.136163 23821 net.cpp:150] Setting up rpn_conv/3x3
I0412 01:53:41.136193 23821 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 01:53:41.136198 23821 net.cpp:165] Memory required for data: 10166796324
I0412 01:53:41.136220 23821 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 01:53:41.136234 23821 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 01:53:41.136242 23821 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 01:53:41.136251 23821 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 01:53:41.136263 23821 net.cpp:150] Setting up rpn_relu/3x3
I0412 01:53:41.136270 23821 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 01:53:41.136273 23821 net.cpp:165] Memory required for data: 10169942052
I0412 01:53:41.136278 23821 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 01:53:41.136294 23821 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 01:53:41.136299 23821 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 01:53:41.136307 23821 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 01:53:41.203510 23821 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 01:53:41.203546 23821 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 01:53:41.203550 23821 net.cpp:165] Memory required for data: 10170728484
I0412 01:53:41.203562 23821 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 01:53:41.203572 23821 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 01:53:41.203579 23821 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 01:53:41.203588 23821 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 01:53:41.203601 23821 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 01:53:41.203608 23821 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 01:53:41.203613 23821 net.cpp:165] Memory required for data: 10171514916
I0412 01:53:41.203619 23821 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 01:53:41.203629 23821 net.cpp:100] Creating Layer rpn/output_pool
I0412 01:53:41.203634 23821 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 01:53:41.203640 23821 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 01:53:41.203691 23821 net.cpp:150] Setting up rpn/output_pool
I0412 01:53:41.203699 23821 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:53:41.203703 23821 net.cpp:165] Memory required for data: 10171711524
I0412 01:53:41.203707 23821 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 01:53:41.203716 23821 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 01:53:41.203721 23821 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 01:53:41.203729 23821 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 01:53:41.203738 23821 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 01:53:41.203784 23821 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 01:53:41.203793 23821 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:53:41.203797 23821 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:53:41.203804 23821 net.cpp:165] Memory required for data: 10172104740
I0412 01:53:41.203810 23821 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 01:53:41.203824 23821 net.cpp:100] Creating Layer rpn_cls_score
I0412 01:53:41.203829 23821 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 01:53:41.203836 23821 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 01:53:41.204833 23821 net.cpp:150] Setting up rpn_cls_score
I0412 01:53:41.204870 23821 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:53:41.204886 23821 net.cpp:165] Memory required for data: 10172133156
I0412 01:53:41.204905 23821 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 01:53:41.204924 23821 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 01:53:41.204939 23821 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 01:53:41.204957 23821 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 01:53:41.204977 23821 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 01:53:41.205066 23821 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 01:53:41.205087 23821 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:53:41.205102 23821 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:53:41.205116 23821 net.cpp:165] Memory required for data: 10172189988
I0412 01:53:41.205129 23821 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 01:53:41.205157 23821 net.cpp:100] Creating Layer rpn_twin_pred
I0412 01:53:41.205173 23821 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 01:53:41.205191 23821 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 01:53:41.205962 23821 net.cpp:150] Setting up rpn_twin_pred
I0412 01:53:41.205972 23821 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:53:41.205976 23821 net.cpp:165] Memory required for data: 10172218404
I0412 01:53:41.205981 23821 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:53:41.205986 23821 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:53:41.205989 23821 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 01:53:41.205993 23821 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 01:53:41.206001 23821 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 01:53:41.206043 23821 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:53:41.206049 23821 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:53:41.206053 23821 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:53:41.206058 23821 net.cpp:165] Memory required for data: 10172275236
I0412 01:53:41.206060 23821 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 01:53:41.206068 23821 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 01:53:41.206073 23821 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 01:53:41.206079 23821 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 01:53:41.206105 23821 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 01:53:41.206111 23821 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:53:41.206115 23821 net.cpp:165] Memory required for data: 10172303652
I0412 01:53:41.206117 23821 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:53:41.206122 23821 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:53:41.206128 23821 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 01:53:41.206135 23821 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 01:53:41.206146 23821 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 01:53:41.206151 23821 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 01:53:41.206199 23821 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:53:41.206207 23821 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:53:41.206212 23821 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:53:41.206216 23821 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:53:41.206221 23821 net.cpp:165] Memory required for data: 10172388900
I0412 01:53:41.206225 23821 layer_factory.hpp:77] Creating layer rpn-data
I0412 01:53:41.206610 23821 net.cpp:100] Creating Layer rpn-data
I0412 01:53:41.206620 23821 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 01:53:41.206626 23821 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 01:53:41.206630 23821 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 01:53:41.206636 23821 net.cpp:408] rpn-data -> rpn_labels
I0412 01:53:41.206645 23821 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 01:53:41.206652 23821 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 01:53:41.206661 23821 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 01:53:41.210023 23821 net.cpp:150] Setting up rpn-data
I0412 01:53:41.210052 23821 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:53:41.210057 23821 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:53:41.210059 23821 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:53:41.210063 23821 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:53:41.210067 23821 net.cpp:165] Memory required for data: 10172488356
I0412 01:53:41.210074 23821 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 01:53:41.210085 23821 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 01:53:41.210091 23821 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 01:53:41.210098 23821 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 01:53:41.210108 23821 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 01:53:41.210147 23821 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 01:53:41.210155 23821 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:53:41.210157 23821 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:53:41.210160 23821 net.cpp:165] Memory required for data: 10172516772
I0412 01:53:41.210165 23821 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 01:53:41.210171 23821 net.cpp:100] Creating Layer rpn_loss_cls
I0412 01:53:41.210176 23821 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 01:53:41.210181 23821 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 01:53:41.210186 23821 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 01:53:41.210193 23821 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 01:53:41.210316 23821 net.cpp:150] Setting up rpn_loss_cls
I0412 01:53:41.210324 23821 net.cpp:157] Top shape: (1)
I0412 01:53:41.210325 23821 net.cpp:160]     with loss weight 1
I0412 01:53:41.210343 23821 net.cpp:165] Memory required for data: 10172516776
I0412 01:53:41.210346 23821 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 01:53:41.210353 23821 net.cpp:100] Creating Layer rpn_loss_twin
I0412 01:53:41.210358 23821 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 01:53:41.210363 23821 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 01:53:41.210366 23821 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 01:53:41.210371 23821 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 01:53:41.210377 23821 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 01:53:41.210469 23821 net.cpp:150] Setting up rpn_loss_twin
I0412 01:53:41.210474 23821 net.cpp:157] Top shape: (1)
I0412 01:53:41.210477 23821 net.cpp:160]     with loss weight 1
I0412 01:53:41.210482 23821 net.cpp:165] Memory required for data: 10172516780
I0412 01:53:41.210485 23821 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 01:53:41.210491 23821 net.cpp:100] Creating Layer rpn_accuarcy
I0412 01:53:41.210496 23821 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 01:53:41.210503 23821 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 01:53:41.210507 23821 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 01:53:41.210513 23821 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 01:53:41.210553 23821 net.cpp:150] Setting up rpn_accuarcy
I0412 01:53:41.210559 23821 net.cpp:157] Top shape: (1)
I0412 01:53:41.210564 23821 net.cpp:157] Top shape: 2 (2)
I0412 01:53:41.210569 23821 net.cpp:165] Memory required for data: 10172516792
I0412 01:53:41.210572 23821 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 01:53:41.210578 23821 net.cpp:100] Creating Layer rpn_cls_prob
I0412 01:53:41.210582 23821 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 01:53:41.210587 23821 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 01:53:41.210654 23821 net.cpp:150] Setting up rpn_cls_prob
I0412 01:53:41.210659 23821 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:53:41.210662 23821 net.cpp:165] Memory required for data: 10172545208
I0412 01:53:41.210666 23821 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 01:53:41.210675 23821 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 01:53:41.210677 23821 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 01:53:41.210682 23821 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 01:53:41.210710 23821 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 01:53:41.210716 23821 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:53:41.210721 23821 net.cpp:165] Memory required for data: 10172573624
I0412 01:53:41.210726 23821 layer_factory.hpp:77] Creating layer proposal
I0412 01:53:41.211323 23821 net.cpp:100] Creating Layer proposal
I0412 01:53:41.211338 23821 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 01:53:41.211343 23821 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 01:53:41.211349 23821 net.cpp:408] proposal -> rpn_rois
I0412 01:53:41.214762 23821 net.cpp:150] Setting up proposal
I0412 01:53:41.214781 23821 net.cpp:157] Top shape: 1 3 (3)
I0412 01:53:41.214784 23821 net.cpp:165] Memory required for data: 10172573636
I0412 01:53:41.214789 23821 layer_factory.hpp:77] Creating layer roi-data
I0412 01:53:41.214943 23821 net.cpp:100] Creating Layer roi-data
I0412 01:53:41.214953 23821 net.cpp:434] roi-data <- rpn_rois
I0412 01:53:41.214958 23821 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 01:53:41.214967 23821 net.cpp:408] roi-data -> rois
I0412 01:53:41.214974 23821 net.cpp:408] roi-data -> labels
I0412 01:53:41.214982 23821 net.cpp:408] roi-data -> twin_targets
I0412 01:53:41.214987 23821 net.cpp:408] roi-data -> twin_inside_weights
I0412 01:53:41.214993 23821 net.cpp:408] roi-data -> twin_outside_weights
I0412 01:53:41.215674 23821 net.cpp:150] Setting up roi-data
I0412 01:53:41.215697 23821 net.cpp:157] Top shape: 1 3 (3)
I0412 01:53:41.215701 23821 net.cpp:157] Top shape: 1 1 (1)
I0412 01:53:41.215706 23821 net.cpp:157] Top shape: 1 402 (402)
I0412 01:53:41.215711 23821 net.cpp:157] Top shape: 1 402 (402)
I0412 01:53:41.215716 23821 net.cpp:157] Top shape: 1 402 (402)
I0412 01:53:41.215721 23821 net.cpp:165] Memory required for data: 10172578476
I0412 01:53:41.215728 23821 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 01:53:41.215737 23821 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 01:53:41.215744 23821 net.cpp:434] labels_roi-data_1_split <- labels
I0412 01:53:41.215751 23821 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 01:53:41.215762 23821 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 01:53:41.215816 23821 net.cpp:150] Setting up labels_roi-data_1_split
I0412 01:53:41.215823 23821 net.cpp:157] Top shape: 1 1 (1)
I0412 01:53:41.215828 23821 net.cpp:157] Top shape: 1 1 (1)
I0412 01:53:41.215832 23821 net.cpp:165] Memory required for data: 10172578484
I0412 01:53:41.215837 23821 layer_factory.hpp:77] Creating layer roi_pool5
I0412 01:53:41.215847 23821 net.cpp:100] Creating Layer roi_pool5
I0412 01:53:41.215853 23821 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 01:53:41.215860 23821 net.cpp:434] roi_pool5 <- rois
I0412 01:53:41.215867 23821 net.cpp:408] roi_pool5 -> pool5
I0412 01:53:41.215878 23821 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 01:53:41.215890 23821 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 01:53:41.215946 23821 net.cpp:150] Setting up roi_pool5
I0412 01:53:41.215955 23821 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 01:53:41.215961 23821 net.cpp:165] Memory required for data: 10172611252
I0412 01:53:41.215965 23821 layer_factory.hpp:77] Creating layer fc6
I0412 01:53:41.215977 23821 net.cpp:100] Creating Layer fc6
I0412 01:53:41.215983 23821 net.cpp:434] fc6 <- pool5
I0412 01:53:41.215991 23821 net.cpp:408] fc6 -> fc6
I0412 01:53:41.579885 23821 net.cpp:150] Setting up fc6
I0412 01:53:41.579954 23821 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:53:41.579970 23821 net.cpp:165] Memory required for data: 10172627636
I0412 01:53:41.579993 23821 layer_factory.hpp:77] Creating layer relu6
I0412 01:53:41.580009 23821 net.cpp:100] Creating Layer relu6
I0412 01:53:41.580016 23821 net.cpp:434] relu6 <- fc6
I0412 01:53:41.580024 23821 net.cpp:395] relu6 -> fc6 (in-place)
I0412 01:53:41.580039 23821 net.cpp:150] Setting up relu6
I0412 01:53:41.580045 23821 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:53:41.580050 23821 net.cpp:165] Memory required for data: 10172644020
I0412 01:53:41.580055 23821 layer_factory.hpp:77] Creating layer drop6
I0412 01:53:41.580062 23821 net.cpp:100] Creating Layer drop6
I0412 01:53:41.580068 23821 net.cpp:434] drop6 <- fc6
I0412 01:53:41.580075 23821 net.cpp:395] drop6 -> fc6 (in-place)
I0412 01:53:41.580113 23821 net.cpp:150] Setting up drop6
I0412 01:53:41.580134 23821 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:53:41.580148 23821 net.cpp:165] Memory required for data: 10172660404
I0412 01:53:41.580163 23821 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 01:53:41.580179 23821 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 01:53:41.580186 23821 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 01:53:41.580193 23821 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 01:53:41.580204 23821 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 01:53:41.580262 23821 net.cpp:150] Setting up fc6_drop6_0_split
I0412 01:53:41.580272 23821 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:53:41.580277 23821 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:53:41.580281 23821 net.cpp:165] Memory required for data: 10172693172
I0412 01:53:41.580286 23821 layer_factory.hpp:77] Creating layer cls_score
I0412 01:53:41.580294 23821 net.cpp:100] Creating Layer cls_score
I0412 01:53:41.580299 23821 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 01:53:41.580309 23821 net.cpp:408] cls_score -> cls_score
I0412 01:53:41.591851 23821 net.cpp:150] Setting up cls_score
I0412 01:53:41.591876 23821 net.cpp:157] Top shape: 1 201 (201)
I0412 01:53:41.591879 23821 net.cpp:165] Memory required for data: 10172693976
I0412 01:53:41.591890 23821 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 01:53:41.591902 23821 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 01:53:41.591907 23821 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 01:53:41.591914 23821 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 01:53:41.591924 23821 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 01:53:41.591979 23821 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 01:53:41.591986 23821 net.cpp:157] Top shape: 1 201 (201)
I0412 01:53:41.591991 23821 net.cpp:157] Top shape: 1 201 (201)
I0412 01:53:41.591995 23821 net.cpp:165] Memory required for data: 10172695584
I0412 01:53:41.592000 23821 layer_factory.hpp:77] Creating layer twin_pred
I0412 01:53:41.592010 23821 net.cpp:100] Creating Layer twin_pred
I0412 01:53:41.592015 23821 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 01:53:41.592023 23821 net.cpp:408] twin_pred -> twin_pred
I0412 01:53:41.611050 23821 net.cpp:150] Setting up twin_pred
I0412 01:53:41.611076 23821 net.cpp:157] Top shape: 1 402 (402)
I0412 01:53:41.611080 23821 net.cpp:165] Memory required for data: 10172697192
I0412 01:53:41.611089 23821 layer_factory.hpp:77] Creating layer loss_cls
I0412 01:53:41.611099 23821 net.cpp:100] Creating Layer loss_cls
I0412 01:53:41.611104 23821 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 01:53:41.611110 23821 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 01:53:41.611117 23821 net.cpp:408] loss_cls -> loss_cls
I0412 01:53:41.611126 23821 layer_factory.hpp:77] Creating layer loss_cls
I0412 01:53:41.611238 23821 net.cpp:150] Setting up loss_cls
I0412 01:53:41.611246 23821 net.cpp:157] Top shape: (1)
I0412 01:53:41.611249 23821 net.cpp:160]     with loss weight 1
I0412 01:53:41.611259 23821 net.cpp:165] Memory required for data: 10172697196
I0412 01:53:41.611263 23821 layer_factory.hpp:77] Creating layer loss_twin
I0412 01:53:41.611270 23821 net.cpp:100] Creating Layer loss_twin
I0412 01:53:41.611277 23821 net.cpp:434] loss_twin <- twin_pred
I0412 01:53:41.611281 23821 net.cpp:434] loss_twin <- twin_targets
I0412 01:53:41.611285 23821 net.cpp:434] loss_twin <- twin_inside_weights
I0412 01:53:41.611289 23821 net.cpp:434] loss_twin <- twin_outside_weights
I0412 01:53:41.611294 23821 net.cpp:408] loss_twin -> loss_twin
I0412 01:53:41.611394 23821 net.cpp:150] Setting up loss_twin
I0412 01:53:41.611402 23821 net.cpp:157] Top shape: (1)
I0412 01:53:41.611405 23821 net.cpp:160]     with loss weight 1
I0412 01:53:41.611410 23821 net.cpp:165] Memory required for data: 10172697200
I0412 01:53:41.611414 23821 layer_factory.hpp:77] Creating layer accuarcy
I0412 01:53:41.611421 23821 net.cpp:100] Creating Layer accuarcy
I0412 01:53:41.611428 23821 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 01:53:41.611433 23821 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 01:53:41.611440 23821 net.cpp:408] accuarcy -> accuarcy
I0412 01:53:41.611449 23821 net.cpp:150] Setting up accuarcy
I0412 01:53:41.611452 23821 net.cpp:157] Top shape: (1)
I0412 01:53:41.611456 23821 net.cpp:165] Memory required for data: 10172697204
I0412 01:53:41.611459 23821 net.cpp:228] accuarcy does not need backward computation.
I0412 01:53:41.611464 23821 net.cpp:226] loss_twin needs backward computation.
I0412 01:53:41.611467 23821 net.cpp:226] loss_cls needs backward computation.
I0412 01:53:41.611471 23821 net.cpp:226] twin_pred needs backward computation.
I0412 01:53:41.611476 23821 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 01:53:41.611481 23821 net.cpp:226] cls_score needs backward computation.
I0412 01:53:41.611485 23821 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 01:53:41.611488 23821 net.cpp:226] drop6 needs backward computation.
I0412 01:53:41.611495 23821 net.cpp:226] relu6 needs backward computation.
I0412 01:53:41.611497 23821 net.cpp:226] fc6 needs backward computation.
I0412 01:53:41.611501 23821 net.cpp:226] roi_pool5 needs backward computation.
I0412 01:53:41.611505 23821 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 01:53:41.611508 23821 net.cpp:226] roi-data needs backward computation.
I0412 01:53:41.611512 23821 net.cpp:226] proposal needs backward computation.
I0412 01:53:41.611517 23821 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 01:53:41.611521 23821 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 01:53:41.611523 23821 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 01:53:41.611528 23821 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 01:53:41.611533 23821 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 01:53:41.611541 23821 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 01:53:41.611546 23821 net.cpp:226] rpn-data needs backward computation.
I0412 01:53:41.611549 23821 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 01:53:41.611553 23821 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 01:53:41.611559 23821 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 01:53:41.611563 23821 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 01:53:41.611567 23821 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 01:53:41.611572 23821 net.cpp:226] rpn_cls_score needs backward computation.
I0412 01:53:41.611575 23821 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 01:53:41.611579 23821 net.cpp:226] rpn/output_pool needs backward computation.
I0412 01:53:41.611584 23821 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 01:53:41.611588 23821 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 01:53:41.611591 23821 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 01:53:41.611594 23821 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 01:53:41.611599 23821 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 01:53:41.611603 23821 net.cpp:226] relu5b needs backward computation.
I0412 01:53:41.611605 23821 net.cpp:226] conv5b needs backward computation.
I0412 01:53:41.611608 23821 net.cpp:226] relu5a needs backward computation.
I0412 01:53:41.611613 23821 net.cpp:226] conv5a needs backward computation.
I0412 01:53:41.611616 23821 net.cpp:226] pool4 needs backward computation.
I0412 01:53:41.611620 23821 net.cpp:226] relu4b needs backward computation.
I0412 01:53:41.611624 23821 net.cpp:226] conv4b needs backward computation.
I0412 01:53:41.611627 23821 net.cpp:226] relu4a needs backward computation.
I0412 01:53:41.611630 23821 net.cpp:226] conv4a needs backward computation.
I0412 01:53:41.611636 23821 net.cpp:226] pool3 needs backward computation.
I0412 01:53:41.611640 23821 net.cpp:226] relu3b needs backward computation.
I0412 01:53:41.611644 23821 net.cpp:226] conv3b needs backward computation.
I0412 01:53:41.611647 23821 net.cpp:226] relu3a needs backward computation.
I0412 01:53:41.611652 23821 net.cpp:226] conv3a needs backward computation.
I0412 01:53:41.611656 23821 net.cpp:228] pool2 does not need backward computation.
I0412 01:53:41.611660 23821 net.cpp:228] relu2a does not need backward computation.
I0412 01:53:41.611662 23821 net.cpp:228] conv2a does not need backward computation.
I0412 01:53:41.611666 23821 net.cpp:228] pool1 does not need backward computation.
I0412 01:53:41.611671 23821 net.cpp:228] relu1a does not need backward computation.
I0412 01:53:41.611675 23821 net.cpp:228] conv1a does not need backward computation.
I0412 01:53:41.611680 23821 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 01:53:41.611685 23821 net.cpp:228] data_data_0_split does not need backward computation.
I0412 01:53:41.611690 23821 net.cpp:228] data does not need backward computation.
I0412 01:53:41.611692 23821 net.cpp:270] This network produces output accuarcy
I0412 01:53:41.611696 23821 net.cpp:270] This network produces output loss_cls
I0412 01:53:41.611701 23821 net.cpp:270] This network produces output loss_twin
I0412 01:53:41.611704 23821 net.cpp:270] This network produces output rpn_accuarcy
I0412 01:53:41.611707 23821 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 01:53:41.611712 23821 net.cpp:270] This network produces output rpn_cls_loss
I0412 01:53:41.611716 23821 net.cpp:270] This network produces output rpn_loss_twin
I0412 01:53:41.611752 23821 net.cpp:283] Network initialization done.
I0412 01:53:41.611874 23821 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 01:53:41.780288 23821 net.cpp:761] Ignoring source layer pool5
I0412 01:53:41.804551 23821 net.cpp:761] Ignoring source layer fc7
I0412 01:53:41.804574 23821 net.cpp:761] Ignoring source layer relu7
I0412 01:53:41.804579 23821 net.cpp:761] Ignoring source layer drop7
I0412 01:53:41.804584 23821 net.cpp:761] Ignoring source layer fc8-200
I0412 01:53:41.804586 23821 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
99
(array([0]), array([97]))
(array([[3.1250000e-02, 3.8569803e+02]], dtype=float32), array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 0.]], dtype=float32))
(1, 101)
[[3.1250000e-02 3.8569803e+02]]
[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0.]]
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 95, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 141, in forward
    top[top_ind].data[...] = blob.astype(np.float32, copy=False)
AttributeError: 'list' object has no attribute 'astype'
Terminating BlobFetcher
