Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=0, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 0,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
print done
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}]
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 15:08:39.886438 28005 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 15:08:39.886467 28005 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 15:08:39.887012 28005 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 15:08:39.887199 28005 layer_factory.hpp:77] Creating layer data
I0412 15:08:39.897531 28005 net.cpp:100] Creating Layer data
I0412 15:08:39.897545 28005 net.cpp:408] data -> data
I0412 15:08:39.897553 28005 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 15:08:39.905722 28005 net.cpp:150] Setting up data
I0412 15:08:39.905740 28005 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 15:08:39.905745 28005 net.cpp:157] Top shape: 1 3 (3)
I0412 15:08:39.905748 28005 net.cpp:165] Memory required for data: 115605516
I0412 15:08:39.905752 28005 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 15:08:39.905761 28005 net.cpp:100] Creating Layer data_data_0_split
I0412 15:08:39.905766 28005 net.cpp:434] data_data_0_split <- data
I0412 15:08:39.905772 28005 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 15:08:39.905781 28005 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 15:08:39.905808 28005 net.cpp:150] Setting up data_data_0_split
I0412 15:08:39.905814 28005 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 15:08:39.905819 28005 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 15:08:39.905822 28005 net.cpp:165] Memory required for data: 346816524
I0412 15:08:39.905825 28005 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 15:08:39.905830 28005 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 15:08:39.905836 28005 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 15:08:39.905843 28005 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 15:08:39.905848 28005 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 15:08:39.905870 28005 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 15:08:39.905876 28005 net.cpp:157] Top shape: 1 3 (3)
I0412 15:08:39.905880 28005 net.cpp:157] Top shape: 1 3 (3)
I0412 15:08:39.905884 28005 net.cpp:165] Memory required for data: 346816548
I0412 15:08:39.905886 28005 layer_factory.hpp:77] Creating layer conv1a
I0412 15:08:39.905896 28005 net.cpp:100] Creating Layer conv1a
I0412 15:08:39.905901 28005 net.cpp:434] conv1a <- data_data_0_split_0
I0412 15:08:39.905906 28005 net.cpp:408] conv1a -> conv1a
I0412 15:08:39.922452 28005 net.cpp:150] Setting up conv1a
I0412 15:08:39.922488 28005 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 15:08:39.922492 28005 net.cpp:165] Memory required for data: 2813067300
I0412 15:08:39.922508 28005 layer_factory.hpp:77] Creating layer relu1a
I0412 15:08:39.922523 28005 net.cpp:100] Creating Layer relu1a
I0412 15:08:39.922528 28005 net.cpp:434] relu1a <- conv1a
I0412 15:08:39.922535 28005 net.cpp:395] relu1a -> conv1a (in-place)
I0412 15:08:39.922546 28005 net.cpp:150] Setting up relu1a
I0412 15:08:39.922551 28005 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 15:08:39.922554 28005 net.cpp:165] Memory required for data: 5279318052
I0412 15:08:39.922557 28005 layer_factory.hpp:77] Creating layer pool1
I0412 15:08:39.922564 28005 net.cpp:100] Creating Layer pool1
I0412 15:08:39.922566 28005 net.cpp:434] pool1 <- conv1a
I0412 15:08:39.922572 28005 net.cpp:408] pool1 -> pool1
I0412 15:08:39.922634 28005 net.cpp:150] Setting up pool1
I0412 15:08:39.922641 28005 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 15:08:39.922643 28005 net.cpp:165] Memory required for data: 5895880740
I0412 15:08:39.922646 28005 layer_factory.hpp:77] Creating layer conv2a
I0412 15:08:39.922657 28005 net.cpp:100] Creating Layer conv2a
I0412 15:08:39.922660 28005 net.cpp:434] conv2a <- pool1
I0412 15:08:39.922665 28005 net.cpp:408] conv2a -> conv2a
I0412 15:08:39.928813 28005 net.cpp:150] Setting up conv2a
I0412 15:08:39.928833 28005 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 15:08:39.928838 28005 net.cpp:165] Memory required for data: 7129006116
I0412 15:08:39.928846 28005 layer_factory.hpp:77] Creating layer relu2a
I0412 15:08:39.928853 28005 net.cpp:100] Creating Layer relu2a
I0412 15:08:39.928856 28005 net.cpp:434] relu2a <- conv2a
I0412 15:08:39.928863 28005 net.cpp:395] relu2a -> conv2a (in-place)
I0412 15:08:39.928869 28005 net.cpp:150] Setting up relu2a
I0412 15:08:39.928874 28005 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 15:08:39.928877 28005 net.cpp:165] Memory required for data: 8362131492
I0412 15:08:39.928880 28005 layer_factory.hpp:77] Creating layer pool2
I0412 15:08:39.928889 28005 net.cpp:100] Creating Layer pool2
I0412 15:08:39.928894 28005 net.cpp:434] pool2 <- conv2a
I0412 15:08:39.928900 28005 net.cpp:408] pool2 -> pool2
I0412 15:08:39.928936 28005 net.cpp:150] Setting up pool2
I0412 15:08:39.928943 28005 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 15:08:39.928946 28005 net.cpp:165] Memory required for data: 8516272164
I0412 15:08:39.928949 28005 layer_factory.hpp:77] Creating layer conv3a
I0412 15:08:39.928957 28005 net.cpp:100] Creating Layer conv3a
I0412 15:08:39.928961 28005 net.cpp:434] conv3a <- pool2
I0412 15:08:39.928966 28005 net.cpp:408] conv3a -> conv3a
I0412 15:08:39.936722 28005 net.cpp:150] Setting up conv3a
I0412 15:08:39.936735 28005 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 15:08:39.936738 28005 net.cpp:165] Memory required for data: 8824553508
I0412 15:08:39.936746 28005 layer_factory.hpp:77] Creating layer relu3a
I0412 15:08:39.936753 28005 net.cpp:100] Creating Layer relu3a
I0412 15:08:39.936756 28005 net.cpp:434] relu3a <- conv3a
I0412 15:08:39.936761 28005 net.cpp:395] relu3a -> conv3a (in-place)
I0412 15:08:39.936766 28005 net.cpp:150] Setting up relu3a
I0412 15:08:39.936770 28005 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 15:08:39.936774 28005 net.cpp:165] Memory required for data: 9132834852
I0412 15:08:39.936776 28005 layer_factory.hpp:77] Creating layer conv3b
I0412 15:08:39.936784 28005 net.cpp:100] Creating Layer conv3b
I0412 15:08:39.936786 28005 net.cpp:434] conv3b <- conv3a
I0412 15:08:39.936790 28005 net.cpp:408] conv3b -> conv3b
I0412 15:08:39.952344 28005 net.cpp:150] Setting up conv3b
I0412 15:08:39.952360 28005 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 15:08:39.952363 28005 net.cpp:165] Memory required for data: 9441116196
I0412 15:08:39.952369 28005 layer_factory.hpp:77] Creating layer relu3b
I0412 15:08:39.952378 28005 net.cpp:100] Creating Layer relu3b
I0412 15:08:39.952380 28005 net.cpp:434] relu3b <- conv3b
I0412 15:08:39.952385 28005 net.cpp:395] relu3b -> conv3b (in-place)
I0412 15:08:39.952391 28005 net.cpp:150] Setting up relu3b
I0412 15:08:39.952395 28005 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 15:08:39.952399 28005 net.cpp:165] Memory required for data: 9749397540
I0412 15:08:39.952401 28005 layer_factory.hpp:77] Creating layer pool3
I0412 15:08:39.952407 28005 net.cpp:100] Creating Layer pool3
I0412 15:08:39.952410 28005 net.cpp:434] pool3 <- conv3b
I0412 15:08:39.952414 28005 net.cpp:408] pool3 -> pool3
I0412 15:08:39.952447 28005 net.cpp:150] Setting up pool3
I0412 15:08:39.952455 28005 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 15:08:39.952457 28005 net.cpp:165] Memory required for data: 9787932708
I0412 15:08:39.952459 28005 layer_factory.hpp:77] Creating layer conv4a
I0412 15:08:39.952468 28005 net.cpp:100] Creating Layer conv4a
I0412 15:08:39.952473 28005 net.cpp:434] conv4a <- pool3
I0412 15:08:39.952479 28005 net.cpp:408] conv4a -> conv4a
I0412 15:08:39.983316 28005 net.cpp:150] Setting up conv4a
I0412 15:08:39.983340 28005 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 15:08:39.983342 28005 net.cpp:165] Memory required for data: 9865003044
I0412 15:08:39.983355 28005 layer_factory.hpp:77] Creating layer relu4a
I0412 15:08:39.983366 28005 net.cpp:100] Creating Layer relu4a
I0412 15:08:39.983371 28005 net.cpp:434] relu4a <- conv4a
I0412 15:08:39.983376 28005 net.cpp:395] relu4a -> conv4a (in-place)
I0412 15:08:39.983384 28005 net.cpp:150] Setting up relu4a
I0412 15:08:39.983388 28005 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 15:08:39.983391 28005 net.cpp:165] Memory required for data: 9942073380
I0412 15:08:39.983393 28005 layer_factory.hpp:77] Creating layer conv4b
I0412 15:08:39.983405 28005 net.cpp:100] Creating Layer conv4b
I0412 15:08:39.983409 28005 net.cpp:434] conv4b <- conv4a
I0412 15:08:39.983413 28005 net.cpp:408] conv4b -> conv4b
I0412 15:08:40.042085 28005 net.cpp:150] Setting up conv4b
I0412 15:08:40.042116 28005 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 15:08:40.042119 28005 net.cpp:165] Memory required for data: 10019143716
I0412 15:08:40.042129 28005 layer_factory.hpp:77] Creating layer relu4b
I0412 15:08:40.042137 28005 net.cpp:100] Creating Layer relu4b
I0412 15:08:40.042141 28005 net.cpp:434] relu4b <- conv4b
I0412 15:08:40.042150 28005 net.cpp:395] relu4b -> conv4b (in-place)
I0412 15:08:40.042157 28005 net.cpp:150] Setting up relu4b
I0412 15:08:40.042160 28005 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 15:08:40.042163 28005 net.cpp:165] Memory required for data: 10096214052
I0412 15:08:40.042166 28005 layer_factory.hpp:77] Creating layer pool4
I0412 15:08:40.042172 28005 net.cpp:100] Creating Layer pool4
I0412 15:08:40.042176 28005 net.cpp:434] pool4 <- conv4b
I0412 15:08:40.042181 28005 net.cpp:408] pool4 -> pool4
I0412 15:08:40.042212 28005 net.cpp:150] Setting up pool4
I0412 15:08:40.042218 28005 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:08:40.042222 28005 net.cpp:165] Memory required for data: 10105847844
I0412 15:08:40.042224 28005 layer_factory.hpp:77] Creating layer conv5a
I0412 15:08:40.042238 28005 net.cpp:100] Creating Layer conv5a
I0412 15:08:40.042243 28005 net.cpp:434] conv5a <- pool4
I0412 15:08:40.042248 28005 net.cpp:408] conv5a -> conv5a
I0412 15:08:40.100958 28005 net.cpp:150] Setting up conv5a
I0412 15:08:40.100988 28005 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:08:40.100992 28005 net.cpp:165] Memory required for data: 10115481636
I0412 15:08:40.101001 28005 layer_factory.hpp:77] Creating layer relu5a
I0412 15:08:40.101011 28005 net.cpp:100] Creating Layer relu5a
I0412 15:08:40.101016 28005 net.cpp:434] relu5a <- conv5a
I0412 15:08:40.101022 28005 net.cpp:395] relu5a -> conv5a (in-place)
I0412 15:08:40.101030 28005 net.cpp:150] Setting up relu5a
I0412 15:08:40.101038 28005 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:08:40.101040 28005 net.cpp:165] Memory required for data: 10125115428
I0412 15:08:40.101043 28005 layer_factory.hpp:77] Creating layer conv5b
I0412 15:08:40.101052 28005 net.cpp:100] Creating Layer conv5b
I0412 15:08:40.101054 28005 net.cpp:434] conv5b <- conv5a
I0412 15:08:40.101063 28005 net.cpp:408] conv5b -> conv5b
I0412 15:08:40.159839 28005 net.cpp:150] Setting up conv5b
I0412 15:08:40.159862 28005 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:08:40.159865 28005 net.cpp:165] Memory required for data: 10134749220
I0412 15:08:40.159873 28005 layer_factory.hpp:77] Creating layer relu5b
I0412 15:08:40.159883 28005 net.cpp:100] Creating Layer relu5b
I0412 15:08:40.159888 28005 net.cpp:434] relu5b <- conv5b
I0412 15:08:40.159895 28005 net.cpp:395] relu5b -> conv5b (in-place)
I0412 15:08:40.159905 28005 net.cpp:150] Setting up relu5b
I0412 15:08:40.159909 28005 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:08:40.159912 28005 net.cpp:165] Memory required for data: 10144383012
I0412 15:08:40.159915 28005 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 15:08:40.159920 28005 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 15:08:40.159924 28005 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 15:08:40.159929 28005 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 15:08:40.159935 28005 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 15:08:40.159961 28005 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 15:08:40.159967 28005 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:08:40.159971 28005 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:08:40.159974 28005 net.cpp:165] Memory required for data: 10163650596
I0412 15:08:40.159977 28005 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 15:08:40.159988 28005 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 15:08:40.159992 28005 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 15:08:40.159997 28005 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 15:08:40.219599 28005 net.cpp:150] Setting up rpn_conv/3x3
I0412 15:08:40.219624 28005 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 15:08:40.219627 28005 net.cpp:165] Memory required for data: 10166796324
I0412 15:08:40.219641 28005 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 15:08:40.219651 28005 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 15:08:40.219657 28005 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 15:08:40.219664 28005 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 15:08:40.219672 28005 net.cpp:150] Setting up rpn_relu/3x3
I0412 15:08:40.219676 28005 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 15:08:40.219679 28005 net.cpp:165] Memory required for data: 10169942052
I0412 15:08:40.219682 28005 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 15:08:40.219694 28005 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 15:08:40.219702 28005 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 15:08:40.219707 28005 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 15:08:40.278239 28005 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 15:08:40.278266 28005 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 15:08:40.278270 28005 net.cpp:165] Memory required for data: 10170728484
I0412 15:08:40.278278 28005 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 15:08:40.278290 28005 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 15:08:40.278295 28005 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 15:08:40.278301 28005 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 15:08:40.278309 28005 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 15:08:40.278313 28005 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 15:08:40.278316 28005 net.cpp:165] Memory required for data: 10171514916
I0412 15:08:40.278319 28005 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 15:08:40.278326 28005 net.cpp:100] Creating Layer rpn/output_pool
I0412 15:08:40.278329 28005 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 15:08:40.278334 28005 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 15:08:40.278367 28005 net.cpp:150] Setting up rpn/output_pool
I0412 15:08:40.278373 28005 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 15:08:40.278376 28005 net.cpp:165] Memory required for data: 10171711524
I0412 15:08:40.278379 28005 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 15:08:40.278384 28005 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 15:08:40.278389 28005 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 15:08:40.278394 28005 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 15:08:40.278400 28005 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 15:08:40.278424 28005 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 15:08:40.278430 28005 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 15:08:40.278434 28005 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 15:08:40.278437 28005 net.cpp:165] Memory required for data: 10172104740
I0412 15:08:40.278440 28005 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 15:08:40.278448 28005 net.cpp:100] Creating Layer rpn_cls_score
I0412 15:08:40.278451 28005 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 15:08:40.278457 28005 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 15:08:40.278900 28005 net.cpp:150] Setting up rpn_cls_score
I0412 15:08:40.278908 28005 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:08:40.278911 28005 net.cpp:165] Memory required for data: 10172133156
I0412 15:08:40.278916 28005 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 15:08:40.278921 28005 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 15:08:40.278924 28005 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 15:08:40.278929 28005 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 15:08:40.278935 28005 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 15:08:40.278965 28005 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 15:08:40.278971 28005 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:08:40.278975 28005 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:08:40.278977 28005 net.cpp:165] Memory required for data: 10172189988
I0412 15:08:40.278980 28005 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 15:08:40.278992 28005 net.cpp:100] Creating Layer rpn_twin_pred
I0412 15:08:40.279000 28005 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 15:08:40.279006 28005 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 15:08:40.279426 28005 net.cpp:150] Setting up rpn_twin_pred
I0412 15:08:40.279433 28005 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:08:40.279435 28005 net.cpp:165] Memory required for data: 10172218404
I0412 15:08:40.279440 28005 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 15:08:40.279448 28005 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 15:08:40.279453 28005 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 15:08:40.279458 28005 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 15:08:40.279464 28005 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 15:08:40.279489 28005 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 15:08:40.279494 28005 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:08:40.279497 28005 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:08:40.279500 28005 net.cpp:165] Memory required for data: 10172275236
I0412 15:08:40.279502 28005 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 15:08:40.279510 28005 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 15:08:40.279515 28005 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 15:08:40.279520 28005 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 15:08:40.279538 28005 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 15:08:40.279544 28005 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 15:08:40.279548 28005 net.cpp:165] Memory required for data: 10172303652
I0412 15:08:40.279551 28005 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 15:08:40.279556 28005 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 15:08:40.279559 28005 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 15:08:40.279564 28005 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 15:08:40.279575 28005 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 15:08:40.279583 28005 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 15:08:40.279613 28005 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 15:08:40.279620 28005 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 15:08:40.279624 28005 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 15:08:40.279628 28005 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 15:08:40.279630 28005 net.cpp:165] Memory required for data: 10172388900
I0412 15:08:40.279633 28005 layer_factory.hpp:77] Creating layer rpn-data
I0412 15:08:40.280004 28005 net.cpp:100] Creating Layer rpn-data
I0412 15:08:40.280015 28005 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 15:08:40.280020 28005 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 15:08:40.280025 28005 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 15:08:40.280030 28005 net.cpp:408] rpn-data -> rpn_labels
I0412 15:08:40.280036 28005 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 15:08:40.280042 28005 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 15:08:40.280047 28005 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 15:08:40.282291 28005 net.cpp:150] Setting up rpn-data
I0412 15:08:40.282305 28005 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 15:08:40.282310 28005 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:08:40.282312 28005 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:08:40.282317 28005 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:08:40.282320 28005 net.cpp:165] Memory required for data: 10172488356
I0412 15:08:40.282325 28005 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 15:08:40.282330 28005 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 15:08:40.282335 28005 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 15:08:40.282340 28005 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 15:08:40.282346 28005 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 15:08:40.282371 28005 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 15:08:40.282377 28005 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 15:08:40.282382 28005 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 15:08:40.282383 28005 net.cpp:165] Memory required for data: 10172516772
I0412 15:08:40.282387 28005 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 15:08:40.282392 28005 net.cpp:100] Creating Layer rpn_loss_cls
I0412 15:08:40.282395 28005 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 15:08:40.282399 28005 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 15:08:40.282404 28005 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 15:08:40.282413 28005 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 15:08:40.282479 28005 net.cpp:150] Setting up rpn_loss_cls
I0412 15:08:40.282485 28005 net.cpp:157] Top shape: (1)
I0412 15:08:40.282486 28005 net.cpp:160]     with loss weight 1
I0412 15:08:40.282503 28005 net.cpp:165] Memory required for data: 10172516776
I0412 15:08:40.282506 28005 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 15:08:40.282512 28005 net.cpp:100] Creating Layer rpn_loss_twin
I0412 15:08:40.282516 28005 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 15:08:40.282521 28005 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 15:08:40.282523 28005 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 15:08:40.282527 28005 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 15:08:40.282531 28005 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 15:08:40.282582 28005 net.cpp:150] Setting up rpn_loss_twin
I0412 15:08:40.282588 28005 net.cpp:157] Top shape: (1)
I0412 15:08:40.282591 28005 net.cpp:160]     with loss weight 1
I0412 15:08:40.282594 28005 net.cpp:165] Memory required for data: 10172516780
I0412 15:08:40.282598 28005 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 15:08:40.282604 28005 net.cpp:100] Creating Layer rpn_accuarcy
I0412 15:08:40.282608 28005 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 15:08:40.282611 28005 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 15:08:40.282616 28005 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 15:08:40.282621 28005 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 15:08:40.282644 28005 net.cpp:150] Setting up rpn_accuarcy
I0412 15:08:40.282649 28005 net.cpp:157] Top shape: (1)
I0412 15:08:40.282652 28005 net.cpp:157] Top shape: 2 (2)
I0412 15:08:40.282655 28005 net.cpp:165] Memory required for data: 10172516792
I0412 15:08:40.282658 28005 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 15:08:40.282665 28005 net.cpp:100] Creating Layer rpn_cls_prob
I0412 15:08:40.282668 28005 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 15:08:40.282672 28005 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 15:08:40.282711 28005 net.cpp:150] Setting up rpn_cls_prob
I0412 15:08:40.282716 28005 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 15:08:40.282719 28005 net.cpp:165] Memory required for data: 10172545208
I0412 15:08:40.282722 28005 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 15:08:40.282728 28005 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 15:08:40.282732 28005 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 15:08:40.282737 28005 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 15:08:40.282753 28005 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 15:08:40.282759 28005 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:08:40.282763 28005 net.cpp:165] Memory required for data: 10172573624
I0412 15:08:40.282765 28005 layer_factory.hpp:77] Creating layer proposal
I0412 15:08:40.283275 28005 net.cpp:100] Creating Layer proposal
I0412 15:08:40.283287 28005 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 15:08:40.283293 28005 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 15:08:40.283298 28005 net.cpp:408] proposal -> rpn_rois
I0412 15:08:40.307610 28005 net.cpp:150] Setting up proposal
I0412 15:08:40.307623 28005 net.cpp:157] Top shape: 1 3 (3)
I0412 15:08:40.307626 28005 net.cpp:165] Memory required for data: 10172573636
I0412 15:08:40.307629 28005 layer_factory.hpp:77] Creating layer roi-data
I0412 15:08:40.307746 28005 net.cpp:100] Creating Layer roi-data
I0412 15:08:40.307755 28005 net.cpp:434] roi-data <- rpn_rois
I0412 15:08:40.307760 28005 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 15:08:40.307766 28005 net.cpp:408] roi-data -> rois
I0412 15:08:40.307772 28005 net.cpp:408] roi-data -> labels
I0412 15:08:40.307777 28005 net.cpp:408] roi-data -> twin_targets
I0412 15:08:40.307782 28005 net.cpp:408] roi-data -> twin_inside_weights
I0412 15:08:40.307788 28005 net.cpp:408] roi-data -> twin_outside_weights
I0412 15:08:40.308063 28005 net.cpp:150] Setting up roi-data
I0412 15:08:40.308073 28005 net.cpp:157] Top shape: 1 3 (3)
I0412 15:08:40.308076 28005 net.cpp:157] Top shape: 1 1 (1)
I0412 15:08:40.308079 28005 net.cpp:157] Top shape: 1 402 (402)
I0412 15:08:40.308084 28005 net.cpp:157] Top shape: 1 402 (402)
I0412 15:08:40.308086 28005 net.cpp:157] Top shape: 1 402 (402)
I0412 15:08:40.308089 28005 net.cpp:165] Memory required for data: 10172578476
I0412 15:08:40.308092 28005 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 15:08:40.308099 28005 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 15:08:40.308101 28005 net.cpp:434] labels_roi-data_1_split <- labels
I0412 15:08:40.308106 28005 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 15:08:40.308113 28005 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 15:08:40.308136 28005 net.cpp:150] Setting up labels_roi-data_1_split
I0412 15:08:40.308141 28005 net.cpp:157] Top shape: 1 1 (1)
I0412 15:08:40.308145 28005 net.cpp:157] Top shape: 1 1 (1)
I0412 15:08:40.308147 28005 net.cpp:165] Memory required for data: 10172578484
I0412 15:08:40.308151 28005 layer_factory.hpp:77] Creating layer roi_pool5
I0412 15:08:40.308156 28005 net.cpp:100] Creating Layer roi_pool5
I0412 15:08:40.308158 28005 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 15:08:40.308163 28005 net.cpp:434] roi_pool5 <- rois
I0412 15:08:40.308167 28005 net.cpp:408] roi_pool5 -> pool5
I0412 15:08:40.308172 28005 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 15:08:40.308178 28005 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 15:08:40.308202 28005 net.cpp:150] Setting up roi_pool5
I0412 15:08:40.308218 28005 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 15:08:40.308219 28005 net.cpp:165] Memory required for data: 10172611252
I0412 15:08:40.308223 28005 layer_factory.hpp:77] Creating layer fc6
I0412 15:08:40.308233 28005 net.cpp:100] Creating Layer fc6
I0412 15:08:40.308235 28005 net.cpp:434] fc6 <- pool5
I0412 15:08:40.308240 28005 net.cpp:408] fc6 -> fc6
I0412 15:08:40.579447 28005 net.cpp:150] Setting up fc6
I0412 15:08:40.579476 28005 net.cpp:157] Top shape: 1 4096 (4096)
I0412 15:08:40.579479 28005 net.cpp:165] Memory required for data: 10172627636
I0412 15:08:40.579489 28005 layer_factory.hpp:77] Creating layer relu6
I0412 15:08:40.579499 28005 net.cpp:100] Creating Layer relu6
I0412 15:08:40.579502 28005 net.cpp:434] relu6 <- fc6
I0412 15:08:40.579510 28005 net.cpp:395] relu6 -> fc6 (in-place)
I0412 15:08:40.579519 28005 net.cpp:150] Setting up relu6
I0412 15:08:40.579524 28005 net.cpp:157] Top shape: 1 4096 (4096)
I0412 15:08:40.579527 28005 net.cpp:165] Memory required for data: 10172644020
I0412 15:08:40.579530 28005 layer_factory.hpp:77] Creating layer drop6
I0412 15:08:40.579536 28005 net.cpp:100] Creating Layer drop6
I0412 15:08:40.579538 28005 net.cpp:434] drop6 <- fc6
I0412 15:08:40.579542 28005 net.cpp:395] drop6 -> fc6 (in-place)
I0412 15:08:40.579560 28005 net.cpp:150] Setting up drop6
I0412 15:08:40.579565 28005 net.cpp:157] Top shape: 1 4096 (4096)
I0412 15:08:40.579566 28005 net.cpp:165] Memory required for data: 10172660404
I0412 15:08:40.579569 28005 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 15:08:40.579577 28005 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 15:08:40.579581 28005 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 15:08:40.579586 28005 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 15:08:40.579591 28005 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 15:08:40.579614 28005 net.cpp:150] Setting up fc6_drop6_0_split
I0412 15:08:40.579619 28005 net.cpp:157] Top shape: 1 4096 (4096)
I0412 15:08:40.579623 28005 net.cpp:157] Top shape: 1 4096 (4096)
I0412 15:08:40.579627 28005 net.cpp:165] Memory required for data: 10172693172
I0412 15:08:40.579628 28005 layer_factory.hpp:77] Creating layer cls_score
I0412 15:08:40.579635 28005 net.cpp:100] Creating Layer cls_score
I0412 15:08:40.579639 28005 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 15:08:40.579644 28005 net.cpp:408] cls_score -> cls_score
I0412 15:08:40.586647 28005 net.cpp:150] Setting up cls_score
I0412 15:08:40.586658 28005 net.cpp:157] Top shape: 1 201 (201)
I0412 15:08:40.586661 28005 net.cpp:165] Memory required for data: 10172693976
I0412 15:08:40.586668 28005 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 15:08:40.586673 28005 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 15:08:40.586676 28005 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 15:08:40.586681 28005 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 15:08:40.586688 28005 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 15:08:40.586712 28005 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 15:08:40.586719 28005 net.cpp:157] Top shape: 1 201 (201)
I0412 15:08:40.586721 28005 net.cpp:157] Top shape: 1 201 (201)
I0412 15:08:40.586724 28005 net.cpp:165] Memory required for data: 10172695584
I0412 15:08:40.586726 28005 layer_factory.hpp:77] Creating layer twin_pred
I0412 15:08:40.586732 28005 net.cpp:100] Creating Layer twin_pred
I0412 15:08:40.586736 28005 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 15:08:40.586741 28005 net.cpp:408] twin_pred -> twin_pred
I0412 15:08:40.600026 28005 net.cpp:150] Setting up twin_pred
I0412 15:08:40.600040 28005 net.cpp:157] Top shape: 1 402 (402)
I0412 15:08:40.600044 28005 net.cpp:165] Memory required for data: 10172697192
I0412 15:08:40.600050 28005 layer_factory.hpp:77] Creating layer loss_cls
I0412 15:08:40.600060 28005 net.cpp:100] Creating Layer loss_cls
I0412 15:08:40.600064 28005 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 15:08:40.600069 28005 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 15:08:40.600072 28005 net.cpp:408] loss_cls -> loss_cls
I0412 15:08:40.600080 28005 layer_factory.hpp:77] Creating layer loss_cls
I0412 15:08:40.600142 28005 net.cpp:150] Setting up loss_cls
I0412 15:08:40.600147 28005 net.cpp:157] Top shape: (1)
I0412 15:08:40.600150 28005 net.cpp:160]     with loss weight 1
I0412 15:08:40.600159 28005 net.cpp:165] Memory required for data: 10172697196
I0412 15:08:40.600162 28005 layer_factory.hpp:77] Creating layer loss_twin
I0412 15:08:40.600168 28005 net.cpp:100] Creating Layer loss_twin
I0412 15:08:40.600172 28005 net.cpp:434] loss_twin <- twin_pred
I0412 15:08:40.600175 28005 net.cpp:434] loss_twin <- twin_targets
I0412 15:08:40.600179 28005 net.cpp:434] loss_twin <- twin_inside_weights
I0412 15:08:40.600183 28005 net.cpp:434] loss_twin <- twin_outside_weights
I0412 15:08:40.600186 28005 net.cpp:408] loss_twin -> loss_twin
I0412 15:08:40.600248 28005 net.cpp:150] Setting up loss_twin
I0412 15:08:40.600255 28005 net.cpp:157] Top shape: (1)
I0412 15:08:40.600257 28005 net.cpp:160]     with loss weight 1
I0412 15:08:40.600260 28005 net.cpp:165] Memory required for data: 10172697200
I0412 15:08:40.600265 28005 layer_factory.hpp:77] Creating layer accuarcy
I0412 15:08:40.600270 28005 net.cpp:100] Creating Layer accuarcy
I0412 15:08:40.600273 28005 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 15:08:40.600277 28005 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 15:08:40.600281 28005 net.cpp:408] accuarcy -> accuarcy
I0412 15:08:40.600287 28005 net.cpp:150] Setting up accuarcy
I0412 15:08:40.600291 28005 net.cpp:157] Top shape: (1)
I0412 15:08:40.600293 28005 net.cpp:165] Memory required for data: 10172697204
I0412 15:08:40.600297 28005 net.cpp:228] accuarcy does not need backward computation.
I0412 15:08:40.600302 28005 net.cpp:226] loss_twin needs backward computation.
I0412 15:08:40.600306 28005 net.cpp:226] loss_cls needs backward computation.
I0412 15:08:40.600311 28005 net.cpp:226] twin_pred needs backward computation.
I0412 15:08:40.600314 28005 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 15:08:40.600317 28005 net.cpp:226] cls_score needs backward computation.
I0412 15:08:40.600322 28005 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 15:08:40.600340 28005 net.cpp:226] drop6 needs backward computation.
I0412 15:08:40.600344 28005 net.cpp:226] relu6 needs backward computation.
I0412 15:08:40.600347 28005 net.cpp:226] fc6 needs backward computation.
I0412 15:08:40.600349 28005 net.cpp:226] roi_pool5 needs backward computation.
I0412 15:08:40.600353 28005 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 15:08:40.600356 28005 net.cpp:226] roi-data needs backward computation.
I0412 15:08:40.600360 28005 net.cpp:226] proposal needs backward computation.
I0412 15:08:40.600363 28005 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 15:08:40.600368 28005 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 15:08:40.600371 28005 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 15:08:40.600374 28005 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 15:08:40.600379 28005 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 15:08:40.600383 28005 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 15:08:40.600389 28005 net.cpp:226] rpn-data needs backward computation.
I0412 15:08:40.600392 28005 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 15:08:40.600395 28005 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 15:08:40.600399 28005 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 15:08:40.600404 28005 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 15:08:40.600406 28005 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 15:08:40.600410 28005 net.cpp:226] rpn_cls_score needs backward computation.
I0412 15:08:40.600414 28005 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 15:08:40.600417 28005 net.cpp:226] rpn/output_pool needs backward computation.
I0412 15:08:40.600420 28005 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 15:08:40.600423 28005 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 15:08:40.600426 28005 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 15:08:40.600430 28005 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 15:08:40.600433 28005 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 15:08:40.600438 28005 net.cpp:226] relu5b needs backward computation.
I0412 15:08:40.600441 28005 net.cpp:226] conv5b needs backward computation.
I0412 15:08:40.600445 28005 net.cpp:226] relu5a needs backward computation.
I0412 15:08:40.600446 28005 net.cpp:226] conv5a needs backward computation.
I0412 15:08:40.600450 28005 net.cpp:226] pool4 needs backward computation.
I0412 15:08:40.600455 28005 net.cpp:226] relu4b needs backward computation.
I0412 15:08:40.600458 28005 net.cpp:226] conv4b needs backward computation.
I0412 15:08:40.600461 28005 net.cpp:226] relu4a needs backward computation.
I0412 15:08:40.600463 28005 net.cpp:226] conv4a needs backward computation.
I0412 15:08:40.600467 28005 net.cpp:226] pool3 needs backward computation.
I0412 15:08:40.600471 28005 net.cpp:226] relu3b needs backward computation.
I0412 15:08:40.600474 28005 net.cpp:226] conv3b needs backward computation.
I0412 15:08:40.600477 28005 net.cpp:226] relu3a needs backward computation.
I0412 15:08:40.600481 28005 net.cpp:226] conv3a needs backward computation.
I0412 15:08:40.600483 28005 net.cpp:228] pool2 does not need backward computation.
I0412 15:08:40.600488 28005 net.cpp:228] relu2a does not need backward computation.
I0412 15:08:40.600492 28005 net.cpp:228] conv2a does not need backward computation.
I0412 15:08:40.600494 28005 net.cpp:228] pool1 does not need backward computation.
I0412 15:08:40.600497 28005 net.cpp:228] relu1a does not need backward computation.
I0412 15:08:40.600500 28005 net.cpp:228] conv1a does not need backward computation.
I0412 15:08:40.600504 28005 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 15:08:40.600508 28005 net.cpp:228] data_data_0_split does not need backward computation.
I0412 15:08:40.600512 28005 net.cpp:228] data does not need backward computation.
I0412 15:08:40.600514 28005 net.cpp:270] This network produces output accuarcy
I0412 15:08:40.600517 28005 net.cpp:270] This network produces output loss_cls
I0412 15:08:40.600520 28005 net.cpp:270] This network produces output loss_twin
I0412 15:08:40.600523 28005 net.cpp:270] This network produces output rpn_accuarcy
I0412 15:08:40.600528 28005 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 15:08:40.600530 28005 net.cpp:270] This network produces output rpn_cls_loss
I0412 15:08:40.600533 28005 net.cpp:270] This network produces output rpn_loss_twin
I0412 15:08:40.600570 28005 net.cpp:283] Network initialization done.
I0412 15:08:40.600689 28005 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 15:09:09.218122 28005 net.cpp:761] Ignoring source layer pool5
I0412 15:09:09.240207 28005 net.cpp:761] Ignoring source layer fc7
I0412 15:09:09.240227 28005 net.cpp:761] Ignoring source layer relu7
I0412 15:09:09.240231 28005 net.cpp:761] Ignoring source layer drop7
I0412 15:09:09.240233 28005 net.cpp:761] Ignoring source layer fc8-200
I0412 15:09:09.240238 28005 net.cpp:761] Ignoring source layer loss
Solving...
F0412 15:09:23.187083 28005 syncedmem.cpp:56] Check failed: error == cudaSuccess (2 vs. 0)  out of memory
*** Check failure stack trace: ***
