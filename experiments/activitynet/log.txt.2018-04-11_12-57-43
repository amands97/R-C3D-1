Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0411 12:57:48.382905 28061 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0411 12:57:48.382997 28061 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0411 12:57:48.383810 28061 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0411 12:57:48.384081 28061 layer_factory.hpp:77] Creating layer data
I0411 12:57:48.404062 28061 net.cpp:100] Creating Layer data
I0411 12:57:48.404150 28061 net.cpp:408] data -> data
I0411 12:57:48.404198 28061 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0411 12:57:48.419885 28061 net.cpp:150] Setting up data
I0411 12:57:48.419961 28061 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0411 12:57:48.420008 28061 net.cpp:157] Top shape: 1 3 (3)
I0411 12:57:48.420042 28061 net.cpp:165] Memory required for data: 115605516
I0411 12:57:48.420078 28061 layer_factory.hpp:77] Creating layer data_data_0_split
I0411 12:57:48.420125 28061 net.cpp:100] Creating Layer data_data_0_split
I0411 12:57:48.420168 28061 net.cpp:434] data_data_0_split <- data
I0411 12:57:48.420215 28061 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0411 12:57:48.420269 28061 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0411 12:57:48.420447 28061 net.cpp:150] Setting up data_data_0_split
I0411 12:57:48.420501 28061 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0411 12:57:48.420550 28061 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0411 12:57:48.420594 28061 net.cpp:165] Memory required for data: 346816524
I0411 12:57:48.420639 28061 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0411 12:57:48.420688 28061 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0411 12:57:48.420737 28061 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0411 12:57:48.420789 28061 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0411 12:57:48.420845 28061 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0411 12:57:48.420955 28061 net.cpp:150] Setting up gt_boxes_data_1_split
I0411 12:57:48.421013 28061 net.cpp:157] Top shape: 1 3 (3)
I0411 12:57:48.421062 28061 net.cpp:157] Top shape: 1 3 (3)
I0411 12:57:48.421110 28061 net.cpp:165] Memory required for data: 346816548
I0411 12:57:48.421160 28061 layer_factory.hpp:77] Creating layer conv1a
I0411 12:57:48.421227 28061 net.cpp:100] Creating Layer conv1a
I0411 12:57:48.421277 28061 net.cpp:434] conv1a <- data_data_0_split_0
I0411 12:57:48.421335 28061 net.cpp:408] conv1a -> conv1a
I0411 12:57:48.497027 28061 net.cpp:150] Setting up conv1a
I0411 12:57:48.497274 28061 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0411 12:57:48.497298 28061 net.cpp:165] Memory required for data: 2813067300
I0411 12:57:48.497331 28061 layer_factory.hpp:77] Creating layer relu1a
I0411 12:57:48.497364 28061 net.cpp:100] Creating Layer relu1a
I0411 12:57:48.497385 28061 net.cpp:434] relu1a <- conv1a
I0411 12:57:48.497406 28061 net.cpp:395] relu1a -> conv1a (in-place)
I0411 12:57:48.497421 28061 net.cpp:150] Setting up relu1a
I0411 12:57:48.497427 28061 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0411 12:57:48.497431 28061 net.cpp:165] Memory required for data: 5279318052
I0411 12:57:48.497436 28061 layer_factory.hpp:77] Creating layer pool1
I0411 12:57:48.497443 28061 net.cpp:100] Creating Layer pool1
I0411 12:57:48.497450 28061 net.cpp:434] pool1 <- conv1a
I0411 12:57:48.497457 28061 net.cpp:408] pool1 -> pool1
I0411 12:57:48.497581 28061 net.cpp:150] Setting up pool1
I0411 12:57:48.497593 28061 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0411 12:57:48.497599 28061 net.cpp:165] Memory required for data: 5895880740
I0411 12:57:48.497604 28061 layer_factory.hpp:77] Creating layer conv2a
I0411 12:57:48.497623 28061 net.cpp:100] Creating Layer conv2a
I0411 12:57:48.497629 28061 net.cpp:434] conv2a <- pool1
I0411 12:57:48.497640 28061 net.cpp:408] conv2a -> conv2a
I0411 12:57:48.527056 28061 net.cpp:150] Setting up conv2a
I0411 12:57:48.527117 28061 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0411 12:57:48.527122 28061 net.cpp:165] Memory required for data: 7129006116
I0411 12:57:48.527153 28061 layer_factory.hpp:77] Creating layer relu2a
I0411 12:57:48.527171 28061 net.cpp:100] Creating Layer relu2a
I0411 12:57:48.527180 28061 net.cpp:434] relu2a <- conv2a
I0411 12:57:48.527197 28061 net.cpp:395] relu2a -> conv2a (in-place)
I0411 12:57:48.527216 28061 net.cpp:150] Setting up relu2a
I0411 12:57:48.527225 28061 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0411 12:57:48.527230 28061 net.cpp:165] Memory required for data: 8362131492
I0411 12:57:48.527235 28061 layer_factory.hpp:77] Creating layer pool2
I0411 12:57:48.527254 28061 net.cpp:100] Creating Layer pool2
I0411 12:57:48.527259 28061 net.cpp:434] pool2 <- conv2a
I0411 12:57:48.527269 28061 net.cpp:408] pool2 -> pool2
I0411 12:57:48.527442 28061 net.cpp:150] Setting up pool2
I0411 12:57:48.527454 28061 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0411 12:57:48.527457 28061 net.cpp:165] Memory required for data: 8516272164
I0411 12:57:48.527462 28061 layer_factory.hpp:77] Creating layer conv3a
I0411 12:57:48.527482 28061 net.cpp:100] Creating Layer conv3a
I0411 12:57:48.527489 28061 net.cpp:434] conv3a <- pool2
I0411 12:57:48.527498 28061 net.cpp:408] conv3a -> conv3a
I0411 12:57:48.543305 28061 net.cpp:150] Setting up conv3a
I0411 12:57:48.543392 28061 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 12:57:48.543395 28061 net.cpp:165] Memory required for data: 8824553508
I0411 12:57:48.543421 28061 layer_factory.hpp:77] Creating layer relu3a
I0411 12:57:48.543443 28061 net.cpp:100] Creating Layer relu3a
I0411 12:57:48.543449 28061 net.cpp:434] relu3a <- conv3a
I0411 12:57:48.543460 28061 net.cpp:395] relu3a -> conv3a (in-place)
I0411 12:57:48.543474 28061 net.cpp:150] Setting up relu3a
I0411 12:57:48.543483 28061 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 12:57:48.543485 28061 net.cpp:165] Memory required for data: 9132834852
I0411 12:57:48.543488 28061 layer_factory.hpp:77] Creating layer conv3b
I0411 12:57:48.543505 28061 net.cpp:100] Creating Layer conv3b
I0411 12:57:48.543509 28061 net.cpp:434] conv3b <- conv3a
I0411 12:57:48.543515 28061 net.cpp:408] conv3b -> conv3b
I0411 12:57:48.566263 28061 net.cpp:150] Setting up conv3b
I0411 12:57:48.566321 28061 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 12:57:48.566326 28061 net.cpp:165] Memory required for data: 9441116196
I0411 12:57:48.566349 28061 layer_factory.hpp:77] Creating layer relu3b
I0411 12:57:48.566373 28061 net.cpp:100] Creating Layer relu3b
I0411 12:57:48.566382 28061 net.cpp:434] relu3b <- conv3b
I0411 12:57:48.566395 28061 net.cpp:395] relu3b -> conv3b (in-place)
I0411 12:57:48.566419 28061 net.cpp:150] Setting up relu3b
I0411 12:57:48.566424 28061 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 12:57:48.566428 28061 net.cpp:165] Memory required for data: 9749397540
I0411 12:57:48.566431 28061 layer_factory.hpp:77] Creating layer pool3
I0411 12:57:48.566442 28061 net.cpp:100] Creating Layer pool3
I0411 12:57:48.566447 28061 net.cpp:434] pool3 <- conv3b
I0411 12:57:48.566453 28061 net.cpp:408] pool3 -> pool3
I0411 12:57:48.566649 28061 net.cpp:150] Setting up pool3
I0411 12:57:48.566686 28061 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0411 12:57:48.566706 28061 net.cpp:165] Memory required for data: 9787932708
I0411 12:57:48.566722 28061 layer_factory.hpp:77] Creating layer conv4a
I0411 12:57:48.566753 28061 net.cpp:100] Creating Layer conv4a
I0411 12:57:48.566773 28061 net.cpp:434] conv4a <- pool3
I0411 12:57:48.566835 28061 net.cpp:408] conv4a -> conv4a
I0411 12:57:48.633433 28061 net.cpp:150] Setting up conv4a
I0411 12:57:48.633461 28061 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 12:57:48.633466 28061 net.cpp:165] Memory required for data: 9865003044
I0411 12:57:48.633486 28061 layer_factory.hpp:77] Creating layer relu4a
I0411 12:57:48.633498 28061 net.cpp:100] Creating Layer relu4a
I0411 12:57:48.633503 28061 net.cpp:434] relu4a <- conv4a
I0411 12:57:48.633512 28061 net.cpp:395] relu4a -> conv4a (in-place)
I0411 12:57:48.633523 28061 net.cpp:150] Setting up relu4a
I0411 12:57:48.633529 28061 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 12:57:48.633533 28061 net.cpp:165] Memory required for data: 9942073380
I0411 12:57:48.633536 28061 layer_factory.hpp:77] Creating layer conv4b
I0411 12:57:48.633556 28061 net.cpp:100] Creating Layer conv4b
I0411 12:57:48.633560 28061 net.cpp:434] conv4b <- conv4a
I0411 12:57:48.633566 28061 net.cpp:408] conv4b -> conv4b
I0411 12:57:48.743170 28061 net.cpp:150] Setting up conv4b
I0411 12:57:48.743417 28061 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 12:57:48.743460 28061 net.cpp:165] Memory required for data: 10019143716
I0411 12:57:48.743501 28061 layer_factory.hpp:77] Creating layer relu4b
I0411 12:57:48.743543 28061 net.cpp:100] Creating Layer relu4b
I0411 12:57:48.743578 28061 net.cpp:434] relu4b <- conv4b
I0411 12:57:48.743618 28061 net.cpp:395] relu4b -> conv4b (in-place)
I0411 12:57:48.743662 28061 net.cpp:150] Setting up relu4b
I0411 12:57:48.743698 28061 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 12:57:48.743731 28061 net.cpp:165] Memory required for data: 10096214052
I0411 12:57:48.743762 28061 layer_factory.hpp:77] Creating layer pool4
I0411 12:57:48.743810 28061 net.cpp:100] Creating Layer pool4
I0411 12:57:48.743842 28061 net.cpp:434] pool4 <- conv4b
I0411 12:57:48.743877 28061 net.cpp:408] pool4 -> pool4
I0411 12:57:48.744010 28061 net.cpp:150] Setting up pool4
I0411 12:57:48.744076 28061 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 12:57:48.744109 28061 net.cpp:165] Memory required for data: 10105847844
I0411 12:57:48.744143 28061 layer_factory.hpp:77] Creating layer conv5a
I0411 12:57:48.744186 28061 net.cpp:100] Creating Layer conv5a
I0411 12:57:48.744220 28061 net.cpp:434] conv5a <- pool4
I0411 12:57:48.744256 28061 net.cpp:408] conv5a -> conv5a
I0411 12:57:48.846542 28061 net.cpp:150] Setting up conv5a
I0411 12:57:48.846586 28061 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 12:57:48.846591 28061 net.cpp:165] Memory required for data: 10115481636
I0411 12:57:48.846603 28061 layer_factory.hpp:77] Creating layer relu5a
I0411 12:57:48.846616 28061 net.cpp:100] Creating Layer relu5a
I0411 12:57:48.846622 28061 net.cpp:434] relu5a <- conv5a
I0411 12:57:48.846631 28061 net.cpp:395] relu5a -> conv5a (in-place)
I0411 12:57:48.846642 28061 net.cpp:150] Setting up relu5a
I0411 12:57:48.846649 28061 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 12:57:48.846652 28061 net.cpp:165] Memory required for data: 10125115428
I0411 12:57:48.846655 28061 layer_factory.hpp:77] Creating layer conv5b
I0411 12:57:48.846668 28061 net.cpp:100] Creating Layer conv5b
I0411 12:57:48.846673 28061 net.cpp:434] conv5b <- conv5a
I0411 12:57:48.846680 28061 net.cpp:408] conv5b -> conv5b
I0411 12:57:48.943894 28061 net.cpp:150] Setting up conv5b
I0411 12:57:48.944074 28061 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 12:57:48.944115 28061 net.cpp:165] Memory required for data: 10134749220
I0411 12:57:48.944160 28061 layer_factory.hpp:77] Creating layer relu5b
I0411 12:57:48.944205 28061 net.cpp:100] Creating Layer relu5b
I0411 12:57:48.944242 28061 net.cpp:434] relu5b <- conv5b
I0411 12:57:48.944283 28061 net.cpp:395] relu5b -> conv5b (in-place)
I0411 12:57:48.944361 28061 net.cpp:150] Setting up relu5b
I0411 12:57:48.944403 28061 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 12:57:48.944437 28061 net.cpp:165] Memory required for data: 10144383012
I0411 12:57:48.944469 28061 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0411 12:57:48.944504 28061 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0411 12:57:48.944537 28061 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0411 12:57:48.944583 28061 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0411 12:57:48.944628 28061 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0411 12:57:48.944754 28061 net.cpp:150] Setting up conv5b_relu5b_0_split
I0411 12:57:48.944804 28061 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 12:57:48.944844 28061 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 12:57:48.944877 28061 net.cpp:165] Memory required for data: 10163650596
I0411 12:57:48.944886 28061 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0411 12:57:48.944928 28061 net.cpp:100] Creating Layer rpn_conv/3x3
I0411 12:57:48.944936 28061 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0411 12:57:48.944988 28061 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0411 12:57:49.039374 28061 net.cpp:150] Setting up rpn_conv/3x3
I0411 12:57:49.039419 28061 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0411 12:57:49.039425 28061 net.cpp:165] Memory required for data: 10166796324
I0411 12:57:49.039460 28061 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0411 12:57:49.039476 28061 net.cpp:100] Creating Layer rpn_relu/3x3
I0411 12:57:49.039484 28061 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0411 12:57:49.039495 28061 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0411 12:57:49.039515 28061 net.cpp:150] Setting up rpn_relu/3x3
I0411 12:57:49.039525 28061 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0411 12:57:49.039530 28061 net.cpp:165] Memory required for data: 10169942052
I0411 12:57:49.039535 28061 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0411 12:57:49.039557 28061 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0411 12:57:49.039564 28061 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0411 12:57:49.039572 28061 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0411 12:57:49.134194 28061 net.cpp:150] Setting up rpn_conv/3x3_2
I0411 12:57:49.134395 28061 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0411 12:57:49.134438 28061 net.cpp:165] Memory required for data: 10170728484
I0411 12:57:49.134483 28061 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0411 12:57:49.134531 28061 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0411 12:57:49.134572 28061 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0411 12:57:49.134619 28061 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0411 12:57:49.134665 28061 net.cpp:150] Setting up rpn_relu/3x3_2
I0411 12:57:49.134703 28061 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0411 12:57:49.134734 28061 net.cpp:165] Memory required for data: 10171514916
I0411 12:57:49.134765 28061 layer_factory.hpp:77] Creating layer rpn/output_pool
I0411 12:57:49.134800 28061 net.cpp:100] Creating Layer rpn/output_pool
I0411 12:57:49.134833 28061 net.cpp:434] rpn/output_pool <- rpn/output_2
I0411 12:57:49.134871 28061 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0411 12:57:49.134989 28061 net.cpp:150] Setting up rpn/output_pool
I0411 12:57:49.135033 28061 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0411 12:57:49.135064 28061 net.cpp:165] Memory required for data: 10171711524
I0411 12:57:49.135094 28061 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0411 12:57:49.135130 28061 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0411 12:57:49.135162 28061 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0411 12:57:49.135200 28061 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0411 12:57:49.135238 28061 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0411 12:57:49.135336 28061 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0411 12:57:49.135404 28061 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0411 12:57:49.135438 28061 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0411 12:57:49.135468 28061 net.cpp:165] Memory required for data: 10172104740
I0411 12:57:49.135499 28061 layer_factory.hpp:77] Creating layer rpn_cls_score
I0411 12:57:49.135545 28061 net.cpp:100] Creating Layer rpn_cls_score
I0411 12:57:49.135579 28061 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0411 12:57:49.135619 28061 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0411 12:57:49.136546 28061 net.cpp:150] Setting up rpn_cls_score
I0411 12:57:49.136731 28061 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 12:57:49.136780 28061 net.cpp:165] Memory required for data: 10172133156
I0411 12:57:49.136827 28061 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0411 12:57:49.136880 28061 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0411 12:57:49.136920 28061 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0411 12:57:49.136963 28061 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0411 12:57:49.137004 28061 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0411 12:57:49.137174 28061 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0411 12:57:49.137261 28061 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 12:57:49.137310 28061 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 12:57:49.137351 28061 net.cpp:165] Memory required for data: 10172189988
I0411 12:57:49.137382 28061 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0411 12:57:49.137434 28061 net.cpp:100] Creating Layer rpn_twin_pred
I0411 12:57:49.137483 28061 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0411 12:57:49.137521 28061 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0411 12:57:49.138429 28061 net.cpp:150] Setting up rpn_twin_pred
I0411 12:57:49.138586 28061 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 12:57:49.138622 28061 net.cpp:165] Memory required for data: 10172218404
I0411 12:57:49.138667 28061 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0411 12:57:49.138713 28061 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0411 12:57:49.138747 28061 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0411 12:57:49.138782 28061 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0411 12:57:49.138823 28061 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0411 12:57:49.138952 28061 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0411 12:57:49.139026 28061 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 12:57:49.139072 28061 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 12:57:49.139113 28061 net.cpp:165] Memory required for data: 10172275236
I0411 12:57:49.139142 28061 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0411 12:57:49.139183 28061 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0411 12:57:49.139214 28061 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0411 12:57:49.139252 28061 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0411 12:57:49.139336 28061 net.cpp:150] Setting up rpn_cls_score_reshape
I0411 12:57:49.139417 28061 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 12:57:49.139448 28061 net.cpp:165] Memory required for data: 10172303652
I0411 12:57:49.139478 28061 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 12:57:49.139513 28061 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 12:57:49.139544 28061 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0411 12:57:49.139580 28061 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0411 12:57:49.139628 28061 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0411 12:57:49.139667 28061 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0411 12:57:49.139773 28061 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 12:57:49.139842 28061 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 12:57:49.139892 28061 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 12:57:49.139935 28061 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 12:57:49.139977 28061 net.cpp:165] Memory required for data: 10172388900
I0411 12:57:49.140007 28061 layer_factory.hpp:77] Creating layer rpn-data
I0411 12:57:49.140625 28061 net.cpp:100] Creating Layer rpn-data
I0411 12:57:49.140723 28061 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0411 12:57:49.140774 28061 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0411 12:57:49.140817 28061 net.cpp:434] rpn-data <- data_data_0_split_1
I0411 12:57:49.140859 28061 net.cpp:408] rpn-data -> rpn_labels
I0411 12:57:49.140909 28061 net.cpp:408] rpn-data -> rpn_twin_targets
I0411 12:57:49.140959 28061 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0411 12:57:49.141014 28061 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0411 12:57:49.144645 28061 net.cpp:150] Setting up rpn-data
I0411 12:57:49.144889 28061 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0411 12:57:49.144949 28061 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 12:57:49.145005 28061 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 12:57:49.145056 28061 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 12:57:49.145092 28061 net.cpp:165] Memory required for data: 10172488356
I0411 12:57:49.145131 28061 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0411 12:57:49.145153 28061 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0411 12:57:49.145159 28061 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0411 12:57:49.145170 28061 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0411 12:57:49.145197 28061 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0411 12:57:49.145296 28061 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0411 12:57:49.145318 28061 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0411 12:57:49.145323 28061 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0411 12:57:49.145328 28061 net.cpp:165] Memory required for data: 10172516772
I0411 12:57:49.145330 28061 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0411 12:57:49.145340 28061 net.cpp:100] Creating Layer rpn_loss_cls
I0411 12:57:49.145359 28061 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0411 12:57:49.145373 28061 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0411 12:57:49.145388 28061 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0411 12:57:49.145409 28061 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0411 12:57:49.145598 28061 net.cpp:150] Setting up rpn_loss_cls
I0411 12:57:49.145630 28061 net.cpp:157] Top shape: (1)
I0411 12:57:49.145642 28061 net.cpp:160]     with loss weight 1
I0411 12:57:49.145668 28061 net.cpp:165] Memory required for data: 10172516776
I0411 12:57:49.145681 28061 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0411 12:57:49.145710 28061 net.cpp:100] Creating Layer rpn_loss_twin
I0411 12:57:49.145725 28061 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0411 12:57:49.145738 28061 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0411 12:57:49.145752 28061 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0411 12:57:49.145766 28061 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0411 12:57:49.145781 28061 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0411 12:57:49.145912 28061 net.cpp:150] Setting up rpn_loss_twin
I0411 12:57:49.145944 28061 net.cpp:157] Top shape: (1)
I0411 12:57:49.145957 28061 net.cpp:160]     with loss weight 1
I0411 12:57:49.145972 28061 net.cpp:165] Memory required for data: 10172516780
I0411 12:57:49.145985 28061 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0411 12:57:49.146004 28061 net.cpp:100] Creating Layer rpn_accuarcy
I0411 12:57:49.146018 28061 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0411 12:57:49.146031 28061 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0411 12:57:49.146047 28061 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0411 12:57:49.146064 28061 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0411 12:57:49.146127 28061 net.cpp:150] Setting up rpn_accuarcy
I0411 12:57:49.146158 28061 net.cpp:157] Top shape: (1)
I0411 12:57:49.146183 28061 net.cpp:157] Top shape: 2 (2)
I0411 12:57:49.146195 28061 net.cpp:165] Memory required for data: 10172516792
I0411 12:57:49.146206 28061 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0411 12:57:49.146221 28061 net.cpp:100] Creating Layer rpn_cls_prob
I0411 12:57:49.146234 28061 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0411 12:57:49.146250 28061 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0411 12:57:49.146349 28061 net.cpp:150] Setting up rpn_cls_prob
I0411 12:57:49.146381 28061 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 12:57:49.146394 28061 net.cpp:165] Memory required for data: 10172545208
I0411 12:57:49.146416 28061 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0411 12:57:49.146435 28061 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0411 12:57:49.146448 28061 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0411 12:57:49.146466 28061 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0411 12:57:49.146514 28061 net.cpp:150] Setting up rpn_cls_prob_reshape
I0411 12:57:49.146545 28061 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 12:57:49.146556 28061 net.cpp:165] Memory required for data: 10172573624
I0411 12:57:49.146569 28061 layer_factory.hpp:77] Creating layer proposal
I0411 12:57:49.147473 28061 net.cpp:100] Creating Layer proposal
I0411 12:57:49.147491 28061 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0411 12:57:49.147498 28061 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0411 12:57:49.147506 28061 net.cpp:408] proposal -> rpn_rois
I0411 12:57:49.170665 28061 net.cpp:150] Setting up proposal
I0411 12:57:49.170740 28061 net.cpp:157] Top shape: 1 3 (3)
I0411 12:57:49.170747 28061 net.cpp:165] Memory required for data: 10172573636
I0411 12:57:49.170758 28061 layer_factory.hpp:77] Creating layer roi-data
I0411 12:57:49.171272 28061 net.cpp:100] Creating Layer roi-data
I0411 12:57:49.171299 28061 net.cpp:434] roi-data <- rpn_rois
I0411 12:57:49.171315 28061 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0411 12:57:49.171329 28061 net.cpp:408] roi-data -> rois
I0411 12:57:49.171350 28061 net.cpp:408] roi-data -> labels
I0411 12:57:49.171360 28061 net.cpp:408] roi-data -> twin_targets
I0411 12:57:49.171368 28061 net.cpp:408] roi-data -> twin_inside_weights
I0411 12:57:49.171378 28061 net.cpp:408] roi-data -> twin_outside_weights
I0411 12:57:49.172435 28061 net.cpp:150] Setting up roi-data
I0411 12:57:49.172483 28061 net.cpp:157] Top shape: 1 3 (3)
I0411 12:57:49.172489 28061 net.cpp:157] Top shape: 1 1 (1)
I0411 12:57:49.172494 28061 net.cpp:157] Top shape: 1 402 (402)
I0411 12:57:49.172498 28061 net.cpp:157] Top shape: 1 402 (402)
I0411 12:57:49.172503 28061 net.cpp:157] Top shape: 1 402 (402)
I0411 12:57:49.172507 28061 net.cpp:165] Memory required for data: 10172578476
I0411 12:57:49.172515 28061 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0411 12:57:49.172533 28061 net.cpp:100] Creating Layer labels_roi-data_1_split
I0411 12:57:49.172539 28061 net.cpp:434] labels_roi-data_1_split <- labels
I0411 12:57:49.172551 28061 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0411 12:57:49.172566 28061 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0411 12:57:49.172643 28061 net.cpp:150] Setting up labels_roi-data_1_split
I0411 12:57:49.172653 28061 net.cpp:157] Top shape: 1 1 (1)
I0411 12:57:49.172657 28061 net.cpp:157] Top shape: 1 1 (1)
I0411 12:57:49.172662 28061 net.cpp:165] Memory required for data: 10172578484
I0411 12:57:49.172665 28061 layer_factory.hpp:77] Creating layer roi_pool5
I0411 12:57:49.172682 28061 net.cpp:100] Creating Layer roi_pool5
I0411 12:57:49.172688 28061 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0411 12:57:49.172695 28061 net.cpp:434] roi_pool5 <- rois
I0411 12:57:49.172701 28061 net.cpp:408] roi_pool5 -> pool5
I0411 12:57:49.172710 28061 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0411 12:57:49.172732 28061 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0411 12:57:49.172809 28061 net.cpp:150] Setting up roi_pool5
I0411 12:57:49.172821 28061 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0411 12:57:49.172825 28061 net.cpp:165] Memory required for data: 10172611252
I0411 12:57:49.172829 28061 layer_factory.hpp:77] Creating layer fc6
I0411 12:57:49.172842 28061 net.cpp:100] Creating Layer fc6
I0411 12:57:49.172847 28061 net.cpp:434] fc6 <- pool5
I0411 12:57:49.172853 28061 net.cpp:408] fc6 -> fc6
I0411 12:57:49.670478 28061 net.cpp:150] Setting up fc6
I0411 12:57:49.680881 28061 net.cpp:157] Top shape: 1 4096 (4096)
I0411 12:57:49.680966 28061 net.cpp:165] Memory required for data: 10172627636
I0411 12:57:49.681013 28061 layer_factory.hpp:77] Creating layer relu6
I0411 12:57:49.681074 28061 net.cpp:100] Creating Layer relu6
I0411 12:57:49.681104 28061 net.cpp:434] relu6 <- fc6
I0411 12:57:49.681136 28061 net.cpp:395] relu6 -> fc6 (in-place)
I0411 12:57:49.681174 28061 net.cpp:150] Setting up relu6
I0411 12:57:49.681202 28061 net.cpp:157] Top shape: 1 4096 (4096)
I0411 12:57:49.681226 28061 net.cpp:165] Memory required for data: 10172644020
I0411 12:57:49.681252 28061 layer_factory.hpp:77] Creating layer drop6
I0411 12:57:49.681287 28061 net.cpp:100] Creating Layer drop6
I0411 12:57:49.681311 28061 net.cpp:434] drop6 <- fc6
I0411 12:57:49.681339 28061 net.cpp:395] drop6 -> fc6 (in-place)
I0411 12:57:49.681489 28061 net.cpp:150] Setting up drop6
I0411 12:57:49.681519 28061 net.cpp:157] Top shape: 1 4096 (4096)
I0411 12:57:49.681542 28061 net.cpp:165] Memory required for data: 10172660404
I0411 12:57:49.681567 28061 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0411 12:57:49.681596 28061 net.cpp:100] Creating Layer fc6_drop6_0_split
I0411 12:57:49.681622 28061 net.cpp:434] fc6_drop6_0_split <- fc6
I0411 12:57:49.681653 28061 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0411 12:57:49.681685 28061 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0411 12:57:49.681808 28061 net.cpp:150] Setting up fc6_drop6_0_split
I0411 12:57:49.681838 28061 net.cpp:157] Top shape: 1 4096 (4096)
I0411 12:57:49.681864 28061 net.cpp:157] Top shape: 1 4096 (4096)
I0411 12:57:49.681888 28061 net.cpp:165] Memory required for data: 10172693172
I0411 12:57:49.681912 28061 layer_factory.hpp:77] Creating layer cls_score
I0411 12:57:49.681951 28061 net.cpp:100] Creating Layer cls_score
I0411 12:57:49.681982 28061 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0411 12:57:49.682008 28061 net.cpp:408] cls_score -> cls_score
I0411 12:57:49.698413 28061 net.cpp:150] Setting up cls_score
I0411 12:57:49.698511 28061 net.cpp:157] Top shape: 1 201 (201)
I0411 12:57:49.698527 28061 net.cpp:165] Memory required for data: 10172693976
I0411 12:57:49.698551 28061 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0411 12:57:49.698575 28061 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0411 12:57:49.698591 28061 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0411 12:57:49.698611 28061 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0411 12:57:49.698635 28061 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0411 12:57:49.698709 28061 net.cpp:150] Setting up cls_score_cls_score_0_split
I0411 12:57:49.698734 28061 net.cpp:157] Top shape: 1 201 (201)
I0411 12:57:49.698748 28061 net.cpp:157] Top shape: 1 201 (201)
I0411 12:57:49.698761 28061 net.cpp:165] Memory required for data: 10172695584
I0411 12:57:49.698774 28061 layer_factory.hpp:77] Creating layer twin_pred
I0411 12:57:49.698796 28061 net.cpp:100] Creating Layer twin_pred
I0411 12:57:49.698817 28061 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0411 12:57:49.698860 28061 net.cpp:408] twin_pred -> twin_pred
I0411 12:57:49.732301 28061 net.cpp:150] Setting up twin_pred
I0411 12:57:49.732883 28061 net.cpp:157] Top shape: 1 402 (402)
I0411 12:57:49.732939 28061 net.cpp:165] Memory required for data: 10172697192
I0411 12:57:49.733000 28061 layer_factory.hpp:77] Creating layer loss_cls
I0411 12:57:49.733057 28061 net.cpp:100] Creating Layer loss_cls
I0411 12:57:49.733108 28061 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0411 12:57:49.733165 28061 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0411 12:57:49.733218 28061 net.cpp:408] loss_cls -> loss_cls
I0411 12:57:49.733279 28061 layer_factory.hpp:77] Creating layer loss_cls
I0411 12:57:49.733570 28061 net.cpp:150] Setting up loss_cls
I0411 12:57:49.733654 28061 net.cpp:157] Top shape: (1)
I0411 12:57:49.733716 28061 net.cpp:160]     with loss weight 1
I0411 12:57:49.733796 28061 net.cpp:165] Memory required for data: 10172697196
I0411 12:57:49.733862 28061 layer_factory.hpp:77] Creating layer loss_twin
I0411 12:57:49.733933 28061 net.cpp:100] Creating Layer loss_twin
I0411 12:57:49.734022 28061 net.cpp:434] loss_twin <- twin_pred
I0411 12:57:49.735604 28061 net.cpp:434] loss_twin <- twin_targets
I0411 12:57:49.735697 28061 net.cpp:434] loss_twin <- twin_inside_weights
I0411 12:57:49.735747 28061 net.cpp:434] loss_twin <- twin_outside_weights
I0411 12:57:49.735801 28061 net.cpp:408] loss_twin -> loss_twin
I0411 12:57:49.736148 28061 net.cpp:150] Setting up loss_twin
I0411 12:57:49.736244 28061 net.cpp:157] Top shape: (1)
I0411 12:57:49.736295 28061 net.cpp:160]     with loss weight 1
I0411 12:57:49.736395 28061 net.cpp:165] Memory required for data: 10172697200
I0411 12:57:49.736450 28061 layer_factory.hpp:77] Creating layer accuarcy
I0411 12:57:49.736515 28061 net.cpp:100] Creating Layer accuarcy
I0411 12:57:49.736567 28061 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0411 12:57:49.736618 28061 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0411 12:57:49.736690 28061 net.cpp:408] accuarcy -> accuarcy
I0411 12:57:49.736757 28061 net.cpp:150] Setting up accuarcy
I0411 12:57:49.736812 28061 net.cpp:157] Top shape: (1)
I0411 12:57:49.736862 28061 net.cpp:165] Memory required for data: 10172697204
I0411 12:57:49.736912 28061 net.cpp:228] accuarcy does not need backward computation.
I0411 12:57:49.736963 28061 net.cpp:226] loss_twin needs backward computation.
I0411 12:57:49.737012 28061 net.cpp:226] loss_cls needs backward computation.
I0411 12:57:49.737063 28061 net.cpp:226] twin_pred needs backward computation.
I0411 12:57:49.737119 28061 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0411 12:57:49.737170 28061 net.cpp:226] cls_score needs backward computation.
I0411 12:57:49.737221 28061 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0411 12:57:49.737272 28061 net.cpp:226] drop6 needs backward computation.
I0411 12:57:49.737318 28061 net.cpp:226] relu6 needs backward computation.
I0411 12:57:49.737360 28061 net.cpp:226] fc6 needs backward computation.
I0411 12:57:49.737407 28061 net.cpp:226] roi_pool5 needs backward computation.
I0411 12:57:49.737464 28061 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0411 12:57:49.737514 28061 net.cpp:226] roi-data needs backward computation.
I0411 12:57:49.737568 28061 net.cpp:226] proposal needs backward computation.
I0411 12:57:49.737619 28061 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0411 12:57:49.737668 28061 net.cpp:226] rpn_cls_prob needs backward computation.
I0411 12:57:49.737737 28061 net.cpp:228] rpn_accuarcy does not need backward computation.
I0411 12:57:49.737789 28061 net.cpp:226] rpn_loss_twin needs backward computation.
I0411 12:57:49.737840 28061 net.cpp:226] rpn_loss_cls needs backward computation.
I0411 12:57:49.737891 28061 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0411 12:57:49.737941 28061 net.cpp:226] rpn-data needs backward computation.
I0411 12:57:49.737996 28061 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0411 12:57:49.738046 28061 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0411 12:57:49.738101 28061 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0411 12:57:49.738149 28061 net.cpp:226] rpn_twin_pred needs backward computation.
I0411 12:57:49.738198 28061 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0411 12:57:49.738250 28061 net.cpp:226] rpn_cls_score needs backward computation.
I0411 12:57:49.738298 28061 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0411 12:57:49.738346 28061 net.cpp:226] rpn/output_pool needs backward computation.
I0411 12:57:49.738395 28061 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0411 12:57:49.738466 28061 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0411 12:57:49.742449 28061 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0411 12:57:49.742662 28061 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0411 12:57:49.742727 28061 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0411 12:57:49.742794 28061 net.cpp:226] relu5b needs backward computation.
I0411 12:57:49.742843 28061 net.cpp:226] conv5b needs backward computation.
I0411 12:57:49.742892 28061 net.cpp:226] relu5a needs backward computation.
I0411 12:57:49.742947 28061 net.cpp:226] conv5a needs backward computation.
I0411 12:57:49.743002 28061 net.cpp:226] pool4 needs backward computation.
I0411 12:57:49.743053 28061 net.cpp:226] relu4b needs backward computation.
I0411 12:57:49.743103 28061 net.cpp:226] conv4b needs backward computation.
I0411 12:57:49.743152 28061 net.cpp:226] relu4a needs backward computation.
I0411 12:57:49.743202 28061 net.cpp:226] conv4a needs backward computation.
I0411 12:57:49.743253 28061 net.cpp:226] pool3 needs backward computation.
I0411 12:57:49.743304 28061 net.cpp:226] relu3b needs backward computation.
I0411 12:57:49.743355 28061 net.cpp:226] conv3b needs backward computation.
I0411 12:57:49.743405 28061 net.cpp:226] relu3a needs backward computation.
I0411 12:57:49.743454 28061 net.cpp:226] conv3a needs backward computation.
I0411 12:57:49.743510 28061 net.cpp:228] pool2 does not need backward computation.
I0411 12:57:49.743562 28061 net.cpp:228] relu2a does not need backward computation.
I0411 12:57:49.743613 28061 net.cpp:228] conv2a does not need backward computation.
I0411 12:57:49.743664 28061 net.cpp:228] pool1 does not need backward computation.
I0411 12:57:49.745177 28061 net.cpp:228] relu1a does not need backward computation.
I0411 12:57:49.745354 28061 net.cpp:228] conv1a does not need backward computation.
I0411 12:57:49.745404 28061 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0411 12:57:49.745446 28061 net.cpp:228] data_data_0_split does not need backward computation.
I0411 12:57:49.745487 28061 net.cpp:228] data does not need backward computation.
I0411 12:57:49.745525 28061 net.cpp:270] This network produces output accuarcy
I0411 12:57:49.745568 28061 net.cpp:270] This network produces output loss_cls
I0411 12:57:49.745605 28061 net.cpp:270] This network produces output loss_twin
I0411 12:57:49.745638 28061 net.cpp:270] This network produces output rpn_accuarcy
I0411 12:57:49.745672 28061 net.cpp:270] This network produces output rpn_accuarcy_class
I0411 12:57:49.745709 28061 net.cpp:270] This network produces output rpn_cls_loss
I0411 12:57:49.745743 28061 net.cpp:270] This network produces output rpn_loss_twin
I0411 12:57:49.745828 28061 net.cpp:283] Network initialization done.
I0411 12:57:49.746055 28061 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0411 12:57:52.661866 28061 net.cpp:761] Ignoring source layer pool5
I0411 12:57:52.694653 28061 net.cpp:761] Ignoring source layer fc7
I0411 12:57:52.694805 28061 net.cpp:761] Ignoring source layer relu7
I0411 12:57:52.694851 28061 net.cpp:761] Ignoring source layer drop7
I0411 12:57:52.694893 28061 net.cpp:761] Ignoring source layer fc8-200
I0411 12:57:52.694933 28061 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
F0411 12:57:52.745473 28061 syncedmem.cpp:56] Check failed: error == cudaSuccess (2 vs. 0)  out of memory
*** Check failure stack trace: ***
Process BlobFetcher-1:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 175, in run
    blobs = get_minibatch(minibatch_db, self._num_classes)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/minibatch.py", line 41, in get_minibatch
    gt_windows[:, -1] = roidb[0]['gt_classes'][gt_inds]
ValueError: could not broadcast input array from shape (99) into shape (1)
