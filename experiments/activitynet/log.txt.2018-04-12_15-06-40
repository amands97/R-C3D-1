Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=0, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 0,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
print done
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}]
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 15:06:42.024699 27144 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 15:06:42.024729 27144 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 15:06:42.025257 27144 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 15:06:42.025498 27144 layer_factory.hpp:77] Creating layer data
I0412 15:06:42.035807 27144 net.cpp:100] Creating Layer data
I0412 15:06:42.035821 27144 net.cpp:408] data -> data
I0412 15:06:42.035831 27144 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 15:06:42.036175 27144 net.cpp:150] Setting up data
I0412 15:06:42.036187 27144 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 15:06:42.036191 27144 net.cpp:157] Top shape: 1 3 (3)
I0412 15:06:42.036193 27144 net.cpp:165] Memory required for data: 115605516
I0412 15:06:42.036198 27144 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 15:06:42.036207 27144 net.cpp:100] Creating Layer data_data_0_split
I0412 15:06:42.036211 27144 net.cpp:434] data_data_0_split <- data
I0412 15:06:42.036217 27144 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 15:06:42.036226 27144 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 15:06:42.036234 27144 net.cpp:150] Setting up data_data_0_split
I0412 15:06:42.036242 27144 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 15:06:42.036247 27144 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 15:06:42.036249 27144 net.cpp:165] Memory required for data: 346816524
I0412 15:06:42.036253 27144 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 15:06:42.036262 27144 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 15:06:42.036267 27144 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 15:06:42.036272 27144 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 15:06:42.036278 27144 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 15:06:42.036286 27144 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 15:06:42.036293 27144 net.cpp:157] Top shape: 1 3 (3)
I0412 15:06:42.036298 27144 net.cpp:157] Top shape: 1 3 (3)
I0412 15:06:42.036301 27144 net.cpp:165] Memory required for data: 346816548
I0412 15:06:42.036305 27144 layer_factory.hpp:77] Creating layer conv1a
I0412 15:06:42.036316 27144 net.cpp:100] Creating Layer conv1a
I0412 15:06:42.036322 27144 net.cpp:434] conv1a <- data_data_0_split_0
I0412 15:06:42.036339 27144 net.cpp:408] conv1a -> conv1a
I0412 15:06:42.108608 27144 net.cpp:150] Setting up conv1a
I0412 15:06:42.108639 27144 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 15:06:42.108644 27144 net.cpp:165] Memory required for data: 2813067300
I0412 15:06:42.108660 27144 layer_factory.hpp:77] Creating layer relu1a
I0412 15:06:42.108675 27144 net.cpp:100] Creating Layer relu1a
I0412 15:06:42.108680 27144 net.cpp:434] relu1a <- conv1a
I0412 15:06:42.108686 27144 net.cpp:395] relu1a -> conv1a (in-place)
I0412 15:06:42.108695 27144 net.cpp:150] Setting up relu1a
I0412 15:06:42.108700 27144 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 15:06:42.108702 27144 net.cpp:165] Memory required for data: 5279318052
I0412 15:06:42.108705 27144 layer_factory.hpp:77] Creating layer pool1
I0412 15:06:42.108711 27144 net.cpp:100] Creating Layer pool1
I0412 15:06:42.108714 27144 net.cpp:434] pool1 <- conv1a
I0412 15:06:42.108719 27144 net.cpp:408] pool1 -> pool1
I0412 15:06:42.108729 27144 net.cpp:150] Setting up pool1
I0412 15:06:42.108736 27144 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 15:06:42.108738 27144 net.cpp:165] Memory required for data: 5895880740
I0412 15:06:42.108741 27144 layer_factory.hpp:77] Creating layer conv2a
I0412 15:06:42.108749 27144 net.cpp:100] Creating Layer conv2a
I0412 15:06:42.108752 27144 net.cpp:434] conv2a <- pool1
I0412 15:06:42.108757 27144 net.cpp:408] conv2a -> conv2a
I0412 15:06:42.124006 27144 net.cpp:150] Setting up conv2a
I0412 15:06:42.124020 27144 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 15:06:42.124023 27144 net.cpp:165] Memory required for data: 7129006116
I0412 15:06:42.124032 27144 layer_factory.hpp:77] Creating layer relu2a
I0412 15:06:42.124039 27144 net.cpp:100] Creating Layer relu2a
I0412 15:06:42.124043 27144 net.cpp:434] relu2a <- conv2a
I0412 15:06:42.124048 27144 net.cpp:395] relu2a -> conv2a (in-place)
I0412 15:06:42.124058 27144 net.cpp:150] Setting up relu2a
I0412 15:06:42.124063 27144 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 15:06:42.124066 27144 net.cpp:165] Memory required for data: 8362131492
I0412 15:06:42.124069 27144 layer_factory.hpp:77] Creating layer pool2
I0412 15:06:42.124076 27144 net.cpp:100] Creating Layer pool2
I0412 15:06:42.124078 27144 net.cpp:434] pool2 <- conv2a
I0412 15:06:42.124083 27144 net.cpp:408] pool2 -> pool2
I0412 15:06:42.124091 27144 net.cpp:150] Setting up pool2
I0412 15:06:42.124095 27144 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 15:06:42.124099 27144 net.cpp:165] Memory required for data: 8516272164
I0412 15:06:42.124101 27144 layer_factory.hpp:77] Creating layer conv3a
I0412 15:06:42.124111 27144 net.cpp:100] Creating Layer conv3a
I0412 15:06:42.124115 27144 net.cpp:434] conv3a <- pool2
I0412 15:06:42.124120 27144 net.cpp:408] conv3a -> conv3a
I0412 15:06:42.135004 27144 net.cpp:150] Setting up conv3a
I0412 15:06:42.135015 27144 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 15:06:42.135018 27144 net.cpp:165] Memory required for data: 8824553508
I0412 15:06:42.135027 27144 layer_factory.hpp:77] Creating layer relu3a
I0412 15:06:42.135037 27144 net.cpp:100] Creating Layer relu3a
I0412 15:06:42.135044 27144 net.cpp:434] relu3a <- conv3a
I0412 15:06:42.135048 27144 net.cpp:395] relu3a -> conv3a (in-place)
I0412 15:06:42.135056 27144 net.cpp:150] Setting up relu3a
I0412 15:06:42.135061 27144 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 15:06:42.135066 27144 net.cpp:165] Memory required for data: 9132834852
I0412 15:06:42.135071 27144 layer_factory.hpp:77] Creating layer conv3b
I0412 15:06:42.135080 27144 net.cpp:100] Creating Layer conv3b
I0412 15:06:42.135085 27144 net.cpp:434] conv3b <- conv3a
I0412 15:06:42.135092 27144 net.cpp:408] conv3b -> conv3b
I0412 15:06:42.156302 27144 net.cpp:150] Setting up conv3b
I0412 15:06:42.156316 27144 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 15:06:42.156318 27144 net.cpp:165] Memory required for data: 9441116196
I0412 15:06:42.156337 27144 layer_factory.hpp:77] Creating layer relu3b
I0412 15:06:42.156344 27144 net.cpp:100] Creating Layer relu3b
I0412 15:06:42.156348 27144 net.cpp:434] relu3b <- conv3b
I0412 15:06:42.156354 27144 net.cpp:395] relu3b -> conv3b (in-place)
I0412 15:06:42.156363 27144 net.cpp:150] Setting up relu3b
I0412 15:06:42.156369 27144 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 15:06:42.156373 27144 net.cpp:165] Memory required for data: 9749397540
I0412 15:06:42.156378 27144 layer_factory.hpp:77] Creating layer pool3
I0412 15:06:42.156388 27144 net.cpp:100] Creating Layer pool3
I0412 15:06:42.156391 27144 net.cpp:434] pool3 <- conv3b
I0412 15:06:42.156397 27144 net.cpp:408] pool3 -> pool3
I0412 15:06:42.156407 27144 net.cpp:150] Setting up pool3
I0412 15:06:42.156415 27144 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 15:06:42.156419 27144 net.cpp:165] Memory required for data: 9787932708
I0412 15:06:42.156424 27144 layer_factory.hpp:77] Creating layer conv4a
I0412 15:06:42.156432 27144 net.cpp:100] Creating Layer conv4a
I0412 15:06:42.156440 27144 net.cpp:434] conv4a <- pool3
I0412 15:06:42.156445 27144 net.cpp:408] conv4a -> conv4a
I0412 15:06:42.204516 27144 net.cpp:150] Setting up conv4a
I0412 15:06:42.204533 27144 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 15:06:42.204537 27144 net.cpp:165] Memory required for data: 9865003044
I0412 15:06:42.204550 27144 layer_factory.hpp:77] Creating layer relu4a
I0412 15:06:42.204560 27144 net.cpp:100] Creating Layer relu4a
I0412 15:06:42.204565 27144 net.cpp:434] relu4a <- conv4a
I0412 15:06:42.204571 27144 net.cpp:395] relu4a -> conv4a (in-place)
I0412 15:06:42.204581 27144 net.cpp:150] Setting up relu4a
I0412 15:06:42.204586 27144 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 15:06:42.204589 27144 net.cpp:165] Memory required for data: 9942073380
I0412 15:06:42.204594 27144 layer_factory.hpp:77] Creating layer conv4b
I0412 15:06:42.204609 27144 net.cpp:100] Creating Layer conv4b
I0412 15:06:42.204615 27144 net.cpp:434] conv4b <- conv4a
I0412 15:06:42.204619 27144 net.cpp:408] conv4b -> conv4b
I0412 15:06:42.301087 27144 net.cpp:150] Setting up conv4b
I0412 15:06:42.301115 27144 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 15:06:42.301118 27144 net.cpp:165] Memory required for data: 10019143716
I0412 15:06:42.301127 27144 layer_factory.hpp:77] Creating layer relu4b
I0412 15:06:42.301139 27144 net.cpp:100] Creating Layer relu4b
I0412 15:06:42.301146 27144 net.cpp:434] relu4b <- conv4b
I0412 15:06:42.301157 27144 net.cpp:395] relu4b -> conv4b (in-place)
I0412 15:06:42.301168 27144 net.cpp:150] Setting up relu4b
I0412 15:06:42.301173 27144 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 15:06:42.301177 27144 net.cpp:165] Memory required for data: 10096214052
I0412 15:06:42.301182 27144 layer_factory.hpp:77] Creating layer pool4
I0412 15:06:42.301192 27144 net.cpp:100] Creating Layer pool4
I0412 15:06:42.301195 27144 net.cpp:434] pool4 <- conv4b
I0412 15:06:42.301201 27144 net.cpp:408] pool4 -> pool4
I0412 15:06:42.301214 27144 net.cpp:150] Setting up pool4
I0412 15:06:42.301223 27144 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:06:42.301225 27144 net.cpp:165] Memory required for data: 10105847844
I0412 15:06:42.301229 27144 layer_factory.hpp:77] Creating layer conv5a
I0412 15:06:42.301240 27144 net.cpp:100] Creating Layer conv5a
I0412 15:06:42.301246 27144 net.cpp:434] conv5a <- pool4
I0412 15:06:42.301252 27144 net.cpp:408] conv5a -> conv5a
I0412 15:06:42.400857 27144 net.cpp:150] Setting up conv5a
I0412 15:06:42.400884 27144 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:06:42.400887 27144 net.cpp:165] Memory required for data: 10115481636
I0412 15:06:42.400897 27144 layer_factory.hpp:77] Creating layer relu5a
I0412 15:06:42.400908 27144 net.cpp:100] Creating Layer relu5a
I0412 15:06:42.400916 27144 net.cpp:434] relu5a <- conv5a
I0412 15:06:42.400924 27144 net.cpp:395] relu5a -> conv5a (in-place)
I0412 15:06:42.400934 27144 net.cpp:150] Setting up relu5a
I0412 15:06:42.400941 27144 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:06:42.400943 27144 net.cpp:165] Memory required for data: 10125115428
I0412 15:06:42.400946 27144 layer_factory.hpp:77] Creating layer conv5b
I0412 15:06:42.400957 27144 net.cpp:100] Creating Layer conv5b
I0412 15:06:42.400964 27144 net.cpp:434] conv5b <- conv5a
I0412 15:06:42.400969 27144 net.cpp:408] conv5b -> conv5b
I0412 15:06:42.497375 27144 net.cpp:150] Setting up conv5b
I0412 15:06:42.497396 27144 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:06:42.497401 27144 net.cpp:165] Memory required for data: 10134749220
I0412 15:06:42.497408 27144 layer_factory.hpp:77] Creating layer relu5b
I0412 15:06:42.497417 27144 net.cpp:100] Creating Layer relu5b
I0412 15:06:42.497421 27144 net.cpp:434] relu5b <- conv5b
I0412 15:06:42.497428 27144 net.cpp:395] relu5b -> conv5b (in-place)
I0412 15:06:42.497437 27144 net.cpp:150] Setting up relu5b
I0412 15:06:42.497440 27144 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:06:42.497443 27144 net.cpp:165] Memory required for data: 10144383012
I0412 15:06:42.497447 27144 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 15:06:42.497450 27144 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 15:06:42.497454 27144 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 15:06:42.497458 27144 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 15:06:42.497464 27144 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 15:06:42.497469 27144 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 15:06:42.497473 27144 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:06:42.497478 27144 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 15:06:42.497480 27144 net.cpp:165] Memory required for data: 10163650596
I0412 15:06:42.497483 27144 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 15:06:42.497491 27144 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 15:06:42.497495 27144 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 15:06:42.497504 27144 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 15:06:42.597303 27144 net.cpp:150] Setting up rpn_conv/3x3
I0412 15:06:42.597327 27144 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 15:06:42.597332 27144 net.cpp:165] Memory required for data: 10166796324
I0412 15:06:42.597349 27144 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 15:06:42.597362 27144 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 15:06:42.597367 27144 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 15:06:42.597374 27144 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 15:06:42.597383 27144 net.cpp:150] Setting up rpn_relu/3x3
I0412 15:06:42.597388 27144 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 15:06:42.597389 27144 net.cpp:165] Memory required for data: 10169942052
I0412 15:06:42.597393 27144 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 15:06:42.597403 27144 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 15:06:42.597409 27144 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 15:06:42.597414 27144 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 15:06:42.693624 27144 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 15:06:42.693648 27144 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 15:06:42.693651 27144 net.cpp:165] Memory required for data: 10170728484
I0412 15:06:42.693660 27144 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 15:06:42.693670 27144 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 15:06:42.693675 27144 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 15:06:42.693682 27144 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 15:06:42.693691 27144 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 15:06:42.693699 27144 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 15:06:42.693702 27144 net.cpp:165] Memory required for data: 10171514916
I0412 15:06:42.693707 27144 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 15:06:42.693716 27144 net.cpp:100] Creating Layer rpn/output_pool
I0412 15:06:42.693720 27144 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 15:06:42.693727 27144 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 15:06:42.693739 27144 net.cpp:150] Setting up rpn/output_pool
I0412 15:06:42.693747 27144 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 15:06:42.693748 27144 net.cpp:165] Memory required for data: 10171711524
I0412 15:06:42.693751 27144 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 15:06:42.693758 27144 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 15:06:42.693763 27144 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 15:06:42.693768 27144 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 15:06:42.693778 27144 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 15:06:42.693785 27144 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 15:06:42.693790 27144 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 15:06:42.693795 27144 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 15:06:42.693799 27144 net.cpp:165] Memory required for data: 10172104740
I0412 15:06:42.693804 27144 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 15:06:42.693814 27144 net.cpp:100] Creating Layer rpn_cls_score
I0412 15:06:42.693819 27144 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 15:06:42.693830 27144 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 15:06:42.694154 27144 net.cpp:150] Setting up rpn_cls_score
I0412 15:06:42.694160 27144 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:06:42.694164 27144 net.cpp:165] Memory required for data: 10172133156
I0412 15:06:42.694169 27144 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 15:06:42.694175 27144 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 15:06:42.694180 27144 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 15:06:42.694186 27144 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 15:06:42.694193 27144 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 15:06:42.694200 27144 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 15:06:42.694206 27144 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:06:42.694211 27144 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:06:42.694216 27144 net.cpp:165] Memory required for data: 10172189988
I0412 15:06:42.694219 27144 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 15:06:42.694237 27144 net.cpp:100] Creating Layer rpn_twin_pred
I0412 15:06:42.694242 27144 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 15:06:42.694248 27144 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 15:06:42.694568 27144 net.cpp:150] Setting up rpn_twin_pred
I0412 15:06:42.694576 27144 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:06:42.694578 27144 net.cpp:165] Memory required for data: 10172218404
I0412 15:06:42.694584 27144 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 15:06:42.694593 27144 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 15:06:42.694598 27144 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 15:06:42.694602 27144 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 15:06:42.694608 27144 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 15:06:42.694614 27144 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 15:06:42.694617 27144 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:06:42.694622 27144 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:06:42.694624 27144 net.cpp:165] Memory required for data: 10172275236
I0412 15:06:42.694628 27144 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 15:06:42.694633 27144 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 15:06:42.694636 27144 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 15:06:42.694643 27144 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 15:06:42.694650 27144 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 15:06:42.694654 27144 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 15:06:42.694658 27144 net.cpp:165] Memory required for data: 10172303652
I0412 15:06:42.694660 27144 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 15:06:42.694664 27144 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 15:06:42.694667 27144 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 15:06:42.694672 27144 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 15:06:42.694684 27144 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 15:06:42.694689 27144 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 15:06:42.694694 27144 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 15:06:42.694697 27144 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 15:06:42.694701 27144 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 15:06:42.694705 27144 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 15:06:42.694708 27144 net.cpp:165] Memory required for data: 10172388900
I0412 15:06:42.694710 27144 layer_factory.hpp:77] Creating layer rpn-data
I0412 15:06:42.695081 27144 net.cpp:100] Creating Layer rpn-data
I0412 15:06:42.695092 27144 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 15:06:42.695098 27144 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 15:06:42.695102 27144 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 15:06:42.695111 27144 net.cpp:408] rpn-data -> rpn_labels
I0412 15:06:42.695119 27144 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 15:06:42.695125 27144 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 15:06:42.695132 27144 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 15:06:42.697275 27144 net.cpp:150] Setting up rpn-data
I0412 15:06:42.697289 27144 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 15:06:42.697293 27144 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:06:42.697296 27144 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:06:42.697300 27144 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:06:42.697302 27144 net.cpp:165] Memory required for data: 10172488356
I0412 15:06:42.697307 27144 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 15:06:42.697314 27144 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 15:06:42.697319 27144 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 15:06:42.697326 27144 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 15:06:42.697335 27144 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 15:06:42.697342 27144 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 15:06:42.697348 27144 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 15:06:42.697353 27144 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 15:06:42.697357 27144 net.cpp:165] Memory required for data: 10172516772
I0412 15:06:42.697362 27144 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 15:06:42.697371 27144 net.cpp:100] Creating Layer rpn_loss_cls
I0412 15:06:42.697374 27144 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 15:06:42.697379 27144 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 15:06:42.697386 27144 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 15:06:42.697394 27144 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 15:06:42.697417 27144 net.cpp:150] Setting up rpn_loss_cls
I0412 15:06:42.697422 27144 net.cpp:157] Top shape: (1)
I0412 15:06:42.697425 27144 net.cpp:160]     with loss weight 1
I0412 15:06:42.697443 27144 net.cpp:165] Memory required for data: 10172516776
I0412 15:06:42.697446 27144 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 15:06:42.697453 27144 net.cpp:100] Creating Layer rpn_loss_twin
I0412 15:06:42.697456 27144 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 15:06:42.697463 27144 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 15:06:42.697468 27144 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 15:06:42.697473 27144 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 15:06:42.697479 27144 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 15:06:42.697504 27144 net.cpp:150] Setting up rpn_loss_twin
I0412 15:06:42.697510 27144 net.cpp:157] Top shape: (1)
I0412 15:06:42.697512 27144 net.cpp:160]     with loss weight 1
I0412 15:06:42.697516 27144 net.cpp:165] Memory required for data: 10172516780
I0412 15:06:42.697520 27144 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 15:06:42.697530 27144 net.cpp:100] Creating Layer rpn_accuarcy
I0412 15:06:42.697535 27144 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 15:06:42.697540 27144 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 15:06:42.697544 27144 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 15:06:42.697549 27144 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 15:06:42.697556 27144 net.cpp:150] Setting up rpn_accuarcy
I0412 15:06:42.697561 27144 net.cpp:157] Top shape: (1)
I0412 15:06:42.697564 27144 net.cpp:157] Top shape: 2 (2)
I0412 15:06:42.697567 27144 net.cpp:165] Memory required for data: 10172516792
I0412 15:06:42.697571 27144 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 15:06:42.697576 27144 net.cpp:100] Creating Layer rpn_cls_prob
I0412 15:06:42.697578 27144 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 15:06:42.697582 27144 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 15:06:42.697588 27144 net.cpp:150] Setting up rpn_cls_prob
I0412 15:06:42.697592 27144 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 15:06:42.697595 27144 net.cpp:165] Memory required for data: 10172545208
I0412 15:06:42.697597 27144 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 15:06:42.697602 27144 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 15:06:42.697605 27144 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 15:06:42.697610 27144 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 15:06:42.697618 27144 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 15:06:42.697621 27144 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 15:06:42.697624 27144 net.cpp:165] Memory required for data: 10172573624
I0412 15:06:42.697628 27144 layer_factory.hpp:77] Creating layer proposal
I0412 15:06:42.698148 27144 net.cpp:100] Creating Layer proposal
I0412 15:06:42.698158 27144 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 15:06:42.698163 27144 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 15:06:42.698169 27144 net.cpp:408] proposal -> rpn_rois
I0412 15:06:42.700105 27144 net.cpp:150] Setting up proposal
I0412 15:06:42.700117 27144 net.cpp:157] Top shape: 1 3 (3)
I0412 15:06:42.700120 27144 net.cpp:165] Memory required for data: 10172573636
I0412 15:06:42.700124 27144 layer_factory.hpp:77] Creating layer roi-data
I0412 15:06:42.700237 27144 net.cpp:100] Creating Layer roi-data
I0412 15:06:42.700245 27144 net.cpp:434] roi-data <- rpn_rois
I0412 15:06:42.700250 27144 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 15:06:42.700256 27144 net.cpp:408] roi-data -> rois
I0412 15:06:42.700265 27144 net.cpp:408] roi-data -> labels
I0412 15:06:42.700273 27144 net.cpp:408] roi-data -> twin_targets
I0412 15:06:42.700278 27144 net.cpp:408] roi-data -> twin_inside_weights
I0412 15:06:42.700284 27144 net.cpp:408] roi-data -> twin_outside_weights
I0412 15:06:42.700506 27144 net.cpp:150] Setting up roi-data
I0412 15:06:42.700517 27144 net.cpp:157] Top shape: 1 3 (3)
I0412 15:06:42.700520 27144 net.cpp:157] Top shape: 1 1 (1)
I0412 15:06:42.700525 27144 net.cpp:157] Top shape: 1 402 (402)
I0412 15:06:42.700527 27144 net.cpp:157] Top shape: 1 402 (402)
I0412 15:06:42.700531 27144 net.cpp:157] Top shape: 1 402 (402)
I0412 15:06:42.700534 27144 net.cpp:165] Memory required for data: 10172578476
I0412 15:06:42.700538 27144 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 15:06:42.700546 27144 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 15:06:42.700551 27144 net.cpp:434] labels_roi-data_1_split <- labels
I0412 15:06:42.700556 27144 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 15:06:42.700564 27144 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 15:06:42.700572 27144 net.cpp:150] Setting up labels_roi-data_1_split
I0412 15:06:42.700577 27144 net.cpp:157] Top shape: 1 1 (1)
I0412 15:06:42.700582 27144 net.cpp:157] Top shape: 1 1 (1)
I0412 15:06:42.700587 27144 net.cpp:165] Memory required for data: 10172578484
I0412 15:06:42.700590 27144 layer_factory.hpp:77] Creating layer roi_pool5
I0412 15:06:42.700598 27144 net.cpp:100] Creating Layer roi_pool5
I0412 15:06:42.700603 27144 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 15:06:42.700608 27144 net.cpp:434] roi_pool5 <- rois
I0412 15:06:42.700613 27144 net.cpp:408] roi_pool5 -> pool5
I0412 15:06:42.700619 27144 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 15:06:42.700628 27144 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 15:06:42.700634 27144 net.cpp:150] Setting up roi_pool5
I0412 15:06:42.700640 27144 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 15:06:42.700644 27144 net.cpp:165] Memory required for data: 10172611252
I0412 15:06:42.700647 27144 layer_factory.hpp:77] Creating layer fc6
I0412 15:06:42.700655 27144 net.cpp:100] Creating Layer fc6
I0412 15:06:42.700659 27144 net.cpp:434] fc6 <- pool5
I0412 15:06:42.700665 27144 net.cpp:408] fc6 -> fc6
I0412 15:06:43.173985 27144 net.cpp:150] Setting up fc6
I0412 15:06:43.174012 27144 net.cpp:157] Top shape: 1 4096 (4096)
I0412 15:06:43.174016 27144 net.cpp:165] Memory required for data: 10172627636
I0412 15:06:43.174026 27144 layer_factory.hpp:77] Creating layer relu6
I0412 15:06:43.174036 27144 net.cpp:100] Creating Layer relu6
I0412 15:06:43.174042 27144 net.cpp:434] relu6 <- fc6
I0412 15:06:43.174049 27144 net.cpp:395] relu6 -> fc6 (in-place)
I0412 15:06:43.174059 27144 net.cpp:150] Setting up relu6
I0412 15:06:43.174064 27144 net.cpp:157] Top shape: 1 4096 (4096)
I0412 15:06:43.174068 27144 net.cpp:165] Memory required for data: 10172644020
I0412 15:06:43.174072 27144 layer_factory.hpp:77] Creating layer drop6
I0412 15:06:43.174080 27144 net.cpp:100] Creating Layer drop6
I0412 15:06:43.174084 27144 net.cpp:434] drop6 <- fc6
I0412 15:06:43.174089 27144 net.cpp:395] drop6 -> fc6 (in-place)
I0412 15:06:43.174096 27144 net.cpp:150] Setting up drop6
I0412 15:06:43.174101 27144 net.cpp:157] Top shape: 1 4096 (4096)
I0412 15:06:43.174104 27144 net.cpp:165] Memory required for data: 10172660404
I0412 15:06:43.174108 27144 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 15:06:43.174114 27144 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 15:06:43.174118 27144 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 15:06:43.174124 27144 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 15:06:43.174131 27144 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 15:06:43.174140 27144 net.cpp:150] Setting up fc6_drop6_0_split
I0412 15:06:43.174145 27144 net.cpp:157] Top shape: 1 4096 (4096)
I0412 15:06:43.174150 27144 net.cpp:157] Top shape: 1 4096 (4096)
I0412 15:06:43.174154 27144 net.cpp:165] Memory required for data: 10172693172
I0412 15:06:43.174160 27144 layer_factory.hpp:77] Creating layer cls_score
I0412 15:06:43.174166 27144 net.cpp:100] Creating Layer cls_score
I0412 15:06:43.174170 27144 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 15:06:43.174177 27144 net.cpp:408] cls_score -> cls_score
I0412 15:06:43.184257 27144 net.cpp:150] Setting up cls_score
I0412 15:06:43.184265 27144 net.cpp:157] Top shape: 1 201 (201)
I0412 15:06:43.184268 27144 net.cpp:165] Memory required for data: 10172693976
I0412 15:06:43.184274 27144 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 15:06:43.184281 27144 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 15:06:43.184286 27144 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 15:06:43.184293 27144 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 15:06:43.184301 27144 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 15:06:43.184309 27144 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 15:06:43.184316 27144 net.cpp:157] Top shape: 1 201 (201)
I0412 15:06:43.184321 27144 net.cpp:157] Top shape: 1 201 (201)
I0412 15:06:43.184340 27144 net.cpp:165] Memory required for data: 10172695584
I0412 15:06:43.184345 27144 layer_factory.hpp:77] Creating layer twin_pred
I0412 15:06:43.184350 27144 net.cpp:100] Creating Layer twin_pred
I0412 15:06:43.184352 27144 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 15:06:43.184360 27144 net.cpp:408] twin_pred -> twin_pred
I0412 15:06:43.207335 27144 net.cpp:150] Setting up twin_pred
I0412 15:06:43.207345 27144 net.cpp:157] Top shape: 1 402 (402)
I0412 15:06:43.207348 27144 net.cpp:165] Memory required for data: 10172697192
I0412 15:06:43.207353 27144 layer_factory.hpp:77] Creating layer loss_cls
I0412 15:06:43.207361 27144 net.cpp:100] Creating Layer loss_cls
I0412 15:06:43.207365 27144 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 15:06:43.207370 27144 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 15:06:43.207375 27144 net.cpp:408] loss_cls -> loss_cls
I0412 15:06:43.207381 27144 layer_factory.hpp:77] Creating layer loss_cls
I0412 15:06:43.207393 27144 net.cpp:150] Setting up loss_cls
I0412 15:06:43.207399 27144 net.cpp:157] Top shape: (1)
I0412 15:06:43.207402 27144 net.cpp:160]     with loss weight 1
I0412 15:06:43.207414 27144 net.cpp:165] Memory required for data: 10172697196
I0412 15:06:43.207417 27144 layer_factory.hpp:77] Creating layer loss_twin
I0412 15:06:43.207422 27144 net.cpp:100] Creating Layer loss_twin
I0412 15:06:43.207425 27144 net.cpp:434] loss_twin <- twin_pred
I0412 15:06:43.207429 27144 net.cpp:434] loss_twin <- twin_targets
I0412 15:06:43.207432 27144 net.cpp:434] loss_twin <- twin_inside_weights
I0412 15:06:43.207437 27144 net.cpp:434] loss_twin <- twin_outside_weights
I0412 15:06:43.207440 27144 net.cpp:408] loss_twin -> loss_twin
I0412 15:06:43.207458 27144 net.cpp:150] Setting up loss_twin
I0412 15:06:43.207465 27144 net.cpp:157] Top shape: (1)
I0412 15:06:43.207468 27144 net.cpp:160]     with loss weight 1
I0412 15:06:43.207471 27144 net.cpp:165] Memory required for data: 10172697200
I0412 15:06:43.207475 27144 layer_factory.hpp:77] Creating layer accuarcy
I0412 15:06:43.207481 27144 net.cpp:100] Creating Layer accuarcy
I0412 15:06:43.207487 27144 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 15:06:43.207492 27144 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 15:06:43.207499 27144 net.cpp:408] accuarcy -> accuarcy
I0412 15:06:43.207507 27144 net.cpp:150] Setting up accuarcy
I0412 15:06:43.207512 27144 net.cpp:157] Top shape: (1)
I0412 15:06:43.207516 27144 net.cpp:165] Memory required for data: 10172697204
I0412 15:06:43.207521 27144 net.cpp:228] accuarcy does not need backward computation.
I0412 15:06:43.207530 27144 net.cpp:226] loss_twin needs backward computation.
I0412 15:06:43.207533 27144 net.cpp:226] loss_cls needs backward computation.
I0412 15:06:43.207537 27144 net.cpp:226] twin_pred needs backward computation.
I0412 15:06:43.207541 27144 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 15:06:43.207546 27144 net.cpp:226] cls_score needs backward computation.
I0412 15:06:43.207551 27144 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 15:06:43.207554 27144 net.cpp:226] drop6 needs backward computation.
I0412 15:06:43.207558 27144 net.cpp:226] relu6 needs backward computation.
I0412 15:06:43.207562 27144 net.cpp:226] fc6 needs backward computation.
I0412 15:06:43.207566 27144 net.cpp:226] roi_pool5 needs backward computation.
I0412 15:06:43.207571 27144 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 15:06:43.207577 27144 net.cpp:226] roi-data needs backward computation.
I0412 15:06:43.207582 27144 net.cpp:226] proposal needs backward computation.
I0412 15:06:43.207587 27144 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 15:06:43.207592 27144 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 15:06:43.207597 27144 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 15:06:43.207602 27144 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 15:06:43.207607 27144 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 15:06:43.207615 27144 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 15:06:43.207620 27144 net.cpp:226] rpn-data needs backward computation.
I0412 15:06:43.207626 27144 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 15:06:43.207630 27144 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 15:06:43.207636 27144 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 15:06:43.207640 27144 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 15:06:43.207645 27144 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 15:06:43.207649 27144 net.cpp:226] rpn_cls_score needs backward computation.
I0412 15:06:43.207653 27144 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 15:06:43.207659 27144 net.cpp:226] rpn/output_pool needs backward computation.
I0412 15:06:43.207664 27144 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 15:06:43.207667 27144 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 15:06:43.207672 27144 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 15:06:43.207677 27144 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 15:06:43.207681 27144 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 15:06:43.207686 27144 net.cpp:226] relu5b needs backward computation.
I0412 15:06:43.207690 27144 net.cpp:226] conv5b needs backward computation.
I0412 15:06:43.207695 27144 net.cpp:226] relu5a needs backward computation.
I0412 15:06:43.207698 27144 net.cpp:226] conv5a needs backward computation.
I0412 15:06:43.207702 27144 net.cpp:226] pool4 needs backward computation.
I0412 15:06:43.207707 27144 net.cpp:226] relu4b needs backward computation.
I0412 15:06:43.207711 27144 net.cpp:226] conv4b needs backward computation.
I0412 15:06:43.207717 27144 net.cpp:226] relu4a needs backward computation.
I0412 15:06:43.207721 27144 net.cpp:226] conv4a needs backward computation.
I0412 15:06:43.207726 27144 net.cpp:226] pool3 needs backward computation.
I0412 15:06:43.207731 27144 net.cpp:226] relu3b needs backward computation.
I0412 15:06:43.207736 27144 net.cpp:226] conv3b needs backward computation.
I0412 15:06:43.207739 27144 net.cpp:226] relu3a needs backward computation.
I0412 15:06:43.207743 27144 net.cpp:226] conv3a needs backward computation.
I0412 15:06:43.207748 27144 net.cpp:228] pool2 does not need backward computation.
I0412 15:06:43.207752 27144 net.cpp:228] relu2a does not need backward computation.
I0412 15:06:43.207757 27144 net.cpp:228] conv2a does not need backward computation.
I0412 15:06:43.207762 27144 net.cpp:228] pool1 does not need backward computation.
I0412 15:06:43.207767 27144 net.cpp:228] relu1a does not need backward computation.
I0412 15:06:43.207769 27144 net.cpp:228] conv1a does not need backward computation.
I0412 15:06:43.207775 27144 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 15:06:43.207780 27144 net.cpp:228] data_data_0_split does not need backward computation.
I0412 15:06:43.207785 27144 net.cpp:228] data does not need backward computation.
I0412 15:06:43.207789 27144 net.cpp:270] This network produces output accuarcy
I0412 15:06:43.207793 27144 net.cpp:270] This network produces output loss_cls
I0412 15:06:43.207798 27144 net.cpp:270] This network produces output loss_twin
I0412 15:06:43.207803 27144 net.cpp:270] This network produces output rpn_accuarcy
I0412 15:06:43.207806 27144 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 15:06:43.207810 27144 net.cpp:270] This network produces output rpn_cls_loss
I0412 15:06:43.207815 27144 net.cpp:270] This network produces output rpn_loss_twin
I0412 15:06:43.207854 27144 net.cpp:283] Network initialization done.
I0412 15:06:43.207976 27144 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 15:06:43.869796 27144 net.cpp:761] Ignoring source layer pool5
I0412 15:06:43.891211 27144 net.cpp:761] Ignoring source layer fc7
I0412 15:06:43.891232 27144 net.cpp:761] Ignoring source layer relu7
I0412 15:06:43.891235 27144 net.cpp:761] Ignoring source layer drop7
I0412 15:06:43.891238 27144 net.cpp:761] Ignoring source layer fc8-200
I0412 15:06:43.891242 27144 net.cpp:761] Ignoring source layer loss
Solving...
F0412 15:07:07.542975 27144 syncedmem.hpp:25] Check failed: *ptr host allocation of size 18446744073176875008 failed
*** Check failure stack trace: ***
