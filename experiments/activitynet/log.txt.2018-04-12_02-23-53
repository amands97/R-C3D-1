Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
print done
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}]
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 02:23:54.794320  3636 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 02:23:54.794390  3636 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 02:23:54.795308  3636 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 02:23:54.795599  3636 layer_factory.hpp:77] Creating layer data
I0412 02:23:54.809093  3636 net.cpp:100] Creating Layer data
I0412 02:23:54.809125  3636 net.cpp:408] data -> data
I0412 02:23:54.809136  3636 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 02:23:54.819437  3636 net.cpp:150] Setting up data
I0412 02:23:54.819458  3636 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 02:23:54.819464  3636 net.cpp:157] Top shape: 1 3 (3)
I0412 02:23:54.819466  3636 net.cpp:165] Memory required for data: 115605516
I0412 02:23:54.819473  3636 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 02:23:54.819488  3636 net.cpp:100] Creating Layer data_data_0_split
I0412 02:23:54.819492  3636 net.cpp:434] data_data_0_split <- data
I0412 02:23:54.819499  3636 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 02:23:54.819509  3636 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 02:23:54.819553  3636 net.cpp:150] Setting up data_data_0_split
I0412 02:23:54.819559  3636 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 02:23:54.819564  3636 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 02:23:54.819569  3636 net.cpp:165] Memory required for data: 346816524
I0412 02:23:54.819571  3636 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 02:23:54.819577  3636 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 02:23:54.819581  3636 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 02:23:54.819586  3636 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 02:23:54.819592  3636 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 02:23:54.819630  3636 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 02:23:54.819636  3636 net.cpp:157] Top shape: 1 3 (3)
I0412 02:23:54.819639  3636 net.cpp:157] Top shape: 1 3 (3)
I0412 02:23:54.819641  3636 net.cpp:165] Memory required for data: 346816548
I0412 02:23:54.819645  3636 layer_factory.hpp:77] Creating layer conv1a
I0412 02:23:54.819656  3636 net.cpp:100] Creating Layer conv1a
I0412 02:23:54.819660  3636 net.cpp:434] conv1a <- data_data_0_split_0
I0412 02:23:54.819666  3636 net.cpp:408] conv1a -> conv1a
I0412 02:23:54.840135  3636 net.cpp:150] Setting up conv1a
I0412 02:23:54.840179  3636 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 02:23:54.840184  3636 net.cpp:165] Memory required for data: 2813067300
I0412 02:23:54.840205  3636 layer_factory.hpp:77] Creating layer relu1a
I0412 02:23:54.840224  3636 net.cpp:100] Creating Layer relu1a
I0412 02:23:54.840230  3636 net.cpp:434] relu1a <- conv1a
I0412 02:23:54.840237  3636 net.cpp:395] relu1a -> conv1a (in-place)
I0412 02:23:54.840250  3636 net.cpp:150] Setting up relu1a
I0412 02:23:54.840258  3636 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 02:23:54.840263  3636 net.cpp:165] Memory required for data: 5279318052
I0412 02:23:54.840267  3636 layer_factory.hpp:77] Creating layer pool1
I0412 02:23:54.840277  3636 net.cpp:100] Creating Layer pool1
I0412 02:23:54.840283  3636 net.cpp:434] pool1 <- conv1a
I0412 02:23:54.840289  3636 net.cpp:408] pool1 -> pool1
I0412 02:23:54.840432  3636 net.cpp:150] Setting up pool1
I0412 02:23:54.840443  3636 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 02:23:54.840451  3636 net.cpp:165] Memory required for data: 5895880740
I0412 02:23:54.840454  3636 layer_factory.hpp:77] Creating layer conv2a
I0412 02:23:54.840468  3636 net.cpp:100] Creating Layer conv2a
I0412 02:23:54.840474  3636 net.cpp:434] conv2a <- pool1
I0412 02:23:54.840482  3636 net.cpp:408] conv2a -> conv2a
I0412 02:23:54.851549  3636 net.cpp:150] Setting up conv2a
I0412 02:23:54.851588  3636 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 02:23:54.851593  3636 net.cpp:165] Memory required for data: 7129006116
I0412 02:23:54.851611  3636 layer_factory.hpp:77] Creating layer relu2a
I0412 02:23:54.851624  3636 net.cpp:100] Creating Layer relu2a
I0412 02:23:54.851631  3636 net.cpp:434] relu2a <- conv2a
I0412 02:23:54.851642  3636 net.cpp:395] relu2a -> conv2a (in-place)
I0412 02:23:54.851656  3636 net.cpp:150] Setting up relu2a
I0412 02:23:54.851663  3636 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 02:23:54.851668  3636 net.cpp:165] Memory required for data: 8362131492
I0412 02:23:54.851672  3636 layer_factory.hpp:77] Creating layer pool2
I0412 02:23:54.851682  3636 net.cpp:100] Creating Layer pool2
I0412 02:23:54.851688  3636 net.cpp:434] pool2 <- conv2a
I0412 02:23:54.851696  3636 net.cpp:408] pool2 -> pool2
I0412 02:23:54.851806  3636 net.cpp:150] Setting up pool2
I0412 02:23:54.851816  3636 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 02:23:54.851820  3636 net.cpp:165] Memory required for data: 8516272164
I0412 02:23:54.851824  3636 layer_factory.hpp:77] Creating layer conv3a
I0412 02:23:54.851840  3636 net.cpp:100] Creating Layer conv3a
I0412 02:23:54.851845  3636 net.cpp:434] conv3a <- pool2
I0412 02:23:54.851853  3636 net.cpp:408] conv3a -> conv3a
I0412 02:23:54.864534  3636 net.cpp:150] Setting up conv3a
I0412 02:23:54.864567  3636 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 02:23:54.864572  3636 net.cpp:165] Memory required for data: 8824553508
I0412 02:23:54.864588  3636 layer_factory.hpp:77] Creating layer relu3a
I0412 02:23:54.864603  3636 net.cpp:100] Creating Layer relu3a
I0412 02:23:54.864611  3636 net.cpp:434] relu3a <- conv3a
I0412 02:23:54.864620  3636 net.cpp:395] relu3a -> conv3a (in-place)
I0412 02:23:54.864632  3636 net.cpp:150] Setting up relu3a
I0412 02:23:54.864639  3636 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 02:23:54.864645  3636 net.cpp:165] Memory required for data: 9132834852
I0412 02:23:54.864650  3636 layer_factory.hpp:77] Creating layer conv3b
I0412 02:23:54.864662  3636 net.cpp:100] Creating Layer conv3b
I0412 02:23:54.864670  3636 net.cpp:434] conv3b <- conv3a
I0412 02:23:54.864678  3636 net.cpp:408] conv3b -> conv3b
I0412 02:23:54.890125  3636 net.cpp:150] Setting up conv3b
I0412 02:23:54.890153  3636 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 02:23:54.890156  3636 net.cpp:165] Memory required for data: 9441116196
I0412 02:23:54.890168  3636 layer_factory.hpp:77] Creating layer relu3b
I0412 02:23:54.890179  3636 net.cpp:100] Creating Layer relu3b
I0412 02:23:54.890183  3636 net.cpp:434] relu3b <- conv3b
I0412 02:23:54.890190  3636 net.cpp:395] relu3b -> conv3b (in-place)
I0412 02:23:54.890202  3636 net.cpp:150] Setting up relu3b
I0412 02:23:54.890206  3636 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 02:23:54.890208  3636 net.cpp:165] Memory required for data: 9749397540
I0412 02:23:54.890211  3636 layer_factory.hpp:77] Creating layer pool3
I0412 02:23:54.890221  3636 net.cpp:100] Creating Layer pool3
I0412 02:23:54.890225  3636 net.cpp:434] pool3 <- conv3b
I0412 02:23:54.890229  3636 net.cpp:408] pool3 -> pool3
I0412 02:23:54.890306  3636 net.cpp:150] Setting up pool3
I0412 02:23:54.890313  3636 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 02:23:54.890316  3636 net.cpp:165] Memory required for data: 9787932708
I0412 02:23:54.890319  3636 layer_factory.hpp:77] Creating layer conv4a
I0412 02:23:54.890331  3636 net.cpp:100] Creating Layer conv4a
I0412 02:23:54.890336  3636 net.cpp:434] conv4a <- pool3
I0412 02:23:54.890339  3636 net.cpp:408] conv4a -> conv4a
I0412 02:23:54.942549  3636 net.cpp:150] Setting up conv4a
I0412 02:23:54.942582  3636 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 02:23:54.942589  3636 net.cpp:165] Memory required for data: 9865003044
I0412 02:23:54.942607  3636 layer_factory.hpp:77] Creating layer relu4a
I0412 02:23:54.942620  3636 net.cpp:100] Creating Layer relu4a
I0412 02:23:54.942627  3636 net.cpp:434] relu4a <- conv4a
I0412 02:23:54.942636  3636 net.cpp:395] relu4a -> conv4a (in-place)
I0412 02:23:54.942651  3636 net.cpp:150] Setting up relu4a
I0412 02:23:54.942658  3636 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 02:23:54.942663  3636 net.cpp:165] Memory required for data: 9942073380
I0412 02:23:54.942667  3636 layer_factory.hpp:77] Creating layer conv4b
I0412 02:23:54.942683  3636 net.cpp:100] Creating Layer conv4b
I0412 02:23:54.942689  3636 net.cpp:434] conv4b <- conv4a
I0412 02:23:54.942698  3636 net.cpp:408] conv4b -> conv4b
I0412 02:23:55.004954  3636 net.cpp:150] Setting up conv4b
I0412 02:23:55.005028  3636 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 02:23:55.005043  3636 net.cpp:165] Memory required for data: 10019143716
I0412 02:23:55.005062  3636 layer_factory.hpp:77] Creating layer relu4b
I0412 02:23:55.005081  3636 net.cpp:100] Creating Layer relu4b
I0412 02:23:55.005096  3636 net.cpp:434] relu4b <- conv4b
I0412 02:23:55.005115  3636 net.cpp:395] relu4b -> conv4b (in-place)
I0412 02:23:55.005136  3636 net.cpp:150] Setting up relu4b
I0412 02:23:55.005151  3636 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 02:23:55.005163  3636 net.cpp:165] Memory required for data: 10096214052
I0412 02:23:55.005175  3636 layer_factory.hpp:77] Creating layer pool4
I0412 02:23:55.005192  3636 net.cpp:100] Creating Layer pool4
I0412 02:23:55.005205  3636 net.cpp:434] pool4 <- conv4b
I0412 02:23:55.005223  3636 net.cpp:408] pool4 -> pool4
I0412 02:23:55.005290  3636 net.cpp:150] Setting up pool4
I0412 02:23:55.005300  3636 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:23:55.005303  3636 net.cpp:165] Memory required for data: 10105847844
I0412 02:23:55.005308  3636 layer_factory.hpp:77] Creating layer conv5a
I0412 02:23:55.005319  3636 net.cpp:100] Creating Layer conv5a
I0412 02:23:55.005326  3636 net.cpp:434] conv5a <- pool4
I0412 02:23:55.005333  3636 net.cpp:408] conv5a -> conv5a
I0412 02:23:55.064522  3636 net.cpp:150] Setting up conv5a
I0412 02:23:55.064553  3636 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:23:55.064558  3636 net.cpp:165] Memory required for data: 10115481636
I0412 02:23:55.064568  3636 layer_factory.hpp:77] Creating layer relu5a
I0412 02:23:55.064580  3636 net.cpp:100] Creating Layer relu5a
I0412 02:23:55.064585  3636 net.cpp:434] relu5a <- conv5a
I0412 02:23:55.064595  3636 net.cpp:395] relu5a -> conv5a (in-place)
I0412 02:23:55.064606  3636 net.cpp:150] Setting up relu5a
I0412 02:23:55.064612  3636 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:23:55.064616  3636 net.cpp:165] Memory required for data: 10125115428
I0412 02:23:55.064621  3636 layer_factory.hpp:77] Creating layer conv5b
I0412 02:23:55.064635  3636 net.cpp:100] Creating Layer conv5b
I0412 02:23:55.064648  3636 net.cpp:434] conv5b <- conv5a
I0412 02:23:55.064656  3636 net.cpp:408] conv5b -> conv5b
I0412 02:23:55.137513  3636 net.cpp:150] Setting up conv5b
I0412 02:23:55.137545  3636 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:23:55.137549  3636 net.cpp:165] Memory required for data: 10134749220
I0412 02:23:55.137562  3636 layer_factory.hpp:77] Creating layer relu5b
I0412 02:23:55.137573  3636 net.cpp:100] Creating Layer relu5b
I0412 02:23:55.137579  3636 net.cpp:434] relu5b <- conv5b
I0412 02:23:55.137589  3636 net.cpp:395] relu5b -> conv5b (in-place)
I0412 02:23:55.137600  3636 net.cpp:150] Setting up relu5b
I0412 02:23:55.137606  3636 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:23:55.137610  3636 net.cpp:165] Memory required for data: 10144383012
I0412 02:23:55.137615  3636 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 02:23:55.137622  3636 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 02:23:55.137626  3636 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 02:23:55.137634  3636 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 02:23:55.137643  3636 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 02:23:55.137691  3636 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 02:23:55.137697  3636 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:23:55.137703  3636 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:23:55.137709  3636 net.cpp:165] Memory required for data: 10163650596
I0412 02:23:55.137713  3636 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 02:23:55.137727  3636 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 02:23:55.137732  3636 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 02:23:55.137740  3636 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 02:23:55.203675  3636 net.cpp:150] Setting up rpn_conv/3x3
I0412 02:23:55.203701  3636 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 02:23:55.203706  3636 net.cpp:165] Memory required for data: 10166796324
I0412 02:23:55.203727  3636 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 02:23:55.203739  3636 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 02:23:55.203745  3636 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 02:23:55.203754  3636 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 02:23:55.203766  3636 net.cpp:150] Setting up rpn_relu/3x3
I0412 02:23:55.203773  3636 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 02:23:55.203776  3636 net.cpp:165] Memory required for data: 10169942052
I0412 02:23:55.203780  3636 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 02:23:55.203796  3636 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 02:23:55.203800  3636 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 02:23:55.203809  3636 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 02:23:55.276721  3636 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 02:23:55.276795  3636 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 02:23:55.276811  3636 net.cpp:165] Memory required for data: 10170728484
I0412 02:23:55.276832  3636 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 02:23:55.276854  3636 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 02:23:55.276872  3636 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 02:23:55.276890  3636 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 02:23:55.276911  3636 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 02:23:55.276926  3636 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 02:23:55.276939  3636 net.cpp:165] Memory required for data: 10171514916
I0412 02:23:55.276952  3636 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 02:23:55.276969  3636 net.cpp:100] Creating Layer rpn/output_pool
I0412 02:23:55.276983  3636 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 02:23:55.277003  3636 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 02:23:55.277082  3636 net.cpp:150] Setting up rpn/output_pool
I0412 02:23:55.277104  3636 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 02:23:55.277118  3636 net.cpp:165] Memory required for data: 10171711524
I0412 02:23:55.277132  3636 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 02:23:55.277148  3636 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 02:23:55.277161  3636 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 02:23:55.277179  3636 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 02:23:55.277197  3636 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 02:23:55.277266  3636 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 02:23:55.277285  3636 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 02:23:55.277302  3636 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 02:23:55.277314  3636 net.cpp:165] Memory required for data: 10172104740
I0412 02:23:55.277341  3636 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 02:23:55.277369  3636 net.cpp:100] Creating Layer rpn_cls_score
I0412 02:23:55.277390  3636 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 02:23:55.277411  3636 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 02:23:55.278270  3636 net.cpp:150] Setting up rpn_cls_score
I0412 02:23:55.278298  3636 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:23:55.278312  3636 net.cpp:165] Memory required for data: 10172133156
I0412 02:23:55.278329  3636 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 02:23:55.278348  3636 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 02:23:55.278363  3636 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 02:23:55.278379  3636 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 02:23:55.278398  3636 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 02:23:55.278479  3636 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 02:23:55.278503  3636 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:23:55.278518  3636 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:23:55.278537  3636 net.cpp:165] Memory required for data: 10172189988
I0412 02:23:55.278553  3636 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 02:23:55.278583  3636 net.cpp:100] Creating Layer rpn_twin_pred
I0412 02:23:55.278600  3636 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 02:23:55.278617  3636 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 02:23:55.279449  3636 net.cpp:150] Setting up rpn_twin_pred
I0412 02:23:55.279479  3636 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:23:55.279495  3636 net.cpp:165] Memory required for data: 10172218404
I0412 02:23:55.279511  3636 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 02:23:55.279528  3636 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 02:23:55.279542  3636 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 02:23:55.279558  3636 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 02:23:55.279578  3636 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 02:23:55.279655  3636 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 02:23:55.279680  3636 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:23:55.279696  3636 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:23:55.279712  3636 net.cpp:165] Memory required for data: 10172275236
I0412 02:23:55.279726  3636 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 02:23:55.279744  3636 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 02:23:55.279759  3636 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 02:23:55.279784  3636 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 02:23:55.279841  3636 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 02:23:55.279863  3636 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:23:55.279878  3636 net.cpp:165] Memory required for data: 10172303652
I0412 02:23:55.279891  3636 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 02:23:55.279911  3636 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 02:23:55.279928  3636 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 02:23:55.279944  3636 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 02:23:55.279973  3636 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 02:23:55.279992  3636 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 02:23:55.280086  3636 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 02:23:55.280115  3636 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:23:55.280143  3636 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:23:55.280161  3636 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:23:55.280187  3636 net.cpp:165] Memory required for data: 10172388900
I0412 02:23:55.280212  3636 layer_factory.hpp:77] Creating layer rpn-data
I0412 02:23:55.280752  3636 net.cpp:100] Creating Layer rpn-data
I0412 02:23:55.280781  3636 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 02:23:55.280802  3636 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 02:23:55.280820  3636 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 02:23:55.280839  3636 net.cpp:408] rpn-data -> rpn_labels
I0412 02:23:55.280864  3636 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 02:23:55.280882  3636 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 02:23:55.280900  3636 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 02:23:55.284823  3636 net.cpp:150] Setting up rpn-data
I0412 02:23:55.284879  3636 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 02:23:55.284904  3636 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:23:55.284921  3636 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:23:55.284941  3636 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:23:55.284960  3636 net.cpp:165] Memory required for data: 10172488356
I0412 02:23:55.284976  3636 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 02:23:55.284998  3636 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 02:23:55.285022  3636 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 02:23:55.285043  3636 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 02:23:55.285066  3636 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 02:23:55.285147  3636 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 02:23:55.285173  3636 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 02:23:55.285194  3636 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 02:23:55.285210  3636 net.cpp:165] Memory required for data: 10172516772
I0412 02:23:55.285226  3636 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 02:23:55.285248  3636 net.cpp:100] Creating Layer rpn_loss_cls
I0412 02:23:55.285267  3636 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 02:23:55.285285  3636 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 02:23:55.285306  3636 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 02:23:55.285331  3636 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 02:23:55.285527  3636 net.cpp:150] Setting up rpn_loss_cls
I0412 02:23:55.285554  3636 net.cpp:157] Top shape: (1)
I0412 02:23:55.285573  3636 net.cpp:160]     with loss weight 1
I0412 02:23:55.285601  3636 net.cpp:165] Memory required for data: 10172516776
I0412 02:23:55.285621  3636 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 02:23:55.285646  3636 net.cpp:100] Creating Layer rpn_loss_twin
I0412 02:23:55.285666  3636 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 02:23:55.285688  3636 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 02:23:55.285709  3636 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 02:23:55.285729  3636 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 02:23:55.285753  3636 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 02:23:55.285921  3636 net.cpp:150] Setting up rpn_loss_twin
I0412 02:23:55.285948  3636 net.cpp:157] Top shape: (1)
I0412 02:23:55.285965  3636 net.cpp:160]     with loss weight 1
I0412 02:23:55.285987  3636 net.cpp:165] Memory required for data: 10172516780
I0412 02:23:55.286007  3636 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 02:23:55.286031  3636 net.cpp:100] Creating Layer rpn_accuarcy
I0412 02:23:55.286051  3636 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 02:23:55.286082  3636 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 02:23:55.286109  3636 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 02:23:55.286135  3636 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 02:23:55.286231  3636 net.cpp:150] Setting up rpn_accuarcy
I0412 02:23:55.286255  3636 net.cpp:157] Top shape: (1)
I0412 02:23:55.286275  3636 net.cpp:157] Top shape: 2 (2)
I0412 02:23:55.286295  3636 net.cpp:165] Memory required for data: 10172516792
I0412 02:23:55.286315  3636 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 02:23:55.286335  3636 net.cpp:100] Creating Layer rpn_cls_prob
I0412 02:23:55.286355  3636 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 02:23:55.286379  3636 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 02:23:55.286514  3636 net.cpp:150] Setting up rpn_cls_prob
I0412 02:23:55.286540  3636 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:23:55.286558  3636 net.cpp:165] Memory required for data: 10172545208
I0412 02:23:55.286576  3636 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 02:23:55.286602  3636 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 02:23:55.286620  3636 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 02:23:55.286643  3636 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 02:23:55.286705  3636 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 02:23:55.286729  3636 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:23:55.286746  3636 net.cpp:165] Memory required for data: 10172573624
I0412 02:23:55.286764  3636 layer_factory.hpp:77] Creating layer proposal
I0412 02:23:55.287655  3636 net.cpp:100] Creating Layer proposal
I0412 02:23:55.287688  3636 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 02:23:55.287712  3636 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 02:23:55.287732  3636 net.cpp:408] proposal -> rpn_rois
I0412 02:23:55.293512  3636 net.cpp:150] Setting up proposal
I0412 02:23:55.293568  3636 net.cpp:157] Top shape: 1 3 (3)
I0412 02:23:55.293593  3636 net.cpp:165] Memory required for data: 10172573636
I0412 02:23:55.293614  3636 layer_factory.hpp:77] Creating layer roi-data
I0412 02:23:55.293865  3636 net.cpp:100] Creating Layer roi-data
I0412 02:23:55.293908  3636 net.cpp:434] roi-data <- rpn_rois
I0412 02:23:55.293931  3636 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 02:23:55.293956  3636 net.cpp:408] roi-data -> rois
I0412 02:23:55.293982  3636 net.cpp:408] roi-data -> labels
I0412 02:23:55.294005  3636 net.cpp:408] roi-data -> twin_targets
I0412 02:23:55.294030  3636 net.cpp:408] roi-data -> twin_inside_weights
I0412 02:23:55.294057  3636 net.cpp:408] roi-data -> twin_outside_weights
I0412 02:23:55.294689  3636 net.cpp:150] Setting up roi-data
I0412 02:23:55.294724  3636 net.cpp:157] Top shape: 1 3 (3)
I0412 02:23:55.294747  3636 net.cpp:157] Top shape: 1 1 (1)
I0412 02:23:55.294769  3636 net.cpp:157] Top shape: 1 402 (402)
I0412 02:23:55.294787  3636 net.cpp:157] Top shape: 1 402 (402)
I0412 02:23:55.294808  3636 net.cpp:157] Top shape: 1 402 (402)
I0412 02:23:55.294826  3636 net.cpp:165] Memory required for data: 10172578476
I0412 02:23:55.294845  3636 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 02:23:55.294867  3636 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 02:23:55.294884  3636 net.cpp:434] labels_roi-data_1_split <- labels
I0412 02:23:55.294906  3636 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 02:23:55.294934  3636 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 02:23:55.295017  3636 net.cpp:150] Setting up labels_roi-data_1_split
I0412 02:23:55.295040  3636 net.cpp:157] Top shape: 1 1 (1)
I0412 02:23:55.295058  3636 net.cpp:157] Top shape: 1 1 (1)
I0412 02:23:55.295075  3636 net.cpp:165] Memory required for data: 10172578484
I0412 02:23:55.295094  3636 layer_factory.hpp:77] Creating layer roi_pool5
I0412 02:23:55.295116  3636 net.cpp:100] Creating Layer roi_pool5
I0412 02:23:55.295145  3636 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 02:23:55.295168  3636 net.cpp:434] roi_pool5 <- rois
I0412 02:23:55.295191  3636 net.cpp:408] roi_pool5 -> pool5
I0412 02:23:55.295213  3636 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 02:23:55.295239  3636 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 02:23:55.295320  3636 net.cpp:150] Setting up roi_pool5
I0412 02:23:55.295342  3636 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 02:23:55.295361  3636 net.cpp:165] Memory required for data: 10172611252
I0412 02:23:55.295380  3636 layer_factory.hpp:77] Creating layer fc6
I0412 02:23:55.295404  3636 net.cpp:100] Creating Layer fc6
I0412 02:23:55.295425  3636 net.cpp:434] fc6 <- pool5
I0412 02:23:55.295451  3636 net.cpp:408] fc6 -> fc6
I0412 02:23:55.642889  3636 net.cpp:150] Setting up fc6
I0412 02:23:55.642918  3636 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:23:55.642922  3636 net.cpp:165] Memory required for data: 10172627636
I0412 02:23:55.642932  3636 layer_factory.hpp:77] Creating layer relu6
I0412 02:23:55.642942  3636 net.cpp:100] Creating Layer relu6
I0412 02:23:55.642947  3636 net.cpp:434] relu6 <- fc6
I0412 02:23:55.642952  3636 net.cpp:395] relu6 -> fc6 (in-place)
I0412 02:23:55.642961  3636 net.cpp:150] Setting up relu6
I0412 02:23:55.642966  3636 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:23:55.642967  3636 net.cpp:165] Memory required for data: 10172644020
I0412 02:23:55.642971  3636 layer_factory.hpp:77] Creating layer drop6
I0412 02:23:55.642977  3636 net.cpp:100] Creating Layer drop6
I0412 02:23:55.643002  3636 net.cpp:434] drop6 <- fc6
I0412 02:23:55.643012  3636 net.cpp:395] drop6 -> fc6 (in-place)
I0412 02:23:55.643049  3636 net.cpp:150] Setting up drop6
I0412 02:23:55.643056  3636 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:23:55.643060  3636 net.cpp:165] Memory required for data: 10172660404
I0412 02:23:55.643065  3636 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 02:23:55.643072  3636 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 02:23:55.643079  3636 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 02:23:55.643085  3636 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 02:23:55.643112  3636 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 02:23:55.643194  3636 net.cpp:150] Setting up fc6_drop6_0_split
I0412 02:23:55.643209  3636 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:23:55.643215  3636 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:23:55.643218  3636 net.cpp:165] Memory required for data: 10172693172
I0412 02:23:55.643224  3636 layer_factory.hpp:77] Creating layer cls_score
I0412 02:23:55.643234  3636 net.cpp:100] Creating Layer cls_score
I0412 02:23:55.643242  3636 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 02:23:55.643249  3636 net.cpp:408] cls_score -> cls_score
I0412 02:23:55.650848  3636 net.cpp:150] Setting up cls_score
I0412 02:23:55.650861  3636 net.cpp:157] Top shape: 1 201 (201)
I0412 02:23:55.650864  3636 net.cpp:165] Memory required for data: 10172693976
I0412 02:23:55.650871  3636 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 02:23:55.650876  3636 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 02:23:55.650880  3636 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 02:23:55.650887  3636 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 02:23:55.650894  3636 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 02:23:55.650933  3636 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 02:23:55.650940  3636 net.cpp:157] Top shape: 1 201 (201)
I0412 02:23:55.650943  3636 net.cpp:157] Top shape: 1 201 (201)
I0412 02:23:55.650946  3636 net.cpp:165] Memory required for data: 10172695584
I0412 02:23:55.650949  3636 layer_factory.hpp:77] Creating layer twin_pred
I0412 02:23:55.650955  3636 net.cpp:100] Creating Layer twin_pred
I0412 02:23:55.650959  3636 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 02:23:55.650964  3636 net.cpp:408] twin_pred -> twin_pred
I0412 02:23:55.665395  3636 net.cpp:150] Setting up twin_pred
I0412 02:23:55.665417  3636 net.cpp:157] Top shape: 1 402 (402)
I0412 02:23:55.665421  3636 net.cpp:165] Memory required for data: 10172697192
I0412 02:23:55.665429  3636 layer_factory.hpp:77] Creating layer loss_cls
I0412 02:23:55.665441  3636 net.cpp:100] Creating Layer loss_cls
I0412 02:23:55.665446  3636 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 02:23:55.665451  3636 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 02:23:55.665457  3636 net.cpp:408] loss_cls -> loss_cls
I0412 02:23:55.665467  3636 layer_factory.hpp:77] Creating layer loss_cls
I0412 02:23:55.665580  3636 net.cpp:150] Setting up loss_cls
I0412 02:23:55.665585  3636 net.cpp:157] Top shape: (1)
I0412 02:23:55.665588  3636 net.cpp:160]     with loss weight 1
I0412 02:23:55.665603  3636 net.cpp:165] Memory required for data: 10172697196
I0412 02:23:55.665606  3636 layer_factory.hpp:77] Creating layer loss_twin
I0412 02:23:55.665616  3636 net.cpp:100] Creating Layer loss_twin
I0412 02:23:55.665622  3636 net.cpp:434] loss_twin <- twin_pred
I0412 02:23:55.665627  3636 net.cpp:434] loss_twin <- twin_targets
I0412 02:23:55.665633  3636 net.cpp:434] loss_twin <- twin_inside_weights
I0412 02:23:55.665638  3636 net.cpp:434] loss_twin <- twin_outside_weights
I0412 02:23:55.665647  3636 net.cpp:408] loss_twin -> loss_twin
I0412 02:23:55.665760  3636 net.cpp:150] Setting up loss_twin
I0412 02:23:55.665768  3636 net.cpp:157] Top shape: (1)
I0412 02:23:55.665771  3636 net.cpp:160]     with loss weight 1
I0412 02:23:55.665776  3636 net.cpp:165] Memory required for data: 10172697200
I0412 02:23:55.665781  3636 layer_factory.hpp:77] Creating layer accuarcy
I0412 02:23:55.665791  3636 net.cpp:100] Creating Layer accuarcy
I0412 02:23:55.665799  3636 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 02:23:55.665807  3636 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 02:23:55.665813  3636 net.cpp:408] accuarcy -> accuarcy
I0412 02:23:55.665828  3636 net.cpp:150] Setting up accuarcy
I0412 02:23:55.665834  3636 net.cpp:157] Top shape: (1)
I0412 02:23:55.665838  3636 net.cpp:165] Memory required for data: 10172697204
I0412 02:23:55.665840  3636 net.cpp:228] accuarcy does not need backward computation.
I0412 02:23:55.665846  3636 net.cpp:226] loss_twin needs backward computation.
I0412 02:23:55.665853  3636 net.cpp:226] loss_cls needs backward computation.
I0412 02:23:55.665861  3636 net.cpp:226] twin_pred needs backward computation.
I0412 02:23:55.665868  3636 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 02:23:55.665871  3636 net.cpp:226] cls_score needs backward computation.
I0412 02:23:55.665875  3636 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 02:23:55.665879  3636 net.cpp:226] drop6 needs backward computation.
I0412 02:23:55.665882  3636 net.cpp:226] relu6 needs backward computation.
I0412 02:23:55.665885  3636 net.cpp:226] fc6 needs backward computation.
I0412 02:23:55.665889  3636 net.cpp:226] roi_pool5 needs backward computation.
I0412 02:23:55.665895  3636 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 02:23:55.665900  3636 net.cpp:226] roi-data needs backward computation.
I0412 02:23:55.665904  3636 net.cpp:226] proposal needs backward computation.
I0412 02:23:55.665910  3636 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 02:23:55.665912  3636 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 02:23:55.665916  3636 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 02:23:55.665925  3636 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 02:23:55.665932  3636 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 02:23:55.665940  3636 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 02:23:55.665946  3636 net.cpp:226] rpn-data needs backward computation.
I0412 02:23:55.665953  3636 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 02:23:55.665958  3636 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 02:23:55.665966  3636 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 02:23:55.665969  3636 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 02:23:55.665974  3636 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 02:23:55.665979  3636 net.cpp:226] rpn_cls_score needs backward computation.
I0412 02:23:55.665987  3636 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 02:23:55.665992  3636 net.cpp:226] rpn/output_pool needs backward computation.
I0412 02:23:55.665995  3636 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 02:23:55.665999  3636 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 02:23:55.666002  3636 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 02:23:55.666007  3636 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 02:23:55.666010  3636 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 02:23:55.666014  3636 net.cpp:226] relu5b needs backward computation.
I0412 02:23:55.666018  3636 net.cpp:226] conv5b needs backward computation.
I0412 02:23:55.666021  3636 net.cpp:226] relu5a needs backward computation.
I0412 02:23:55.666024  3636 net.cpp:226] conv5a needs backward computation.
I0412 02:23:55.666028  3636 net.cpp:226] pool4 needs backward computation.
I0412 02:23:55.666033  3636 net.cpp:226] relu4b needs backward computation.
I0412 02:23:55.666038  3636 net.cpp:226] conv4b needs backward computation.
I0412 02:23:55.666043  3636 net.cpp:226] relu4a needs backward computation.
I0412 02:23:55.666050  3636 net.cpp:226] conv4a needs backward computation.
I0412 02:23:55.666054  3636 net.cpp:226] pool3 needs backward computation.
I0412 02:23:55.666059  3636 net.cpp:226] relu3b needs backward computation.
I0412 02:23:55.666062  3636 net.cpp:226] conv3b needs backward computation.
I0412 02:23:55.666067  3636 net.cpp:226] relu3a needs backward computation.
I0412 02:23:55.666071  3636 net.cpp:226] conv3a needs backward computation.
I0412 02:23:55.666074  3636 net.cpp:228] pool2 does not need backward computation.
I0412 02:23:55.666079  3636 net.cpp:228] relu2a does not need backward computation.
I0412 02:23:55.666083  3636 net.cpp:228] conv2a does not need backward computation.
I0412 02:23:55.666086  3636 net.cpp:228] pool1 does not need backward computation.
I0412 02:23:55.666090  3636 net.cpp:228] relu1a does not need backward computation.
I0412 02:23:55.666093  3636 net.cpp:228] conv1a does not need backward computation.
I0412 02:23:55.666100  3636 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 02:23:55.666105  3636 net.cpp:228] data_data_0_split does not need backward computation.
I0412 02:23:55.666108  3636 net.cpp:228] data does not need backward computation.
I0412 02:23:55.666112  3636 net.cpp:270] This network produces output accuarcy
I0412 02:23:55.666116  3636 net.cpp:270] This network produces output loss_cls
I0412 02:23:55.666119  3636 net.cpp:270] This network produces output loss_twin
I0412 02:23:55.666123  3636 net.cpp:270] This network produces output rpn_accuarcy
I0412 02:23:55.666127  3636 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 02:23:55.666134  3636 net.cpp:270] This network produces output rpn_cls_loss
I0412 02:23:55.666139  3636 net.cpp:270] This network produces output rpn_loss_twin
I0412 02:23:55.666188  3636 net.cpp:283] Network initialization done.
I0412 02:23:55.666326  3636 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 02:23:55.826894  3636 net.cpp:761] Ignoring source layer pool5
I0412 02:23:55.850077  3636 net.cpp:761] Ignoring source layer fc7
I0412 02:23:55.850142  3636 net.cpp:761] Ignoring source layer relu7
I0412 02:23:55.850157  3636 net.cpp:761] Ignoring source layer drop7
I0412 02:23:55.850172  3636 net.cpp:761] Ignoring source layer fc8-200
I0412 02:23:55.850186  3636 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
99
(array([0]), array([97]))
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 96, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 130, in forward
    blob1, blob2 = blob
ValueError: need more than 1 value to unpack
Terminating BlobFetcher
