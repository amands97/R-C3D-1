Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
WARNING: Logging before InitGoogleLogging() is written to STDERR
E0412 01:46:15.143302 13765 common.cpp:113] Cannot create Cublas handle. Cublas won't be available.
E0412 01:46:15.601367 13765 common.cpp:120] Cannot create Curand generator. Curand won't be available.
E0412 01:46:15.601398 13765 common.cpp:140] Curand not available. Skipping setting the curand seed.
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
I0412 01:46:16.159004 13765 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 01:46:16.159082 13765 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 01:46:16.160039 13765 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 01:46:16.162750 13765 layer_factory.hpp:77] Creating layer data
I0412 01:46:16.176960 13765 net.cpp:100] Creating Layer data
I0412 01:46:16.176987 13765 net.cpp:408] data -> data
I0412 01:46:16.177079 13765 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 01:46:16.186862 13765 net.cpp:150] Setting up data
I0412 01:46:16.186892 13765 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:46:16.186900 13765 net.cpp:157] Top shape: 1 3 (3)
I0412 01:46:16.186905 13765 net.cpp:165] Memory required for data: 115605516
I0412 01:46:16.186913 13765 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 01:46:16.186930 13765 net.cpp:100] Creating Layer data_data_0_split
I0412 01:46:16.186936 13765 net.cpp:434] data_data_0_split <- data
I0412 01:46:16.186946 13765 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 01:46:16.186964 13765 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 01:46:16.187006 13765 net.cpp:150] Setting up data_data_0_split
I0412 01:46:16.187017 13765 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:46:16.187024 13765 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:46:16.187028 13765 net.cpp:165] Memory required for data: 346816524
I0412 01:46:16.187034 13765 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 01:46:16.187047 13765 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 01:46:16.187053 13765 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 01:46:16.187060 13765 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 01:46:16.187072 13765 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 01:46:16.187109 13765 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 01:46:16.187121 13765 net.cpp:157] Top shape: 1 3 (3)
I0412 01:46:16.187127 13765 net.cpp:157] Top shape: 1 3 (3)
I0412 01:46:16.187131 13765 net.cpp:165] Memory required for data: 346816548
I0412 01:46:16.187136 13765 layer_factory.hpp:77] Creating layer conv1a
I0412 01:46:16.187152 13765 net.cpp:100] Creating Layer conv1a
I0412 01:46:16.187158 13765 net.cpp:434] conv1a <- data_data_0_split_0
I0412 01:46:16.187168 13765 net.cpp:408] conv1a -> conv1a
I0412 01:46:16.213843 13765 net.cpp:150] Setting up conv1a
I0412 01:46:16.213881 13765 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 01:46:16.213886 13765 net.cpp:165] Memory required for data: 2813067300
I0412 01:46:16.213991 13765 layer_factory.hpp:77] Creating layer relu1a
I0412 01:46:16.214035 13765 net.cpp:100] Creating Layer relu1a
I0412 01:46:16.214046 13765 net.cpp:434] relu1a <- conv1a
I0412 01:46:16.214083 13765 net.cpp:395] relu1a -> conv1a (in-place)
I0412 01:46:16.214115 13765 net.cpp:150] Setting up relu1a
I0412 01:46:16.214124 13765 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 01:46:16.214148 13765 net.cpp:165] Memory required for data: 5279318052
I0412 01:46:16.214155 13765 layer_factory.hpp:77] Creating layer pool1
I0412 01:46:16.214205 13765 net.cpp:100] Creating Layer pool1
I0412 01:46:16.214213 13765 net.cpp:434] pool1 <- conv1a
I0412 01:46:16.214243 13765 net.cpp:408] pool1 -> pool1
I0412 01:46:16.214342 13765 net.cpp:150] Setting up pool1
I0412 01:46:16.214354 13765 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 01:46:16.214359 13765 net.cpp:165] Memory required for data: 5895880740
I0412 01:46:16.214365 13765 layer_factory.hpp:77] Creating layer conv2a
I0412 01:46:16.214378 13765 net.cpp:100] Creating Layer conv2a
I0412 01:46:16.214421 13765 net.cpp:434] conv2a <- pool1
I0412 01:46:16.214452 13765 net.cpp:408] conv2a -> conv2a
I0412 01:46:16.230886 13765 net.cpp:150] Setting up conv2a
I0412 01:46:16.230922 13765 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 01:46:16.230926 13765 net.cpp:165] Memory required for data: 7129006116
I0412 01:46:16.230940 13765 layer_factory.hpp:77] Creating layer relu2a
I0412 01:46:16.230952 13765 net.cpp:100] Creating Layer relu2a
I0412 01:46:16.230957 13765 net.cpp:434] relu2a <- conv2a
I0412 01:46:16.230963 13765 net.cpp:395] relu2a -> conv2a (in-place)
I0412 01:46:16.230973 13765 net.cpp:150] Setting up relu2a
I0412 01:46:16.230978 13765 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 01:46:16.230980 13765 net.cpp:165] Memory required for data: 8362131492
I0412 01:46:16.230983 13765 layer_factory.hpp:77] Creating layer pool2
I0412 01:46:16.230993 13765 net.cpp:100] Creating Layer pool2
I0412 01:46:16.230996 13765 net.cpp:434] pool2 <- conv2a
I0412 01:46:16.231000 13765 net.cpp:408] pool2 -> pool2
I0412 01:46:16.231067 13765 net.cpp:150] Setting up pool2
I0412 01:46:16.231072 13765 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 01:46:16.231076 13765 net.cpp:165] Memory required for data: 8516272164
I0412 01:46:16.231078 13765 layer_factory.hpp:77] Creating layer conv3a
I0412 01:46:16.231088 13765 net.cpp:100] Creating Layer conv3a
I0412 01:46:16.231091 13765 net.cpp:434] conv3a <- pool2
I0412 01:46:16.231097 13765 net.cpp:408] conv3a -> conv3a
I0412 01:46:16.250823 13765 net.cpp:150] Setting up conv3a
I0412 01:46:16.250851 13765 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:46:16.250856 13765 net.cpp:165] Memory required for data: 8824553508
I0412 01:46:16.250871 13765 layer_factory.hpp:77] Creating layer relu3a
I0412 01:46:16.250880 13765 net.cpp:100] Creating Layer relu3a
I0412 01:46:16.250885 13765 net.cpp:434] relu3a <- conv3a
I0412 01:46:16.250891 13765 net.cpp:395] relu3a -> conv3a (in-place)
I0412 01:46:16.250900 13765 net.cpp:150] Setting up relu3a
I0412 01:46:16.250905 13765 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:46:16.250907 13765 net.cpp:165] Memory required for data: 9132834852
I0412 01:46:16.250910 13765 layer_factory.hpp:77] Creating layer conv3b
I0412 01:46:16.250918 13765 net.cpp:100] Creating Layer conv3b
I0412 01:46:16.250921 13765 net.cpp:434] conv3b <- conv3a
I0412 01:46:16.250927 13765 net.cpp:408] conv3b -> conv3b
I0412 01:46:16.275776 13765 net.cpp:150] Setting up conv3b
I0412 01:46:16.275831 13765 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:46:16.275835 13765 net.cpp:165] Memory required for data: 9441116196
I0412 01:46:16.275848 13765 layer_factory.hpp:77] Creating layer relu3b
I0412 01:46:16.275861 13765 net.cpp:100] Creating Layer relu3b
I0412 01:46:16.275866 13765 net.cpp:434] relu3b <- conv3b
I0412 01:46:16.275876 13765 net.cpp:395] relu3b -> conv3b (in-place)
I0412 01:46:16.275888 13765 net.cpp:150] Setting up relu3b
I0412 01:46:16.275894 13765 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:46:16.275899 13765 net.cpp:165] Memory required for data: 9749397540
I0412 01:46:16.275903 13765 layer_factory.hpp:77] Creating layer pool3
I0412 01:46:16.275913 13765 net.cpp:100] Creating Layer pool3
I0412 01:46:16.275918 13765 net.cpp:434] pool3 <- conv3b
I0412 01:46:16.275924 13765 net.cpp:408] pool3 -> pool3
I0412 01:46:16.275975 13765 net.cpp:150] Setting up pool3
I0412 01:46:16.275984 13765 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 01:46:16.275987 13765 net.cpp:165] Memory required for data: 9787932708
I0412 01:46:16.275992 13765 layer_factory.hpp:77] Creating layer conv4a
I0412 01:46:16.276006 13765 net.cpp:100] Creating Layer conv4a
I0412 01:46:16.276010 13765 net.cpp:434] conv4a <- pool3
I0412 01:46:16.276021 13765 net.cpp:408] conv4a -> conv4a
I0412 01:46:16.318289 13765 net.cpp:150] Setting up conv4a
I0412 01:46:16.318317 13765 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:46:16.318322 13765 net.cpp:165] Memory required for data: 9865003044
I0412 01:46:16.318341 13765 layer_factory.hpp:77] Creating layer relu4a
I0412 01:46:16.318353 13765 net.cpp:100] Creating Layer relu4a
I0412 01:46:16.318382 13765 net.cpp:434] relu4a <- conv4a
I0412 01:46:16.318398 13765 net.cpp:395] relu4a -> conv4a (in-place)
I0412 01:46:16.318413 13765 net.cpp:150] Setting up relu4a
I0412 01:46:16.318419 13765 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:46:16.318423 13765 net.cpp:165] Memory required for data: 9942073380
I0412 01:46:16.318428 13765 layer_factory.hpp:77] Creating layer conv4b
I0412 01:46:16.318449 13765 net.cpp:100] Creating Layer conv4b
I0412 01:46:16.318454 13765 net.cpp:434] conv4b <- conv4a
I0412 01:46:16.318462 13765 net.cpp:408] conv4b -> conv4b
I0412 01:46:16.397317 13765 net.cpp:150] Setting up conv4b
I0412 01:46:16.397351 13765 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:46:16.397358 13765 net.cpp:165] Memory required for data: 10019143716
I0412 01:46:16.397372 13765 layer_factory.hpp:77] Creating layer relu4b
I0412 01:46:16.397384 13765 net.cpp:100] Creating Layer relu4b
I0412 01:46:16.397393 13765 net.cpp:434] relu4b <- conv4b
I0412 01:46:16.397404 13765 net.cpp:395] relu4b -> conv4b (in-place)
I0412 01:46:16.397420 13765 net.cpp:150] Setting up relu4b
I0412 01:46:16.397429 13765 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:46:16.397436 13765 net.cpp:165] Memory required for data: 10096214052
I0412 01:46:16.397441 13765 layer_factory.hpp:77] Creating layer pool4
I0412 01:46:16.397450 13765 net.cpp:100] Creating Layer pool4
I0412 01:46:16.397457 13765 net.cpp:434] pool4 <- conv4b
I0412 01:46:16.397464 13765 net.cpp:408] pool4 -> pool4
I0412 01:46:16.397518 13765 net.cpp:150] Setting up pool4
I0412 01:46:16.397547 13765 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:46:16.397554 13765 net.cpp:165] Memory required for data: 10105847844
I0412 01:46:16.397562 13765 layer_factory.hpp:77] Creating layer conv5a
I0412 01:46:16.397578 13765 net.cpp:100] Creating Layer conv5a
I0412 01:46:16.397596 13765 net.cpp:434] conv5a <- pool4
I0412 01:46:16.397611 13765 net.cpp:408] conv5a -> conv5a
I0412 01:46:16.484277 13765 net.cpp:150] Setting up conv5a
I0412 01:46:16.484396 13765 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:46:16.484421 13765 net.cpp:165] Memory required for data: 10115481636
I0412 01:46:16.484447 13765 layer_factory.hpp:77] Creating layer relu5a
I0412 01:46:16.484477 13765 net.cpp:100] Creating Layer relu5a
I0412 01:46:16.484499 13765 net.cpp:434] relu5a <- conv5a
I0412 01:46:16.484524 13765 net.cpp:395] relu5a -> conv5a (in-place)
I0412 01:46:16.484551 13765 net.cpp:150] Setting up relu5a
I0412 01:46:16.484575 13765 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:46:16.484593 13765 net.cpp:165] Memory required for data: 10125115428
I0412 01:46:16.484611 13765 layer_factory.hpp:77] Creating layer conv5b
I0412 01:46:16.484643 13765 net.cpp:100] Creating Layer conv5b
I0412 01:46:16.484665 13765 net.cpp:434] conv5b <- conv5a
I0412 01:46:16.484696 13765 net.cpp:408] conv5b -> conv5b
I0412 01:46:16.559072 13765 net.cpp:150] Setting up conv5b
I0412 01:46:16.559136 13765 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:46:16.559144 13765 net.cpp:165] Memory required for data: 10134749220
I0412 01:46:16.559156 13765 layer_factory.hpp:77] Creating layer relu5b
I0412 01:46:16.559168 13765 net.cpp:100] Creating Layer relu5b
I0412 01:46:16.559175 13765 net.cpp:434] relu5b <- conv5b
I0412 01:46:16.559187 13765 net.cpp:395] relu5b -> conv5b (in-place)
I0412 01:46:16.559201 13765 net.cpp:150] Setting up relu5b
I0412 01:46:16.559208 13765 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:46:16.559216 13765 net.cpp:165] Memory required for data: 10144383012
I0412 01:46:16.559219 13765 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 01:46:16.559227 13765 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 01:46:16.559244 13765 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 01:46:16.559263 13765 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 01:46:16.559285 13765 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 01:46:16.559327 13765 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 01:46:16.559336 13765 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:46:16.559355 13765 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:46:16.559361 13765 net.cpp:165] Memory required for data: 10163650596
I0412 01:46:16.559365 13765 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 01:46:16.559381 13765 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 01:46:16.559387 13765 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 01:46:16.559396 13765 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 01:46:16.643599 13765 net.cpp:150] Setting up rpn_conv/3x3
I0412 01:46:16.643628 13765 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 01:46:16.643632 13765 net.cpp:165] Memory required for data: 10166796324
I0412 01:46:16.643651 13765 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 01:46:16.643661 13765 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 01:46:16.643667 13765 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 01:46:16.643674 13765 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 01:46:16.643684 13765 net.cpp:150] Setting up rpn_relu/3x3
I0412 01:46:16.643692 13765 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 01:46:16.643695 13765 net.cpp:165] Memory required for data: 10169942052
I0412 01:46:16.643699 13765 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 01:46:16.643710 13765 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 01:46:16.643715 13765 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 01:46:16.643719 13765 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 01:46:16.709642 13765 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 01:46:16.709674 13765 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 01:46:16.709678 13765 net.cpp:165] Memory required for data: 10170728484
I0412 01:46:16.709687 13765 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 01:46:16.709697 13765 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 01:46:16.709702 13765 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 01:46:16.709713 13765 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 01:46:16.709725 13765 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 01:46:16.709731 13765 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 01:46:16.709734 13765 net.cpp:165] Memory required for data: 10171514916
I0412 01:46:16.709738 13765 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 01:46:16.709744 13765 net.cpp:100] Creating Layer rpn/output_pool
I0412 01:46:16.709750 13765 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 01:46:16.709755 13765 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 01:46:16.709786 13765 net.cpp:150] Setting up rpn/output_pool
I0412 01:46:16.709794 13765 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:46:16.709796 13765 net.cpp:165] Memory required for data: 10171711524
I0412 01:46:16.709800 13765 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 01:46:16.709805 13765 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 01:46:16.709810 13765 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 01:46:16.709815 13765 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 01:46:16.709820 13765 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 01:46:16.709844 13765 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 01:46:16.709852 13765 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:46:16.709856 13765 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:46:16.709859 13765 net.cpp:165] Memory required for data: 10172104740
I0412 01:46:16.709862 13765 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 01:46:16.709873 13765 net.cpp:100] Creating Layer rpn_cls_score
I0412 01:46:16.709877 13765 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 01:46:16.709882 13765 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 01:46:16.710309 13765 net.cpp:150] Setting up rpn_cls_score
I0412 01:46:16.710317 13765 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:46:16.710320 13765 net.cpp:165] Memory required for data: 10172133156
I0412 01:46:16.710325 13765 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 01:46:16.710331 13765 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 01:46:16.710335 13765 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 01:46:16.710340 13765 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 01:46:16.710345 13765 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 01:46:16.710374 13765 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 01:46:16.710381 13765 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:46:16.710383 13765 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:46:16.710386 13765 net.cpp:165] Memory required for data: 10172189988
I0412 01:46:16.710389 13765 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 01:46:16.710402 13765 net.cpp:100] Creating Layer rpn_twin_pred
I0412 01:46:16.710407 13765 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 01:46:16.710412 13765 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 01:46:16.710826 13765 net.cpp:150] Setting up rpn_twin_pred
I0412 01:46:16.710834 13765 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:46:16.710836 13765 net.cpp:165] Memory required for data: 10172218404
I0412 01:46:16.710840 13765 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:46:16.710847 13765 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:46:16.710850 13765 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 01:46:16.710855 13765 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 01:46:16.710860 13765 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 01:46:16.710886 13765 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:46:16.710892 13765 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:46:16.710896 13765 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:46:16.710899 13765 net.cpp:165] Memory required for data: 10172275236
I0412 01:46:16.710903 13765 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 01:46:16.710911 13765 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 01:46:16.710914 13765 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 01:46:16.710918 13765 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 01:46:16.710937 13765 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 01:46:16.710943 13765 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:46:16.710947 13765 net.cpp:165] Memory required for data: 10172303652
I0412 01:46:16.710950 13765 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:46:16.710956 13765 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:46:16.710959 13765 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 01:46:16.710964 13765 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 01:46:16.710978 13765 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 01:46:16.710983 13765 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 01:46:16.711014 13765 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:46:16.711019 13765 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:46:16.711024 13765 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:46:16.711027 13765 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:46:16.711030 13765 net.cpp:165] Memory required for data: 10172388900
I0412 01:46:16.711033 13765 layer_factory.hpp:77] Creating layer rpn-data
I0412 01:46:16.711402 13765 net.cpp:100] Creating Layer rpn-data
I0412 01:46:16.711413 13765 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 01:46:16.711418 13765 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 01:46:16.711423 13765 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 01:46:16.711428 13765 net.cpp:408] rpn-data -> rpn_labels
I0412 01:46:16.711436 13765 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 01:46:16.711441 13765 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 01:46:16.711447 13765 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 01:46:16.714674 13765 net.cpp:150] Setting up rpn-data
I0412 01:46:16.714694 13765 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:46:16.714701 13765 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:46:16.714707 13765 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:46:16.714713 13765 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:46:16.714718 13765 net.cpp:165] Memory required for data: 10172488356
I0412 01:46:16.714723 13765 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 01:46:16.714731 13765 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 01:46:16.714737 13765 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 01:46:16.714746 13765 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 01:46:16.714753 13765 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 01:46:16.714781 13765 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 01:46:16.714805 13765 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:46:16.714815 13765 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:46:16.714819 13765 net.cpp:165] Memory required for data: 10172516772
I0412 01:46:16.714824 13765 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 01:46:16.714833 13765 net.cpp:100] Creating Layer rpn_loss_cls
I0412 01:46:16.714839 13765 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 01:46:16.714846 13765 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 01:46:16.714854 13765 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 01:46:16.714864 13765 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 01:46:16.714941 13765 net.cpp:150] Setting up rpn_loss_cls
I0412 01:46:16.714949 13765 net.cpp:157] Top shape: (1)
I0412 01:46:16.714953 13765 net.cpp:160]     with loss weight 1
I0412 01:46:16.714967 13765 net.cpp:165] Memory required for data: 10172516776
I0412 01:46:16.714972 13765 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 01:46:16.714982 13765 net.cpp:100] Creating Layer rpn_loss_twin
I0412 01:46:16.714987 13765 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 01:46:16.714993 13765 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 01:46:16.714999 13765 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 01:46:16.715004 13765 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 01:46:16.715011 13765 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 01:46:16.715068 13765 net.cpp:150] Setting up rpn_loss_twin
I0412 01:46:16.715076 13765 net.cpp:157] Top shape: (1)
I0412 01:46:16.715080 13765 net.cpp:160]     with loss weight 1
I0412 01:46:16.715087 13765 net.cpp:165] Memory required for data: 10172516780
I0412 01:46:16.715092 13765 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 01:46:16.715101 13765 net.cpp:100] Creating Layer rpn_accuarcy
I0412 01:46:16.715106 13765 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 01:46:16.715113 13765 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 01:46:16.715121 13765 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 01:46:16.715129 13765 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 01:46:16.715178 13765 net.cpp:150] Setting up rpn_accuarcy
I0412 01:46:16.715188 13765 net.cpp:157] Top shape: (1)
I0412 01:46:16.715193 13765 net.cpp:157] Top shape: 2 (2)
I0412 01:46:16.715196 13765 net.cpp:165] Memory required for data: 10172516792
I0412 01:46:16.715201 13765 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 01:46:16.715211 13765 net.cpp:100] Creating Layer rpn_cls_prob
I0412 01:46:16.715217 13765 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 01:46:16.715224 13765 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 01:46:16.715286 13765 net.cpp:150] Setting up rpn_cls_prob
I0412 01:46:16.715312 13765 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:46:16.715328 13765 net.cpp:165] Memory required for data: 10172545208
I0412 01:46:16.715344 13765 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 01:46:16.715363 13765 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 01:46:16.715380 13765 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 01:46:16.715399 13765 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 01:46:16.715443 13765 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 01:46:16.715467 13765 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:46:16.715483 13765 net.cpp:165] Memory required for data: 10172573624
I0412 01:46:16.715498 13765 layer_factory.hpp:77] Creating layer proposal
I0412 01:46:16.716266 13765 net.cpp:100] Creating Layer proposal
I0412 01:46:16.716295 13765 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 01:46:16.716317 13765 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 01:46:16.716379 13765 net.cpp:408] proposal -> rpn_rois
I0412 01:46:16.731025 13765 net.cpp:150] Setting up proposal
I0412 01:46:16.731053 13765 net.cpp:157] Top shape: 1 3 (3)
I0412 01:46:16.731058 13765 net.cpp:165] Memory required for data: 10172573636
I0412 01:46:16.731153 13765 layer_factory.hpp:77] Creating layer roi-data
I0412 01:46:16.731391 13765 net.cpp:100] Creating Layer roi-data
I0412 01:46:16.731406 13765 net.cpp:434] roi-data <- rpn_rois
I0412 01:46:16.731415 13765 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 01:46:16.731425 13765 net.cpp:408] roi-data -> rois
I0412 01:46:16.731438 13765 net.cpp:408] roi-data -> labels
I0412 01:46:16.731448 13765 net.cpp:408] roi-data -> twin_targets
I0412 01:46:16.731456 13765 net.cpp:408] roi-data -> twin_inside_weights
I0412 01:46:16.731463 13765 net.cpp:408] roi-data -> twin_outside_weights
I0412 01:46:16.731788 13765 net.cpp:150] Setting up roi-data
I0412 01:46:16.731801 13765 net.cpp:157] Top shape: 1 3 (3)
I0412 01:46:16.731803 13765 net.cpp:157] Top shape: 1 1 (1)
I0412 01:46:16.731807 13765 net.cpp:157] Top shape: 1 402 (402)
I0412 01:46:16.731811 13765 net.cpp:157] Top shape: 1 402 (402)
I0412 01:46:16.731813 13765 net.cpp:157] Top shape: 1 402 (402)
I0412 01:46:16.731817 13765 net.cpp:165] Memory required for data: 10172578476
I0412 01:46:16.731820 13765 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 01:46:16.731827 13765 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 01:46:16.731830 13765 net.cpp:434] labels_roi-data_1_split <- labels
I0412 01:46:16.731837 13765 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 01:46:16.731842 13765 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 01:46:16.731868 13765 net.cpp:150] Setting up labels_roi-data_1_split
I0412 01:46:16.731874 13765 net.cpp:157] Top shape: 1 1 (1)
I0412 01:46:16.731878 13765 net.cpp:157] Top shape: 1 1 (1)
I0412 01:46:16.731879 13765 net.cpp:165] Memory required for data: 10172578484
I0412 01:46:16.731884 13765 layer_factory.hpp:77] Creating layer roi_pool5
I0412 01:46:16.731889 13765 net.cpp:100] Creating Layer roi_pool5
I0412 01:46:16.731894 13765 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 01:46:16.731897 13765 net.cpp:434] roi_pool5 <- rois
I0412 01:46:16.731901 13765 net.cpp:408] roi_pool5 -> pool5
I0412 01:46:16.731907 13765 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 01:46:16.731919 13765 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 01:46:16.731942 13765 net.cpp:150] Setting up roi_pool5
I0412 01:46:16.731950 13765 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 01:46:16.731952 13765 net.cpp:165] Memory required for data: 10172611252
I0412 01:46:16.731956 13765 layer_factory.hpp:77] Creating layer fc6
I0412 01:46:16.731964 13765 net.cpp:100] Creating Layer fc6
I0412 01:46:16.731969 13765 net.cpp:434] fc6 <- pool5
I0412 01:46:16.731974 13765 net.cpp:408] fc6 -> fc6
I0412 01:46:17.085548 13765 net.cpp:150] Setting up fc6
I0412 01:46:17.085585 13765 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:46:17.085590 13765 net.cpp:165] Memory required for data: 10172627636
I0412 01:46:17.085603 13765 layer_factory.hpp:77] Creating layer relu6
I0412 01:46:17.085615 13765 net.cpp:100] Creating Layer relu6
I0412 01:46:17.085624 13765 net.cpp:434] relu6 <- fc6
I0412 01:46:17.085638 13765 net.cpp:395] relu6 -> fc6 (in-place)
I0412 01:46:17.085651 13765 net.cpp:150] Setting up relu6
I0412 01:46:17.085660 13765 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:46:17.085664 13765 net.cpp:165] Memory required for data: 10172644020
I0412 01:46:17.085669 13765 layer_factory.hpp:77] Creating layer drop6
I0412 01:46:17.085705 13765 net.cpp:100] Creating Layer drop6
I0412 01:46:17.085724 13765 net.cpp:434] drop6 <- fc6
I0412 01:46:17.085742 13765 net.cpp:395] drop6 -> fc6 (in-place)
I0412 01:46:17.085780 13765 net.cpp:150] Setting up drop6
I0412 01:46:17.085790 13765 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:46:17.085794 13765 net.cpp:165] Memory required for data: 10172660404
I0412 01:46:17.085798 13765 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 01:46:17.085809 13765 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 01:46:17.085816 13765 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 01:46:17.085824 13765 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 01:46:17.085832 13765 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 01:46:17.085870 13765 net.cpp:150] Setting up fc6_drop6_0_split
I0412 01:46:17.085891 13765 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:46:17.085899 13765 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:46:17.085903 13765 net.cpp:165] Memory required for data: 10172693172
I0412 01:46:17.085908 13765 layer_factory.hpp:77] Creating layer cls_score
I0412 01:46:17.085917 13765 net.cpp:100] Creating Layer cls_score
I0412 01:46:17.085924 13765 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 01:46:17.085932 13765 net.cpp:408] cls_score -> cls_score
I0412 01:46:17.096981 13765 net.cpp:150] Setting up cls_score
I0412 01:46:17.097029 13765 net.cpp:157] Top shape: 1 201 (201)
I0412 01:46:17.097045 13765 net.cpp:165] Memory required for data: 10172693976
I0412 01:46:17.097064 13765 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 01:46:17.097088 13765 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 01:46:17.097139 13765 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 01:46:17.097180 13765 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 01:46:17.097223 13765 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 01:46:17.097293 13765 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 01:46:17.097337 13765 net.cpp:157] Top shape: 1 201 (201)
I0412 01:46:17.097373 13765 net.cpp:157] Top shape: 1 201 (201)
I0412 01:46:17.097401 13765 net.cpp:165] Memory required for data: 10172695584
I0412 01:46:17.097432 13765 layer_factory.hpp:77] Creating layer twin_pred
I0412 01:46:17.097470 13765 net.cpp:100] Creating Layer twin_pred
I0412 01:46:17.097503 13765 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 01:46:17.097538 13765 net.cpp:408] twin_pred -> twin_pred
I0412 01:46:17.129510 13765 net.cpp:150] Setting up twin_pred
I0412 01:46:17.129585 13765 net.cpp:157] Top shape: 1 402 (402)
I0412 01:46:17.129601 13765 net.cpp:165] Memory required for data: 10172697192
I0412 01:46:17.129623 13765 layer_factory.hpp:77] Creating layer loss_cls
I0412 01:46:17.129643 13765 net.cpp:100] Creating Layer loss_cls
I0412 01:46:17.129652 13765 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 01:46:17.129662 13765 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 01:46:17.129678 13765 net.cpp:408] loss_cls -> loss_cls
I0412 01:46:17.129704 13765 layer_factory.hpp:77] Creating layer loss_cls
I0412 01:46:17.129801 13765 net.cpp:150] Setting up loss_cls
I0412 01:46:17.129808 13765 net.cpp:157] Top shape: (1)
I0412 01:46:17.129813 13765 net.cpp:160]     with loss weight 1
I0412 01:46:17.129827 13765 net.cpp:165] Memory required for data: 10172697196
I0412 01:46:17.129832 13765 layer_factory.hpp:77] Creating layer loss_twin
I0412 01:46:17.129839 13765 net.cpp:100] Creating Layer loss_twin
I0412 01:46:17.129845 13765 net.cpp:434] loss_twin <- twin_pred
I0412 01:46:17.129853 13765 net.cpp:434] loss_twin <- twin_targets
I0412 01:46:17.129859 13765 net.cpp:434] loss_twin <- twin_inside_weights
I0412 01:46:17.129865 13765 net.cpp:434] loss_twin <- twin_outside_weights
I0412 01:46:17.129873 13765 net.cpp:408] loss_twin -> loss_twin
I0412 01:46:17.129959 13765 net.cpp:150] Setting up loss_twin
I0412 01:46:17.129968 13765 net.cpp:157] Top shape: (1)
I0412 01:46:17.129972 13765 net.cpp:160]     with loss weight 1
I0412 01:46:17.129981 13765 net.cpp:165] Memory required for data: 10172697200
I0412 01:46:17.129987 13765 layer_factory.hpp:77] Creating layer accuarcy
I0412 01:46:17.129997 13765 net.cpp:100] Creating Layer accuarcy
I0412 01:46:17.130003 13765 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 01:46:17.130009 13765 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 01:46:17.130017 13765 net.cpp:408] accuarcy -> accuarcy
I0412 01:46:17.130028 13765 net.cpp:150] Setting up accuarcy
I0412 01:46:17.130035 13765 net.cpp:157] Top shape: (1)
I0412 01:46:17.130041 13765 net.cpp:165] Memory required for data: 10172697204
I0412 01:46:17.130046 13765 net.cpp:228] accuarcy does not need backward computation.
I0412 01:46:17.130053 13765 net.cpp:226] loss_twin needs backward computation.
I0412 01:46:17.130059 13765 net.cpp:226] loss_cls needs backward computation.
I0412 01:46:17.130064 13765 net.cpp:226] twin_pred needs backward computation.
I0412 01:46:17.130069 13765 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 01:46:17.130076 13765 net.cpp:226] cls_score needs backward computation.
I0412 01:46:17.130080 13765 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 01:46:17.130086 13765 net.cpp:226] drop6 needs backward computation.
I0412 01:46:17.130091 13765 net.cpp:226] relu6 needs backward computation.
I0412 01:46:17.130098 13765 net.cpp:226] fc6 needs backward computation.
I0412 01:46:17.130105 13765 net.cpp:226] roi_pool5 needs backward computation.
I0412 01:46:17.130110 13765 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 01:46:17.130116 13765 net.cpp:226] roi-data needs backward computation.
I0412 01:46:17.130121 13765 net.cpp:226] proposal needs backward computation.
I0412 01:46:17.130128 13765 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 01:46:17.130132 13765 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 01:46:17.130139 13765 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 01:46:17.130144 13765 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 01:46:17.130152 13765 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 01:46:17.130159 13765 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 01:46:17.130167 13765 net.cpp:226] rpn-data needs backward computation.
I0412 01:46:17.130174 13765 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 01:46:17.130180 13765 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 01:46:17.130185 13765 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 01:46:17.130192 13765 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 01:46:17.130198 13765 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 01:46:17.130204 13765 net.cpp:226] rpn_cls_score needs backward computation.
I0412 01:46:17.130208 13765 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 01:46:17.130215 13765 net.cpp:226] rpn/output_pool needs backward computation.
I0412 01:46:17.130219 13765 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 01:46:17.130225 13765 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 01:46:17.130229 13765 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 01:46:17.130235 13765 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 01:46:17.130240 13765 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 01:46:17.130246 13765 net.cpp:226] relu5b needs backward computation.
I0412 01:46:17.130250 13765 net.cpp:226] conv5b needs backward computation.
I0412 01:46:17.130256 13765 net.cpp:226] relu5a needs backward computation.
I0412 01:46:17.130261 13765 net.cpp:226] conv5a needs backward computation.
I0412 01:46:17.130266 13765 net.cpp:226] pool4 needs backward computation.
I0412 01:46:17.130272 13765 net.cpp:226] relu4b needs backward computation.
I0412 01:46:17.130278 13765 net.cpp:226] conv4b needs backward computation.
I0412 01:46:17.130283 13765 net.cpp:226] relu4a needs backward computation.
I0412 01:46:17.130291 13765 net.cpp:226] conv4a needs backward computation.
I0412 01:46:17.130295 13765 net.cpp:226] pool3 needs backward computation.
I0412 01:46:17.130301 13765 net.cpp:226] relu3b needs backward computation.
I0412 01:46:17.130306 13765 net.cpp:226] conv3b needs backward computation.
I0412 01:46:17.130311 13765 net.cpp:226] relu3a needs backward computation.
I0412 01:46:17.130316 13765 net.cpp:226] conv3a needs backward computation.
I0412 01:46:17.130322 13765 net.cpp:228] pool2 does not need backward computation.
I0412 01:46:17.130327 13765 net.cpp:228] relu2a does not need backward computation.
I0412 01:46:17.130333 13765 net.cpp:228] conv2a does not need backward computation.
I0412 01:46:17.130338 13765 net.cpp:228] pool1 does not need backward computation.
I0412 01:46:17.130345 13765 net.cpp:228] relu1a does not need backward computation.
I0412 01:46:17.130349 13765 net.cpp:228] conv1a does not need backward computation.
I0412 01:46:17.130357 13765 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 01:46:17.130362 13765 net.cpp:228] data_data_0_split does not need backward computation.
I0412 01:46:17.130368 13765 net.cpp:228] data does not need backward computation.
I0412 01:46:17.130373 13765 net.cpp:270] This network produces output accuarcy
I0412 01:46:17.130379 13765 net.cpp:270] This network produces output loss_cls
I0412 01:46:17.130383 13765 net.cpp:270] This network produces output loss_twin
I0412 01:46:17.130390 13765 net.cpp:270] This network produces output rpn_accuarcy
I0412 01:46:17.130394 13765 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 01:46:17.130401 13765 net.cpp:270] This network produces output rpn_cls_loss
I0412 01:46:17.130405 13765 net.cpp:270] This network produces output rpn_loss_twin
I0412 01:46:17.130455 13765 net.cpp:283] Network initialization done.
I0412 01:46:17.130609 13765 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 01:46:17.320644 13765 net.cpp:761] Ignoring source layer pool5
I0412 01:46:17.345288 13765 net.cpp:761] Ignoring source layer fc7
I0412 01:46:17.345311 13765 net.cpp:761] Ignoring source layer relu7
I0412 01:46:17.345315 13765 net.cpp:761] Ignoring source layer drop7
I0412 01:46:17.345319 13765 net.cpp:761] Ignoring source layer fc8-200
I0412 01:46:17.345324 13765 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
99
(array([0]), array([97]))
(array([[3.1250000e-02, 3.8569803e+02]], dtype=float32), array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 0.]], dtype=float32))
(1, 101)
[[3.1250000e-02 3.8569803e+02]]
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 95, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 135, in forward
    print(np.concatenate(blob1, blob2))
TypeError: only integer scalar arrays can be converted to a scalar index
Terminating BlobFetcher
