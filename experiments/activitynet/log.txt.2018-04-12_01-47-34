Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 01:47:36.349762 15476 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 01:47:36.349797 15476 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 01:47:36.350328 15476 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 01:47:36.350574 15476 layer_factory.hpp:77] Creating layer data
I0412 01:47:36.363873 15476 net.cpp:100] Creating Layer data
I0412 01:47:36.363900 15476 net.cpp:408] data -> data
I0412 01:47:36.363914 15476 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 01:47:36.374112 15476 net.cpp:150] Setting up data
I0412 01:47:36.374135 15476 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:47:36.374163 15476 net.cpp:157] Top shape: 1 3 (3)
I0412 01:47:36.374178 15476 net.cpp:165] Memory required for data: 115605516
I0412 01:47:36.374197 15476 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 01:47:36.374223 15476 net.cpp:100] Creating Layer data_data_0_split
I0412 01:47:36.374239 15476 net.cpp:434] data_data_0_split <- data
I0412 01:47:36.374258 15476 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 01:47:36.374282 15476 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 01:47:36.374347 15476 net.cpp:150] Setting up data_data_0_split
I0412 01:47:36.374358 15476 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:47:36.374366 15476 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:47:36.374369 15476 net.cpp:165] Memory required for data: 346816524
I0412 01:47:36.374374 15476 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 01:47:36.374382 15476 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 01:47:36.374387 15476 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 01:47:36.374394 15476 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 01:47:36.374406 15476 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 01:47:36.374450 15476 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 01:47:36.374457 15476 net.cpp:157] Top shape: 1 3 (3)
I0412 01:47:36.374461 15476 net.cpp:157] Top shape: 1 3 (3)
I0412 01:47:36.374465 15476 net.cpp:165] Memory required for data: 346816548
I0412 01:47:36.374470 15476 layer_factory.hpp:77] Creating layer conv1a
I0412 01:47:36.374486 15476 net.cpp:100] Creating Layer conv1a
I0412 01:47:36.374491 15476 net.cpp:434] conv1a <- data_data_0_split_0
I0412 01:47:36.374505 15476 net.cpp:408] conv1a -> conv1a
I0412 01:47:36.397804 15476 net.cpp:150] Setting up conv1a
I0412 01:47:36.397872 15476 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 01:47:36.397891 15476 net.cpp:165] Memory required for data: 2813067300
I0412 01:47:36.397920 15476 layer_factory.hpp:77] Creating layer relu1a
I0412 01:47:36.397945 15476 net.cpp:100] Creating Layer relu1a
I0412 01:47:36.397961 15476 net.cpp:434] relu1a <- conv1a
I0412 01:47:36.397984 15476 net.cpp:395] relu1a -> conv1a (in-place)
I0412 01:47:36.398008 15476 net.cpp:150] Setting up relu1a
I0412 01:47:36.398025 15476 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 01:47:36.398039 15476 net.cpp:165] Memory required for data: 5279318052
I0412 01:47:36.398053 15476 layer_factory.hpp:77] Creating layer pool1
I0412 01:47:36.398078 15476 net.cpp:100] Creating Layer pool1
I0412 01:47:36.398092 15476 net.cpp:434] pool1 <- conv1a
I0412 01:47:36.398113 15476 net.cpp:408] pool1 -> pool1
I0412 01:47:36.398378 15476 net.cpp:150] Setting up pool1
I0412 01:47:36.398406 15476 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 01:47:36.398421 15476 net.cpp:165] Memory required for data: 5895880740
I0412 01:47:36.398433 15476 layer_factory.hpp:77] Creating layer conv2a
I0412 01:47:36.398458 15476 net.cpp:100] Creating Layer conv2a
I0412 01:47:36.398473 15476 net.cpp:434] conv2a <- pool1
I0412 01:47:36.398490 15476 net.cpp:408] conv2a -> conv2a
I0412 01:47:36.409308 15476 net.cpp:150] Setting up conv2a
I0412 01:47:36.409341 15476 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 01:47:36.409346 15476 net.cpp:165] Memory required for data: 7129006116
I0412 01:47:36.409368 15476 layer_factory.hpp:77] Creating layer relu2a
I0412 01:47:36.409381 15476 net.cpp:100] Creating Layer relu2a
I0412 01:47:36.409387 15476 net.cpp:434] relu2a <- conv2a
I0412 01:47:36.409399 15476 net.cpp:395] relu2a -> conv2a (in-place)
I0412 01:47:36.409412 15476 net.cpp:150] Setting up relu2a
I0412 01:47:36.409418 15476 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 01:47:36.409421 15476 net.cpp:165] Memory required for data: 8362131492
I0412 01:47:36.409425 15476 layer_factory.hpp:77] Creating layer pool2
I0412 01:47:36.409438 15476 net.cpp:100] Creating Layer pool2
I0412 01:47:36.409441 15476 net.cpp:434] pool2 <- conv2a
I0412 01:47:36.409448 15476 net.cpp:408] pool2 -> pool2
I0412 01:47:36.409562 15476 net.cpp:150] Setting up pool2
I0412 01:47:36.409571 15476 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 01:47:36.409575 15476 net.cpp:165] Memory required for data: 8516272164
I0412 01:47:36.409579 15476 layer_factory.hpp:77] Creating layer conv3a
I0412 01:47:36.409595 15476 net.cpp:100] Creating Layer conv3a
I0412 01:47:36.409600 15476 net.cpp:434] conv3a <- pool2
I0412 01:47:36.409607 15476 net.cpp:408] conv3a -> conv3a
I0412 01:47:36.419009 15476 net.cpp:150] Setting up conv3a
I0412 01:47:36.419039 15476 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:47:36.419044 15476 net.cpp:165] Memory required for data: 8824553508
I0412 01:47:36.419059 15476 layer_factory.hpp:77] Creating layer relu3a
I0412 01:47:36.419072 15476 net.cpp:100] Creating Layer relu3a
I0412 01:47:36.419078 15476 net.cpp:434] relu3a <- conv3a
I0412 01:47:36.419087 15476 net.cpp:395] relu3a -> conv3a (in-place)
I0412 01:47:36.419098 15476 net.cpp:150] Setting up relu3a
I0412 01:47:36.419106 15476 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:47:36.419111 15476 net.cpp:165] Memory required for data: 9132834852
I0412 01:47:36.419114 15476 layer_factory.hpp:77] Creating layer conv3b
I0412 01:47:36.419128 15476 net.cpp:100] Creating Layer conv3b
I0412 01:47:36.419134 15476 net.cpp:434] conv3b <- conv3a
I0412 01:47:36.419142 15476 net.cpp:408] conv3b -> conv3b
I0412 01:47:36.444037 15476 net.cpp:150] Setting up conv3b
I0412 01:47:36.444069 15476 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:47:36.444074 15476 net.cpp:165] Memory required for data: 9441116196
I0412 01:47:36.444088 15476 layer_factory.hpp:77] Creating layer relu3b
I0412 01:47:36.444104 15476 net.cpp:100] Creating Layer relu3b
I0412 01:47:36.444111 15476 net.cpp:434] relu3b <- conv3b
I0412 01:47:36.444123 15476 net.cpp:395] relu3b -> conv3b (in-place)
I0412 01:47:36.444138 15476 net.cpp:150] Setting up relu3b
I0412 01:47:36.444141 15476 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:47:36.444144 15476 net.cpp:165] Memory required for data: 9749397540
I0412 01:47:36.444147 15476 layer_factory.hpp:77] Creating layer pool3
I0412 01:47:36.444156 15476 net.cpp:100] Creating Layer pool3
I0412 01:47:36.444159 15476 net.cpp:434] pool3 <- conv3b
I0412 01:47:36.444164 15476 net.cpp:408] pool3 -> pool3
I0412 01:47:36.444264 15476 net.cpp:150] Setting up pool3
I0412 01:47:36.444277 15476 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 01:47:36.444280 15476 net.cpp:165] Memory required for data: 9787932708
I0412 01:47:36.444285 15476 layer_factory.hpp:77] Creating layer conv4a
I0412 01:47:36.444299 15476 net.cpp:100] Creating Layer conv4a
I0412 01:47:36.444305 15476 net.cpp:434] conv4a <- pool3
I0412 01:47:36.444316 15476 net.cpp:408] conv4a -> conv4a
I0412 01:47:36.528040 15476 net.cpp:150] Setting up conv4a
I0412 01:47:36.528115 15476 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:47:36.528136 15476 net.cpp:165] Memory required for data: 9865003044
I0412 01:47:36.528164 15476 layer_factory.hpp:77] Creating layer relu4a
I0412 01:47:36.528205 15476 net.cpp:100] Creating Layer relu4a
I0412 01:47:36.528221 15476 net.cpp:434] relu4a <- conv4a
I0412 01:47:36.528239 15476 net.cpp:395] relu4a -> conv4a (in-place)
I0412 01:47:36.528267 15476 net.cpp:150] Setting up relu4a
I0412 01:47:36.528285 15476 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:47:36.528301 15476 net.cpp:165] Memory required for data: 9942073380
I0412 01:47:36.528316 15476 layer_factory.hpp:77] Creating layer conv4b
I0412 01:47:36.528376 15476 net.cpp:100] Creating Layer conv4b
I0412 01:47:36.528393 15476 net.cpp:434] conv4b <- conv4a
I0412 01:47:36.528795 15476 net.cpp:408] conv4b -> conv4b
I0412 01:47:36.646713 15476 net.cpp:150] Setting up conv4b
I0412 01:47:36.646788 15476 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:47:36.646806 15476 net.cpp:165] Memory required for data: 10019143716
I0412 01:47:36.646826 15476 layer_factory.hpp:77] Creating layer relu4b
I0412 01:47:36.646849 15476 net.cpp:100] Creating Layer relu4b
I0412 01:47:36.646867 15476 net.cpp:434] relu4b <- conv4b
I0412 01:47:36.646884 15476 net.cpp:395] relu4b -> conv4b (in-place)
I0412 01:47:36.646905 15476 net.cpp:150] Setting up relu4b
I0412 01:47:36.646921 15476 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:47:36.646935 15476 net.cpp:165] Memory required for data: 10096214052
I0412 01:47:36.646948 15476 layer_factory.hpp:77] Creating layer pool4
I0412 01:47:36.646968 15476 net.cpp:100] Creating Layer pool4
I0412 01:47:36.646982 15476 net.cpp:434] pool4 <- conv4b
I0412 01:47:36.646999 15476 net.cpp:408] pool4 -> pool4
I0412 01:47:36.647075 15476 net.cpp:150] Setting up pool4
I0412 01:47:36.647097 15476 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:47:36.647110 15476 net.cpp:165] Memory required for data: 10105847844
I0412 01:47:36.647125 15476 layer_factory.hpp:77] Creating layer conv5a
I0412 01:47:36.647146 15476 net.cpp:100] Creating Layer conv5a
I0412 01:47:36.647161 15476 net.cpp:434] conv5a <- pool4
I0412 01:47:36.647179 15476 net.cpp:408] conv5a -> conv5a
I0412 01:47:36.780089 15476 net.cpp:150] Setting up conv5a
I0412 01:47:36.780128 15476 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:47:36.780135 15476 net.cpp:165] Memory required for data: 10115481636
I0412 01:47:36.780149 15476 layer_factory.hpp:77] Creating layer relu5a
I0412 01:47:36.780165 15476 net.cpp:100] Creating Layer relu5a
I0412 01:47:36.780176 15476 net.cpp:434] relu5a <- conv5a
I0412 01:47:36.780187 15476 net.cpp:395] relu5a -> conv5a (in-place)
I0412 01:47:36.780205 15476 net.cpp:150] Setting up relu5a
I0412 01:47:36.780215 15476 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:47:36.780220 15476 net.cpp:165] Memory required for data: 10125115428
I0412 01:47:36.780225 15476 layer_factory.hpp:77] Creating layer conv5b
I0412 01:47:36.780241 15476 net.cpp:100] Creating Layer conv5b
I0412 01:47:36.780249 15476 net.cpp:434] conv5b <- conv5a
I0412 01:47:36.780261 15476 net.cpp:408] conv5b -> conv5b
I0412 01:47:36.875946 15476 net.cpp:150] Setting up conv5b
I0412 01:47:36.876019 15476 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:47:36.876034 15476 net.cpp:165] Memory required for data: 10134749220
I0412 01:47:36.876055 15476 layer_factory.hpp:77] Creating layer relu5b
I0412 01:47:36.876075 15476 net.cpp:100] Creating Layer relu5b
I0412 01:47:36.876091 15476 net.cpp:434] relu5b <- conv5b
I0412 01:47:36.876111 15476 net.cpp:395] relu5b -> conv5b (in-place)
I0412 01:47:36.876132 15476 net.cpp:150] Setting up relu5b
I0412 01:47:36.876147 15476 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:47:36.876159 15476 net.cpp:165] Memory required for data: 10144383012
I0412 01:47:36.876173 15476 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 01:47:36.876189 15476 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 01:47:36.876202 15476 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 01:47:36.876220 15476 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 01:47:36.876240 15476 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 01:47:36.876310 15476 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 01:47:36.876359 15476 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:47:36.876375 15476 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:47:36.876389 15476 net.cpp:165] Memory required for data: 10163650596
I0412 01:47:36.876402 15476 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 01:47:36.876428 15476 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 01:47:36.876442 15476 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 01:47:36.876461 15476 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 01:47:36.995435 15476 net.cpp:150] Setting up rpn_conv/3x3
I0412 01:47:36.995461 15476 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 01:47:36.995466 15476 net.cpp:165] Memory required for data: 10166796324
I0412 01:47:36.995486 15476 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 01:47:36.995498 15476 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 01:47:36.995507 15476 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 01:47:36.995534 15476 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 01:47:36.995546 15476 net.cpp:150] Setting up rpn_relu/3x3
I0412 01:47:36.995556 15476 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 01:47:36.995559 15476 net.cpp:165] Memory required for data: 10169942052
I0412 01:47:36.995563 15476 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 01:47:36.995581 15476 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 01:47:36.995589 15476 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 01:47:36.995597 15476 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 01:47:37.059834 15476 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 01:47:37.059864 15476 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 01:47:37.059868 15476 net.cpp:165] Memory required for data: 10170728484
I0412 01:47:37.059878 15476 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 01:47:37.059890 15476 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 01:47:37.059896 15476 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 01:47:37.059906 15476 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 01:47:37.059916 15476 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 01:47:37.059921 15476 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 01:47:37.059924 15476 net.cpp:165] Memory required for data: 10171514916
I0412 01:47:37.059927 15476 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 01:47:37.059936 15476 net.cpp:100] Creating Layer rpn/output_pool
I0412 01:47:37.059939 15476 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 01:47:37.059947 15476 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 01:47:37.060014 15476 net.cpp:150] Setting up rpn/output_pool
I0412 01:47:37.060039 15476 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:47:37.060056 15476 net.cpp:165] Memory required for data: 10171711524
I0412 01:47:37.060071 15476 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 01:47:37.060089 15476 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 01:47:37.060111 15476 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 01:47:37.060134 15476 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 01:47:37.060147 15476 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 01:47:37.060204 15476 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 01:47:37.060211 15476 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:47:37.060216 15476 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:47:37.060220 15476 net.cpp:165] Memory required for data: 10172104740
I0412 01:47:37.060225 15476 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 01:47:37.060240 15476 net.cpp:100] Creating Layer rpn_cls_score
I0412 01:47:37.060256 15476 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 01:47:37.060278 15476 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 01:47:37.060904 15476 net.cpp:150] Setting up rpn_cls_score
I0412 01:47:37.060914 15476 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:47:37.060919 15476 net.cpp:165] Memory required for data: 10172133156
I0412 01:47:37.060926 15476 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 01:47:37.060935 15476 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 01:47:37.060940 15476 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 01:47:37.060947 15476 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 01:47:37.060956 15476 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 01:47:37.061039 15476 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 01:47:37.061049 15476 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:47:37.061054 15476 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:47:37.061058 15476 net.cpp:165] Memory required for data: 10172189988
I0412 01:47:37.061062 15476 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 01:47:37.061082 15476 net.cpp:100] Creating Layer rpn_twin_pred
I0412 01:47:37.061100 15476 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 01:47:37.061121 15476 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 01:47:37.061673 15476 net.cpp:150] Setting up rpn_twin_pred
I0412 01:47:37.061682 15476 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:47:37.061686 15476 net.cpp:165] Memory required for data: 10172218404
I0412 01:47:37.061694 15476 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:47:37.061703 15476 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:47:37.061708 15476 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 01:47:37.061715 15476 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 01:47:37.061723 15476 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 01:47:37.061791 15476 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:47:37.061801 15476 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:47:37.061806 15476 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:47:37.061810 15476 net.cpp:165] Memory required for data: 10172275236
I0412 01:47:37.061815 15476 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 01:47:37.061827 15476 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 01:47:37.061832 15476 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 01:47:37.061841 15476 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 01:47:37.061893 15476 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 01:47:37.061903 15476 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:47:37.061906 15476 net.cpp:165] Memory required for data: 10172303652
I0412 01:47:37.061911 15476 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:47:37.061918 15476 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:47:37.061923 15476 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 01:47:37.061933 15476 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 01:47:37.061949 15476 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 01:47:37.061972 15476 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 01:47:37.062044 15476 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:47:37.062053 15476 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:47:37.062059 15476 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:47:37.062064 15476 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:47:37.062068 15476 net.cpp:165] Memory required for data: 10172388900
I0412 01:47:37.062072 15476 layer_factory.hpp:77] Creating layer rpn-data
I0412 01:47:37.062439 15476 net.cpp:100] Creating Layer rpn-data
I0412 01:47:37.062450 15476 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 01:47:37.062458 15476 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 01:47:37.062463 15476 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 01:47:37.062472 15476 net.cpp:408] rpn-data -> rpn_labels
I0412 01:47:37.062482 15476 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 01:47:37.062492 15476 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 01:47:37.062525 15476 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 01:47:37.064824 15476 net.cpp:150] Setting up rpn-data
I0412 01:47:37.064841 15476 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:47:37.064846 15476 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:47:37.064852 15476 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:47:37.064857 15476 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:47:37.064862 15476 net.cpp:165] Memory required for data: 10172488356
I0412 01:47:37.064867 15476 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 01:47:37.064874 15476 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 01:47:37.064879 15476 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 01:47:37.064887 15476 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 01:47:37.064896 15476 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 01:47:37.064963 15476 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 01:47:37.064975 15476 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:47:37.064980 15476 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:47:37.064983 15476 net.cpp:165] Memory required for data: 10172516772
I0412 01:47:37.064987 15476 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 01:47:37.064997 15476 net.cpp:100] Creating Layer rpn_loss_cls
I0412 01:47:37.065002 15476 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 01:47:37.065008 15476 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 01:47:37.065016 15476 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 01:47:37.065026 15476 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 01:47:37.065160 15476 net.cpp:150] Setting up rpn_loss_cls
I0412 01:47:37.065170 15476 net.cpp:157] Top shape: (1)
I0412 01:47:37.065172 15476 net.cpp:160]     with loss weight 1
I0412 01:47:37.065186 15476 net.cpp:165] Memory required for data: 10172516776
I0412 01:47:37.065189 15476 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 01:47:37.065199 15476 net.cpp:100] Creating Layer rpn_loss_twin
I0412 01:47:37.065204 15476 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 01:47:37.065210 15476 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 01:47:37.065215 15476 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 01:47:37.065220 15476 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 01:47:37.065227 15476 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 01:47:37.065341 15476 net.cpp:150] Setting up rpn_loss_twin
I0412 01:47:37.065351 15476 net.cpp:157] Top shape: (1)
I0412 01:47:37.065354 15476 net.cpp:160]     with loss weight 1
I0412 01:47:37.065361 15476 net.cpp:165] Memory required for data: 10172516780
I0412 01:47:37.065366 15476 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 01:47:37.065373 15476 net.cpp:100] Creating Layer rpn_accuarcy
I0412 01:47:37.065378 15476 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 01:47:37.065383 15476 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 01:47:37.065392 15476 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 01:47:37.065399 15476 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 01:47:37.065456 15476 net.cpp:150] Setting up rpn_accuarcy
I0412 01:47:37.065476 15476 net.cpp:157] Top shape: (1)
I0412 01:47:37.065495 15476 net.cpp:157] Top shape: 2 (2)
I0412 01:47:37.065510 15476 net.cpp:165] Memory required for data: 10172516792
I0412 01:47:37.065526 15476 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 01:47:37.065541 15476 net.cpp:100] Creating Layer rpn_cls_prob
I0412 01:47:37.065557 15476 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 01:47:37.065579 15476 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 01:47:37.065665 15476 net.cpp:150] Setting up rpn_cls_prob
I0412 01:47:37.065675 15476 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:47:37.065678 15476 net.cpp:165] Memory required for data: 10172545208
I0412 01:47:37.065683 15476 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 01:47:37.065690 15476 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 01:47:37.065696 15476 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 01:47:37.065704 15476 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 01:47:37.065743 15476 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 01:47:37.065753 15476 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:47:37.065757 15476 net.cpp:165] Memory required for data: 10172573624
I0412 01:47:37.065762 15476 layer_factory.hpp:77] Creating layer proposal
I0412 01:47:37.066340 15476 net.cpp:100] Creating Layer proposal
I0412 01:47:37.066352 15476 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 01:47:37.066359 15476 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 01:47:37.066367 15476 net.cpp:408] proposal -> rpn_rois
I0412 01:47:37.070227 15476 net.cpp:150] Setting up proposal
I0412 01:47:37.070253 15476 net.cpp:157] Top shape: 1 3 (3)
I0412 01:47:37.070257 15476 net.cpp:165] Memory required for data: 10172573636
I0412 01:47:37.070263 15476 layer_factory.hpp:77] Creating layer roi-data
I0412 01:47:37.070435 15476 net.cpp:100] Creating Layer roi-data
I0412 01:47:37.070446 15476 net.cpp:434] roi-data <- rpn_rois
I0412 01:47:37.070452 15476 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 01:47:37.070461 15476 net.cpp:408] roi-data -> rois
I0412 01:47:37.070472 15476 net.cpp:408] roi-data -> labels
I0412 01:47:37.070479 15476 net.cpp:408] roi-data -> twin_targets
I0412 01:47:37.070490 15476 net.cpp:408] roi-data -> twin_inside_weights
I0412 01:47:37.070498 15476 net.cpp:408] roi-data -> twin_outside_weights
I0412 01:47:37.070859 15476 net.cpp:150] Setting up roi-data
I0412 01:47:37.070873 15476 net.cpp:157] Top shape: 1 3 (3)
I0412 01:47:37.070878 15476 net.cpp:157] Top shape: 1 1 (1)
I0412 01:47:37.070883 15476 net.cpp:157] Top shape: 1 402 (402)
I0412 01:47:37.070888 15476 net.cpp:157] Top shape: 1 402 (402)
I0412 01:47:37.070893 15476 net.cpp:157] Top shape: 1 402 (402)
I0412 01:47:37.070896 15476 net.cpp:165] Memory required for data: 10172578476
I0412 01:47:37.070901 15476 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 01:47:37.070909 15476 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 01:47:37.070914 15476 net.cpp:434] labels_roi-data_1_split <- labels
I0412 01:47:37.070921 15476 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 01:47:37.070931 15476 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 01:47:37.070992 15476 net.cpp:150] Setting up labels_roi-data_1_split
I0412 01:47:37.071002 15476 net.cpp:157] Top shape: 1 1 (1)
I0412 01:47:37.071007 15476 net.cpp:157] Top shape: 1 1 (1)
I0412 01:47:37.071012 15476 net.cpp:165] Memory required for data: 10172578484
I0412 01:47:37.071017 15476 layer_factory.hpp:77] Creating layer roi_pool5
I0412 01:47:37.071024 15476 net.cpp:100] Creating Layer roi_pool5
I0412 01:47:37.071030 15476 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 01:47:37.071036 15476 net.cpp:434] roi_pool5 <- rois
I0412 01:47:37.071043 15476 net.cpp:408] roi_pool5 -> pool5
I0412 01:47:37.071054 15476 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 01:47:37.071065 15476 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 01:47:37.071123 15476 net.cpp:150] Setting up roi_pool5
I0412 01:47:37.071132 15476 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 01:47:37.071136 15476 net.cpp:165] Memory required for data: 10172611252
I0412 01:47:37.071141 15476 layer_factory.hpp:77] Creating layer fc6
I0412 01:47:37.071151 15476 net.cpp:100] Creating Layer fc6
I0412 01:47:37.071156 15476 net.cpp:434] fc6 <- pool5
I0412 01:47:37.071162 15476 net.cpp:408] fc6 -> fc6
I0412 01:47:37.424384 15476 net.cpp:150] Setting up fc6
I0412 01:47:37.424415 15476 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:47:37.424418 15476 net.cpp:165] Memory required for data: 10172627636
I0412 01:47:37.424428 15476 layer_factory.hpp:77] Creating layer relu6
I0412 01:47:37.424437 15476 net.cpp:100] Creating Layer relu6
I0412 01:47:37.424443 15476 net.cpp:434] relu6 <- fc6
I0412 01:47:37.424450 15476 net.cpp:395] relu6 -> fc6 (in-place)
I0412 01:47:37.424458 15476 net.cpp:150] Setting up relu6
I0412 01:47:37.424463 15476 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:47:37.424465 15476 net.cpp:165] Memory required for data: 10172644020
I0412 01:47:37.424468 15476 layer_factory.hpp:77] Creating layer drop6
I0412 01:47:37.424474 15476 net.cpp:100] Creating Layer drop6
I0412 01:47:37.424476 15476 net.cpp:434] drop6 <- fc6
I0412 01:47:37.424480 15476 net.cpp:395] drop6 -> fc6 (in-place)
I0412 01:47:37.424506 15476 net.cpp:150] Setting up drop6
I0412 01:47:37.424511 15476 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:47:37.424515 15476 net.cpp:165] Memory required for data: 10172660404
I0412 01:47:37.424516 15476 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 01:47:37.424521 15476 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 01:47:37.424525 15476 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 01:47:37.424530 15476 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 01:47:37.424535 15476 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 01:47:37.424573 15476 net.cpp:150] Setting up fc6_drop6_0_split
I0412 01:47:37.424578 15476 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:47:37.424582 15476 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:47:37.424583 15476 net.cpp:165] Memory required for data: 10172693172
I0412 01:47:37.424587 15476 layer_factory.hpp:77] Creating layer cls_score
I0412 01:47:37.424594 15476 net.cpp:100] Creating Layer cls_score
I0412 01:47:37.424597 15476 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 01:47:37.424602 15476 net.cpp:408] cls_score -> cls_score
I0412 01:47:37.435600 15476 net.cpp:150] Setting up cls_score
I0412 01:47:37.435654 15476 net.cpp:157] Top shape: 1 201 (201)
I0412 01:47:37.435669 15476 net.cpp:165] Memory required for data: 10172693976
I0412 01:47:37.435691 15476 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 01:47:37.435703 15476 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 01:47:37.435709 15476 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 01:47:37.435719 15476 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 01:47:37.435729 15476 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 01:47:37.435788 15476 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 01:47:37.435811 15476 net.cpp:157] Top shape: 1 201 (201)
I0412 01:47:37.435825 15476 net.cpp:157] Top shape: 1 201 (201)
I0412 01:47:37.435837 15476 net.cpp:165] Memory required for data: 10172695584
I0412 01:47:37.435844 15476 layer_factory.hpp:77] Creating layer twin_pred
I0412 01:47:37.435856 15476 net.cpp:100] Creating Layer twin_pred
I0412 01:47:37.435863 15476 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 01:47:37.435871 15476 net.cpp:408] twin_pred -> twin_pred
I0412 01:47:37.457968 15476 net.cpp:150] Setting up twin_pred
I0412 01:47:37.458003 15476 net.cpp:157] Top shape: 1 402 (402)
I0412 01:47:37.458009 15476 net.cpp:165] Memory required for data: 10172697192
I0412 01:47:37.458130 15476 layer_factory.hpp:77] Creating layer loss_cls
I0412 01:47:37.458173 15476 net.cpp:100] Creating Layer loss_cls
I0412 01:47:37.458184 15476 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 01:47:37.458191 15476 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 01:47:37.458199 15476 net.cpp:408] loss_cls -> loss_cls
I0412 01:47:37.458211 15476 layer_factory.hpp:77] Creating layer loss_cls
I0412 01:47:37.458372 15476 net.cpp:150] Setting up loss_cls
I0412 01:47:37.458397 15476 net.cpp:157] Top shape: (1)
I0412 01:47:37.458412 15476 net.cpp:160]     with loss weight 1
I0412 01:47:37.458434 15476 net.cpp:165] Memory required for data: 10172697196
I0412 01:47:37.458447 15476 layer_factory.hpp:77] Creating layer loss_twin
I0412 01:47:37.458464 15476 net.cpp:100] Creating Layer loss_twin
I0412 01:47:37.458488 15476 net.cpp:434] loss_twin <- twin_pred
I0412 01:47:37.458504 15476 net.cpp:434] loss_twin <- twin_targets
I0412 01:47:37.458519 15476 net.cpp:434] loss_twin <- twin_inside_weights
I0412 01:47:37.458534 15476 net.cpp:434] loss_twin <- twin_outside_weights
I0412 01:47:37.458550 15476 net.cpp:408] loss_twin -> loss_twin
I0412 01:47:37.458704 15476 net.cpp:150] Setting up loss_twin
I0412 01:47:37.458727 15476 net.cpp:157] Top shape: (1)
I0412 01:47:37.458740 15476 net.cpp:160]     with loss weight 1
I0412 01:47:37.458751 15476 net.cpp:165] Memory required for data: 10172697200
I0412 01:47:37.458755 15476 layer_factory.hpp:77] Creating layer accuarcy
I0412 01:47:37.458765 15476 net.cpp:100] Creating Layer accuarcy
I0412 01:47:37.458770 15476 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 01:47:37.458775 15476 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 01:47:37.458781 15476 net.cpp:408] accuarcy -> accuarcy
I0412 01:47:37.458791 15476 net.cpp:150] Setting up accuarcy
I0412 01:47:37.458796 15476 net.cpp:157] Top shape: (1)
I0412 01:47:37.458801 15476 net.cpp:165] Memory required for data: 10172697204
I0412 01:47:37.458804 15476 net.cpp:228] accuarcy does not need backward computation.
I0412 01:47:37.458809 15476 net.cpp:226] loss_twin needs backward computation.
I0412 01:47:37.458813 15476 net.cpp:226] loss_cls needs backward computation.
I0412 01:47:37.458818 15476 net.cpp:226] twin_pred needs backward computation.
I0412 01:47:37.458823 15476 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 01:47:37.458828 15476 net.cpp:226] cls_score needs backward computation.
I0412 01:47:37.458832 15476 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 01:47:37.458837 15476 net.cpp:226] drop6 needs backward computation.
I0412 01:47:37.458842 15476 net.cpp:226] relu6 needs backward computation.
I0412 01:47:37.458845 15476 net.cpp:226] fc6 needs backward computation.
I0412 01:47:37.458849 15476 net.cpp:226] roi_pool5 needs backward computation.
I0412 01:47:37.458854 15476 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 01:47:37.458859 15476 net.cpp:226] roi-data needs backward computation.
I0412 01:47:37.458868 15476 net.cpp:226] proposal needs backward computation.
I0412 01:47:37.458871 15476 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 01:47:37.458876 15476 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 01:47:37.458881 15476 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 01:47:37.458886 15476 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 01:47:37.458891 15476 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 01:47:37.458897 15476 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 01:47:37.458902 15476 net.cpp:226] rpn-data needs backward computation.
I0412 01:47:37.458909 15476 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 01:47:37.458914 15476 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 01:47:37.458919 15476 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 01:47:37.458923 15476 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 01:47:37.458930 15476 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 01:47:37.458933 15476 net.cpp:226] rpn_cls_score needs backward computation.
I0412 01:47:37.458938 15476 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 01:47:37.458943 15476 net.cpp:226] rpn/output_pool needs backward computation.
I0412 01:47:37.458948 15476 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 01:47:37.458952 15476 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 01:47:37.458957 15476 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 01:47:37.458961 15476 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 01:47:37.458966 15476 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 01:47:37.458971 15476 net.cpp:226] relu5b needs backward computation.
I0412 01:47:37.458976 15476 net.cpp:226] conv5b needs backward computation.
I0412 01:47:37.458979 15476 net.cpp:226] relu5a needs backward computation.
I0412 01:47:37.458983 15476 net.cpp:226] conv5a needs backward computation.
I0412 01:47:37.458989 15476 net.cpp:226] pool4 needs backward computation.
I0412 01:47:37.459007 15476 net.cpp:226] relu4b needs backward computation.
I0412 01:47:37.459012 15476 net.cpp:226] conv4b needs backward computation.
I0412 01:47:37.459017 15476 net.cpp:226] relu4a needs backward computation.
I0412 01:47:37.459022 15476 net.cpp:226] conv4a needs backward computation.
I0412 01:47:37.459026 15476 net.cpp:226] pool3 needs backward computation.
I0412 01:47:37.459030 15476 net.cpp:226] relu3b needs backward computation.
I0412 01:47:37.459034 15476 net.cpp:226] conv3b needs backward computation.
I0412 01:47:37.459038 15476 net.cpp:226] relu3a needs backward computation.
I0412 01:47:37.459043 15476 net.cpp:226] conv3a needs backward computation.
I0412 01:47:37.459048 15476 net.cpp:228] pool2 does not need backward computation.
I0412 01:47:37.459053 15476 net.cpp:228] relu2a does not need backward computation.
I0412 01:47:37.459056 15476 net.cpp:228] conv2a does not need backward computation.
I0412 01:47:37.459061 15476 net.cpp:228] pool1 does not need backward computation.
I0412 01:47:37.459066 15476 net.cpp:228] relu1a does not need backward computation.
I0412 01:47:37.459070 15476 net.cpp:228] conv1a does not need backward computation.
I0412 01:47:37.459075 15476 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 01:47:37.459081 15476 net.cpp:228] data_data_0_split does not need backward computation.
I0412 01:47:37.459086 15476 net.cpp:228] data does not need backward computation.
I0412 01:47:37.459090 15476 net.cpp:270] This network produces output accuarcy
I0412 01:47:37.459095 15476 net.cpp:270] This network produces output loss_cls
I0412 01:47:37.459100 15476 net.cpp:270] This network produces output loss_twin
I0412 01:47:37.459103 15476 net.cpp:270] This network produces output rpn_accuarcy
I0412 01:47:37.459107 15476 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 01:47:37.459112 15476 net.cpp:270] This network produces output rpn_cls_loss
I0412 01:47:37.459116 15476 net.cpp:270] This network produces output rpn_loss_twin
I0412 01:47:37.459169 15476 net.cpp:283] Network initialization done.
I0412 01:47:37.459336 15476 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 01:47:37.648918 15476 net.cpp:761] Ignoring source layer pool5
I0412 01:47:37.674454 15476 net.cpp:761] Ignoring source layer fc7
I0412 01:47:37.674484 15476 net.cpp:761] Ignoring source layer relu7
I0412 01:47:37.674489 15476 net.cpp:761] Ignoring source layer drop7
I0412 01:47:37.674491 15476 net.cpp:761] Ignoring source layer fc8-200
I0412 01:47:37.674495 15476 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
99
(array([0]), array([97]))
(array([[3.1250000e-02, 3.8569803e+02]], dtype=float32), array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 0.]], dtype=float32))
(1, 101)
[[3.1250000e-02 3.8569803e+02]]
[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0.]]
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 95, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 136, in forward
    print(np.concatenate(blob1, blob2))
TypeError: only integer scalar arrays can be converted to a scalar index
Terminating BlobFetcher
