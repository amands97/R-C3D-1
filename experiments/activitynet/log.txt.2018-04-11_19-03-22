Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0411 19:03:23.997973 28481 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0411 19:03:23.998016 28481 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0411 19:03:23.998957 28481 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0411 19:03:23.999274 28481 layer_factory.hpp:77] Creating layer data
I0411 19:03:24.017155 28481 net.cpp:100] Creating Layer data
I0411 19:03:24.017190 28481 net.cpp:408] data -> data
I0411 19:03:24.017210 28481 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0411 19:03:24.031178 28481 net.cpp:150] Setting up data
I0411 19:03:24.031206 28481 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0411 19:03:24.031214 28481 net.cpp:157] Top shape: 1 3 (3)
I0411 19:03:24.031219 28481 net.cpp:165] Memory required for data: 115605516
I0411 19:03:24.031226 28481 layer_factory.hpp:77] Creating layer data_data_0_split
I0411 19:03:24.031241 28481 net.cpp:100] Creating Layer data_data_0_split
I0411 19:03:24.031249 28481 net.cpp:434] data_data_0_split <- data
I0411 19:03:24.031260 28481 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0411 19:03:24.031275 28481 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0411 19:03:24.031347 28481 net.cpp:150] Setting up data_data_0_split
I0411 19:03:24.031358 28481 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0411 19:03:24.031363 28481 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0411 19:03:24.031368 28481 net.cpp:165] Memory required for data: 346816524
I0411 19:03:24.031371 28481 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0411 19:03:24.031381 28481 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0411 19:03:24.031388 28481 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0411 19:03:24.031394 28481 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0411 19:03:24.031404 28481 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0411 19:03:24.031455 28481 net.cpp:150] Setting up gt_boxes_data_1_split
I0411 19:03:24.031464 28481 net.cpp:157] Top shape: 1 3 (3)
I0411 19:03:24.031469 28481 net.cpp:157] Top shape: 1 3 (3)
I0411 19:03:24.031473 28481 net.cpp:165] Memory required for data: 346816548
I0411 19:03:24.031478 28481 layer_factory.hpp:77] Creating layer conv1a
I0411 19:03:24.031496 28481 net.cpp:100] Creating Layer conv1a
I0411 19:03:24.031502 28481 net.cpp:434] conv1a <- data_data_0_split_0
I0411 19:03:24.031509 28481 net.cpp:408] conv1a -> conv1a
I0411 19:03:24.052364 28481 net.cpp:150] Setting up conv1a
I0411 19:03:24.052400 28481 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0411 19:03:24.052403 28481 net.cpp:165] Memory required for data: 2813067300
I0411 19:03:24.052423 28481 layer_factory.hpp:77] Creating layer relu1a
I0411 19:03:24.052436 28481 net.cpp:100] Creating Layer relu1a
I0411 19:03:24.052443 28481 net.cpp:434] relu1a <- conv1a
I0411 19:03:24.052450 28481 net.cpp:395] relu1a -> conv1a (in-place)
I0411 19:03:24.052461 28481 net.cpp:150] Setting up relu1a
I0411 19:03:24.052467 28481 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0411 19:03:24.052470 28481 net.cpp:165] Memory required for data: 5279318052
I0411 19:03:24.052475 28481 layer_factory.hpp:77] Creating layer pool1
I0411 19:03:24.052484 28481 net.cpp:100] Creating Layer pool1
I0411 19:03:24.052490 28481 net.cpp:434] pool1 <- conv1a
I0411 19:03:24.052496 28481 net.cpp:408] pool1 -> pool1
I0411 19:03:24.052601 28481 net.cpp:150] Setting up pool1
I0411 19:03:24.052608 28481 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0411 19:03:24.052613 28481 net.cpp:165] Memory required for data: 5895880740
I0411 19:03:24.052618 28481 layer_factory.hpp:77] Creating layer conv2a
I0411 19:03:24.052629 28481 net.cpp:100] Creating Layer conv2a
I0411 19:03:24.052634 28481 net.cpp:434] conv2a <- pool1
I0411 19:03:24.052641 28481 net.cpp:408] conv2a -> conv2a
I0411 19:03:24.059375 28481 net.cpp:150] Setting up conv2a
I0411 19:03:24.059401 28481 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0411 19:03:24.059404 28481 net.cpp:165] Memory required for data: 7129006116
I0411 19:03:24.059420 28481 layer_factory.hpp:77] Creating layer relu2a
I0411 19:03:24.059432 28481 net.cpp:100] Creating Layer relu2a
I0411 19:03:24.059438 28481 net.cpp:434] relu2a <- conv2a
I0411 19:03:24.059445 28481 net.cpp:395] relu2a -> conv2a (in-place)
I0411 19:03:24.059455 28481 net.cpp:150] Setting up relu2a
I0411 19:03:24.059463 28481 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0411 19:03:24.059469 28481 net.cpp:165] Memory required for data: 8362131492
I0411 19:03:24.059473 28481 layer_factory.hpp:77] Creating layer pool2
I0411 19:03:24.059484 28481 net.cpp:100] Creating Layer pool2
I0411 19:03:24.059486 28481 net.cpp:434] pool2 <- conv2a
I0411 19:03:24.059494 28481 net.cpp:408] pool2 -> pool2
I0411 19:03:24.059567 28481 net.cpp:150] Setting up pool2
I0411 19:03:24.059574 28481 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0411 19:03:24.059577 28481 net.cpp:165] Memory required for data: 8516272164
I0411 19:03:24.059581 28481 layer_factory.hpp:77] Creating layer conv3a
I0411 19:03:24.059595 28481 net.cpp:100] Creating Layer conv3a
I0411 19:03:24.059602 28481 net.cpp:434] conv3a <- pool2
I0411 19:03:24.059607 28481 net.cpp:408] conv3a -> conv3a
I0411 19:03:24.067667 28481 net.cpp:150] Setting up conv3a
I0411 19:03:24.067688 28481 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 19:03:24.067692 28481 net.cpp:165] Memory required for data: 8824553508
I0411 19:03:24.067705 28481 layer_factory.hpp:77] Creating layer relu3a
I0411 19:03:24.067715 28481 net.cpp:100] Creating Layer relu3a
I0411 19:03:24.067719 28481 net.cpp:434] relu3a <- conv3a
I0411 19:03:24.067726 28481 net.cpp:395] relu3a -> conv3a (in-place)
I0411 19:03:24.067734 28481 net.cpp:150] Setting up relu3a
I0411 19:03:24.067739 28481 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 19:03:24.067740 28481 net.cpp:165] Memory required for data: 9132834852
I0411 19:03:24.067744 28481 layer_factory.hpp:77] Creating layer conv3b
I0411 19:03:24.067754 28481 net.cpp:100] Creating Layer conv3b
I0411 19:03:24.067762 28481 net.cpp:434] conv3b <- conv3a
I0411 19:03:24.067767 28481 net.cpp:408] conv3b -> conv3b
I0411 19:03:24.084004 28481 net.cpp:150] Setting up conv3b
I0411 19:03:24.084030 28481 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 19:03:24.084033 28481 net.cpp:165] Memory required for data: 9441116196
I0411 19:03:24.084043 28481 layer_factory.hpp:77] Creating layer relu3b
I0411 19:03:24.084055 28481 net.cpp:100] Creating Layer relu3b
I0411 19:03:24.084061 28481 net.cpp:434] relu3b <- conv3b
I0411 19:03:24.084071 28481 net.cpp:395] relu3b -> conv3b (in-place)
I0411 19:03:24.084101 28481 net.cpp:150] Setting up relu3b
I0411 19:03:24.084111 28481 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 19:03:24.084115 28481 net.cpp:165] Memory required for data: 9749397540
I0411 19:03:24.084118 28481 layer_factory.hpp:77] Creating layer pool3
I0411 19:03:24.084128 28481 net.cpp:100] Creating Layer pool3
I0411 19:03:24.084134 28481 net.cpp:434] pool3 <- conv3b
I0411 19:03:24.084141 28481 net.cpp:408] pool3 -> pool3
I0411 19:03:24.084203 28481 net.cpp:150] Setting up pool3
I0411 19:03:24.084210 28481 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0411 19:03:24.084213 28481 net.cpp:165] Memory required for data: 9787932708
I0411 19:03:24.084218 28481 layer_factory.hpp:77] Creating layer conv4a
I0411 19:03:24.084231 28481 net.cpp:100] Creating Layer conv4a
I0411 19:03:24.084236 28481 net.cpp:434] conv4a <- pool3
I0411 19:03:24.084246 28481 net.cpp:408] conv4a -> conv4a
I0411 19:03:24.115730 28481 net.cpp:150] Setting up conv4a
I0411 19:03:24.115753 28481 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 19:03:24.115756 28481 net.cpp:165] Memory required for data: 9865003044
I0411 19:03:24.115773 28481 layer_factory.hpp:77] Creating layer relu4a
I0411 19:03:24.115787 28481 net.cpp:100] Creating Layer relu4a
I0411 19:03:24.115792 28481 net.cpp:434] relu4a <- conv4a
I0411 19:03:24.115802 28481 net.cpp:395] relu4a -> conv4a (in-place)
I0411 19:03:24.115811 28481 net.cpp:150] Setting up relu4a
I0411 19:03:24.115818 28481 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 19:03:24.115823 28481 net.cpp:165] Memory required for data: 9942073380
I0411 19:03:24.115826 28481 layer_factory.hpp:77] Creating layer conv4b
I0411 19:03:24.115844 28481 net.cpp:100] Creating Layer conv4b
I0411 19:03:24.115849 28481 net.cpp:434] conv4b <- conv4a
I0411 19:03:24.115855 28481 net.cpp:408] conv4b -> conv4b
I0411 19:03:24.173694 28481 net.cpp:150] Setting up conv4b
I0411 19:03:24.173724 28481 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 19:03:24.173727 28481 net.cpp:165] Memory required for data: 10019143716
I0411 19:03:24.173737 28481 layer_factory.hpp:77] Creating layer relu4b
I0411 19:03:24.173746 28481 net.cpp:100] Creating Layer relu4b
I0411 19:03:24.173753 28481 net.cpp:434] relu4b <- conv4b
I0411 19:03:24.173760 28481 net.cpp:395] relu4b -> conv4b (in-place)
I0411 19:03:24.173772 28481 net.cpp:150] Setting up relu4b
I0411 19:03:24.173779 28481 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 19:03:24.173784 28481 net.cpp:165] Memory required for data: 10096214052
I0411 19:03:24.173789 28481 layer_factory.hpp:77] Creating layer pool4
I0411 19:03:24.173797 28481 net.cpp:100] Creating Layer pool4
I0411 19:03:24.173804 28481 net.cpp:434] pool4 <- conv4b
I0411 19:03:24.173811 28481 net.cpp:408] pool4 -> pool4
I0411 19:03:24.173869 28481 net.cpp:150] Setting up pool4
I0411 19:03:24.173877 28481 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:03:24.173879 28481 net.cpp:165] Memory required for data: 10105847844
I0411 19:03:24.173883 28481 layer_factory.hpp:77] Creating layer conv5a
I0411 19:03:24.173894 28481 net.cpp:100] Creating Layer conv5a
I0411 19:03:24.173900 28481 net.cpp:434] conv5a <- pool4
I0411 19:03:24.173910 28481 net.cpp:408] conv5a -> conv5a
I0411 19:03:24.231909 28481 net.cpp:150] Setting up conv5a
I0411 19:03:24.231945 28481 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:03:24.231948 28481 net.cpp:165] Memory required for data: 10115481636
I0411 19:03:24.231958 28481 layer_factory.hpp:77] Creating layer relu5a
I0411 19:03:24.231972 28481 net.cpp:100] Creating Layer relu5a
I0411 19:03:24.231978 28481 net.cpp:434] relu5a <- conv5a
I0411 19:03:24.231986 28481 net.cpp:395] relu5a -> conv5a (in-place)
I0411 19:03:24.231997 28481 net.cpp:150] Setting up relu5a
I0411 19:03:24.232002 28481 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:03:24.232007 28481 net.cpp:165] Memory required for data: 10125115428
I0411 19:03:24.232010 28481 layer_factory.hpp:77] Creating layer conv5b
I0411 19:03:24.232023 28481 net.cpp:100] Creating Layer conv5b
I0411 19:03:24.232031 28481 net.cpp:434] conv5b <- conv5a
I0411 19:03:24.232039 28481 net.cpp:408] conv5b -> conv5b
I0411 19:03:24.290578 28481 net.cpp:150] Setting up conv5b
I0411 19:03:24.290607 28481 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:03:24.290611 28481 net.cpp:165] Memory required for data: 10134749220
I0411 19:03:24.290622 28481 layer_factory.hpp:77] Creating layer relu5b
I0411 19:03:24.290634 28481 net.cpp:100] Creating Layer relu5b
I0411 19:03:24.290640 28481 net.cpp:434] relu5b <- conv5b
I0411 19:03:24.290652 28481 net.cpp:395] relu5b -> conv5b (in-place)
I0411 19:03:24.290663 28481 net.cpp:150] Setting up relu5b
I0411 19:03:24.290670 28481 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:03:24.290673 28481 net.cpp:165] Memory required for data: 10144383012
I0411 19:03:24.290678 28481 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0411 19:03:24.290684 28481 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0411 19:03:24.290690 28481 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0411 19:03:24.290697 28481 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0411 19:03:24.290716 28481 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0411 19:03:24.290766 28481 net.cpp:150] Setting up conv5b_relu5b_0_split
I0411 19:03:24.290774 28481 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:03:24.290779 28481 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:03:24.290783 28481 net.cpp:165] Memory required for data: 10163650596
I0411 19:03:24.290789 28481 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0411 19:03:24.290802 28481 net.cpp:100] Creating Layer rpn_conv/3x3
I0411 19:03:24.290807 28481 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0411 19:03:24.290815 28481 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0411 19:03:24.351807 28481 net.cpp:150] Setting up rpn_conv/3x3
I0411 19:03:24.351836 28481 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0411 19:03:24.351840 28481 net.cpp:165] Memory required for data: 10166796324
I0411 19:03:24.351861 28481 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0411 19:03:24.351872 28481 net.cpp:100] Creating Layer rpn_relu/3x3
I0411 19:03:24.351878 28481 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0411 19:03:24.351887 28481 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0411 19:03:24.351897 28481 net.cpp:150] Setting up rpn_relu/3x3
I0411 19:03:24.351903 28481 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0411 19:03:24.351907 28481 net.cpp:165] Memory required for data: 10169942052
I0411 19:03:24.351909 28481 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0411 19:03:24.351923 28481 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0411 19:03:24.351928 28481 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0411 19:03:24.351935 28481 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0411 19:03:24.409934 28481 net.cpp:150] Setting up rpn_conv/3x3_2
I0411 19:03:24.409965 28481 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0411 19:03:24.409967 28481 net.cpp:165] Memory required for data: 10170728484
I0411 19:03:24.409979 28481 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0411 19:03:24.409991 28481 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0411 19:03:24.409996 28481 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0411 19:03:24.410003 28481 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0411 19:03:24.410013 28481 net.cpp:150] Setting up rpn_relu/3x3_2
I0411 19:03:24.410018 28481 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0411 19:03:24.410022 28481 net.cpp:165] Memory required for data: 10171514916
I0411 19:03:24.410027 28481 layer_factory.hpp:77] Creating layer rpn/output_pool
I0411 19:03:24.410037 28481 net.cpp:100] Creating Layer rpn/output_pool
I0411 19:03:24.410040 28481 net.cpp:434] rpn/output_pool <- rpn/output_2
I0411 19:03:24.410048 28481 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0411 19:03:24.410116 28481 net.cpp:150] Setting up rpn/output_pool
I0411 19:03:24.410125 28481 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0411 19:03:24.410130 28481 net.cpp:165] Memory required for data: 10171711524
I0411 19:03:24.410133 28481 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0411 19:03:24.410142 28481 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0411 19:03:24.410147 28481 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0411 19:03:24.410156 28481 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0411 19:03:24.410163 28481 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0411 19:03:24.410224 28481 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0411 19:03:24.410236 28481 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0411 19:03:24.410241 28481 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0411 19:03:24.410245 28481 net.cpp:165] Memory required for data: 10172104740
I0411 19:03:24.410249 28481 layer_factory.hpp:77] Creating layer rpn_cls_score
I0411 19:03:24.410262 28481 net.cpp:100] Creating Layer rpn_cls_score
I0411 19:03:24.410267 28481 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0411 19:03:24.410277 28481 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0411 19:03:24.410854 28481 net.cpp:150] Setting up rpn_cls_score
I0411 19:03:24.410866 28481 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:03:24.410869 28481 net.cpp:165] Memory required for data: 10172133156
I0411 19:03:24.410877 28481 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0411 19:03:24.410884 28481 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0411 19:03:24.410889 28481 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0411 19:03:24.410897 28481 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0411 19:03:24.410907 28481 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0411 19:03:24.410974 28481 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0411 19:03:24.410989 28481 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:03:24.410995 28481 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:03:24.410998 28481 net.cpp:165] Memory required for data: 10172189988
I0411 19:03:24.411002 28481 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0411 19:03:24.411020 28481 net.cpp:100] Creating Layer rpn_twin_pred
I0411 19:03:24.411028 28481 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0411 19:03:24.411036 28481 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0411 19:03:24.411592 28481 net.cpp:150] Setting up rpn_twin_pred
I0411 19:03:24.411602 28481 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:03:24.411607 28481 net.cpp:165] Memory required for data: 10172218404
I0411 19:03:24.411613 28481 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0411 19:03:24.411622 28481 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0411 19:03:24.411625 28481 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0411 19:03:24.411634 28481 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0411 19:03:24.411643 28481 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0411 19:03:24.411706 28481 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0411 19:03:24.411717 28481 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:03:24.411723 28481 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:03:24.411727 28481 net.cpp:165] Memory required for data: 10172275236
I0411 19:03:24.411731 28481 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0411 19:03:24.411743 28481 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0411 19:03:24.411751 28481 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0411 19:03:24.411758 28481 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0411 19:03:24.411801 28481 net.cpp:150] Setting up rpn_cls_score_reshape
I0411 19:03:24.411811 28481 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 19:03:24.411816 28481 net.cpp:165] Memory required for data: 10172303652
I0411 19:03:24.411820 28481 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 19:03:24.411828 28481 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 19:03:24.411833 28481 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0411 19:03:24.411841 28481 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0411 19:03:24.411859 28481 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0411 19:03:24.411870 28481 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0411 19:03:24.411939 28481 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 19:03:24.411949 28481 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 19:03:24.411954 28481 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 19:03:24.411959 28481 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 19:03:24.411963 28481 net.cpp:165] Memory required for data: 10172388900
I0411 19:03:24.411968 28481 layer_factory.hpp:77] Creating layer rpn-data
I0411 19:03:24.412395 28481 net.cpp:100] Creating Layer rpn-data
I0411 19:03:24.412407 28481 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0411 19:03:24.412413 28481 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0411 19:03:24.412420 28481 net.cpp:434] rpn-data <- data_data_0_split_1
I0411 19:03:24.412428 28481 net.cpp:408] rpn-data -> rpn_labels
I0411 19:03:24.412438 28481 net.cpp:408] rpn-data -> rpn_twin_targets
I0411 19:03:24.412447 28481 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0411 19:03:24.412456 28481 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0411 19:03:24.414714 28481 net.cpp:150] Setting up rpn-data
I0411 19:03:24.414729 28481 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0411 19:03:24.414736 28481 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:03:24.414741 28481 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:03:24.414746 28481 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:03:24.414749 28481 net.cpp:165] Memory required for data: 10172488356
I0411 19:03:24.414754 28481 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0411 19:03:24.414762 28481 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0411 19:03:24.414768 28481 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0411 19:03:24.414777 28481 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0411 19:03:24.414784 28481 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0411 19:03:24.414841 28481 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0411 19:03:24.414872 28481 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0411 19:03:24.414893 28481 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0411 19:03:24.414908 28481 net.cpp:165] Memory required for data: 10172516772
I0411 19:03:24.414923 28481 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0411 19:03:24.414942 28481 net.cpp:100] Creating Layer rpn_loss_cls
I0411 19:03:24.414958 28481 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0411 19:03:24.414975 28481 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0411 19:03:24.414985 28481 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0411 19:03:24.414996 28481 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0411 19:03:24.415117 28481 net.cpp:150] Setting up rpn_loss_cls
I0411 19:03:24.415124 28481 net.cpp:157] Top shape: (1)
I0411 19:03:24.415128 28481 net.cpp:160]     with loss weight 1
I0411 19:03:24.415158 28481 net.cpp:165] Memory required for data: 10172516776
I0411 19:03:24.415175 28481 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0411 19:03:24.415194 28481 net.cpp:100] Creating Layer rpn_loss_twin
I0411 19:03:24.415210 28481 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0411 19:03:24.415230 28481 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0411 19:03:24.415238 28481 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0411 19:03:24.415243 28481 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0411 19:03:24.415251 28481 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0411 19:03:24.415352 28481 net.cpp:150] Setting up rpn_loss_twin
I0411 19:03:24.415361 28481 net.cpp:157] Top shape: (1)
I0411 19:03:24.415364 28481 net.cpp:160]     with loss weight 1
I0411 19:03:24.415370 28481 net.cpp:165] Memory required for data: 10172516780
I0411 19:03:24.415375 28481 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0411 19:03:24.415385 28481 net.cpp:100] Creating Layer rpn_accuarcy
I0411 19:03:24.415390 28481 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0411 19:03:24.415396 28481 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0411 19:03:24.415403 28481 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0411 19:03:24.415412 28481 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0411 19:03:24.415480 28481 net.cpp:150] Setting up rpn_accuarcy
I0411 19:03:24.415490 28481 net.cpp:157] Top shape: (1)
I0411 19:03:24.415494 28481 net.cpp:157] Top shape: 2 (2)
I0411 19:03:24.415498 28481 net.cpp:165] Memory required for data: 10172516792
I0411 19:03:24.415503 28481 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0411 19:03:24.415509 28481 net.cpp:100] Creating Layer rpn_cls_prob
I0411 19:03:24.415514 28481 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0411 19:03:24.415521 28481 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0411 19:03:24.415606 28481 net.cpp:150] Setting up rpn_cls_prob
I0411 19:03:24.415616 28481 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 19:03:24.415621 28481 net.cpp:165] Memory required for data: 10172545208
I0411 19:03:24.415624 28481 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0411 19:03:24.415632 28481 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0411 19:03:24.415637 28481 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0411 19:03:24.415645 28481 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0411 19:03:24.415683 28481 net.cpp:150] Setting up rpn_cls_prob_reshape
I0411 19:03:24.415693 28481 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:03:24.415696 28481 net.cpp:165] Memory required for data: 10172573624
I0411 19:03:24.415701 28481 layer_factory.hpp:77] Creating layer proposal
I0411 19:03:24.416244 28481 net.cpp:100] Creating Layer proposal
I0411 19:03:24.416254 28481 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0411 19:03:24.416261 28481 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0411 19:03:24.416270 28481 net.cpp:408] proposal -> rpn_rois
I0411 19:03:24.419821 28481 net.cpp:150] Setting up proposal
I0411 19:03:24.419837 28481 net.cpp:157] Top shape: 1 3 (3)
I0411 19:03:24.419842 28481 net.cpp:165] Memory required for data: 10172573636
I0411 19:03:24.419847 28481 layer_factory.hpp:77] Creating layer roi-data
I0411 19:03:24.420011 28481 net.cpp:100] Creating Layer roi-data
I0411 19:03:24.420022 28481 net.cpp:434] roi-data <- rpn_rois
I0411 19:03:24.420028 28481 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0411 19:03:24.420037 28481 net.cpp:408] roi-data -> rois
I0411 19:03:24.420047 28481 net.cpp:408] roi-data -> labels
I0411 19:03:24.420055 28481 net.cpp:408] roi-data -> twin_targets
I0411 19:03:24.420063 28481 net.cpp:408] roi-data -> twin_inside_weights
I0411 19:03:24.420087 28481 net.cpp:408] roi-data -> twin_outside_weights
I0411 19:03:24.420482 28481 net.cpp:150] Setting up roi-data
I0411 19:03:24.420495 28481 net.cpp:157] Top shape: 1 3 (3)
I0411 19:03:24.420500 28481 net.cpp:157] Top shape: 1 1 (1)
I0411 19:03:24.420506 28481 net.cpp:157] Top shape: 1 402 (402)
I0411 19:03:24.420509 28481 net.cpp:157] Top shape: 1 402 (402)
I0411 19:03:24.420514 28481 net.cpp:157] Top shape: 1 402 (402)
I0411 19:03:24.420518 28481 net.cpp:165] Memory required for data: 10172578476
I0411 19:03:24.420523 28481 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0411 19:03:24.420531 28481 net.cpp:100] Creating Layer labels_roi-data_1_split
I0411 19:03:24.420536 28481 net.cpp:434] labels_roi-data_1_split <- labels
I0411 19:03:24.420543 28481 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0411 19:03:24.420552 28481 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0411 19:03:24.420608 28481 net.cpp:150] Setting up labels_roi-data_1_split
I0411 19:03:24.420617 28481 net.cpp:157] Top shape: 1 1 (1)
I0411 19:03:24.420621 28481 net.cpp:157] Top shape: 1 1 (1)
I0411 19:03:24.420625 28481 net.cpp:165] Memory required for data: 10172578484
I0411 19:03:24.420630 28481 layer_factory.hpp:77] Creating layer roi_pool5
I0411 19:03:24.420639 28481 net.cpp:100] Creating Layer roi_pool5
I0411 19:03:24.420644 28481 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0411 19:03:24.420650 28481 net.cpp:434] roi_pool5 <- rois
I0411 19:03:24.420658 28481 net.cpp:408] roi_pool5 -> pool5
I0411 19:03:24.420667 28481 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0411 19:03:24.420691 28481 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0411 19:03:24.420755 28481 net.cpp:150] Setting up roi_pool5
I0411 19:03:24.420765 28481 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0411 19:03:24.420768 28481 net.cpp:165] Memory required for data: 10172611252
I0411 19:03:24.420773 28481 layer_factory.hpp:77] Creating layer fc6
I0411 19:03:24.420784 28481 net.cpp:100] Creating Layer fc6
I0411 19:03:24.420789 28481 net.cpp:434] fc6 <- pool5
I0411 19:03:24.420796 28481 net.cpp:408] fc6 -> fc6
I0411 19:03:24.697229 28481 net.cpp:150] Setting up fc6
I0411 19:03:24.697263 28481 net.cpp:157] Top shape: 1 4096 (4096)
I0411 19:03:24.697268 28481 net.cpp:165] Memory required for data: 10172627636
I0411 19:03:24.697280 28481 layer_factory.hpp:77] Creating layer relu6
I0411 19:03:24.697291 28481 net.cpp:100] Creating Layer relu6
I0411 19:03:24.697299 28481 net.cpp:434] relu6 <- fc6
I0411 19:03:24.697306 28481 net.cpp:395] relu6 -> fc6 (in-place)
I0411 19:03:24.697317 28481 net.cpp:150] Setting up relu6
I0411 19:03:24.697324 28481 net.cpp:157] Top shape: 1 4096 (4096)
I0411 19:03:24.697327 28481 net.cpp:165] Memory required for data: 10172644020
I0411 19:03:24.697331 28481 layer_factory.hpp:77] Creating layer drop6
I0411 19:03:24.697340 28481 net.cpp:100] Creating Layer drop6
I0411 19:03:24.697343 28481 net.cpp:434] drop6 <- fc6
I0411 19:03:24.697350 28481 net.cpp:395] drop6 -> fc6 (in-place)
I0411 19:03:24.697387 28481 net.cpp:150] Setting up drop6
I0411 19:03:24.697394 28481 net.cpp:157] Top shape: 1 4096 (4096)
I0411 19:03:24.697398 28481 net.cpp:165] Memory required for data: 10172660404
I0411 19:03:24.697402 28481 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0411 19:03:24.697409 28481 net.cpp:100] Creating Layer fc6_drop6_0_split
I0411 19:03:24.697415 28481 net.cpp:434] fc6_drop6_0_split <- fc6
I0411 19:03:24.697424 28481 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0411 19:03:24.697438 28481 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0411 19:03:24.697484 28481 net.cpp:150] Setting up fc6_drop6_0_split
I0411 19:03:24.697490 28481 net.cpp:157] Top shape: 1 4096 (4096)
I0411 19:03:24.697495 28481 net.cpp:157] Top shape: 1 4096 (4096)
I0411 19:03:24.697499 28481 net.cpp:165] Memory required for data: 10172693172
I0411 19:03:24.697504 28481 layer_factory.hpp:77] Creating layer cls_score
I0411 19:03:24.697515 28481 net.cpp:100] Creating Layer cls_score
I0411 19:03:24.697520 28481 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0411 19:03:24.697528 28481 net.cpp:408] cls_score -> cls_score
I0411 19:03:24.704926 28481 net.cpp:150] Setting up cls_score
I0411 19:03:24.704954 28481 net.cpp:157] Top shape: 1 201 (201)
I0411 19:03:24.704958 28481 net.cpp:165] Memory required for data: 10172693976
I0411 19:03:24.704970 28481 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0411 19:03:24.704983 28481 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0411 19:03:24.704989 28481 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0411 19:03:24.705000 28481 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0411 19:03:24.705013 28481 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0411 19:03:24.705060 28481 net.cpp:150] Setting up cls_score_cls_score_0_split
I0411 19:03:24.705068 28481 net.cpp:157] Top shape: 1 201 (201)
I0411 19:03:24.705072 28481 net.cpp:157] Top shape: 1 201 (201)
I0411 19:03:24.705076 28481 net.cpp:165] Memory required for data: 10172695584
I0411 19:03:24.705080 28481 layer_factory.hpp:77] Creating layer twin_pred
I0411 19:03:24.705091 28481 net.cpp:100] Creating Layer twin_pred
I0411 19:03:24.705106 28481 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0411 19:03:24.705116 28481 net.cpp:408] twin_pred -> twin_pred
I0411 19:03:24.719028 28481 net.cpp:150] Setting up twin_pred
I0411 19:03:24.719060 28481 net.cpp:157] Top shape: 1 402 (402)
I0411 19:03:24.719064 28481 net.cpp:165] Memory required for data: 10172697192
I0411 19:03:24.719077 28481 layer_factory.hpp:77] Creating layer loss_cls
I0411 19:03:24.719089 28481 net.cpp:100] Creating Layer loss_cls
I0411 19:03:24.719099 28481 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0411 19:03:24.719108 28481 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0411 19:03:24.719120 28481 net.cpp:408] loss_cls -> loss_cls
I0411 19:03:24.719135 28481 layer_factory.hpp:77] Creating layer loss_cls
I0411 19:03:24.719283 28481 net.cpp:150] Setting up loss_cls
I0411 19:03:24.719291 28481 net.cpp:157] Top shape: (1)
I0411 19:03:24.719295 28481 net.cpp:160]     with loss weight 1
I0411 19:03:24.719308 28481 net.cpp:165] Memory required for data: 10172697196
I0411 19:03:24.719313 28481 layer_factory.hpp:77] Creating layer loss_twin
I0411 19:03:24.719321 28481 net.cpp:100] Creating Layer loss_twin
I0411 19:03:24.719327 28481 net.cpp:434] loss_twin <- twin_pred
I0411 19:03:24.719332 28481 net.cpp:434] loss_twin <- twin_targets
I0411 19:03:24.719337 28481 net.cpp:434] loss_twin <- twin_inside_weights
I0411 19:03:24.719342 28481 net.cpp:434] loss_twin <- twin_outside_weights
I0411 19:03:24.719350 28481 net.cpp:408] loss_twin -> loss_twin
I0411 19:03:24.719470 28481 net.cpp:150] Setting up loss_twin
I0411 19:03:24.719478 28481 net.cpp:157] Top shape: (1)
I0411 19:03:24.719482 28481 net.cpp:160]     with loss weight 1
I0411 19:03:24.719488 28481 net.cpp:165] Memory required for data: 10172697200
I0411 19:03:24.719492 28481 layer_factory.hpp:77] Creating layer accuarcy
I0411 19:03:24.719501 28481 net.cpp:100] Creating Layer accuarcy
I0411 19:03:24.719506 28481 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0411 19:03:24.719513 28481 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0411 19:03:24.719521 28481 net.cpp:408] accuarcy -> accuarcy
I0411 19:03:24.719530 28481 net.cpp:150] Setting up accuarcy
I0411 19:03:24.719537 28481 net.cpp:157] Top shape: (1)
I0411 19:03:24.719540 28481 net.cpp:165] Memory required for data: 10172697204
I0411 19:03:24.719544 28481 net.cpp:228] accuarcy does not need backward computation.
I0411 19:03:24.719549 28481 net.cpp:226] loss_twin needs backward computation.
I0411 19:03:24.719555 28481 net.cpp:226] loss_cls needs backward computation.
I0411 19:03:24.719561 28481 net.cpp:226] twin_pred needs backward computation.
I0411 19:03:24.719566 28481 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0411 19:03:24.719570 28481 net.cpp:226] cls_score needs backward computation.
I0411 19:03:24.719575 28481 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0411 19:03:24.719580 28481 net.cpp:226] drop6 needs backward computation.
I0411 19:03:24.719585 28481 net.cpp:226] relu6 needs backward computation.
I0411 19:03:24.719589 28481 net.cpp:226] fc6 needs backward computation.
I0411 19:03:24.719594 28481 net.cpp:226] roi_pool5 needs backward computation.
I0411 19:03:24.719599 28481 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0411 19:03:24.719604 28481 net.cpp:226] roi-data needs backward computation.
I0411 19:03:24.719609 28481 net.cpp:226] proposal needs backward computation.
I0411 19:03:24.719616 28481 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0411 19:03:24.719624 28481 net.cpp:226] rpn_cls_prob needs backward computation.
I0411 19:03:24.719631 28481 net.cpp:228] rpn_accuarcy does not need backward computation.
I0411 19:03:24.719636 28481 net.cpp:226] rpn_loss_twin needs backward computation.
I0411 19:03:24.719642 28481 net.cpp:226] rpn_loss_cls needs backward computation.
I0411 19:03:24.719650 28481 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0411 19:03:24.719655 28481 net.cpp:226] rpn-data needs backward computation.
I0411 19:03:24.719661 28481 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0411 19:03:24.719666 28481 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0411 19:03:24.719671 28481 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0411 19:03:24.719676 28481 net.cpp:226] rpn_twin_pred needs backward computation.
I0411 19:03:24.719681 28481 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0411 19:03:24.719686 28481 net.cpp:226] rpn_cls_score needs backward computation.
I0411 19:03:24.719691 28481 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0411 19:03:24.719696 28481 net.cpp:226] rpn/output_pool needs backward computation.
I0411 19:03:24.719700 28481 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0411 19:03:24.719704 28481 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0411 19:03:24.719709 28481 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0411 19:03:24.719714 28481 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0411 19:03:24.719718 28481 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0411 19:03:24.719723 28481 net.cpp:226] relu5b needs backward computation.
I0411 19:03:24.719728 28481 net.cpp:226] conv5b needs backward computation.
I0411 19:03:24.719732 28481 net.cpp:226] relu5a needs backward computation.
I0411 19:03:24.719736 28481 net.cpp:226] conv5a needs backward computation.
I0411 19:03:24.719741 28481 net.cpp:226] pool4 needs backward computation.
I0411 19:03:24.719746 28481 net.cpp:226] relu4b needs backward computation.
I0411 19:03:24.719750 28481 net.cpp:226] conv4b needs backward computation.
I0411 19:03:24.719754 28481 net.cpp:226] relu4a needs backward computation.
I0411 19:03:24.719759 28481 net.cpp:226] conv4a needs backward computation.
I0411 19:03:24.719764 28481 net.cpp:226] pool3 needs backward computation.
I0411 19:03:24.719769 28481 net.cpp:226] relu3b needs backward computation.
I0411 19:03:24.719774 28481 net.cpp:226] conv3b needs backward computation.
I0411 19:03:24.719777 28481 net.cpp:226] relu3a needs backward computation.
I0411 19:03:24.719781 28481 net.cpp:226] conv3a needs backward computation.
I0411 19:03:24.719786 28481 net.cpp:228] pool2 does not need backward computation.
I0411 19:03:24.719791 28481 net.cpp:228] relu2a does not need backward computation.
I0411 19:03:24.719796 28481 net.cpp:228] conv2a does not need backward computation.
I0411 19:03:24.719801 28481 net.cpp:228] pool1 does not need backward computation.
I0411 19:03:24.719807 28481 net.cpp:228] relu1a does not need backward computation.
I0411 19:03:24.719812 28481 net.cpp:228] conv1a does not need backward computation.
I0411 19:03:24.719817 28481 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0411 19:03:24.719823 28481 net.cpp:228] data_data_0_split does not need backward computation.
I0411 19:03:24.719828 28481 net.cpp:228] data does not need backward computation.
I0411 19:03:24.719832 28481 net.cpp:270] This network produces output accuarcy
I0411 19:03:24.719837 28481 net.cpp:270] This network produces output loss_cls
I0411 19:03:24.719842 28481 net.cpp:270] This network produces output loss_twin
I0411 19:03:24.719846 28481 net.cpp:270] This network produces output rpn_accuarcy
I0411 19:03:24.719851 28481 net.cpp:270] This network produces output rpn_accuarcy_class
I0411 19:03:24.719856 28481 net.cpp:270] This network produces output rpn_cls_loss
I0411 19:03:24.719859 28481 net.cpp:270] This network produces output rpn_loss_twin
I0411 19:03:24.719904 28481 net.cpp:283] Network initialization done.
I0411 19:03:24.720031 28481 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0411 19:03:25.402119 28481 net.cpp:761] Ignoring source layer pool5
I0411 19:03:25.425699 28481 net.cpp:761] Ignoring source layer fc7
I0411 19:03:25.425717 28481 net.cpp:761] Ignoring source layer relu7
I0411 19:03:25.425721 28481 net.cpp:761] Ignoring source layer drop7
I0411 19:03:25.425724 28481 net.cpp:761] Ignoring source layer fc8-200
I0411 19:03:25.425729 28481 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
F0411 19:03:25.448225 28481 syncedmem.cpp:56] Check failed: error == cudaSuccess (2 vs. 0)  out of memory
*** Check failure stack trace: ***
99
(array([0]), array([97]))
99
(array([0]), array([97]))
99
(array([0]), array([97]))
99
(array([0]), array([97]))
99
(array([0]), array([97]))
99
(array([0]), array([97]))
99
(array([0]), array([97]))
99
(array([0]), array([97]))
99
(array([0]), array([97]))
99
(array([0]), array([97]))
99
(array([0]), array([97]))
