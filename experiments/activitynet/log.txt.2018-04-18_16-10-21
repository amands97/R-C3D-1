Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=0, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 0,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': False,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  3.12500000e-02,   1.00000000e+02]]), 'durations': array([ 99.96875]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[  0,   0, 800,   8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  3.12500000e-02,   1.00000000e+02]]), 'durations': array([ 99.96875]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[  0,   0, 800,   8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  200, 1000,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  200, 1000,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  400, 1200,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  400, 1200,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  600, 1400,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  600, 1400,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  800, 1600,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  800, 1600,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1000, 1800,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1000, 1800,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1200, 2000,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1200, 2000,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1400, 2200,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1400, 2200,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1600, 2400,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1600, 2400,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1800, 2600,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1800, 2600,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2000, 2800,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2000, 2800,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2200, 3000,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2200, 3000,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  85.69802312]]), 'durations': array([ 85.69802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2400, 3200,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  85.69802312]]), 'durations': array([ 85.69802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2400, 3200,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  60.69802312]]), 'durations': array([ 60.69802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2600, 3400,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  60.69802312]]), 'durations': array([ 60.69802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2600, 3400,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  51.19802312]]), 'durations': array([ 51.19802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2676, 3476,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  51.19802312]]), 'durations': array([ 51.19802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2676, 3476,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  76.19802312]]), 'durations': array([ 76.19802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2476, 3276,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  76.19802312]]), 'durations': array([ 76.19802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2476, 3276,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2276, 3076,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2276, 3076,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2076, 2876,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2076, 2876,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1876, 2676,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1876, 2676,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1676, 2476,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1676, 2476,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1476, 2276,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1476, 2276,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1276, 2076,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1276, 2076,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1076, 1876,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1076, 1876,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  876, 1676,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  876, 1676,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  676, 1476,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  676, 1476,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  476, 1276,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  476, 1276,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  276, 1076,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  276, 1076,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[  0,  76, 876,   8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[  0,  76, 876,   8]]), 'max_overlaps': array([ 1.])}]
56 roidb entries
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
precimputed
twin target means:
twin target stdevs:
NOT normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0418 16:10:23.001582 15298 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0418 16:10:23.001621 15298 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0418 16:10:23.002528 15298 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuarcy
I0418 16:10:23.002777 15298 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 100"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 99"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 99
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 198
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SigmoidCrossEntropyLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
I0418 16:10:23.003104 15298 layer_factory.hpp:77] Creating layer data
I0418 16:10:23.031044 15298 net.cpp:100] Creating Layer data
I0418 16:10:23.031071 15298 net.cpp:408] data -> data
I0418 16:10:23.031091 15298 net.cpp:408] data -> gt_boxes
setting up
has rpn
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0418 16:10:23.050911 15298 net.cpp:150] Setting up data
I0418 16:10:23.050940 15298 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0418 16:10:23.050952 15298 net.cpp:157] Top shape: 1 101 (101)
I0418 16:10:23.050958 15298 net.cpp:165] Memory required for data: 115605908
I0418 16:10:23.050968 15298 layer_factory.hpp:77] Creating layer data_data_0_split
I0418 16:10:23.050987 15298 net.cpp:100] Creating Layer data_data_0_split
I0418 16:10:23.050995 15298 net.cpp:434] data_data_0_split <- data
I0418 16:10:23.051007 15298 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0418 16:10:23.051021 15298 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0418 16:10:23.051067 15298 net.cpp:150] Setting up data_data_0_split
I0418 16:10:23.051079 15298 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0418 16:10:23.051087 15298 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0418 16:10:23.051093 15298 net.cpp:165] Memory required for data: 346816916
I0418 16:10:23.051100 15298 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0418 16:10:23.051110 15298 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0418 16:10:23.051115 15298 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0418 16:10:23.051126 15298 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0418 16:10:23.051136 15298 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0418 16:10:23.051172 15298 net.cpp:150] Setting up gt_boxes_data_1_split
I0418 16:10:23.051182 15298 net.cpp:157] Top shape: 1 101 (101)
I0418 16:10:23.051189 15298 net.cpp:157] Top shape: 1 101 (101)
I0418 16:10:23.051195 15298 net.cpp:165] Memory required for data: 346817724
I0418 16:10:23.051201 15298 layer_factory.hpp:77] Creating layer conv1a
I0418 16:10:23.051224 15298 net.cpp:100] Creating Layer conv1a
I0418 16:10:23.051234 15298 net.cpp:434] conv1a <- data_data_0_split_0
I0418 16:10:23.051245 15298 net.cpp:408] conv1a -> conv1a
I0418 16:10:23.460472 15298 net.cpp:150] Setting up conv1a
I0418 16:10:23.460505 15298 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0418 16:10:23.460508 15298 net.cpp:165] Memory required for data: 2813068476
I0418 16:10:23.460527 15298 layer_factory.hpp:77] Creating layer relu1a
I0418 16:10:23.460541 15298 net.cpp:100] Creating Layer relu1a
I0418 16:10:23.460546 15298 net.cpp:434] relu1a <- conv1a
I0418 16:10:23.460552 15298 net.cpp:395] relu1a -> conv1a (in-place)
I0418 16:10:23.461017 15298 net.cpp:150] Setting up relu1a
I0418 16:10:23.461031 15298 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0418 16:10:23.461035 15298 net.cpp:165] Memory required for data: 5279319228
I0418 16:10:23.461040 15298 layer_factory.hpp:77] Creating layer pool1
I0418 16:10:23.461050 15298 net.cpp:100] Creating Layer pool1
I0418 16:10:23.461055 15298 net.cpp:434] pool1 <- conv1a
I0418 16:10:23.461061 15298 net.cpp:408] pool1 -> pool1
I0418 16:10:23.461819 15298 net.cpp:150] Setting up pool1
I0418 16:10:23.461830 15298 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0418 16:10:23.461834 15298 net.cpp:165] Memory required for data: 5895881916
I0418 16:10:23.461838 15298 layer_factory.hpp:77] Creating layer conv2a
I0418 16:10:23.461849 15298 net.cpp:100] Creating Layer conv2a
I0418 16:10:23.461853 15298 net.cpp:434] conv2a <- pool1
I0418 16:10:23.461858 15298 net.cpp:408] conv2a -> conv2a
I0418 16:10:23.474378 15298 net.cpp:150] Setting up conv2a
I0418 16:10:23.474403 15298 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0418 16:10:23.474408 15298 net.cpp:165] Memory required for data: 7129007292
I0418 16:10:23.474421 15298 layer_factory.hpp:77] Creating layer relu2a
I0418 16:10:23.474429 15298 net.cpp:100] Creating Layer relu2a
I0418 16:10:23.474433 15298 net.cpp:434] relu2a <- conv2a
I0418 16:10:23.474438 15298 net.cpp:395] relu2a -> conv2a (in-place)
I0418 16:10:23.474793 15298 net.cpp:150] Setting up relu2a
I0418 16:10:23.474807 15298 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0418 16:10:23.474810 15298 net.cpp:165] Memory required for data: 8362132668
I0418 16:10:23.474815 15298 layer_factory.hpp:77] Creating layer pool2
I0418 16:10:23.474824 15298 net.cpp:100] Creating Layer pool2
I0418 16:10:23.474828 15298 net.cpp:434] pool2 <- conv2a
I0418 16:10:23.474833 15298 net.cpp:408] pool2 -> pool2
I0418 16:10:23.474998 15298 net.cpp:150] Setting up pool2
I0418 16:10:23.475009 15298 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0418 16:10:23.475013 15298 net.cpp:165] Memory required for data: 8516273340
I0418 16:10:23.475018 15298 layer_factory.hpp:77] Creating layer conv3a
I0418 16:10:23.475028 15298 net.cpp:100] Creating Layer conv3a
I0418 16:10:23.475031 15298 net.cpp:434] conv3a <- pool2
I0418 16:10:23.475037 15298 net.cpp:408] conv3a -> conv3a
I0418 16:10:23.500231 15298 net.cpp:150] Setting up conv3a
I0418 16:10:23.500253 15298 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0418 16:10:23.500257 15298 net.cpp:165] Memory required for data: 8824554684
I0418 16:10:23.500270 15298 layer_factory.hpp:77] Creating layer relu3a
I0418 16:10:23.500278 15298 net.cpp:100] Creating Layer relu3a
I0418 16:10:23.500283 15298 net.cpp:434] relu3a <- conv3a
I0418 16:10:23.500291 15298 net.cpp:395] relu3a -> conv3a (in-place)
I0418 16:10:23.500609 15298 net.cpp:150] Setting up relu3a
I0418 16:10:23.500622 15298 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0418 16:10:23.500627 15298 net.cpp:165] Memory required for data: 9132836028
I0418 16:10:23.500630 15298 layer_factory.hpp:77] Creating layer conv3b
I0418 16:10:23.500641 15298 net.cpp:100] Creating Layer conv3b
I0418 16:10:23.500648 15298 net.cpp:434] conv3b <- conv3a
I0418 16:10:23.500654 15298 net.cpp:408] conv3b -> conv3b
I0418 16:10:23.549695 15298 net.cpp:150] Setting up conv3b
I0418 16:10:23.549720 15298 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0418 16:10:23.549724 15298 net.cpp:165] Memory required for data: 9441117372
I0418 16:10:23.549733 15298 layer_factory.hpp:77] Creating layer relu3b
I0418 16:10:23.549743 15298 net.cpp:100] Creating Layer relu3b
I0418 16:10:23.549748 15298 net.cpp:434] relu3b <- conv3b
I0418 16:10:23.549753 15298 net.cpp:395] relu3b -> conv3b (in-place)
I0418 16:10:23.550081 15298 net.cpp:150] Setting up relu3b
I0418 16:10:23.550093 15298 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0418 16:10:23.550098 15298 net.cpp:165] Memory required for data: 9749398716
I0418 16:10:23.550102 15298 layer_factory.hpp:77] Creating layer pool3
I0418 16:10:23.550110 15298 net.cpp:100] Creating Layer pool3
I0418 16:10:23.550114 15298 net.cpp:434] pool3 <- conv3b
I0418 16:10:23.550119 15298 net.cpp:408] pool3 -> pool3
I0418 16:10:23.550288 15298 net.cpp:150] Setting up pool3
I0418 16:10:23.550298 15298 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0418 16:10:23.550302 15298 net.cpp:165] Memory required for data: 9787933884
I0418 16:10:23.550305 15298 layer_factory.hpp:77] Creating layer conv4a
I0418 16:10:23.550319 15298 net.cpp:100] Creating Layer conv4a
I0418 16:10:23.550323 15298 net.cpp:434] conv4a <- pool3
I0418 16:10:23.550329 15298 net.cpp:408] conv4a -> conv4a
I0418 16:10:23.648221 15298 net.cpp:150] Setting up conv4a
I0418 16:10:23.648247 15298 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0418 16:10:23.648250 15298 net.cpp:165] Memory required for data: 9865004220
I0418 16:10:23.648264 15298 layer_factory.hpp:77] Creating layer relu4a
I0418 16:10:23.648274 15298 net.cpp:100] Creating Layer relu4a
I0418 16:10:23.648278 15298 net.cpp:434] relu4a <- conv4a
I0418 16:10:23.648284 15298 net.cpp:395] relu4a -> conv4a (in-place)
I0418 16:10:23.650542 15298 net.cpp:150] Setting up relu4a
I0418 16:10:23.650555 15298 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0418 16:10:23.650559 15298 net.cpp:165] Memory required for data: 9942074556
I0418 16:10:23.650563 15298 layer_factory.hpp:77] Creating layer conv4b
I0418 16:10:23.650578 15298 net.cpp:100] Creating Layer conv4b
I0418 16:10:23.650585 15298 net.cpp:434] conv4b <- conv4a
I0418 16:10:23.650595 15298 net.cpp:408] conv4b -> conv4b
I0418 16:10:23.841550 15298 net.cpp:150] Setting up conv4b
I0418 16:10:23.841580 15298 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0418 16:10:23.841588 15298 net.cpp:165] Memory required for data: 10019144892
I0418 16:10:23.841600 15298 layer_factory.hpp:77] Creating layer relu4b
I0418 16:10:23.841612 15298 net.cpp:100] Creating Layer relu4b
I0418 16:10:23.841620 15298 net.cpp:434] relu4b <- conv4b
I0418 16:10:23.841631 15298 net.cpp:395] relu4b -> conv4b (in-place)
I0418 16:10:23.843214 15298 net.cpp:150] Setting up relu4b
I0418 16:10:23.843227 15298 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0418 16:10:23.843232 15298 net.cpp:165] Memory required for data: 10096215228
I0418 16:10:23.843240 15298 layer_factory.hpp:77] Creating layer pool4
I0418 16:10:23.843251 15298 net.cpp:100] Creating Layer pool4
I0418 16:10:23.843257 15298 net.cpp:434] pool4 <- conv4b
I0418 16:10:23.843266 15298 net.cpp:408] pool4 -> pool4
I0418 16:10:23.844429 15298 net.cpp:150] Setting up pool4
I0418 16:10:23.844442 15298 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 16:10:23.844449 15298 net.cpp:165] Memory required for data: 10105849020
I0418 16:10:23.844455 15298 layer_factory.hpp:77] Creating layer conv5a
I0418 16:10:23.844472 15298 net.cpp:100] Creating Layer conv5a
I0418 16:10:23.844483 15298 net.cpp:434] conv5a <- pool4
I0418 16:10:23.844494 15298 net.cpp:408] conv5a -> conv5a
I0418 16:10:24.039271 15298 net.cpp:150] Setting up conv5a
I0418 16:10:24.039301 15298 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 16:10:24.039309 15298 net.cpp:165] Memory required for data: 10115482812
I0418 16:10:24.039322 15298 layer_factory.hpp:77] Creating layer relu5a
I0418 16:10:24.039335 15298 net.cpp:100] Creating Layer relu5a
I0418 16:10:24.039343 15298 net.cpp:434] relu5a <- conv5a
I0418 16:10:24.039352 15298 net.cpp:395] relu5a -> conv5a (in-place)
I0418 16:10:24.040345 15298 net.cpp:150] Setting up relu5a
I0418 16:10:24.040361 15298 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 16:10:24.040367 15298 net.cpp:165] Memory required for data: 10125116604
I0418 16:10:24.040374 15298 layer_factory.hpp:77] Creating layer conv5b
I0418 16:10:24.040393 15298 net.cpp:100] Creating Layer conv5b
I0418 16:10:24.040400 15298 net.cpp:434] conv5b <- conv5a
I0418 16:10:24.040411 15298 net.cpp:408] conv5b -> conv5b
I0418 16:10:24.229535 15298 net.cpp:150] Setting up conv5b
I0418 16:10:24.229562 15298 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 16:10:24.229568 15298 net.cpp:165] Memory required for data: 10134750396
I0418 16:10:24.229580 15298 layer_factory.hpp:77] Creating layer relu5b
I0418 16:10:24.229593 15298 net.cpp:100] Creating Layer relu5b
I0418 16:10:24.229600 15298 net.cpp:434] relu5b <- conv5b
I0418 16:10:24.229615 15298 net.cpp:395] relu5b -> conv5b (in-place)
I0418 16:10:24.229777 15298 net.cpp:150] Setting up relu5b
I0418 16:10:24.229789 15298 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 16:10:24.229794 15298 net.cpp:165] Memory required for data: 10144384188
I0418 16:10:24.229800 15298 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0418 16:10:24.229811 15298 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0418 16:10:24.229817 15298 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0418 16:10:24.229826 15298 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0418 16:10:24.229836 15298 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0418 16:10:24.229887 15298 net.cpp:150] Setting up conv5b_relu5b_0_split
I0418 16:10:24.229897 15298 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 16:10:24.229903 15298 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 16:10:24.229908 15298 net.cpp:165] Memory required for data: 10163651772
I0418 16:10:24.229914 15298 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0418 16:10:24.229930 15298 net.cpp:100] Creating Layer rpn_conv/3x3
I0418 16:10:24.229938 15298 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0418 16:10:24.229950 15298 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0418 16:10:24.420883 15298 net.cpp:150] Setting up rpn_conv/3x3
I0418 16:10:24.420910 15298 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0418 16:10:24.420915 15298 net.cpp:165] Memory required for data: 10166797500
I0418 16:10:24.420936 15298 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0418 16:10:24.420949 15298 net.cpp:100] Creating Layer rpn_relu/3x3
I0418 16:10:24.420956 15298 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0418 16:10:24.420969 15298 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0418 16:10:24.423313 15298 net.cpp:150] Setting up rpn_relu/3x3
I0418 16:10:24.423329 15298 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0418 16:10:24.423336 15298 net.cpp:165] Memory required for data: 10169943228
I0418 16:10:24.423342 15298 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0418 16:10:24.423359 15298 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0418 16:10:24.423367 15298 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0418 16:10:24.423378 15298 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0418 16:10:24.620196 15298 net.cpp:150] Setting up rpn_conv/3x3_2
I0418 16:10:24.620223 15298 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0418 16:10:24.620229 15298 net.cpp:165] Memory required for data: 10170729660
I0418 16:10:24.620242 15298 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0418 16:10:24.620257 15298 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0418 16:10:24.620268 15298 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0418 16:10:24.620275 15298 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0418 16:10:24.620607 15298 net.cpp:150] Setting up rpn_relu/3x3_2
I0418 16:10:24.620621 15298 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0418 16:10:24.620625 15298 net.cpp:165] Memory required for data: 10171516092
I0418 16:10:24.620630 15298 layer_factory.hpp:77] Creating layer rpn/output_pool
I0418 16:10:24.620636 15298 net.cpp:100] Creating Layer rpn/output_pool
I0418 16:10:24.620640 15298 net.cpp:434] rpn/output_pool <- rpn/output_2
I0418 16:10:24.620646 15298 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0418 16:10:24.620826 15298 net.cpp:150] Setting up rpn/output_pool
I0418 16:10:24.620838 15298 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0418 16:10:24.620841 15298 net.cpp:165] Memory required for data: 10171712700
I0418 16:10:24.620846 15298 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0418 16:10:24.620851 15298 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0418 16:10:24.620854 15298 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0418 16:10:24.620859 15298 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0418 16:10:24.620867 15298 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0418 16:10:24.620898 15298 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0418 16:10:24.620905 15298 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0418 16:10:24.620909 15298 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0418 16:10:24.620913 15298 net.cpp:165] Memory required for data: 10172105916
I0418 16:10:24.620915 15298 layer_factory.hpp:77] Creating layer rpn_cls_score
I0418 16:10:24.620926 15298 net.cpp:100] Creating Layer rpn_cls_score
I0418 16:10:24.620930 15298 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0418 16:10:24.620935 15298 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0418 16:10:24.623075 15298 net.cpp:150] Setting up rpn_cls_score
I0418 16:10:24.623088 15298 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 16:10:24.623092 15298 net.cpp:165] Memory required for data: 10172134332
I0418 16:10:24.623098 15298 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0418 16:10:24.623106 15298 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0418 16:10:24.623109 15298 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0418 16:10:24.623114 15298 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0418 16:10:24.623121 15298 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0418 16:10:24.623160 15298 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0418 16:10:24.623168 15298 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 16:10:24.623172 15298 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 16:10:24.623175 15298 net.cpp:165] Memory required for data: 10172191164
I0418 16:10:24.623179 15298 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0418 16:10:24.623191 15298 net.cpp:100] Creating Layer rpn_twin_pred
I0418 16:10:24.623198 15298 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0418 16:10:24.623204 15298 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0418 16:10:24.626113 15298 net.cpp:150] Setting up rpn_twin_pred
I0418 16:10:24.626127 15298 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 16:10:24.626132 15298 net.cpp:165] Memory required for data: 10172219580
I0418 16:10:24.626138 15298 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0418 16:10:24.626145 15298 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0418 16:10:24.626149 15298 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0418 16:10:24.626155 15298 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0418 16:10:24.626161 15298 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0418 16:10:24.626199 15298 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0418 16:10:24.626207 15298 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 16:10:24.626211 15298 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 16:10:24.626214 15298 net.cpp:165] Memory required for data: 10172276412
I0418 16:10:24.626219 15298 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0418 16:10:24.626235 15298 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0418 16:10:24.626241 15298 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0418 16:10:24.626248 15298 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0418 16:10:24.626274 15298 net.cpp:150] Setting up rpn_cls_score_reshape
I0418 16:10:24.626284 15298 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0418 16:10:24.626287 15298 net.cpp:165] Memory required for data: 10172304828
I0418 16:10:24.626291 15298 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0418 16:10:24.626297 15298 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0418 16:10:24.626302 15298 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0418 16:10:24.626307 15298 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0418 16:10:24.626317 15298 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0418 16:10:24.626324 15298 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0418 16:10:24.626366 15298 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0418 16:10:24.626375 15298 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0418 16:10:24.626379 15298 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0418 16:10:24.626384 15298 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0418 16:10:24.626386 15298 net.cpp:165] Memory required for data: 10172390076
I0418 16:10:24.626390 15298 layer_factory.hpp:77] Creating layer rpn-data
I0418 16:10:24.626822 15298 net.cpp:100] Creating Layer rpn-data
I0418 16:10:24.626837 15298 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0418 16:10:24.626842 15298 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0418 16:10:24.626847 15298 net.cpp:434] rpn-data <- data_data_0_split_1
I0418 16:10:24.626852 15298 net.cpp:408] rpn-data -> rpn_labels
I0418 16:10:24.626858 15298 net.cpp:408] rpn-data -> rpn_twin_targets
I0418 16:10:24.626865 15298 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0418 16:10:24.626870 15298 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0418 16:10:24.629117 15298 net.cpp:150] Setting up rpn-data
I0418 16:10:24.629132 15298 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0418 16:10:24.629135 15298 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 16:10:24.629139 15298 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 16:10:24.629143 15298 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 16:10:24.629146 15298 net.cpp:165] Memory required for data: 10172489532
I0418 16:10:24.629150 15298 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0418 16:10:24.629156 15298 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0418 16:10:24.629160 15298 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0418 16:10:24.629166 15298 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0418 16:10:24.629173 15298 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0418 16:10:24.629204 15298 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0418 16:10:24.629211 15298 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0418 16:10:24.629215 15298 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0418 16:10:24.629218 15298 net.cpp:165] Memory required for data: 10172517948
I0418 16:10:24.629222 15298 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0418 16:10:24.629231 15298 net.cpp:100] Creating Layer rpn_loss_cls
I0418 16:10:24.629235 15298 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0418 16:10:24.629240 15298 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0418 16:10:24.629245 15298 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0418 16:10:24.629256 15298 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0418 16:10:24.629667 15298 net.cpp:150] Setting up rpn_loss_cls
I0418 16:10:24.629680 15298 net.cpp:157] Top shape: (1)
I0418 16:10:24.629683 15298 net.cpp:160]     with loss weight 1
I0418 16:10:24.629695 15298 net.cpp:165] Memory required for data: 10172517952
I0418 16:10:24.629699 15298 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0418 16:10:24.629711 15298 net.cpp:100] Creating Layer rpn_loss_twin
I0418 16:10:24.629716 15298 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0418 16:10:24.629720 15298 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0418 16:10:24.629724 15298 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0418 16:10:24.629729 15298 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0418 16:10:24.629734 15298 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0418 16:10:24.629807 15298 net.cpp:150] Setting up rpn_loss_twin
I0418 16:10:24.629815 15298 net.cpp:157] Top shape: (1)
I0418 16:10:24.629820 15298 net.cpp:160]     with loss weight 1
I0418 16:10:24.629824 15298 net.cpp:165] Memory required for data: 10172517956
I0418 16:10:24.629828 15298 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0418 16:10:24.629835 15298 net.cpp:100] Creating Layer rpn_accuarcy
I0418 16:10:24.629839 15298 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0418 16:10:24.629843 15298 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0418 16:10:24.629848 15298 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0418 16:10:24.629853 15298 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0418 16:10:24.629890 15298 net.cpp:150] Setting up rpn_accuarcy
I0418 16:10:24.629899 15298 net.cpp:157] Top shape: (1)
I0418 16:10:24.629902 15298 net.cpp:157] Top shape: 2 (2)
I0418 16:10:24.629905 15298 net.cpp:165] Memory required for data: 10172517968
I0418 16:10:24.629909 15298 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0418 16:10:24.629914 15298 net.cpp:100] Creating Layer rpn_cls_prob
I0418 16:10:24.629917 15298 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0418 16:10:24.629922 15298 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0418 16:10:24.630911 15298 net.cpp:150] Setting up rpn_cls_prob
I0418 16:10:24.630923 15298 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0418 16:10:24.630928 15298 net.cpp:165] Memory required for data: 10172546384
I0418 16:10:24.630930 15298 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0418 16:10:24.630937 15298 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0418 16:10:24.630941 15298 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0418 16:10:24.630947 15298 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0418 16:10:24.630973 15298 net.cpp:150] Setting up rpn_cls_prob_reshape
I0418 16:10:24.630981 15298 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 16:10:24.630986 15298 net.cpp:165] Memory required for data: 10172574800
I0418 16:10:24.630991 15298 layer_factory.hpp:77] Creating layer proposal
I0418 16:10:24.631582 15298 net.cpp:100] Creating Layer proposal
I0418 16:10:24.631594 15298 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0418 16:10:24.631603 15298 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0418 16:10:24.631611 15298 net.cpp:408] proposal -> rpn_rois
I0418 16:10:24.634233 15298 net.cpp:150] Setting up proposal
I0418 16:10:24.634248 15298 net.cpp:157] Top shape: 1 3 (3)
I0418 16:10:24.634253 15298 net.cpp:165] Memory required for data: 10172574812
I0418 16:10:24.634256 15298 layer_factory.hpp:77] Creating layer roi-data
I0418 16:10:24.634393 15298 net.cpp:100] Creating Layer roi-data
I0418 16:10:24.634404 15298 net.cpp:434] roi-data <- rpn_rois
I0418 16:10:24.634410 15298 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0418 16:10:24.634416 15298 net.cpp:408] roi-data -> rois
I0418 16:10:24.634424 15298 net.cpp:408] roi-data -> labels
I0418 16:10:24.634429 15298 net.cpp:408] roi-data -> twin_targets
I0418 16:10:24.634435 15298 net.cpp:408] roi-data -> twin_inside_weights
I0418 16:10:24.634440 15298 net.cpp:408] roi-data -> twin_outside_weights
I0418 16:10:24.634739 15298 net.cpp:150] Setting up roi-data
I0418 16:10:24.634753 15298 net.cpp:157] Top shape: 1 3 (3)
I0418 16:10:24.634757 15298 net.cpp:157] Top shape: 1 99 (99)
I0418 16:10:24.634780 15298 net.cpp:157] Top shape: 1 198 (198)
I0418 16:10:24.634784 15298 net.cpp:157] Top shape: 1 198 (198)
I0418 16:10:24.634788 15298 net.cpp:157] Top shape: 1 198 (198)
I0418 16:10:24.634791 15298 net.cpp:165] Memory required for data: 10172577596
I0418 16:10:24.634795 15298 layer_factory.hpp:77] Creating layer roi_pool5
I0418 16:10:24.634804 15298 net.cpp:100] Creating Layer roi_pool5
I0418 16:10:24.634809 15298 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0418 16:10:24.634814 15298 net.cpp:434] roi_pool5 <- rois
I0418 16:10:24.634819 15298 net.cpp:408] roi_pool5 -> pool5
I0418 16:10:24.634827 15298 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0418 16:10:24.634836 15298 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0418 16:10:24.634871 15298 net.cpp:150] Setting up roi_pool5
I0418 16:10:24.634881 15298 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0418 16:10:24.634886 15298 net.cpp:165] Memory required for data: 10172610364
I0418 16:10:24.634889 15298 layer_factory.hpp:77] Creating layer fc6
I0418 16:10:24.634898 15298 net.cpp:100] Creating Layer fc6
I0418 16:10:24.634902 15298 net.cpp:434] fc6 <- pool5
I0418 16:10:24.634907 15298 net.cpp:408] fc6 -> fc6
I0418 16:10:25.515842 15298 net.cpp:150] Setting up fc6
I0418 16:10:25.515869 15298 net.cpp:157] Top shape: 1 4096 (4096)
I0418 16:10:25.515873 15298 net.cpp:165] Memory required for data: 10172626748
I0418 16:10:25.515883 15298 layer_factory.hpp:77] Creating layer relu6
I0418 16:10:25.515894 15298 net.cpp:100] Creating Layer relu6
I0418 16:10:25.515899 15298 net.cpp:434] relu6 <- fc6
I0418 16:10:25.515907 15298 net.cpp:395] relu6 -> fc6 (in-place)
I0418 16:10:25.516384 15298 net.cpp:150] Setting up relu6
I0418 16:10:25.516398 15298 net.cpp:157] Top shape: 1 4096 (4096)
I0418 16:10:25.516402 15298 net.cpp:165] Memory required for data: 10172643132
I0418 16:10:25.516407 15298 layer_factory.hpp:77] Creating layer drop6
I0418 16:10:25.516420 15298 net.cpp:100] Creating Layer drop6
I0418 16:10:25.516427 15298 net.cpp:434] drop6 <- fc6
I0418 16:10:25.516438 15298 net.cpp:395] drop6 -> fc6 (in-place)
I0418 16:10:25.516480 15298 net.cpp:150] Setting up drop6
I0418 16:10:25.516494 15298 net.cpp:157] Top shape: 1 4096 (4096)
I0418 16:10:25.516499 15298 net.cpp:165] Memory required for data: 10172659516
I0418 16:10:25.516504 15298 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0418 16:10:25.516515 15298 net.cpp:100] Creating Layer fc6_drop6_0_split
I0418 16:10:25.516522 15298 net.cpp:434] fc6_drop6_0_split <- fc6
I0418 16:10:25.516530 15298 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0418 16:10:25.516541 15298 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0418 16:10:25.516584 15298 net.cpp:150] Setting up fc6_drop6_0_split
I0418 16:10:25.516597 15298 net.cpp:157] Top shape: 1 4096 (4096)
I0418 16:10:25.516603 15298 net.cpp:157] Top shape: 1 4096 (4096)
I0418 16:10:25.516611 15298 net.cpp:165] Memory required for data: 10172692284
I0418 16:10:25.516618 15298 layer_factory.hpp:77] Creating layer cls_score
I0418 16:10:25.516628 15298 net.cpp:100] Creating Layer cls_score
I0418 16:10:25.516635 15298 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0418 16:10:25.516643 15298 net.cpp:408] cls_score -> cls_score
I0418 16:10:25.527652 15298 net.cpp:150] Setting up cls_score
I0418 16:10:25.527679 15298 net.cpp:157] Top shape: 1 99 (99)
I0418 16:10:25.527683 15298 net.cpp:165] Memory required for data: 10172692680
I0418 16:10:25.527693 15298 layer_factory.hpp:77] Creating layer twin_pred
I0418 16:10:25.527705 15298 net.cpp:100] Creating Layer twin_pred
I0418 16:10:25.527710 15298 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0418 16:10:25.527719 15298 net.cpp:408] twin_pred -> twin_pred
I0418 16:10:25.549674 15298 net.cpp:150] Setting up twin_pred
I0418 16:10:25.549698 15298 net.cpp:157] Top shape: 1 198 (198)
I0418 16:10:25.549702 15298 net.cpp:165] Memory required for data: 10172693472
I0418 16:10:25.549713 15298 layer_factory.hpp:77] Creating layer loss_cls
I0418 16:10:25.549727 15298 net.cpp:100] Creating Layer loss_cls
I0418 16:10:25.549732 15298 net.cpp:434] loss_cls <- cls_score
I0418 16:10:25.549738 15298 net.cpp:434] loss_cls <- labels
I0418 16:10:25.549744 15298 net.cpp:408] loss_cls -> loss_cls
I0418 16:10:25.549805 15298 net.cpp:150] Setting up loss_cls
I0418 16:10:25.549813 15298 net.cpp:157] Top shape: (1)
I0418 16:10:25.549818 15298 net.cpp:160]     with loss weight 1
I0418 16:10:25.549824 15298 net.cpp:165] Memory required for data: 10172693476
I0418 16:10:25.549829 15298 layer_factory.hpp:77] Creating layer loss_twin
I0418 16:10:25.549836 15298 net.cpp:100] Creating Layer loss_twin
I0418 16:10:25.549844 15298 net.cpp:434] loss_twin <- twin_pred
I0418 16:10:25.549849 15298 net.cpp:434] loss_twin <- twin_targets
I0418 16:10:25.549854 15298 net.cpp:434] loss_twin <- twin_inside_weights
I0418 16:10:25.549856 15298 net.cpp:434] loss_twin <- twin_outside_weights
I0418 16:10:25.549861 15298 net.cpp:408] loss_twin -> loss_twin
I0418 16:10:25.549926 15298 net.cpp:150] Setting up loss_twin
I0418 16:10:25.549935 15298 net.cpp:157] Top shape: (1)
I0418 16:10:25.549938 15298 net.cpp:160]     with loss weight 1
I0418 16:10:25.549943 15298 net.cpp:165] Memory required for data: 10172693480
I0418 16:10:25.549947 15298 net.cpp:226] loss_twin needs backward computation.
I0418 16:10:25.549952 15298 net.cpp:226] loss_cls needs backward computation.
I0418 16:10:25.549955 15298 net.cpp:226] twin_pred needs backward computation.
I0418 16:10:25.549958 15298 net.cpp:226] cls_score needs backward computation.
I0418 16:10:25.549962 15298 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0418 16:10:25.549965 15298 net.cpp:226] drop6 needs backward computation.
I0418 16:10:25.549969 15298 net.cpp:226] relu6 needs backward computation.
I0418 16:10:25.549973 15298 net.cpp:226] fc6 needs backward computation.
I0418 16:10:25.549976 15298 net.cpp:226] roi_pool5 needs backward computation.
I0418 16:10:25.549980 15298 net.cpp:226] roi-data needs backward computation.
I0418 16:10:25.549984 15298 net.cpp:226] proposal needs backward computation.
I0418 16:10:25.549988 15298 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0418 16:10:25.549991 15298 net.cpp:226] rpn_cls_prob needs backward computation.
I0418 16:10:25.549995 15298 net.cpp:228] rpn_accuarcy does not need backward computation.
I0418 16:10:25.549999 15298 net.cpp:226] rpn_loss_twin needs backward computation.
I0418 16:10:25.550006 15298 net.cpp:226] rpn_loss_cls needs backward computation.
I0418 16:10:25.550012 15298 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0418 16:10:25.550016 15298 net.cpp:226] rpn-data needs backward computation.
I0418 16:10:25.550021 15298 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0418 16:10:25.550025 15298 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0418 16:10:25.550029 15298 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0418 16:10:25.550034 15298 net.cpp:226] rpn_twin_pred needs backward computation.
I0418 16:10:25.550037 15298 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0418 16:10:25.550041 15298 net.cpp:226] rpn_cls_score needs backward computation.
I0418 16:10:25.550045 15298 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0418 16:10:25.550050 15298 net.cpp:226] rpn/output_pool needs backward computation.
I0418 16:10:25.550053 15298 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0418 16:10:25.550056 15298 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0418 16:10:25.550060 15298 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0418 16:10:25.550065 15298 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0418 16:10:25.550067 15298 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0418 16:10:25.550071 15298 net.cpp:226] relu5b needs backward computation.
I0418 16:10:25.550076 15298 net.cpp:226] conv5b needs backward computation.
I0418 16:10:25.550078 15298 net.cpp:226] relu5a needs backward computation.
I0418 16:10:25.550083 15298 net.cpp:226] conv5a needs backward computation.
I0418 16:10:25.550086 15298 net.cpp:226] pool4 needs backward computation.
I0418 16:10:25.550091 15298 net.cpp:226] relu4b needs backward computation.
I0418 16:10:25.550094 15298 net.cpp:226] conv4b needs backward computation.
I0418 16:10:25.550097 15298 net.cpp:226] relu4a needs backward computation.
I0418 16:10:25.550101 15298 net.cpp:226] conv4a needs backward computation.
I0418 16:10:25.550104 15298 net.cpp:226] pool3 needs backward computation.
I0418 16:10:25.550108 15298 net.cpp:226] relu3b needs backward computation.
I0418 16:10:25.550112 15298 net.cpp:226] conv3b needs backward computation.
I0418 16:10:25.550115 15298 net.cpp:226] relu3a needs backward computation.
I0418 16:10:25.550119 15298 net.cpp:226] conv3a needs backward computation.
I0418 16:10:25.550122 15298 net.cpp:228] pool2 does not need backward computation.
I0418 16:10:25.550127 15298 net.cpp:228] relu2a does not need backward computation.
I0418 16:10:25.550130 15298 net.cpp:228] conv2a does not need backward computation.
I0418 16:10:25.550134 15298 net.cpp:228] pool1 does not need backward computation.
I0418 16:10:25.550138 15298 net.cpp:228] relu1a does not need backward computation.
I0418 16:10:25.550142 15298 net.cpp:228] conv1a does not need backward computation.
I0418 16:10:25.550146 15298 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0418 16:10:25.550150 15298 net.cpp:228] data_data_0_split does not need backward computation.
I0418 16:10:25.550154 15298 net.cpp:228] data does not need backward computation.
I0418 16:10:25.550158 15298 net.cpp:270] This network produces output loss_cls
I0418 16:10:25.550161 15298 net.cpp:270] This network produces output loss_twin
I0418 16:10:25.550165 15298 net.cpp:270] This network produces output rpn_accuarcy
I0418 16:10:25.550168 15298 net.cpp:270] This network produces output rpn_accuarcy_class
I0418 16:10:25.550173 15298 net.cpp:270] This network produces output rpn_cls_loss
I0418 16:10:25.550175 15298 net.cpp:270] This network produces output rpn_loss_twin
I0418 16:10:25.550209 15298 net.cpp:283] Network initialization done.
I0418 16:10:25.550343 15298 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0418 16:10:26.323545 15298 net.cpp:761] Ignoring source layer pool5
I0418 16:10:26.343683 15298 net.cpp:761] Ignoring source layer fc7
I0418 16:10:26.343698 15298 net.cpp:761] Ignoring source layer relu7
I0418 16:10:26.343700 15298 net.cpp:761] Ignoring source layer drop7
I0418 16:10:26.343703 15298 net.cpp:761] Ignoring source layer fc8-200
I0418 16:10:26.343706 15298 net.cpp:761] Ignoring source layer loss
Solving...
rpn: num_positive 15
rpn: num_negative 49
I0418 16:10:29.295838 15298 accuracy_layer.cpp:96] Accuracy: 0.515625
I0418 16:10:29.295862 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.428571
I0418 16:10:29.295867 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 11
num bg: 93
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(104, 99)
this part is done
I0418 16:10:29.394215 15298 solver.cpp:228] Iteration 0, loss = 89.5727
I0418 16:10:29.394254 15298 solver.cpp:244]     Train net output #0: loss_cls = 88.7826 (* 1 = 88.7826 loss)
I0418 16:10:29.394268 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:10:29.394276 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.515625
I0418 16:10:29.394289 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.428571
I0418 16:10:29.394294 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 16:10:29.394304 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.682468 (* 1 = 0.682468 loss)
I0418 16:10:29.394315 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.107608 (* 1 = 0.107608 loss)
I0418 16:10:29.394330 15298 sgd_solver.cpp:106] Iteration 0, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:10:35.612870 15298 accuracy_layer.cpp:96] Accuracy: 0.46875
I0418 16:10:35.612893 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.387755
I0418 16:10:35.612898 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.733333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 13
num bg: 86
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(99, 99)
this part is done
I0418 16:10:35.657974 15298 solver.cpp:228] Iteration 1, loss = 62.452
I0418 16:10:35.658002 15298 solver.cpp:244]     Train net output #0: loss_cls = 61.6946 (* 1 = 61.6946 loss)
I0418 16:10:35.658010 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:10:35.658015 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.46875
I0418 16:10:35.658018 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.387755
I0418 16:10:35.658022 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.733333
I0418 16:10:35.658027 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.688692 (* 1 = 0.688692 loss)
I0418 16:10:35.658032 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0687435 (* 1 = 0.0687435 loss)
I0418 16:10:35.658038 15298 sgd_solver.cpp:106] Iteration 1, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:10:42.082321 15298 accuracy_layer.cpp:96] Accuracy: 0.53125
I0418 16:10:42.082345 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.469388
I0418 16:10:42.082351 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.733333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 85
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(97, 99)
this part is done
I0418 16:10:42.136318 15298 solver.cpp:228] Iteration 2, loss = 52.8828
I0418 16:10:42.136345 15298 solver.cpp:244]     Train net output #0: loss_cls = 52.1089 (* 1 = 52.1089 loss)
I0418 16:10:42.136353 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:10:42.136358 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.53125
I0418 16:10:42.136363 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.469388
I0418 16:10:42.136368 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.733333
I0418 16:10:42.136373 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.686943 (* 1 = 0.686943 loss)
I0418 16:10:42.136378 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0869468 (* 1 = 0.0869468 loss)
I0418 16:10:42.136384 15298 sgd_solver.cpp:106] Iteration 2, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:10:48.687057 15298 accuracy_layer.cpp:96] Accuracy: 0.5625
I0418 16:10:48.687079 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.489796
I0418 16:10:48.687084 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 85
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(97, 99)
this part is done
I0418 16:10:48.747128 15298 solver.cpp:228] Iteration 3, loss = 34.0153
I0418 16:10:48.747157 15298 solver.cpp:244]     Train net output #0: loss_cls = 33.2531 (* 1 = 33.2531 loss)
I0418 16:10:48.747165 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:10:48.747170 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.5625
I0418 16:10:48.747174 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.489796
I0418 16:10:48.747179 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 16:10:48.747184 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.679384 (* 1 = 0.679384 loss)
I0418 16:10:48.747189 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0828306 (* 1 = 0.0828306 loss)
I0418 16:10:48.747195 15298 sgd_solver.cpp:106] Iteration 3, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:10:55.174793 15298 accuracy_layer.cpp:96] Accuracy: 0.453125
I0418 16:10:55.174823 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.367347
I0418 16:10:55.174829 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.733333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 10)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 10
num bg: 77
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(87, 99)
this part is done
I0418 16:10:55.229722 15298 solver.cpp:228] Iteration 4, loss = 6.61958
I0418 16:10:55.229750 15298 solver.cpp:244]     Train net output #0: loss_cls = 5.69533 (* 1 = 5.69533 loss)
I0418 16:10:55.229758 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:10:55.229761 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.453125
I0418 16:10:55.229766 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.367347
I0418 16:10:55.229770 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.733333
I0418 16:10:55.229774 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.643666 (* 1 = 0.643666 loss)
I0418 16:10:55.229779 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.28058 (* 1 = 0.28058 loss)
I0418 16:10:55.229785 15298 sgd_solver.cpp:106] Iteration 4, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:11:01.640022 15298 accuracy_layer.cpp:96] Accuracy: 0.5625
I0418 16:11:01.640048 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.510204
I0418 16:11:01.640053 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.733333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 9)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]
num fg: 9
num bg: 70
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(79, 99)
this part is done
I0418 16:11:01.691982 15298 solver.cpp:228] Iteration 5, loss = 2.55257
I0418 16:11:01.692010 15298 solver.cpp:244]     Train net output #0: loss_cls = 1.33105 (* 1 = 1.33105 loss)
I0418 16:11:01.692018 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:11:01.692023 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.5625
I0418 16:11:01.692028 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.510204
I0418 16:11:01.692032 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.733333
I0418 16:11:01.692037 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.837189 (* 1 = 0.837189 loss)
I0418 16:11:01.692042 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.384331 (* 1 = 0.384331 loss)
I0418 16:11:01.692049 15298 sgd_solver.cpp:106] Iteration 5, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:11:08.100713 15298 accuracy_layer.cpp:96] Accuracy: 0.484375
I0418 16:11:08.100735 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.387755
I0418 16:11:08.100751 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 9)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]
num fg: 9
num bg: 52
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(61, 99)
this part is done
I0418 16:11:08.152626 15298 solver.cpp:228] Iteration 6, loss = 3.87799
I0418 16:11:08.152654 15298 solver.cpp:244]     Train net output #0: loss_cls = 2.10132 (* 1 = 2.10132 loss)
I0418 16:11:08.152662 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:11:08.152665 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.484375
I0418 16:11:08.152670 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.387755
I0418 16:11:08.152674 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 16:11:08.152678 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.898192 (* 1 = 0.898192 loss)
I0418 16:11:08.152683 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.878477 (* 1 = 0.878477 loss)
I0418 16:11:08.152688 15298 sgd_solver.cpp:106] Iteration 6, lr = 0.0001
rpn: num_positive 12
rpn: num_negative 52
I0418 16:11:14.583945 15298 accuracy_layer.cpp:96] Accuracy: 0.53125
I0418 16:11:14.583966 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.480769
I0418 16:11:14.583971 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.75
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 9)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 9
num bg: 39
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(48, 99)
this part is done
I0418 16:11:14.609973 15298 solver.cpp:228] Iteration 7, loss = 7.37124
I0418 16:11:14.610000 15298 solver.cpp:244]     Train net output #0: loss_cls = 5.10215 (* 1 = 5.10215 loss)
I0418 16:11:14.610008 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:11:14.610013 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.53125
I0418 16:11:14.610018 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.480769
I0418 16:11:14.610021 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.75
I0418 16:11:14.610026 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 1.40551 (* 1 = 1.40551 loss)
I0418 16:11:14.610031 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.863585 (* 1 = 0.863585 loss)
I0418 16:11:14.610038 15298 sgd_solver.cpp:106] Iteration 7, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:11:21.016221 15298 accuracy_layer.cpp:96] Accuracy: 0.625
I0418 16:11:21.016245 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.510204
I0418 16:11:21.016250 15298 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 54
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(66, 99)
this part is done
I0418 16:11:21.069907 15298 solver.cpp:228] Iteration 8, loss = 14.8453
I0418 16:11:21.069941 15298 solver.cpp:244]     Train net output #0: loss_cls = 12.5403 (* 1 = 12.5403 loss)
I0418 16:11:21.069952 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:11:21.069959 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.625
I0418 16:11:21.069970 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.510204
I0418 16:11:21.069978 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 16:11:21.069983 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 1.84225 (* 1 = 1.84225 loss)
I0418 16:11:21.069988 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.462789 (* 1 = 0.462789 loss)
I0418 16:11:21.069994 15298 sgd_solver.cpp:106] Iteration 8, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:11:27.445399 15298 accuracy_layer.cpp:96] Accuracy: 0.734375
I0418 16:11:27.445423 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.673469
I0418 16:11:27.445428 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.933333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 11
num bg: 58
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(69, 99)
this part is done
I0418 16:11:27.508195 15298 solver.cpp:228] Iteration 9, loss = 9.43783
I0418 16:11:27.508226 15298 solver.cpp:244]     Train net output #0: loss_cls = 8.20115 (* 1 = 8.20115 loss)
I0418 16:11:27.508234 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:11:27.508239 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.734375
I0418 16:11:27.508242 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.673469
I0418 16:11:27.508246 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.933333
I0418 16:11:27.508252 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.769144 (* 1 = 0.769144 loss)
I0418 16:11:27.508257 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.467536 (* 1 = 0.467536 loss)
I0418 16:11:27.508262 15298 sgd_solver.cpp:106] Iteration 9, lr = 0.0001
speed: 6.114s / iter
rpn: num_positive 15
rpn: num_negative 49
I0418 16:11:33.873896 15298 accuracy_layer.cpp:96] Accuracy: 0.6875
I0418 16:11:33.873919 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.673469
I0418 16:11:33.873924 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.733333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 9)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 9
num bg: 71
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(80, 99)
this part is done
I0418 16:11:33.922420 15298 solver.cpp:228] Iteration 10, loss = 2.59813
I0418 16:11:33.922452 15298 solver.cpp:244]     Train net output #0: loss_cls = 1.5978 (* 1 = 1.5978 loss)
I0418 16:11:33.922463 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:11:33.922472 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.6875
I0418 16:11:33.922478 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.673469
I0418 16:11:33.922485 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.733333
I0418 16:11:33.922493 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.652455 (* 1 = 0.652455 loss)
I0418 16:11:33.922503 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.347873 (* 1 = 0.347873 loss)
I0418 16:11:33.922513 15298 sgd_solver.cpp:106] Iteration 10, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:11:40.302100 15298 accuracy_layer.cpp:96] Accuracy: 0.6875
I0418 16:11:40.302122 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.673469
I0418 16:11:40.302129 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.733333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.]
num fg: 13
num bg: 81
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(94, 99)
this part is done
I0418 16:11:40.360740 15298 solver.cpp:228] Iteration 11, loss = 1.40641
I0418 16:11:40.360771 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.646889 (* 1 = 0.646889 loss)
I0418 16:11:40.360783 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:11:40.360791 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.6875
I0418 16:11:40.360798 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.673469
I0418 16:11:40.360805 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.733333
I0418 16:11:40.360815 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.637916 (* 1 = 0.637916 loss)
I0418 16:11:40.360824 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.121603 (* 1 = 0.121603 loss)
I0418 16:11:40.360834 15298 sgd_solver.cpp:106] Iteration 11, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:11:46.719555 15298 accuracy_layer.cpp:96] Accuracy: 0.65625
I0418 16:11:46.719579 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.571429
I0418 16:11:46.719588 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.933333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 11
num bg: 88
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(99, 99)
this part is done
I0418 16:11:46.774255 15298 solver.cpp:228] Iteration 12, loss = 2.25867
I0418 16:11:46.774288 15298 solver.cpp:244]     Train net output #0: loss_cls = 1.55927 (* 1 = 1.55927 loss)
I0418 16:11:46.774299 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:11:46.774307 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.65625
I0418 16:11:46.774314 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.571429
I0418 16:11:46.774322 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.933333
I0418 16:11:46.774329 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.625884 (* 1 = 0.625884 loss)
I0418 16:11:46.774339 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0735132 (* 1 = 0.0735132 loss)
I0418 16:11:46.774348 15298 sgd_solver.cpp:106] Iteration 12, lr = 0.0001
rpn: num_positive 12
rpn: num_negative 52
I0418 16:11:53.149359 15298 accuracy_layer.cpp:96] Accuracy: 0.734375
I0418 16:11:53.149390 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.75
I0418 16:11:53.149400 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.]
num fg: 12
num bg: 63
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(75, 99)
this part is done
I0418 16:11:53.186748 15298 solver.cpp:228] Iteration 13, loss = 2.36482
I0418 16:11:53.186803 15298 solver.cpp:244]     Train net output #0: loss_cls = 1.63013 (* 1 = 1.63013 loss)
I0418 16:11:53.186813 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:11:53.186818 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.734375
I0418 16:11:53.186825 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.75
I0418 16:11:53.186828 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.666667
I0418 16:11:53.186833 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.666636 (* 1 = 0.666636 loss)
I0418 16:11:53.186839 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0680569 (* 1 = 0.0680569 loss)
I0418 16:11:53.186846 15298 sgd_solver.cpp:106] Iteration 13, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:11:59.554898 15298 accuracy_layer.cpp:96] Accuracy: 0.59375
I0418 16:11:59.554922 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.591837
I0418 16:11:59.554927 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.6
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 15)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.]
num fg: 15
num bg: 77
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(92, 99)
this part is done
I0418 16:11:59.591125 15298 solver.cpp:228] Iteration 14, loss = 1.94503
I0418 16:11:59.591154 15298 solver.cpp:244]     Train net output #0: loss_cls = 1.21707 (* 1 = 1.21707 loss)
I0418 16:11:59.591161 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:11:59.591166 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.59375
I0418 16:11:59.591171 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.591837
I0418 16:11:59.591178 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.6
I0418 16:11:59.591184 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.666511 (* 1 = 0.666511 loss)
I0418 16:11:59.591192 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0614452 (* 1 = 0.0614452 loss)
I0418 16:11:59.591198 15298 sgd_solver.cpp:106] Iteration 14, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:12:05.938207 15298 accuracy_layer.cpp:96] Accuracy: 0.71875
I0418 16:12:05.938230 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.755102
I0418 16:12:05.938235 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.6
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.]
num fg: 11
num bg: 83
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(94, 99)
this part is done
I0418 16:12:05.994824 15298 solver.cpp:228] Iteration 15, loss = 1.26743
I0418 16:12:05.994855 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.523232 (* 1 = 0.523232 loss)
I0418 16:12:05.994863 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:12:05.994868 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.71875
I0418 16:12:05.994871 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.755102
I0418 16:12:05.994875 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.6
I0418 16:12:05.994880 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.608595 (* 1 = 0.608595 loss)
I0418 16:12:05.994885 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.135605 (* 1 = 0.135605 loss)
I0418 16:12:05.994891 15298 sgd_solver.cpp:106] Iteration 15, lr = 0.0001
rpn: num_positive 9
rpn: num_negative 55
I0418 16:12:12.352170 15298 accuracy_layer.cpp:96] Accuracy: 0.640625
I0418 16:12:12.352195 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.709091
I0418 16:12:12.352198 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.222222
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 13
num bg: 58
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(71, 99)
this part is done
I0418 16:12:12.400205 15298 solver.cpp:228] Iteration 16, loss = 1.72239
I0418 16:12:12.400240 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.916105 (* 1 = 0.916105 loss)
I0418 16:12:12.400254 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:12:12.400264 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.640625
I0418 16:12:12.400270 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.709091
I0418 16:12:12.400277 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.222222
I0418 16:12:12.400286 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.67608 (* 1 = 0.67608 loss)
I0418 16:12:12.400295 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.130209 (* 1 = 0.130209 loss)
I0418 16:12:12.400305 15298 sgd_solver.cpp:106] Iteration 16, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:12:18.752874 15298 accuracy_layer.cpp:96] Accuracy: 0.6875
I0418 16:12:18.752897 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.755102
I0418 16:12:18.752904 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.466667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 70
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(82, 99)
this part is done
I0418 16:12:18.812562 15298 solver.cpp:228] Iteration 17, loss = 1.86662
I0418 16:12:18.812592 15298 solver.cpp:244]     Train net output #0: loss_cls = 1.04437 (* 1 = 1.04437 loss)
I0418 16:12:18.812602 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:12:18.812609 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.6875
I0418 16:12:18.812618 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.755102
I0418 16:12:18.812623 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.466667
I0418 16:12:18.812630 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.649736 (* 1 = 0.649736 loss)
I0418 16:12:18.812651 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.172512 (* 1 = 0.172512 loss)
I0418 16:12:18.812660 15298 sgd_solver.cpp:106] Iteration 17, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:12:25.183734 15298 accuracy_layer.cpp:96] Accuracy: 0.765625
I0418 16:12:25.183758 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.857143
I0418 16:12:25.183763 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.466667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.]
num fg: 12
num bg: 83
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(95, 99)
this part is done
I0418 16:12:25.233592 15298 solver.cpp:228] Iteration 18, loss = 1.34084
I0418 16:12:25.233619 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.621163 (* 1 = 0.621163 loss)
I0418 16:12:25.233626 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:12:25.233630 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.765625
I0418 16:12:25.233635 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.857143
I0418 16:12:25.233639 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.466667
I0418 16:12:25.233644 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.577526 (* 1 = 0.577526 loss)
I0418 16:12:25.233649 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.142153 (* 1 = 0.142153 loss)
I0418 16:12:25.233654 15298 sgd_solver.cpp:106] Iteration 18, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:12:31.568898 15298 accuracy_layer.cpp:96] Accuracy: 0.75
I0418 16:12:31.568922 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.836735
I0418 16:12:31.568928 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.466667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 13
num bg: 75
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(88, 99)
this part is done
I0418 16:12:31.619227 15298 solver.cpp:228] Iteration 19, loss = 1.37909
I0418 16:12:31.619254 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.679666 (* 1 = 0.679666 loss)
I0418 16:12:31.619261 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:12:31.619266 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.75
I0418 16:12:31.619271 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.836735
I0418 16:12:31.619274 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.466667
I0418 16:12:31.619279 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.590408 (* 1 = 0.590408 loss)
I0418 16:12:31.619283 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.109018 (* 1 = 0.109018 loss)
I0418 16:12:31.619289 15298 sgd_solver.cpp:106] Iteration 19, lr = 0.0001
speed: 6.263s / iter
rpn: num_positive 15
rpn: num_negative 49
I0418 16:12:37.949205 15298 accuracy_layer.cpp:96] Accuracy: 0.78125
I0418 16:12:37.949229 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.877551
I0418 16:12:37.949234 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.466667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 15)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 15
num bg: 75
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(90, 99)
this part is done
I0418 16:12:38.003170 15298 solver.cpp:228] Iteration 20, loss = 1.34743
I0418 16:12:38.003195 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.699853 (* 1 = 0.699853 loss)
I0418 16:12:38.003202 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:12:38.003207 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.78125
I0418 16:12:38.003211 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.877551
I0418 16:12:38.003216 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.466667
I0418 16:12:38.003221 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.57184 (* 1 = 0.57184 loss)
I0418 16:12:38.003227 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0757358 (* 1 = 0.0757358 loss)
I0418 16:12:38.003233 15298 sgd_solver.cpp:106] Iteration 20, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:12:44.347375 15298 accuracy_layer.cpp:96] Accuracy: 0.75
I0418 16:12:44.347398 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.816327
I0418 16:12:44.347404 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.533333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 88
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(100, 99)
this part is done
I0418 16:12:44.388325 15298 solver.cpp:228] Iteration 21, loss = 1.2221
I0418 16:12:44.388353 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.570868 (* 1 = 0.570868 loss)
I0418 16:12:44.388361 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:12:44.388366 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.75
I0418 16:12:44.388370 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.816327
I0418 16:12:44.388375 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.533333
I0418 16:12:44.388381 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.592006 (* 1 = 0.592006 loss)
I0418 16:12:44.388386 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0592261 (* 1 = 0.0592261 loss)
I0418 16:12:44.388393 15298 sgd_solver.cpp:106] Iteration 21, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:12:50.701649 15298 accuracy_layer.cpp:96] Accuracy: 0.75
I0418 16:12:50.701673 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.77551
I0418 16:12:50.701678 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]
num fg: 11
num bg: 86
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(97, 99)
this part is done
I0418 16:12:50.755179 15298 solver.cpp:228] Iteration 22, loss = 1.05572
I0418 16:12:50.755210 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.414206 (* 1 = 0.414206 loss)
I0418 16:12:50.755223 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:12:50.755229 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.75
I0418 16:12:50.755240 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.77551
I0418 16:12:50.755249 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.666667
I0418 16:12:50.755254 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.592434 (* 1 = 0.592434 loss)
I0418 16:12:50.755264 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.049082 (* 1 = 0.049082 loss)
I0418 16:12:50.755270 15298 sgd_solver.cpp:106] Iteration 22, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:12:57.088027 15298 accuracy_layer.cpp:96] Accuracy: 0.78125
I0418 16:12:57.088050 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.816327
I0418 16:12:57.088055 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 15)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.]
num fg: 15
num bg: 79
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(94, 99)
this part is done
I0418 16:12:57.142495 15298 solver.cpp:228] Iteration 23, loss = 1.22836
I0418 16:12:57.142524 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.625752 (* 1 = 0.625752 loss)
I0418 16:12:57.142531 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:12:57.142536 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.78125
I0418 16:12:57.142540 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.816327
I0418 16:12:57.142544 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.666667
I0418 16:12:57.142549 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.564029 (* 1 = 0.564029 loss)
I0418 16:12:57.142554 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.038579 (* 1 = 0.038579 loss)
I0418 16:12:57.142560 15298 sgd_solver.cpp:106] Iteration 23, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:13:03.457964 15298 accuracy_layer.cpp:96] Accuracy: 0.796875
I0418 16:13:03.457990 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.836735
I0418 16:13:03.457998 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 14)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.]
num fg: 14
num bg: 81
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(95, 99)
this part is done
I0418 16:13:03.493621 15298 solver.cpp:228] Iteration 24, loss = 1.26057
I0418 16:13:03.493652 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.642613 (* 1 = 0.642613 loss)
I0418 16:13:03.493660 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:13:03.493666 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.796875
I0418 16:13:03.493670 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.836735
I0418 16:13:03.493674 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.666667
I0418 16:13:03.493680 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.577145 (* 1 = 0.577145 loss)
I0418 16:13:03.493685 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0408148 (* 1 = 0.0408148 loss)
I0418 16:13:03.493690 15298 sgd_solver.cpp:106] Iteration 24, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:13:09.817875 15298 accuracy_layer.cpp:96] Accuracy: 0.6875
I0418 16:13:09.817899 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.693878
I0418 16:13:09.817904 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 9)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]
num fg: 9
num bg: 88
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(97, 99)
this part is done
I0418 16:13:09.854627 15298 solver.cpp:228] Iteration 25, loss = 1.10816
I0418 16:13:09.854653 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.459444 (* 1 = 0.459444 loss)
I0418 16:13:09.854662 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:13:09.854667 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.6875
I0418 16:13:09.854671 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.693878
I0418 16:13:09.854676 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.666667
I0418 16:13:09.854679 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.606467 (* 1 = 0.606467 loss)
I0418 16:13:09.854686 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0422451 (* 1 = 0.0422451 loss)
I0418 16:13:09.854691 15298 sgd_solver.cpp:106] Iteration 25, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:13:16.170795 15298 accuracy_layer.cpp:96] Accuracy: 0.859375
I0418 16:13:16.170820 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.897959
I0418 16:13:16.170825 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.733333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 7)
[ 1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.]
num fg: 7
num bg: 89
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(96, 99)
this part is done
I0418 16:13:16.228492 15298 solver.cpp:228] Iteration 26, loss = 0.93767
I0418 16:13:16.228523 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.348615 (* 1 = 0.348615 loss)
I0418 16:13:16.228531 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:13:16.228536 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.859375
I0418 16:13:16.228540 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.897959
I0418 16:13:16.228544 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.733333
I0418 16:13:16.228550 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.556819 (* 1 = 0.556819 loss)
I0418 16:13:16.228555 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0322365 (* 1 = 0.0322365 loss)
I0418 16:13:16.228561 15298 sgd_solver.cpp:106] Iteration 26, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:13:22.577780 15298 accuracy_layer.cpp:96] Accuracy: 0.796875
I0418 16:13:22.577811 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.795918
I0418 16:13:22.577821 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 9)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 9
num bg: 78
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(87, 99)
this part is done
I0418 16:13:22.625615 15298 solver.cpp:228] Iteration 27, loss = 0.988172
I0418 16:13:22.625648 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.37631 (* 1 = 0.37631 loss)
I0418 16:13:22.625659 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:13:22.625668 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.796875
I0418 16:13:22.625677 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.795918
I0418 16:13:22.625684 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 16:13:22.625690 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.571612 (* 1 = 0.571612 loss)
I0418 16:13:22.625695 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0402505 (* 1 = 0.0402505 loss)
I0418 16:13:22.625701 15298 sgd_solver.cpp:106] Iteration 27, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:13:28.951206 15298 accuracy_layer.cpp:96] Accuracy: 0.84375
I0418 16:13:28.951238 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.877551
I0418 16:13:28.951248 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.733333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 8)
[ 1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 8
num bg: 80
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(88, 99)
this part is done
I0418 16:13:29.000207 15298 solver.cpp:228] Iteration 28, loss = 0.903046
I0418 16:13:29.000236 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.317151 (* 1 = 0.317151 loss)
I0418 16:13:29.000242 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:13:29.000247 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.84375
I0418 16:13:29.000252 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.877551
I0418 16:13:29.000255 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.733333
I0418 16:13:29.000260 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.550458 (* 1 = 0.550458 loss)
I0418 16:13:29.000265 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0354376 (* 1 = 0.0354376 loss)
I0418 16:13:29.000270 15298 sgd_solver.cpp:106] Iteration 28, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:13:35.278539 15298 accuracy_layer.cpp:96] Accuracy: 0.796875
I0418 16:13:35.278564 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.795918
I0418 16:13:35.278569 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 10)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.]
num fg: 10
num bg: 83
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(93, 99)
this part is done
I0418 16:13:35.336271 15298 solver.cpp:228] Iteration 29, loss = 1.01505
I0418 16:13:35.336302 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.423636 (* 1 = 0.423636 loss)
I0418 16:13:35.336309 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:13:35.336314 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.796875
I0418 16:13:35.336318 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.795918
I0418 16:13:35.336323 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 16:13:35.336326 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.557433 (* 1 = 0.557433 loss)
I0418 16:13:35.336333 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0339824 (* 1 = 0.0339824 loss)
I0418 16:13:35.336338 15298 sgd_solver.cpp:106] Iteration 29, lr = 0.0001
speed: 6.299s / iter
rpn: num_positive 7
rpn: num_negative 57
I0418 16:13:41.636889 15298 accuracy_layer.cpp:96] Accuracy: 0.765625
I0418 16:13:41.636912 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.824561
I0418 16:13:41.636917 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.285714
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 48
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(60, 99)
this part is done
I0418 16:13:41.671376 15298 solver.cpp:228] Iteration 30, loss = 1.31113
I0418 16:13:41.671404 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.581205 (* 1 = 0.581205 loss)
I0418 16:13:41.671411 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:13:41.671416 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.765625
I0418 16:13:41.671422 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.824561
I0418 16:13:41.671427 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.285714
I0418 16:13:41.671432 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.658319 (* 1 = 0.658319 loss)
I0418 16:13:41.671437 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0716101 (* 1 = 0.0716101 loss)
I0418 16:13:41.671443 15298 sgd_solver.cpp:106] Iteration 30, lr = 0.0001
rpn: num_positive 12
rpn: num_negative 52
I0418 16:13:47.958261 15298 accuracy_layer.cpp:96] Accuracy: 0.796875
I0418 16:13:47.958283 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.826923
I0418 16:13:47.958289 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.]
num fg: 12
num bg: 64
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(76, 99)
this part is done
I0418 16:13:48.013005 15298 solver.cpp:228] Iteration 31, loss = 1.18069
I0418 16:13:48.013034 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.479402 (* 1 = 0.479402 loss)
I0418 16:13:48.013042 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:13:48.013047 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.796875
I0418 16:13:48.013051 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.826923
I0418 16:13:48.013056 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.666667
I0418 16:13:48.013062 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.562276 (* 1 = 0.562276 loss)
I0418 16:13:48.013068 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.139015 (* 1 = 0.139015 loss)
I0418 16:13:48.013073 15298 sgd_solver.cpp:106] Iteration 31, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:13:54.309849 15298 accuracy_layer.cpp:96] Accuracy: 0.8125
I0418 16:13:54.309877 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.816327
I0418 16:13:54.309886 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 14)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.]
num fg: 14
num bg: 78
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(92, 99)
this part is done
I0418 16:13:54.359495 15298 solver.cpp:228] Iteration 32, loss = 1.07436
I0418 16:13:54.359526 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.52499 (* 1 = 0.52499 loss)
I0418 16:13:54.359534 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:13:54.359539 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.8125
I0418 16:13:54.359544 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.816327
I0418 16:13:54.359547 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 16:13:54.359552 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.4974 (* 1 = 0.4974 loss)
I0418 16:13:54.359557 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0519709 (* 1 = 0.0519709 loss)
I0418 16:13:54.359563 15298 sgd_solver.cpp:106] Iteration 32, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:14:00.689934 15298 accuracy_layer.cpp:96] Accuracy: 0.75
I0418 16:14:00.689966 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.734694
I0418 16:14:00.689977 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 11
num bg: 78
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(89, 99)
this part is done
I0418 16:14:00.753103 15298 solver.cpp:228] Iteration 33, loss = 0.992856
I0418 16:14:00.753142 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.439838 (* 1 = 0.439838 loss)
I0418 16:14:00.753157 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:14:00.753166 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.75
I0418 16:14:00.753175 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.734694
I0418 16:14:00.753182 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 16:14:00.753191 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.514512 (* 1 = 0.514512 loss)
I0418 16:14:00.753209 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0385053 (* 1 = 0.0385053 loss)
I0418 16:14:00.753221 15298 sgd_solver.cpp:106] Iteration 33, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:14:07.050338 15298 accuracy_layer.cpp:96] Accuracy: 0.828125
I0418 16:14:07.050362 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.77551
I0418 16:14:07.050369 15298 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 15)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.]
num fg: 15
num bg: 80
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(95, 99)
this part is done
I0418 16:14:07.099884 15298 solver.cpp:228] Iteration 34, loss = 0.986905
I0418 16:14:07.099915 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.419753 (* 1 = 0.419753 loss)
I0418 16:14:07.099922 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:14:07.099927 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.828125
I0418 16:14:07.099931 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.77551
I0418 16:14:07.099936 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 16:14:07.099941 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.534566 (* 1 = 0.534566 loss)
I0418 16:14:07.099946 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.032586 (* 1 = 0.032586 loss)
I0418 16:14:07.099952 15298 sgd_solver.cpp:106] Iteration 34, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:14:13.386049 15298 accuracy_layer.cpp:96] Accuracy: 0.921875
I0418 16:14:13.386072 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.897959
I0418 16:14:13.386077 15298 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 75
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(87, 99)
this part is done
I0418 16:14:13.428108 15298 solver.cpp:228] Iteration 35, loss = 0.849109
I0418 16:14:13.428133 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.355844 (* 1 = 0.355844 loss)
I0418 16:14:13.428140 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:14:13.428144 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.921875
I0418 16:14:13.428149 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.897959
I0418 16:14:13.428153 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 16:14:13.428158 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.469106 (* 1 = 0.469106 loss)
I0418 16:14:13.428164 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0241581 (* 1 = 0.0241581 loss)
I0418 16:14:13.428169 15298 sgd_solver.cpp:106] Iteration 35, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:14:19.700999 15298 accuracy_layer.cpp:96] Accuracy: 0.78125
I0418 16:14:19.701021 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.734694
I0418 16:14:19.701027 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.933333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 11
num bg: 74
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(85, 99)
this part is done
I0418 16:14:19.753796 15298 solver.cpp:228] Iteration 36, loss = 1.00603
I0418 16:14:19.753828 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.473129 (* 1 = 0.473129 loss)
I0418 16:14:19.753835 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:14:19.753840 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.78125
I0418 16:14:19.753844 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.734694
I0418 16:14:19.753849 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.933333
I0418 16:14:19.753854 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.507742 (* 1 = 0.507742 loss)
I0418 16:14:19.753861 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0251599 (* 1 = 0.0251599 loss)
I0418 16:14:19.753868 15298 sgd_solver.cpp:106] Iteration 36, lr = 0.0001
rpn: num_positive 9
rpn: num_negative 55
I0418 16:14:26.057242 15298 accuracy_layer.cpp:96] Accuracy: 0.65625
I0418 16:14:26.057265 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.709091
I0418 16:14:26.057270 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.333333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 11
num bg: 58
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(69, 99)
this part is done
I0418 16:14:26.119757 15298 solver.cpp:228] Iteration 37, loss = 1.19329
I0418 16:14:26.119786 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.501918 (* 1 = 0.501918 loss)
I0418 16:14:26.119794 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:14:26.119799 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.65625
I0418 16:14:26.119804 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.709091
I0418 16:14:26.119808 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.333333
I0418 16:14:26.119813 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.626115 (* 1 = 0.626115 loss)
I0418 16:14:26.119819 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0652597 (* 1 = 0.0652597 loss)
I0418 16:14:26.119825 15298 sgd_solver.cpp:106] Iteration 37, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:14:32.370262 15298 accuracy_layer.cpp:96] Accuracy: 0.90625
I0418 16:14:32.370296 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.877551
I0418 16:14:32.370308 15298 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 13
num bg: 77
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(90, 99)
this part is done
I0418 16:14:32.434145 15298 solver.cpp:228] Iteration 38, loss = 0.935608
I0418 16:14:32.434176 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.484875 (* 1 = 0.484875 loss)
I0418 16:14:32.434185 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:14:32.434190 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.90625
I0418 16:14:32.434193 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.877551
I0418 16:14:32.434197 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 16:14:32.434202 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.431276 (* 1 = 0.431276 loss)
I0418 16:14:32.434209 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0194574 (* 1 = 0.0194574 loss)
I0418 16:14:32.434216 15298 sgd_solver.cpp:106] Iteration 38, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:14:38.692446 15298 accuracy_layer.cpp:96] Accuracy: 0.875
I0418 16:14:38.692469 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.836735
I0418 16:14:38.692474 15298 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 13
num bg: 76
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(89, 99)
this part is done
I0418 16:14:38.754472 15298 solver.cpp:228] Iteration 39, loss = 0.882707
I0418 16:14:38.754501 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.411574 (* 1 = 0.411574 loss)
I0418 16:14:38.754509 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:14:38.754513 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.875
I0418 16:14:38.754518 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.836735
I0418 16:14:38.754521 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 16:14:38.754526 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.449311 (* 1 = 0.449311 loss)
I0418 16:14:38.754531 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0218219 (* 1 = 0.0218219 loss)
I0418 16:14:38.754536 15298 sgd_solver.cpp:106] Iteration 39, lr = 0.0001
speed: 6.310s / iter
rpn: num_positive 7
rpn: num_negative 57
I0418 16:14:45.010365 15298 accuracy_layer.cpp:96] Accuracy: 0.84375
I0418 16:14:45.010390 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.912281
I0418 16:14:45.010396 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.285714
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 51
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(63, 99)
this part is done
I0418 16:14:45.058193 15298 solver.cpp:228] Iteration 40, loss = 1.11853
I0418 16:14:45.058223 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.482332 (* 1 = 0.482332 loss)
I0418 16:14:45.058230 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:14:45.058234 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.84375
I0418 16:14:45.058239 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.912281
I0418 16:14:45.058243 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.285714
I0418 16:14:45.058248 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.577648 (* 1 = 0.577648 loss)
I0418 16:14:45.058254 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0585454 (* 1 = 0.0585454 loss)
I0418 16:14:45.058259 15298 sgd_solver.cpp:106] Iteration 40, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:14:51.341229 15298 accuracy_layer.cpp:96] Accuracy: 0.859375
I0418 16:14:51.341258 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.816327
I0418 16:14:51.341262 15298 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 74
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(86, 99)
this part is done
I0418 16:14:51.404645 15298 solver.cpp:228] Iteration 41, loss = 0.909229
I0418 16:14:51.404675 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.435025 (* 1 = 0.435025 loss)
I0418 16:14:51.404682 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:14:51.404688 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.859375
I0418 16:14:51.404693 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.816327
I0418 16:14:51.404697 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 16:14:51.404702 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.431813 (* 1 = 0.431813 loss)
I0418 16:14:51.404708 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0423909 (* 1 = 0.0423909 loss)
I0418 16:14:51.404713 15298 sgd_solver.cpp:106] Iteration 41, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:14:57.700520 15298 accuracy_layer.cpp:96] Accuracy: 0.796875
I0418 16:14:57.700546 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.734694
I0418 16:14:57.700549 15298 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 10)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 10
num bg: 73
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(83, 99)
this part is done
I0418 16:14:57.749095 15298 solver.cpp:228] Iteration 42, loss = 0.952616
I0418 16:14:57.749125 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.449896 (* 1 = 0.449896 loss)
I0418 16:14:57.749133 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:14:57.749138 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.796875
I0418 16:14:57.749142 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.734694
I0418 16:14:57.749150 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 16:14:57.749153 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.452729 (* 1 = 0.452729 loss)
I0418 16:14:57.749159 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0499906 (* 1 = 0.0499906 loss)
I0418 16:14:57.749164 15298 sgd_solver.cpp:106] Iteration 42, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:15:04.054530 15298 accuracy_layer.cpp:96] Accuracy: 0.859375
I0418 16:15:04.054554 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.816327
I0418 16:15:04.054560 15298 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.]
num fg: 13
num bg: 79
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(92, 99)
this part is done
I0418 16:15:04.117606 15298 solver.cpp:228] Iteration 43, loss = 1.05668
I0418 16:15:04.117635 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.535639 (* 1 = 0.535639 loss)
I0418 16:15:04.117643 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:15:04.117648 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.859375
I0418 16:15:04.117652 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.816327
I0418 16:15:04.117657 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 16:15:04.117661 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.477497 (* 1 = 0.477497 loss)
I0418 16:15:04.117666 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0435412 (* 1 = 0.0435412 loss)
I0418 16:15:04.117672 15298 sgd_solver.cpp:106] Iteration 43, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:15:10.392752 15298 accuracy_layer.cpp:96] Accuracy: 0.890625
I0418 16:15:10.392781 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.857143
I0418 16:15:10.392786 15298 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 11
num bg: 75
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(86, 99)
this part is done
I0418 16:15:10.445396 15298 solver.cpp:228] Iteration 44, loss = 0.909626
I0418 16:15:10.445425 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.451559 (* 1 = 0.451559 loss)
I0418 16:15:10.445432 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:15:10.445437 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.890625
I0418 16:15:10.445441 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.857143
I0418 16:15:10.445446 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 16:15:10.445451 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.437553 (* 1 = 0.437553 loss)
I0418 16:15:10.445456 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0205147 (* 1 = 0.0205147 loss)
I0418 16:15:10.445461 15298 sgd_solver.cpp:106] Iteration 44, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:15:16.713057 15298 accuracy_layer.cpp:96] Accuracy: 0.84375
I0418 16:15:16.713079 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.795918
I0418 16:15:16.713084 15298 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.]
num fg: 13
num bg: 81
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(94, 99)
this part is done
I0418 16:15:16.751533 15298 solver.cpp:228] Iteration 45, loss = 0.935926
I0418 16:15:16.751559 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.454081 (* 1 = 0.454081 loss)
I0418 16:15:16.751565 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:15:16.751569 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.84375
I0418 16:15:16.751574 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.795918
I0418 16:15:16.751579 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 16:15:16.751582 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.462315 (* 1 = 0.462315 loss)
I0418 16:15:16.751588 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0195303 (* 1 = 0.0195303 loss)
I0418 16:15:16.751593 15298 sgd_solver.cpp:106] Iteration 45, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:15:23.033180 15298 accuracy_layer.cpp:96] Accuracy: 0.84375
I0418 16:15:23.033205 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.795918
I0418 16:15:23.033210 15298 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 84
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(96, 99)
this part is done
I0418 16:15:23.070716 15298 solver.cpp:228] Iteration 46, loss = 0.831693
I0418 16:15:23.070739 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.387178 (* 1 = 0.387178 loss)
I0418 16:15:23.070747 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:15:23.070751 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.84375
I0418 16:15:23.070756 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.795918
I0418 16:15:23.070775 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 16:15:23.070780 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.426327 (* 1 = 0.426327 loss)
I0418 16:15:23.070786 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0181886 (* 1 = 0.0181886 loss)
I0418 16:15:23.070791 15298 sgd_solver.cpp:106] Iteration 46, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:15:29.312225 15298 accuracy_layer.cpp:96] Accuracy: 0.90625
I0418 16:15:29.312248 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.877551
I0418 16:15:29.312253 15298 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 10)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 10
num bg: 74
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(84, 99)
this part is done
I0418 16:15:29.365622 15298 solver.cpp:228] Iteration 47, loss = 0.805561
I0418 16:15:29.365649 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.34164 (* 1 = 0.34164 loss)
I0418 16:15:29.365660 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:15:29.365669 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.90625
I0418 16:15:29.365675 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.877551
I0418 16:15:29.365685 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 16:15:29.365696 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.441351 (* 1 = 0.441351 loss)
I0418 16:15:29.365701 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.022571 (* 1 = 0.022571 loss)
I0418 16:15:29.365707 15298 sgd_solver.cpp:106] Iteration 47, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:15:35.653694 15298 accuracy_layer.cpp:96] Accuracy: 0.875
I0418 16:15:35.653717 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.836735
I0418 16:15:35.653723 15298 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.]
num fg: 11
num bg: 82
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(93, 99)
this part is done
I0418 16:15:35.710438 15298 solver.cpp:228] Iteration 48, loss = 0.781409
I0418 16:15:35.710466 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.315428 (* 1 = 0.315428 loss)
I0418 16:15:35.710474 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:15:35.710477 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.875
I0418 16:15:35.710481 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.836735
I0418 16:15:35.710486 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 16:15:35.710491 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.448338 (* 1 = 0.448338 loss)
I0418 16:15:35.710496 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0176435 (* 1 = 0.0176435 loss)
I0418 16:15:35.710502 15298 sgd_solver.cpp:106] Iteration 48, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:15:41.982364 15298 accuracy_layer.cpp:96] Accuracy: 0.828125
I0418 16:15:41.982386 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.77551
I0418 16:15:41.982391 15298 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 15)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.]
num fg: 15
num bg: 77
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(92, 99)
this part is done
I0418 16:15:42.020068 15298 solver.cpp:228] Iteration 49, loss = 0.950552
I0418 16:15:42.020099 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.506915 (* 1 = 0.506915 loss)
I0418 16:15:42.020107 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:15:42.020112 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.828125
I0418 16:15:42.020117 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.77551
I0418 16:15:42.020120 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 16:15:42.020125 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.414531 (* 1 = 0.414531 loss)
I0418 16:15:42.020131 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0291063 (* 1 = 0.0291063 loss)
I0418 16:15:42.020138 15298 sgd_solver.cpp:106] Iteration 49, lr = 0.0001
speed: 6.313s / iter
rpn: num_positive 15
rpn: num_negative 49
I0418 16:15:48.277859 15298 accuracy_layer.cpp:96] Accuracy: 0.921875
I0418 16:15:48.277882 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.897959
I0418 16:15:48.277887 15298 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.]
num fg: 12
num bg: 80
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(92, 99)
this part is done
I0418 16:15:48.313256 15298 solver.cpp:228] Iteration 50, loss = 0.741623
I0418 16:15:48.313288 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.355433 (* 1 = 0.355433 loss)
I0418 16:15:48.313295 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:15:48.313300 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.921875
I0418 16:15:48.313304 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.897959
I0418 16:15:48.313308 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 16:15:48.313313 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.357995 (* 1 = 0.357995 loss)
I0418 16:15:48.313318 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0281954 (* 1 = 0.0281954 loss)
I0418 16:15:48.313325 15298 sgd_solver.cpp:106] Iteration 50, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:15:54.596637 15298 accuracy_layer.cpp:96] Accuracy: 0.90625
I0418 16:15:54.596660 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.877551
I0418 16:15:54.596665 15298 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 74
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(86, 99)
this part is done
I0418 16:15:54.653519 15298 solver.cpp:228] Iteration 51, loss = 0.807364
I0418 16:15:54.653547 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.404429 (* 1 = 0.404429 loss)
I0418 16:15:54.653554 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:15:54.653560 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.90625
I0418 16:15:54.653564 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.877551
I0418 16:15:54.653568 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 16:15:54.653573 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.376593 (* 1 = 0.376593 loss)
I0418 16:15:54.653580 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0263427 (* 1 = 0.0263427 loss)
I0418 16:15:54.653586 15298 sgd_solver.cpp:106] Iteration 51, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:16:00.920213 15298 accuracy_layer.cpp:96] Accuracy: 0.84375
I0418 16:16:00.920238 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.816327
I0418 16:16:00.920241 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.933333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.]
num fg: 12
num bg: 83
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(95, 99)
this part is done
I0418 16:16:00.977951 15298 solver.cpp:228] Iteration 52, loss = 0.736527
I0418 16:16:00.977982 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.327185 (* 1 = 0.327185 loss)
I0418 16:16:00.977993 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:16:00.978000 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.84375
I0418 16:16:00.978008 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.816327
I0418 16:16:00.978016 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.933333
I0418 16:16:00.978025 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.395854 (* 1 = 0.395854 loss)
I0418 16:16:00.978031 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0134889 (* 1 = 0.0134889 loss)
I0418 16:16:00.978039 15298 sgd_solver.cpp:106] Iteration 52, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:16:07.231098 15298 accuracy_layer.cpp:96] Accuracy: 0.859375
I0418 16:16:07.231122 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.836735
I0418 16:16:07.231127 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.933333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.]
num fg: 13
num bg: 79
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(92, 99)
this part is done
I0418 16:16:07.282356 15298 solver.cpp:228] Iteration 53, loss = 0.79666
I0418 16:16:07.282393 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.401976 (* 1 = 0.401976 loss)
I0418 16:16:07.282405 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:16:07.282413 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.859375
I0418 16:16:07.282419 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.836735
I0418 16:16:07.282426 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.933333
I0418 16:16:07.282434 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.379345 (* 1 = 0.379345 loss)
I0418 16:16:07.282446 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0153398 (* 1 = 0.0153398 loss)
I0418 16:16:07.282456 15298 sgd_solver.cpp:106] Iteration 53, lr = 0.0001
rpn: num_positive 12
rpn: num_negative 52
I0418 16:16:13.536408 15298 accuracy_layer.cpp:96] Accuracy: 0.828125
I0418 16:16:13.536432 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.846154
I0418 16:16:13.536437 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.75
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 13
num bg: 71
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(84, 99)
this part is done
I0418 16:16:13.585779 15298 solver.cpp:228] Iteration 54, loss = 0.928815
I0418 16:16:13.585809 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.472088 (* 1 = 0.472088 loss)
I0418 16:16:13.585816 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:16:13.585824 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.828125
I0418 16:16:13.585827 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.846154
I0418 16:16:13.585831 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.75
I0418 16:16:13.585837 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.382474 (* 1 = 0.382474 loss)
I0418 16:16:13.585842 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0742532 (* 1 = 0.0742532 loss)
I0418 16:16:13.585849 15298 sgd_solver.cpp:106] Iteration 54, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:16:19.843840 15298 accuracy_layer.cpp:96] Accuracy: 0.890625
I0418 16:16:19.843864 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.877551
I0418 16:16:19.843868 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.933333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.]
num fg: 13
num bg: 82
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(95, 99)
this part is done
I0418 16:16:19.896070 15298 solver.cpp:228] Iteration 55, loss = 0.803582
I0418 16:16:19.896102 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.449869 (* 1 = 0.449869 loss)
I0418 16:16:19.896109 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:16:19.896114 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.890625
I0418 16:16:19.896118 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.877551
I0418 16:16:19.896122 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.933333
I0418 16:16:19.896127 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.332291 (* 1 = 0.332291 loss)
I0418 16:16:19.896138 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0214221 (* 1 = 0.0214221 loss)
I0418 16:16:19.896144 15298 sgd_solver.cpp:106] Iteration 55, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:16:26.153122 15298 accuracy_layer.cpp:96] Accuracy: 0.9375
I0418 16:16:26.153152 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.918367
I0418 16:16:26.153157 15298 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 13
num bg: 88
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(101, 99)
this part is done
I0418 16:16:26.205232 15298 solver.cpp:228] Iteration 56, loss = 0.629052
I0418 16:16:26.205261 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.333655 (* 1 = 0.333655 loss)
I0418 16:16:26.205268 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:16:26.205273 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.9375
I0418 16:16:26.205278 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.918367
I0418 16:16:26.205282 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 16:16:26.205286 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.271364 (* 1 = 0.271364 loss)
I0418 16:16:26.205292 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0240323 (* 1 = 0.0240323 loss)
I0418 16:16:26.205298 15298 sgd_solver.cpp:106] Iteration 56, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:16:32.471069 15298 accuracy_layer.cpp:96] Accuracy: 0.8125
I0418 16:16:32.471092 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.77551
I0418 16:16:32.471099 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.933333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.]
num fg: 13
num bg: 80
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(93, 99)
this part is done
I0418 16:16:32.508858 15298 solver.cpp:228] Iteration 57, loss = 0.942974
I0418 16:16:32.508885 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.544428 (* 1 = 0.544428 loss)
I0418 16:16:32.508893 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:16:32.508898 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.8125
I0418 16:16:32.508903 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.77551
I0418 16:16:32.508906 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.933333
I0418 16:16:32.508911 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.376897 (* 1 = 0.376897 loss)
I0418 16:16:32.508916 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0216501 (* 1 = 0.0216501 loss)
I0418 16:16:32.508922 15298 sgd_solver.cpp:106] Iteration 57, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:16:38.764374 15298 accuracy_layer.cpp:96] Accuracy: 0.875
I0418 16:16:38.764400 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.857143
I0418 16:16:38.764405 15298 accuracy_layer.cpp:101] Class 1 accuracy : 0.933333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 16)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 16
num bg: 74
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(90, 99)
this part is done
I0418 16:16:38.799774 15298 solver.cpp:228] Iteration 58, loss = 0.84195
I0418 16:16:38.799803 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.472924 (* 1 = 0.472924 loss)
I0418 16:16:38.799811 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:16:38.799815 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.875
I0418 16:16:38.799820 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.857143
I0418 16:16:38.799824 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.933333
I0418 16:16:38.799829 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.349903 (* 1 = 0.349903 loss)
I0418 16:16:38.799834 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0191229 (* 1 = 0.0191229 loss)
I0418 16:16:38.799840 15298 sgd_solver.cpp:106] Iteration 58, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 16:16:45.064837 15298 accuracy_layer.cpp:96] Accuracy: 0.90625
I0418 16:16:45.064860 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.877551
I0418 16:16:45.064865 15298 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 85
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(97, 99)
this part is done
I0418 16:16:45.104223 15298 solver.cpp:228] Iteration 59, loss = 0.828912
I0418 16:16:45.104251 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.519475 (* 1 = 0.519475 loss)
I0418 16:16:45.104259 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:16:45.104264 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.90625
I0418 16:16:45.104267 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.877551
I0418 16:16:45.104271 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 16:16:45.104276 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.282816 (* 1 = 0.282816 loss)
I0418 16:16:45.104282 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.026621 (* 1 = 0.026621 loss)
I0418 16:16:45.104288 15298 sgd_solver.cpp:106] Iteration 59, lr = 0.0001
speed: 6.312s / iter
rpn: num_positive 15
rpn: num_negative 49
I0418 16:16:51.337015 15298 accuracy_layer.cpp:96] Accuracy: 0.828125
I0418 16:16:51.337038 15298 accuracy_layer.cpp:101] Class 0 accuracy : 0.77551
I0418 16:16:51.337044 15298 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 13
num bg: 75
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(88, 99)
this part is done
I0418 16:16:51.375948 15298 solver.cpp:228] Iteration 60, loss = 0.950835
I0418 16:16:51.375973 15298 solver.cpp:244]     Train net output #0: loss_cls = 0.558672 (* 1 = 0.558672 loss)
I0418 16:16:51.375980 15298 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 16:16:51.375985 15298 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.828125
I0418 16:16:51.375989 15298 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.77551
I0418 16:16:51.375993 15298 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 16:16:51.375998 15298 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.375643 (* 1 = 0.375643 loss)
I0418 16:16:51.376003 15298 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0165194 (* 1 = 0.0165194 loss)
I0418 16:16:51.376008 15298 sgd_solver.cpp:106] Iteration 60, lr = 0.0001
