Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0411 17:32:29.375075 14679 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0411 17:32:29.375154 14679 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0411 17:32:29.376159 14679 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0411 17:32:29.376498 14679 layer_factory.hpp:77] Creating layer data
I0411 17:32:29.390625 14679 net.cpp:100] Creating Layer data
I0411 17:32:29.390653 14679 net.cpp:408] data -> data
I0411 17:32:29.390667 14679 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0411 17:32:29.412922 14679 net.cpp:150] Setting up data
I0411 17:32:29.412952 14679 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0411 17:32:29.412957 14679 net.cpp:157] Top shape: 1 3 (3)
I0411 17:32:29.412961 14679 net.cpp:165] Memory required for data: 115605516
I0411 17:32:29.412969 14679 layer_factory.hpp:77] Creating layer data_data_0_split
I0411 17:32:29.412986 14679 net.cpp:100] Creating Layer data_data_0_split
I0411 17:32:29.412991 14679 net.cpp:434] data_data_0_split <- data
I0411 17:32:29.412999 14679 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0411 17:32:29.413013 14679 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0411 17:32:29.413067 14679 net.cpp:150] Setting up data_data_0_split
I0411 17:32:29.413079 14679 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0411 17:32:29.413084 14679 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0411 17:32:29.413089 14679 net.cpp:165] Memory required for data: 346816524
I0411 17:32:29.413092 14679 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0411 17:32:29.413100 14679 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0411 17:32:29.413103 14679 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0411 17:32:29.413111 14679 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0411 17:32:29.413120 14679 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0411 17:32:29.413166 14679 net.cpp:150] Setting up gt_boxes_data_1_split
I0411 17:32:29.413172 14679 net.cpp:157] Top shape: 1 3 (3)
I0411 17:32:29.413177 14679 net.cpp:157] Top shape: 1 3 (3)
I0411 17:32:29.413179 14679 net.cpp:165] Memory required for data: 346816548
I0411 17:32:29.413183 14679 layer_factory.hpp:77] Creating layer conv1a
I0411 17:32:29.413198 14679 net.cpp:100] Creating Layer conv1a
I0411 17:32:29.413203 14679 net.cpp:434] conv1a <- data_data_0_split_0
I0411 17:32:29.413210 14679 net.cpp:408] conv1a -> conv1a
I0411 17:32:29.436226 14679 net.cpp:150] Setting up conv1a
I0411 17:32:29.436271 14679 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0411 17:32:29.436275 14679 net.cpp:165] Memory required for data: 2813067300
I0411 17:32:29.436297 14679 layer_factory.hpp:77] Creating layer relu1a
I0411 17:32:29.436316 14679 net.cpp:100] Creating Layer relu1a
I0411 17:32:29.436363 14679 net.cpp:434] relu1a <- conv1a
I0411 17:32:29.436372 14679 net.cpp:395] relu1a -> conv1a (in-place)
I0411 17:32:29.436383 14679 net.cpp:150] Setting up relu1a
I0411 17:32:29.436390 14679 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0411 17:32:29.436394 14679 net.cpp:165] Memory required for data: 5279318052
I0411 17:32:29.436398 14679 layer_factory.hpp:77] Creating layer pool1
I0411 17:32:29.436408 14679 net.cpp:100] Creating Layer pool1
I0411 17:32:29.436413 14679 net.cpp:434] pool1 <- conv1a
I0411 17:32:29.436419 14679 net.cpp:408] pool1 -> pool1
I0411 17:32:29.436532 14679 net.cpp:150] Setting up pool1
I0411 17:32:29.436540 14679 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0411 17:32:29.436544 14679 net.cpp:165] Memory required for data: 5895880740
I0411 17:32:29.436548 14679 layer_factory.hpp:77] Creating layer conv2a
I0411 17:32:29.436561 14679 net.cpp:100] Creating Layer conv2a
I0411 17:32:29.436568 14679 net.cpp:434] conv2a <- pool1
I0411 17:32:29.436575 14679 net.cpp:408] conv2a -> conv2a
I0411 17:32:29.446180 14679 net.cpp:150] Setting up conv2a
I0411 17:32:29.446211 14679 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0411 17:32:29.446215 14679 net.cpp:165] Memory required for data: 7129006116
I0411 17:32:29.446230 14679 layer_factory.hpp:77] Creating layer relu2a
I0411 17:32:29.446241 14679 net.cpp:100] Creating Layer relu2a
I0411 17:32:29.446246 14679 net.cpp:434] relu2a <- conv2a
I0411 17:32:29.446254 14679 net.cpp:395] relu2a -> conv2a (in-place)
I0411 17:32:29.446264 14679 net.cpp:150] Setting up relu2a
I0411 17:32:29.446270 14679 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0411 17:32:29.446272 14679 net.cpp:165] Memory required for data: 8362131492
I0411 17:32:29.446275 14679 layer_factory.hpp:77] Creating layer pool2
I0411 17:32:29.446283 14679 net.cpp:100] Creating Layer pool2
I0411 17:32:29.446285 14679 net.cpp:434] pool2 <- conv2a
I0411 17:32:29.446291 14679 net.cpp:408] pool2 -> pool2
I0411 17:32:29.446382 14679 net.cpp:150] Setting up pool2
I0411 17:32:29.446389 14679 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0411 17:32:29.446393 14679 net.cpp:165] Memory required for data: 8516272164
I0411 17:32:29.446395 14679 layer_factory.hpp:77] Creating layer conv3a
I0411 17:32:29.446406 14679 net.cpp:100] Creating Layer conv3a
I0411 17:32:29.446410 14679 net.cpp:434] conv3a <- pool2
I0411 17:32:29.446416 14679 net.cpp:408] conv3a -> conv3a
I0411 17:32:29.458881 14679 net.cpp:150] Setting up conv3a
I0411 17:32:29.458915 14679 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 17:32:29.458920 14679 net.cpp:165] Memory required for data: 8824553508
I0411 17:32:29.458938 14679 layer_factory.hpp:77] Creating layer relu3a
I0411 17:32:29.458963 14679 net.cpp:100] Creating Layer relu3a
I0411 17:32:29.458969 14679 net.cpp:434] relu3a <- conv3a
I0411 17:32:29.458977 14679 net.cpp:395] relu3a -> conv3a (in-place)
I0411 17:32:29.458989 14679 net.cpp:150] Setting up relu3a
I0411 17:32:29.458997 14679 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 17:32:29.459000 14679 net.cpp:165] Memory required for data: 9132834852
I0411 17:32:29.459004 14679 layer_factory.hpp:77] Creating layer conv3b
I0411 17:32:29.459017 14679 net.cpp:100] Creating Layer conv3b
I0411 17:32:29.459022 14679 net.cpp:434] conv3b <- conv3a
I0411 17:32:29.459029 14679 net.cpp:408] conv3b -> conv3b
I0411 17:32:29.483484 14679 net.cpp:150] Setting up conv3b
I0411 17:32:29.483542 14679 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 17:32:29.483547 14679 net.cpp:165] Memory required for data: 9441116196
I0411 17:32:29.483561 14679 layer_factory.hpp:77] Creating layer relu3b
I0411 17:32:29.483574 14679 net.cpp:100] Creating Layer relu3b
I0411 17:32:29.483600 14679 net.cpp:434] relu3b <- conv3b
I0411 17:32:29.483609 14679 net.cpp:395] relu3b -> conv3b (in-place)
I0411 17:32:29.483623 14679 net.cpp:150] Setting up relu3b
I0411 17:32:29.483630 14679 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 17:32:29.483634 14679 net.cpp:165] Memory required for data: 9749397540
I0411 17:32:29.483638 14679 layer_factory.hpp:77] Creating layer pool3
I0411 17:32:29.483647 14679 net.cpp:100] Creating Layer pool3
I0411 17:32:29.483651 14679 net.cpp:434] pool3 <- conv3b
I0411 17:32:29.483659 14679 net.cpp:408] pool3 -> pool3
I0411 17:32:29.483763 14679 net.cpp:150] Setting up pool3
I0411 17:32:29.483774 14679 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0411 17:32:29.483779 14679 net.cpp:165] Memory required for data: 9787932708
I0411 17:32:29.483783 14679 layer_factory.hpp:77] Creating layer conv4a
I0411 17:32:29.483800 14679 net.cpp:100] Creating Layer conv4a
I0411 17:32:29.483806 14679 net.cpp:434] conv4a <- pool3
I0411 17:32:29.483814 14679 net.cpp:408] conv4a -> conv4a
I0411 17:32:29.533455 14679 net.cpp:150] Setting up conv4a
I0411 17:32:29.533488 14679 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 17:32:29.533493 14679 net.cpp:165] Memory required for data: 9865003044
I0411 17:32:29.533512 14679 layer_factory.hpp:77] Creating layer relu4a
I0411 17:32:29.533524 14679 net.cpp:100] Creating Layer relu4a
I0411 17:32:29.533529 14679 net.cpp:434] relu4a <- conv4a
I0411 17:32:29.533538 14679 net.cpp:395] relu4a -> conv4a (in-place)
I0411 17:32:29.533560 14679 net.cpp:150] Setting up relu4a
I0411 17:32:29.533565 14679 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 17:32:29.533569 14679 net.cpp:165] Memory required for data: 9942073380
I0411 17:32:29.533573 14679 layer_factory.hpp:77] Creating layer conv4b
I0411 17:32:29.533591 14679 net.cpp:100] Creating Layer conv4b
I0411 17:32:29.533597 14679 net.cpp:434] conv4b <- conv4a
I0411 17:32:29.533604 14679 net.cpp:408] conv4b -> conv4b
I0411 17:32:29.594772 14679 net.cpp:150] Setting up conv4b
I0411 17:32:29.594806 14679 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 17:32:29.594810 14679 net.cpp:165] Memory required for data: 10019143716
I0411 17:32:29.594820 14679 layer_factory.hpp:77] Creating layer relu4b
I0411 17:32:29.594830 14679 net.cpp:100] Creating Layer relu4b
I0411 17:32:29.594833 14679 net.cpp:434] relu4b <- conv4b
I0411 17:32:29.594841 14679 net.cpp:395] relu4b -> conv4b (in-place)
I0411 17:32:29.594849 14679 net.cpp:150] Setting up relu4b
I0411 17:32:29.594852 14679 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 17:32:29.594856 14679 net.cpp:165] Memory required for data: 10096214052
I0411 17:32:29.594857 14679 layer_factory.hpp:77] Creating layer pool4
I0411 17:32:29.594864 14679 net.cpp:100] Creating Layer pool4
I0411 17:32:29.594866 14679 net.cpp:434] pool4 <- conv4b
I0411 17:32:29.594871 14679 net.cpp:408] pool4 -> pool4
I0411 17:32:29.594914 14679 net.cpp:150] Setting up pool4
I0411 17:32:29.594920 14679 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 17:32:29.594923 14679 net.cpp:165] Memory required for data: 10105847844
I0411 17:32:29.594926 14679 layer_factory.hpp:77] Creating layer conv5a
I0411 17:32:29.594938 14679 net.cpp:100] Creating Layer conv5a
I0411 17:32:29.594940 14679 net.cpp:434] conv5a <- pool4
I0411 17:32:29.594944 14679 net.cpp:408] conv5a -> conv5a
I0411 17:32:29.671934 14679 net.cpp:150] Setting up conv5a
I0411 17:32:29.671979 14679 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 17:32:29.671984 14679 net.cpp:165] Memory required for data: 10115481636
I0411 17:32:29.671998 14679 layer_factory.hpp:77] Creating layer relu5a
I0411 17:32:29.672011 14679 net.cpp:100] Creating Layer relu5a
I0411 17:32:29.672017 14679 net.cpp:434] relu5a <- conv5a
I0411 17:32:29.672024 14679 net.cpp:395] relu5a -> conv5a (in-place)
I0411 17:32:29.672037 14679 net.cpp:150] Setting up relu5a
I0411 17:32:29.672040 14679 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 17:32:29.672044 14679 net.cpp:165] Memory required for data: 10125115428
I0411 17:32:29.672045 14679 layer_factory.hpp:77] Creating layer conv5b
I0411 17:32:29.672061 14679 net.cpp:100] Creating Layer conv5b
I0411 17:32:29.672065 14679 net.cpp:434] conv5b <- conv5a
I0411 17:32:29.672070 14679 net.cpp:408] conv5b -> conv5b
I0411 17:32:29.731593 14679 net.cpp:150] Setting up conv5b
I0411 17:32:29.731627 14679 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 17:32:29.731631 14679 net.cpp:165] Memory required for data: 10134749220
I0411 17:32:29.731639 14679 layer_factory.hpp:77] Creating layer relu5b
I0411 17:32:29.731648 14679 net.cpp:100] Creating Layer relu5b
I0411 17:32:29.731652 14679 net.cpp:434] relu5b <- conv5b
I0411 17:32:29.731660 14679 net.cpp:395] relu5b -> conv5b (in-place)
I0411 17:32:29.731668 14679 net.cpp:150] Setting up relu5b
I0411 17:32:29.731673 14679 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 17:32:29.731674 14679 net.cpp:165] Memory required for data: 10144383012
I0411 17:32:29.731678 14679 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0411 17:32:29.731683 14679 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0411 17:32:29.731685 14679 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0411 17:32:29.731690 14679 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0411 17:32:29.731696 14679 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0411 17:32:29.731739 14679 net.cpp:150] Setting up conv5b_relu5b_0_split
I0411 17:32:29.731743 14679 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 17:32:29.731747 14679 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 17:32:29.731750 14679 net.cpp:165] Memory required for data: 10163650596
I0411 17:32:29.731752 14679 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0411 17:32:29.731761 14679 net.cpp:100] Creating Layer rpn_conv/3x3
I0411 17:32:29.731765 14679 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0411 17:32:29.731770 14679 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0411 17:32:29.795739 14679 net.cpp:150] Setting up rpn_conv/3x3
I0411 17:32:29.795766 14679 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0411 17:32:29.795771 14679 net.cpp:165] Memory required for data: 10166796324
I0411 17:32:29.795792 14679 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0411 17:32:29.795805 14679 net.cpp:100] Creating Layer rpn_relu/3x3
I0411 17:32:29.795811 14679 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0411 17:32:29.795819 14679 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0411 17:32:29.795830 14679 net.cpp:150] Setting up rpn_relu/3x3
I0411 17:32:29.795835 14679 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0411 17:32:29.795837 14679 net.cpp:165] Memory required for data: 10169942052
I0411 17:32:29.795841 14679 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0411 17:32:29.795857 14679 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0411 17:32:29.795862 14679 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0411 17:32:29.795871 14679 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0411 17:32:29.854609 14679 net.cpp:150] Setting up rpn_conv/3x3_2
I0411 17:32:29.854643 14679 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0411 17:32:29.854647 14679 net.cpp:165] Memory required for data: 10170728484
I0411 17:32:29.854660 14679 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0411 17:32:29.854671 14679 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0411 17:32:29.854678 14679 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0411 17:32:29.854688 14679 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0411 17:32:29.854701 14679 net.cpp:150] Setting up rpn_relu/3x3_2
I0411 17:32:29.854707 14679 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0411 17:32:29.854710 14679 net.cpp:165] Memory required for data: 10171514916
I0411 17:32:29.854714 14679 layer_factory.hpp:77] Creating layer rpn/output_pool
I0411 17:32:29.854723 14679 net.cpp:100] Creating Layer rpn/output_pool
I0411 17:32:29.854728 14679 net.cpp:434] rpn/output_pool <- rpn/output_2
I0411 17:32:29.854737 14679 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0411 17:32:29.854791 14679 net.cpp:150] Setting up rpn/output_pool
I0411 17:32:29.854799 14679 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0411 17:32:29.854802 14679 net.cpp:165] Memory required for data: 10171711524
I0411 17:32:29.854807 14679 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0411 17:32:29.854816 14679 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0411 17:32:29.854821 14679 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0411 17:32:29.854830 14679 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0411 17:32:29.854837 14679 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0411 17:32:29.854881 14679 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0411 17:32:29.854887 14679 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0411 17:32:29.854893 14679 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0411 17:32:29.854897 14679 net.cpp:165] Memory required for data: 10172104740
I0411 17:32:29.854902 14679 layer_factory.hpp:77] Creating layer rpn_cls_score
I0411 17:32:29.854914 14679 net.cpp:100] Creating Layer rpn_cls_score
I0411 17:32:29.854919 14679 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0411 17:32:29.854928 14679 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0411 17:32:29.855492 14679 net.cpp:150] Setting up rpn_cls_score
I0411 17:32:29.855502 14679 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 17:32:29.855506 14679 net.cpp:165] Memory required for data: 10172133156
I0411 17:32:29.855516 14679 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0411 17:32:29.855525 14679 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0411 17:32:29.855531 14679 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0411 17:32:29.855537 14679 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0411 17:32:29.855545 14679 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0411 17:32:29.855604 14679 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0411 17:32:29.855612 14679 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 17:32:29.855617 14679 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 17:32:29.855621 14679 net.cpp:165] Memory required for data: 10172189988
I0411 17:32:29.855625 14679 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0411 17:32:29.855643 14679 net.cpp:100] Creating Layer rpn_twin_pred
I0411 17:32:29.855648 14679 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0411 17:32:29.855655 14679 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0411 17:32:29.856201 14679 net.cpp:150] Setting up rpn_twin_pred
I0411 17:32:29.856211 14679 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 17:32:29.856215 14679 net.cpp:165] Memory required for data: 10172218404
I0411 17:32:29.856223 14679 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0411 17:32:29.856231 14679 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0411 17:32:29.856236 14679 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0411 17:32:29.856243 14679 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0411 17:32:29.856251 14679 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0411 17:32:29.856298 14679 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0411 17:32:29.856307 14679 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 17:32:29.856312 14679 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 17:32:29.856318 14679 net.cpp:165] Memory required for data: 10172275236
I0411 17:32:29.856359 14679 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0411 17:32:29.856370 14679 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0411 17:32:29.856375 14679 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0411 17:32:29.856386 14679 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0411 17:32:29.856422 14679 net.cpp:150] Setting up rpn_cls_score_reshape
I0411 17:32:29.856429 14679 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 17:32:29.856434 14679 net.cpp:165] Memory required for data: 10172303652
I0411 17:32:29.856438 14679 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 17:32:29.856446 14679 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 17:32:29.856452 14679 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0411 17:32:29.856461 14679 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0411 17:32:29.856477 14679 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0411 17:32:29.856484 14679 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0411 17:32:29.856550 14679 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 17:32:29.856559 14679 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 17:32:29.856564 14679 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 17:32:29.856571 14679 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 17:32:29.856575 14679 net.cpp:165] Memory required for data: 10172388900
I0411 17:32:29.856580 14679 layer_factory.hpp:77] Creating layer rpn-data
I0411 17:32:29.856961 14679 net.cpp:100] Creating Layer rpn-data
I0411 17:32:29.856971 14679 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0411 17:32:29.856979 14679 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0411 17:32:29.856986 14679 net.cpp:434] rpn-data <- data_data_0_split_1
I0411 17:32:29.856997 14679 net.cpp:408] rpn-data -> rpn_labels
I0411 17:32:29.857007 14679 net.cpp:408] rpn-data -> rpn_twin_targets
I0411 17:32:29.857017 14679 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0411 17:32:29.857025 14679 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0411 17:32:29.859287 14679 net.cpp:150] Setting up rpn-data
I0411 17:32:29.859300 14679 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0411 17:32:29.859308 14679 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 17:32:29.859313 14679 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 17:32:29.859319 14679 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 17:32:29.859324 14679 net.cpp:165] Memory required for data: 10172488356
I0411 17:32:29.859330 14679 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0411 17:32:29.859338 14679 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0411 17:32:29.859345 14679 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0411 17:32:29.859354 14679 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0411 17:32:29.859364 14679 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0411 17:32:29.859405 14679 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0411 17:32:29.859412 14679 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0411 17:32:29.859418 14679 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0411 17:32:29.859422 14679 net.cpp:165] Memory required for data: 10172516772
I0411 17:32:29.859427 14679 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0411 17:32:29.859439 14679 net.cpp:100] Creating Layer rpn_loss_cls
I0411 17:32:29.859444 14679 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0411 17:32:29.859450 14679 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0411 17:32:29.859459 14679 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0411 17:32:29.859472 14679 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0411 17:32:29.859585 14679 net.cpp:150] Setting up rpn_loss_cls
I0411 17:32:29.859591 14679 net.cpp:157] Top shape: (1)
I0411 17:32:29.859596 14679 net.cpp:160]     with loss weight 1
I0411 17:32:29.859614 14679 net.cpp:165] Memory required for data: 10172516776
I0411 17:32:29.859621 14679 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0411 17:32:29.859629 14679 net.cpp:100] Creating Layer rpn_loss_twin
I0411 17:32:29.859634 14679 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0411 17:32:29.859640 14679 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0411 17:32:29.859647 14679 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0411 17:32:29.859654 14679 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0411 17:32:29.859660 14679 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0411 17:32:29.859751 14679 net.cpp:150] Setting up rpn_loss_twin
I0411 17:32:29.859757 14679 net.cpp:157] Top shape: (1)
I0411 17:32:29.859761 14679 net.cpp:160]     with loss weight 1
I0411 17:32:29.859769 14679 net.cpp:165] Memory required for data: 10172516780
I0411 17:32:29.859776 14679 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0411 17:32:29.859787 14679 net.cpp:100] Creating Layer rpn_accuarcy
I0411 17:32:29.859793 14679 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0411 17:32:29.859798 14679 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0411 17:32:29.859808 14679 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0411 17:32:29.859817 14679 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0411 17:32:29.859861 14679 net.cpp:150] Setting up rpn_accuarcy
I0411 17:32:29.859868 14679 net.cpp:157] Top shape: (1)
I0411 17:32:29.859872 14679 net.cpp:157] Top shape: 2 (2)
I0411 17:32:29.859876 14679 net.cpp:165] Memory required for data: 10172516792
I0411 17:32:29.859880 14679 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0411 17:32:29.859886 14679 net.cpp:100] Creating Layer rpn_cls_prob
I0411 17:32:29.859892 14679 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0411 17:32:29.859900 14679 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0411 17:32:29.859973 14679 net.cpp:150] Setting up rpn_cls_prob
I0411 17:32:29.859980 14679 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 17:32:29.859984 14679 net.cpp:165] Memory required for data: 10172545208
I0411 17:32:29.859989 14679 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0411 17:32:29.859997 14679 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0411 17:32:29.860002 14679 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0411 17:32:29.860009 14679 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0411 17:32:29.860044 14679 net.cpp:150] Setting up rpn_cls_prob_reshape
I0411 17:32:29.860050 14679 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 17:32:29.860054 14679 net.cpp:165] Memory required for data: 10172573624
I0411 17:32:29.860059 14679 layer_factory.hpp:77] Creating layer proposal
I0411 17:32:29.860610 14679 net.cpp:100] Creating Layer proposal
I0411 17:32:29.860621 14679 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0411 17:32:29.860628 14679 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0411 17:32:29.860637 14679 net.cpp:408] proposal -> rpn_rois
I0411 17:32:29.864197 14679 net.cpp:150] Setting up proposal
I0411 17:32:29.864212 14679 net.cpp:157] Top shape: 1 3 (3)
I0411 17:32:29.864215 14679 net.cpp:165] Memory required for data: 10172573636
I0411 17:32:29.864222 14679 layer_factory.hpp:77] Creating layer roi-data
I0411 17:32:29.864380 14679 net.cpp:100] Creating Layer roi-data
I0411 17:32:29.864390 14679 net.cpp:434] roi-data <- rpn_rois
I0411 17:32:29.864398 14679 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0411 17:32:29.864405 14679 net.cpp:408] roi-data -> rois
I0411 17:32:29.864416 14679 net.cpp:408] roi-data -> labels
I0411 17:32:29.864424 14679 net.cpp:408] roi-data -> twin_targets
I0411 17:32:29.864433 14679 net.cpp:408] roi-data -> twin_inside_weights
I0411 17:32:29.864442 14679 net.cpp:408] roi-data -> twin_outside_weights
I0411 17:32:29.864763 14679 net.cpp:150] Setting up roi-data
I0411 17:32:29.864774 14679 net.cpp:157] Top shape: 1 3 (3)
I0411 17:32:29.864780 14679 net.cpp:157] Top shape: 1 1 (1)
I0411 17:32:29.864785 14679 net.cpp:157] Top shape: 1 402 (402)
I0411 17:32:29.864790 14679 net.cpp:157] Top shape: 1 402 (402)
I0411 17:32:29.864795 14679 net.cpp:157] Top shape: 1 402 (402)
I0411 17:32:29.864799 14679 net.cpp:165] Memory required for data: 10172578476
I0411 17:32:29.864804 14679 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0411 17:32:29.864812 14679 net.cpp:100] Creating Layer labels_roi-data_1_split
I0411 17:32:29.864817 14679 net.cpp:434] labels_roi-data_1_split <- labels
I0411 17:32:29.864825 14679 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0411 17:32:29.864833 14679 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0411 17:32:29.864877 14679 net.cpp:150] Setting up labels_roi-data_1_split
I0411 17:32:29.864884 14679 net.cpp:157] Top shape: 1 1 (1)
I0411 17:32:29.864889 14679 net.cpp:157] Top shape: 1 1 (1)
I0411 17:32:29.864894 14679 net.cpp:165] Memory required for data: 10172578484
I0411 17:32:29.864898 14679 layer_factory.hpp:77] Creating layer roi_pool5
I0411 17:32:29.864907 14679 net.cpp:100] Creating Layer roi_pool5
I0411 17:32:29.864912 14679 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0411 17:32:29.864917 14679 net.cpp:434] roi_pool5 <- rois
I0411 17:32:29.864924 14679 net.cpp:408] roi_pool5 -> pool5
I0411 17:32:29.864933 14679 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0411 17:32:29.864941 14679 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0411 17:32:29.864987 14679 net.cpp:150] Setting up roi_pool5
I0411 17:32:29.864995 14679 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0411 17:32:29.865000 14679 net.cpp:165] Memory required for data: 10172611252
I0411 17:32:29.865003 14679 layer_factory.hpp:77] Creating layer fc6
I0411 17:32:29.865015 14679 net.cpp:100] Creating Layer fc6
I0411 17:32:29.865020 14679 net.cpp:434] fc6 <- pool5
I0411 17:32:29.865029 14679 net.cpp:408] fc6 -> fc6
I0411 17:32:30.187782 14679 net.cpp:150] Setting up fc6
I0411 17:32:30.187815 14679 net.cpp:157] Top shape: 1 4096 (4096)
I0411 17:32:30.187820 14679 net.cpp:165] Memory required for data: 10172627636
I0411 17:32:30.187832 14679 layer_factory.hpp:77] Creating layer relu6
I0411 17:32:30.187845 14679 net.cpp:100] Creating Layer relu6
I0411 17:32:30.187851 14679 net.cpp:434] relu6 <- fc6
I0411 17:32:30.187861 14679 net.cpp:395] relu6 -> fc6 (in-place)
I0411 17:32:30.187872 14679 net.cpp:150] Setting up relu6
I0411 17:32:30.187907 14679 net.cpp:157] Top shape: 1 4096 (4096)
I0411 17:32:30.187911 14679 net.cpp:165] Memory required for data: 10172644020
I0411 17:32:30.187922 14679 layer_factory.hpp:77] Creating layer drop6
I0411 17:32:30.187929 14679 net.cpp:100] Creating Layer drop6
I0411 17:32:30.187934 14679 net.cpp:434] drop6 <- fc6
I0411 17:32:30.187942 14679 net.cpp:395] drop6 -> fc6 (in-place)
I0411 17:32:30.187979 14679 net.cpp:150] Setting up drop6
I0411 17:32:30.187985 14679 net.cpp:157] Top shape: 1 4096 (4096)
I0411 17:32:30.187989 14679 net.cpp:165] Memory required for data: 10172660404
I0411 17:32:30.187994 14679 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0411 17:32:30.188001 14679 net.cpp:100] Creating Layer fc6_drop6_0_split
I0411 17:32:30.188009 14679 net.cpp:434] fc6_drop6_0_split <- fc6
I0411 17:32:30.188015 14679 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0411 17:32:30.188024 14679 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0411 17:32:30.188071 14679 net.cpp:150] Setting up fc6_drop6_0_split
I0411 17:32:30.188077 14679 net.cpp:157] Top shape: 1 4096 (4096)
I0411 17:32:30.188082 14679 net.cpp:157] Top shape: 1 4096 (4096)
I0411 17:32:30.188086 14679 net.cpp:165] Memory required for data: 10172693172
I0411 17:32:30.188091 14679 layer_factory.hpp:77] Creating layer cls_score
I0411 17:32:30.188102 14679 net.cpp:100] Creating Layer cls_score
I0411 17:32:30.188107 14679 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0411 17:32:30.188115 14679 net.cpp:408] cls_score -> cls_score
I0411 17:32:30.195780 14679 net.cpp:150] Setting up cls_score
I0411 17:32:30.195814 14679 net.cpp:157] Top shape: 1 201 (201)
I0411 17:32:30.195818 14679 net.cpp:165] Memory required for data: 10172693976
I0411 17:32:30.195832 14679 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0411 17:32:30.195843 14679 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0411 17:32:30.195849 14679 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0411 17:32:30.195860 14679 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0411 17:32:30.195873 14679 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0411 17:32:30.195930 14679 net.cpp:150] Setting up cls_score_cls_score_0_split
I0411 17:32:30.195937 14679 net.cpp:157] Top shape: 1 201 (201)
I0411 17:32:30.195942 14679 net.cpp:157] Top shape: 1 201 (201)
I0411 17:32:30.195946 14679 net.cpp:165] Memory required for data: 10172695584
I0411 17:32:30.195951 14679 layer_factory.hpp:77] Creating layer twin_pred
I0411 17:32:30.195962 14679 net.cpp:100] Creating Layer twin_pred
I0411 17:32:30.195967 14679 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0411 17:32:30.195977 14679 net.cpp:408] twin_pred -> twin_pred
I0411 17:32:30.210431 14679 net.cpp:150] Setting up twin_pred
I0411 17:32:30.210466 14679 net.cpp:157] Top shape: 1 402 (402)
I0411 17:32:30.210471 14679 net.cpp:165] Memory required for data: 10172697192
I0411 17:32:30.210484 14679 layer_factory.hpp:77] Creating layer loss_cls
I0411 17:32:30.210496 14679 net.cpp:100] Creating Layer loss_cls
I0411 17:32:30.210503 14679 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0411 17:32:30.210512 14679 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0411 17:32:30.210521 14679 net.cpp:408] loss_cls -> loss_cls
I0411 17:32:30.210536 14679 layer_factory.hpp:77] Creating layer loss_cls
I0411 17:32:30.210659 14679 net.cpp:150] Setting up loss_cls
I0411 17:32:30.210666 14679 net.cpp:157] Top shape: (1)
I0411 17:32:30.210671 14679 net.cpp:160]     with loss weight 1
I0411 17:32:30.210685 14679 net.cpp:165] Memory required for data: 10172697196
I0411 17:32:30.210690 14679 layer_factory.hpp:77] Creating layer loss_twin
I0411 17:32:30.210696 14679 net.cpp:100] Creating Layer loss_twin
I0411 17:32:30.210701 14679 net.cpp:434] loss_twin <- twin_pred
I0411 17:32:30.210707 14679 net.cpp:434] loss_twin <- twin_targets
I0411 17:32:30.210712 14679 net.cpp:434] loss_twin <- twin_inside_weights
I0411 17:32:30.210717 14679 net.cpp:434] loss_twin <- twin_outside_weights
I0411 17:32:30.210726 14679 net.cpp:408] loss_twin -> loss_twin
I0411 17:32:30.210881 14679 net.cpp:150] Setting up loss_twin
I0411 17:32:30.210891 14679 net.cpp:157] Top shape: (1)
I0411 17:32:30.210896 14679 net.cpp:160]     with loss weight 1
I0411 17:32:30.210901 14679 net.cpp:165] Memory required for data: 10172697200
I0411 17:32:30.210906 14679 layer_factory.hpp:77] Creating layer accuarcy
I0411 17:32:30.210916 14679 net.cpp:100] Creating Layer accuarcy
I0411 17:32:30.210922 14679 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0411 17:32:30.210927 14679 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0411 17:32:30.210933 14679 net.cpp:408] accuarcy -> accuarcy
I0411 17:32:30.210943 14679 net.cpp:150] Setting up accuarcy
I0411 17:32:30.210949 14679 net.cpp:157] Top shape: (1)
I0411 17:32:30.210953 14679 net.cpp:165] Memory required for data: 10172697204
I0411 17:32:30.210959 14679 net.cpp:228] accuarcy does not need backward computation.
I0411 17:32:30.210964 14679 net.cpp:226] loss_twin needs backward computation.
I0411 17:32:30.210969 14679 net.cpp:226] loss_cls needs backward computation.
I0411 17:32:30.210974 14679 net.cpp:226] twin_pred needs backward computation.
I0411 17:32:30.210978 14679 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0411 17:32:30.210983 14679 net.cpp:226] cls_score needs backward computation.
I0411 17:32:30.210988 14679 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0411 17:32:30.210992 14679 net.cpp:226] drop6 needs backward computation.
I0411 17:32:30.210996 14679 net.cpp:226] relu6 needs backward computation.
I0411 17:32:30.211001 14679 net.cpp:226] fc6 needs backward computation.
I0411 17:32:30.211005 14679 net.cpp:226] roi_pool5 needs backward computation.
I0411 17:32:30.211012 14679 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0411 17:32:30.211019 14679 net.cpp:226] roi-data needs backward computation.
I0411 17:32:30.211024 14679 net.cpp:226] proposal needs backward computation.
I0411 17:32:30.211028 14679 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0411 17:32:30.211033 14679 net.cpp:226] rpn_cls_prob needs backward computation.
I0411 17:32:30.211037 14679 net.cpp:228] rpn_accuarcy does not need backward computation.
I0411 17:32:30.211042 14679 net.cpp:226] rpn_loss_twin needs backward computation.
I0411 17:32:30.211050 14679 net.cpp:226] rpn_loss_cls needs backward computation.
I0411 17:32:30.211055 14679 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0411 17:32:30.211061 14679 net.cpp:226] rpn-data needs backward computation.
I0411 17:32:30.211068 14679 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0411 17:32:30.211072 14679 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0411 17:32:30.211078 14679 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0411 17:32:30.211082 14679 net.cpp:226] rpn_twin_pred needs backward computation.
I0411 17:32:30.211087 14679 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0411 17:32:30.211092 14679 net.cpp:226] rpn_cls_score needs backward computation.
I0411 17:32:30.211097 14679 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0411 17:32:30.211102 14679 net.cpp:226] rpn/output_pool needs backward computation.
I0411 17:32:30.211107 14679 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0411 17:32:30.211112 14679 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0411 17:32:30.211117 14679 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0411 17:32:30.211120 14679 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0411 17:32:30.211125 14679 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0411 17:32:30.211130 14679 net.cpp:226] relu5b needs backward computation.
I0411 17:32:30.211134 14679 net.cpp:226] conv5b needs backward computation.
I0411 17:32:30.211138 14679 net.cpp:226] relu5a needs backward computation.
I0411 17:32:30.211143 14679 net.cpp:226] conv5a needs backward computation.
I0411 17:32:30.211148 14679 net.cpp:226] pool4 needs backward computation.
I0411 17:32:30.211151 14679 net.cpp:226] relu4b needs backward computation.
I0411 17:32:30.211156 14679 net.cpp:226] conv4b needs backward computation.
I0411 17:32:30.211160 14679 net.cpp:226] relu4a needs backward computation.
I0411 17:32:30.211164 14679 net.cpp:226] conv4a needs backward computation.
I0411 17:32:30.211169 14679 net.cpp:226] pool3 needs backward computation.
I0411 17:32:30.211174 14679 net.cpp:226] relu3b needs backward computation.
I0411 17:32:30.211177 14679 net.cpp:226] conv3b needs backward computation.
I0411 17:32:30.211181 14679 net.cpp:226] relu3a needs backward computation.
I0411 17:32:30.211186 14679 net.cpp:226] conv3a needs backward computation.
I0411 17:32:30.211190 14679 net.cpp:228] pool2 does not need backward computation.
I0411 17:32:30.211195 14679 net.cpp:228] relu2a does not need backward computation.
I0411 17:32:30.211199 14679 net.cpp:228] conv2a does not need backward computation.
I0411 17:32:30.211205 14679 net.cpp:228] pool1 does not need backward computation.
I0411 17:32:30.211210 14679 net.cpp:228] relu1a does not need backward computation.
I0411 17:32:30.211213 14679 net.cpp:228] conv1a does not need backward computation.
I0411 17:32:30.211218 14679 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0411 17:32:30.211225 14679 net.cpp:228] data_data_0_split does not need backward computation.
I0411 17:32:30.211230 14679 net.cpp:228] data does not need backward computation.
I0411 17:32:30.211233 14679 net.cpp:270] This network produces output accuarcy
I0411 17:32:30.211238 14679 net.cpp:270] This network produces output loss_cls
I0411 17:32:30.211243 14679 net.cpp:270] This network produces output loss_twin
I0411 17:32:30.211247 14679 net.cpp:270] This network produces output rpn_accuarcy
I0411 17:32:30.211252 14679 net.cpp:270] This network produces output rpn_accuarcy_class
I0411 17:32:30.211256 14679 net.cpp:270] This network produces output rpn_cls_loss
I0411 17:32:30.211261 14679 net.cpp:270] This network produces output rpn_loss_twin
I0411 17:32:30.211314 14679 net.cpp:283] Network initialization done.
I0411 17:32:30.211491 14679 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0411 17:32:39.121588 14679 net.cpp:761] Ignoring source layer pool5
I0411 17:32:39.150096 14679 net.cpp:761] Ignoring source layer fc7
I0411 17:32:39.150127 14679 net.cpp:761] Ignoring source layer relu7
I0411 17:32:39.150132 14679 net.cpp:761] Ignoring source layer drop7
I0411 17:32:39.150135 14679 net.cpp:761] Ignoring source layer fc8-200
I0411 17:32:39.150138 14679 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
F0411 17:32:39.176749 14679 syncedmem.cpp:56] Check failed: error == cudaSuccess (2 vs. 0)  out of memory
*** Check failure stack trace: ***
Process BlobFetcher-1:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 175, in run
    blobs = get_minibatch(minibatch_db, self._num_classes)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/minibatch.py", line 41, in get_minibatch
    gt_windows[:, -1] = roidb[0]['gt_classes'][gt_inds]
ValueError: could not broadcast input array from shape (99) into shape (1)
