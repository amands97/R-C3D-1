Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 01:35:14.112080 29812 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 01:35:14.112118 29812 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 01:35:14.112774 29812 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 01:35:14.113070 29812 layer_factory.hpp:77] Creating layer data
I0412 01:35:14.126065 29812 net.cpp:100] Creating Layer data
I0412 01:35:14.126092 29812 net.cpp:408] data -> data
I0412 01:35:14.126106 29812 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 01:35:14.191536 29812 net.cpp:150] Setting up data
I0412 01:35:14.191566 29812 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:35:14.191574 29812 net.cpp:157] Top shape: 1 3 (3)
I0412 01:35:14.191578 29812 net.cpp:165] Memory required for data: 115605516
I0412 01:35:14.191587 29812 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 01:35:14.191604 29812 net.cpp:100] Creating Layer data_data_0_split
I0412 01:35:14.191612 29812 net.cpp:434] data_data_0_split <- data
I0412 01:35:14.191622 29812 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 01:35:14.191638 29812 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 01:35:14.191697 29812 net.cpp:150] Setting up data_data_0_split
I0412 01:35:14.191709 29812 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:35:14.191714 29812 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:35:14.191718 29812 net.cpp:165] Memory required for data: 346816524
I0412 01:35:14.191722 29812 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 01:35:14.191735 29812 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 01:35:14.191741 29812 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 01:35:14.191748 29812 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 01:35:14.191761 29812 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 01:35:14.191814 29812 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 01:35:14.191823 29812 net.cpp:157] Top shape: 1 3 (3)
I0412 01:35:14.191828 29812 net.cpp:157] Top shape: 1 3 (3)
I0412 01:35:14.191833 29812 net.cpp:165] Memory required for data: 346816548
I0412 01:35:14.191838 29812 layer_factory.hpp:77] Creating layer conv1a
I0412 01:35:14.191854 29812 net.cpp:100] Creating Layer conv1a
I0412 01:35:14.191860 29812 net.cpp:434] conv1a <- data_data_0_split_0
I0412 01:35:14.191869 29812 net.cpp:408] conv1a -> conv1a
I0412 01:35:14.229110 29812 net.cpp:150] Setting up conv1a
I0412 01:35:14.229147 29812 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 01:35:14.229151 29812 net.cpp:165] Memory required for data: 2813067300
I0412 01:35:14.229178 29812 layer_factory.hpp:77] Creating layer relu1a
I0412 01:35:14.229197 29812 net.cpp:100] Creating Layer relu1a
I0412 01:35:14.229202 29812 net.cpp:434] relu1a <- conv1a
I0412 01:35:14.229212 29812 net.cpp:395] relu1a -> conv1a (in-place)
I0412 01:35:14.229223 29812 net.cpp:150] Setting up relu1a
I0412 01:35:14.229230 29812 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 01:35:14.229235 29812 net.cpp:165] Memory required for data: 5279318052
I0412 01:35:14.229239 29812 layer_factory.hpp:77] Creating layer pool1
I0412 01:35:14.229248 29812 net.cpp:100] Creating Layer pool1
I0412 01:35:14.229254 29812 net.cpp:434] pool1 <- conv1a
I0412 01:35:14.229260 29812 net.cpp:408] pool1 -> pool1
I0412 01:35:14.229393 29812 net.cpp:150] Setting up pool1
I0412 01:35:14.229406 29812 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 01:35:14.229411 29812 net.cpp:165] Memory required for data: 5895880740
I0412 01:35:14.229415 29812 layer_factory.hpp:77] Creating layer conv2a
I0412 01:35:14.229429 29812 net.cpp:100] Creating Layer conv2a
I0412 01:35:14.229435 29812 net.cpp:434] conv2a <- pool1
I0412 01:35:14.229444 29812 net.cpp:408] conv2a -> conv2a
I0412 01:35:14.258692 29812 net.cpp:150] Setting up conv2a
I0412 01:35:14.258729 29812 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 01:35:14.258733 29812 net.cpp:165] Memory required for data: 7129006116
I0412 01:35:14.258754 29812 layer_factory.hpp:77] Creating layer relu2a
I0412 01:35:14.258769 29812 net.cpp:100] Creating Layer relu2a
I0412 01:35:14.258776 29812 net.cpp:434] relu2a <- conv2a
I0412 01:35:14.258785 29812 net.cpp:395] relu2a -> conv2a (in-place)
I0412 01:35:14.258795 29812 net.cpp:150] Setting up relu2a
I0412 01:35:14.258802 29812 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 01:35:14.258806 29812 net.cpp:165] Memory required for data: 8362131492
I0412 01:35:14.258811 29812 layer_factory.hpp:77] Creating layer pool2
I0412 01:35:14.258823 29812 net.cpp:100] Creating Layer pool2
I0412 01:35:14.258827 29812 net.cpp:434] pool2 <- conv2a
I0412 01:35:14.258836 29812 net.cpp:408] pool2 -> pool2
I0412 01:35:14.258945 29812 net.cpp:150] Setting up pool2
I0412 01:35:14.258956 29812 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 01:35:14.258961 29812 net.cpp:165] Memory required for data: 8516272164
I0412 01:35:14.258966 29812 layer_factory.hpp:77] Creating layer conv3a
I0412 01:35:14.258981 29812 net.cpp:100] Creating Layer conv3a
I0412 01:35:14.258988 29812 net.cpp:434] conv3a <- pool2
I0412 01:35:14.258996 29812 net.cpp:408] conv3a -> conv3a
I0412 01:35:14.277235 29812 net.cpp:150] Setting up conv3a
I0412 01:35:14.277271 29812 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:35:14.277277 29812 net.cpp:165] Memory required for data: 8824553508
I0412 01:35:14.277295 29812 layer_factory.hpp:77] Creating layer relu3a
I0412 01:35:14.277312 29812 net.cpp:100] Creating Layer relu3a
I0412 01:35:14.277320 29812 net.cpp:434] relu3a <- conv3a
I0412 01:35:14.277333 29812 net.cpp:395] relu3a -> conv3a (in-place)
I0412 01:35:14.277346 29812 net.cpp:150] Setting up relu3a
I0412 01:35:14.277355 29812 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:35:14.277359 29812 net.cpp:165] Memory required for data: 9132834852
I0412 01:35:14.277365 29812 layer_factory.hpp:77] Creating layer conv3b
I0412 01:35:14.277384 29812 net.cpp:100] Creating Layer conv3b
I0412 01:35:14.277391 29812 net.cpp:434] conv3b <- conv3a
I0412 01:35:14.277401 29812 net.cpp:408] conv3b -> conv3b
I0412 01:35:14.302676 29812 net.cpp:150] Setting up conv3b
I0412 01:35:14.302707 29812 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:35:14.302712 29812 net.cpp:165] Memory required for data: 9441116196
I0412 01:35:14.302726 29812 layer_factory.hpp:77] Creating layer relu3b
I0412 01:35:14.302737 29812 net.cpp:100] Creating Layer relu3b
I0412 01:35:14.302747 29812 net.cpp:434] relu3b <- conv3b
I0412 01:35:14.302758 29812 net.cpp:395] relu3b -> conv3b (in-place)
I0412 01:35:14.302770 29812 net.cpp:150] Setting up relu3b
I0412 01:35:14.302778 29812 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:35:14.302781 29812 net.cpp:165] Memory required for data: 9749397540
I0412 01:35:14.302785 29812 layer_factory.hpp:77] Creating layer pool3
I0412 01:35:14.302796 29812 net.cpp:100] Creating Layer pool3
I0412 01:35:14.302803 29812 net.cpp:434] pool3 <- conv3b
I0412 01:35:14.302809 29812 net.cpp:408] pool3 -> pool3
I0412 01:35:14.302878 29812 net.cpp:150] Setting up pool3
I0412 01:35:14.302888 29812 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 01:35:14.302896 29812 net.cpp:165] Memory required for data: 9787932708
I0412 01:35:14.302899 29812 layer_factory.hpp:77] Creating layer conv4a
I0412 01:35:14.302913 29812 net.cpp:100] Creating Layer conv4a
I0412 01:35:14.302919 29812 net.cpp:434] conv4a <- pool3
I0412 01:35:14.302928 29812 net.cpp:408] conv4a -> conv4a
I0412 01:35:14.343849 29812 net.cpp:150] Setting up conv4a
I0412 01:35:14.343880 29812 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:35:14.343884 29812 net.cpp:165] Memory required for data: 9865003044
I0412 01:35:14.343906 29812 layer_factory.hpp:77] Creating layer relu4a
I0412 01:35:14.343917 29812 net.cpp:100] Creating Layer relu4a
I0412 01:35:14.343924 29812 net.cpp:434] relu4a <- conv4a
I0412 01:35:14.343931 29812 net.cpp:395] relu4a -> conv4a (in-place)
I0412 01:35:14.343942 29812 net.cpp:150] Setting up relu4a
I0412 01:35:14.343947 29812 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:35:14.343951 29812 net.cpp:165] Memory required for data: 9942073380
I0412 01:35:14.343956 29812 layer_factory.hpp:77] Creating layer conv4b
I0412 01:35:14.343976 29812 net.cpp:100] Creating Layer conv4b
I0412 01:35:14.343981 29812 net.cpp:434] conv4b <- conv4a
I0412 01:35:14.343986 29812 net.cpp:408] conv4b -> conv4b
I0412 01:35:14.425261 29812 net.cpp:150] Setting up conv4b
I0412 01:35:14.425292 29812 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:35:14.425297 29812 net.cpp:165] Memory required for data: 10019143716
I0412 01:35:14.425308 29812 layer_factory.hpp:77] Creating layer relu4b
I0412 01:35:14.425320 29812 net.cpp:100] Creating Layer relu4b
I0412 01:35:14.425326 29812 net.cpp:434] relu4b <- conv4b
I0412 01:35:14.425334 29812 net.cpp:395] relu4b -> conv4b (in-place)
I0412 01:35:14.425344 29812 net.cpp:150] Setting up relu4b
I0412 01:35:14.425350 29812 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:35:14.425354 29812 net.cpp:165] Memory required for data: 10096214052
I0412 01:35:14.425357 29812 layer_factory.hpp:77] Creating layer pool4
I0412 01:35:14.425367 29812 net.cpp:100] Creating Layer pool4
I0412 01:35:14.425372 29812 net.cpp:434] pool4 <- conv4b
I0412 01:35:14.425379 29812 net.cpp:408] pool4 -> pool4
I0412 01:35:14.425448 29812 net.cpp:150] Setting up pool4
I0412 01:35:14.425459 29812 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:35:14.425463 29812 net.cpp:165] Memory required for data: 10105847844
I0412 01:35:14.425468 29812 layer_factory.hpp:77] Creating layer conv5a
I0412 01:35:14.425482 29812 net.cpp:100] Creating Layer conv5a
I0412 01:35:14.425488 29812 net.cpp:434] conv5a <- pool4
I0412 01:35:14.425500 29812 net.cpp:408] conv5a -> conv5a
I0412 01:35:14.530724 29812 net.cpp:150] Setting up conv5a
I0412 01:35:14.530758 29812 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:35:14.530763 29812 net.cpp:165] Memory required for data: 10115481636
I0412 01:35:14.530776 29812 layer_factory.hpp:77] Creating layer relu5a
I0412 01:35:14.530788 29812 net.cpp:100] Creating Layer relu5a
I0412 01:35:14.530795 29812 net.cpp:434] relu5a <- conv5a
I0412 01:35:14.530803 29812 net.cpp:395] relu5a -> conv5a (in-place)
I0412 01:35:14.530815 29812 net.cpp:150] Setting up relu5a
I0412 01:35:14.530822 29812 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:35:14.530827 29812 net.cpp:165] Memory required for data: 10125115428
I0412 01:35:14.530833 29812 layer_factory.hpp:77] Creating layer conv5b
I0412 01:35:14.530845 29812 net.cpp:100] Creating Layer conv5b
I0412 01:35:14.530851 29812 net.cpp:434] conv5b <- conv5a
I0412 01:35:14.530860 29812 net.cpp:408] conv5b -> conv5b
I0412 01:35:14.644451 29812 net.cpp:150] Setting up conv5b
I0412 01:35:14.644526 29812 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:35:14.644544 29812 net.cpp:165] Memory required for data: 10134749220
I0412 01:35:14.644568 29812 layer_factory.hpp:77] Creating layer relu5b
I0412 01:35:14.644592 29812 net.cpp:100] Creating Layer relu5b
I0412 01:35:14.644608 29812 net.cpp:434] relu5b <- conv5b
I0412 01:35:14.644659 29812 net.cpp:395] relu5b -> conv5b (in-place)
I0412 01:35:14.644711 29812 net.cpp:150] Setting up relu5b
I0412 01:35:14.644760 29812 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:35:14.644806 29812 net.cpp:165] Memory required for data: 10144383012
I0412 01:35:14.644878 29812 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 01:35:14.644924 29812 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 01:35:14.644960 29812 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 01:35:14.645001 29812 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 01:35:14.645045 29812 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 01:35:14.645123 29812 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 01:35:14.645150 29812 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:35:14.645165 29812 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:35:14.645179 29812 net.cpp:165] Memory required for data: 10163650596
I0412 01:35:14.645192 29812 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 01:35:14.645215 29812 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 01:35:14.645231 29812 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 01:35:14.645247 29812 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 01:35:14.742774 29812 net.cpp:150] Setting up rpn_conv/3x3
I0412 01:35:14.742801 29812 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 01:35:14.742805 29812 net.cpp:165] Memory required for data: 10166796324
I0412 01:35:14.742825 29812 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 01:35:14.742836 29812 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 01:35:14.742841 29812 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 01:35:14.742848 29812 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 01:35:14.742857 29812 net.cpp:150] Setting up rpn_relu/3x3
I0412 01:35:14.742861 29812 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 01:35:14.742863 29812 net.cpp:165] Memory required for data: 10169942052
I0412 01:35:14.742866 29812 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 01:35:14.742877 29812 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 01:35:14.742880 29812 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 01:35:14.742885 29812 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 01:35:14.822125 29812 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 01:35:14.822158 29812 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 01:35:14.822163 29812 net.cpp:165] Memory required for data: 10170728484
I0412 01:35:14.822175 29812 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 01:35:14.822185 29812 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 01:35:14.822191 29812 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 01:35:14.822198 29812 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 01:35:14.822208 29812 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 01:35:14.822214 29812 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 01:35:14.822218 29812 net.cpp:165] Memory required for data: 10171514916
I0412 01:35:14.822222 29812 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 01:35:14.822232 29812 net.cpp:100] Creating Layer rpn/output_pool
I0412 01:35:14.822235 29812 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 01:35:14.822242 29812 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 01:35:14.822301 29812 net.cpp:150] Setting up rpn/output_pool
I0412 01:35:14.822311 29812 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:35:14.822315 29812 net.cpp:165] Memory required for data: 10171711524
I0412 01:35:14.822319 29812 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 01:35:14.822329 29812 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 01:35:14.822332 29812 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 01:35:14.822340 29812 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 01:35:14.822347 29812 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 01:35:14.822396 29812 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 01:35:14.822405 29812 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:35:14.822410 29812 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:35:14.822414 29812 net.cpp:165] Memory required for data: 10172104740
I0412 01:35:14.822418 29812 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 01:35:14.822430 29812 net.cpp:100] Creating Layer rpn_cls_score
I0412 01:35:14.822434 29812 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 01:35:14.822443 29812 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 01:35:14.823081 29812 net.cpp:150] Setting up rpn_cls_score
I0412 01:35:14.823091 29812 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:35:14.823094 29812 net.cpp:165] Memory required for data: 10172133156
I0412 01:35:14.823099 29812 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 01:35:14.823103 29812 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 01:35:14.823107 29812 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 01:35:14.823113 29812 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 01:35:14.823122 29812 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 01:35:14.823168 29812 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 01:35:14.823173 29812 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:35:14.823177 29812 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:35:14.823180 29812 net.cpp:165] Memory required for data: 10172189988
I0412 01:35:14.823182 29812 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 01:35:14.823199 29812 net.cpp:100] Creating Layer rpn_twin_pred
I0412 01:35:14.823205 29812 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 01:35:14.823215 29812 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 01:35:14.823757 29812 net.cpp:150] Setting up rpn_twin_pred
I0412 01:35:14.823768 29812 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:35:14.823776 29812 net.cpp:165] Memory required for data: 10172218404
I0412 01:35:14.823782 29812 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:35:14.823796 29812 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:35:14.823802 29812 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 01:35:14.823812 29812 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 01:35:14.823822 29812 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 01:35:14.823876 29812 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:35:14.823886 29812 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:35:14.823892 29812 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:35:14.823896 29812 net.cpp:165] Memory required for data: 10172275236
I0412 01:35:14.823900 29812 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 01:35:14.823911 29812 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 01:35:14.823916 29812 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 01:35:14.823925 29812 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 01:35:14.823968 29812 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 01:35:14.823993 29812 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:35:14.824009 29812 net.cpp:165] Memory required for data: 10172303652
I0412 01:35:14.824024 29812 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:35:14.824043 29812 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:35:14.824059 29812 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 01:35:14.824080 29812 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 01:35:14.824110 29812 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 01:35:14.824134 29812 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 01:35:14.824218 29812 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:35:14.824241 29812 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:35:14.824259 29812 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:35:14.824280 29812 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:35:14.824296 29812 net.cpp:165] Memory required for data: 10172388900
I0412 01:35:14.824311 29812 layer_factory.hpp:77] Creating layer rpn-data
I0412 01:35:14.824837 29812 net.cpp:100] Creating Layer rpn-data
I0412 01:35:14.824867 29812 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 01:35:14.824890 29812 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 01:35:14.824909 29812 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 01:35:14.824931 29812 net.cpp:408] rpn-data -> rpn_labels
I0412 01:35:14.824954 29812 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 01:35:14.824977 29812 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 01:35:14.825006 29812 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 01:35:14.829181 29812 net.cpp:150] Setting up rpn-data
I0412 01:35:14.829219 29812 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:35:14.829241 29812 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:35:14.829258 29812 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:35:14.829277 29812 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:35:14.829290 29812 net.cpp:165] Memory required for data: 10172488356
I0412 01:35:14.829305 29812 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 01:35:14.829324 29812 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 01:35:14.829344 29812 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 01:35:14.829362 29812 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 01:35:14.829385 29812 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 01:35:14.829459 29812 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 01:35:14.829486 29812 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:35:14.829505 29812 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:35:14.829520 29812 net.cpp:165] Memory required for data: 10172516772
I0412 01:35:14.829535 29812 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 01:35:14.829557 29812 net.cpp:100] Creating Layer rpn_loss_cls
I0412 01:35:14.829574 29812 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 01:35:14.829591 29812 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 01:35:14.829612 29812 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 01:35:14.829638 29812 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 01:35:14.829829 29812 net.cpp:150] Setting up rpn_loss_cls
I0412 01:35:14.829843 29812 net.cpp:157] Top shape: (1)
I0412 01:35:14.829847 29812 net.cpp:160]     with loss weight 1
I0412 01:35:14.829861 29812 net.cpp:165] Memory required for data: 10172516776
I0412 01:35:14.829869 29812 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 01:35:14.829877 29812 net.cpp:100] Creating Layer rpn_loss_twin
I0412 01:35:14.829902 29812 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 01:35:14.829926 29812 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 01:35:14.829948 29812 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 01:35:14.829975 29812 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 01:35:14.830000 29812 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 01:35:14.830162 29812 net.cpp:150] Setting up rpn_loss_twin
I0412 01:35:14.830180 29812 net.cpp:157] Top shape: (1)
I0412 01:35:14.830185 29812 net.cpp:160]     with loss weight 1
I0412 01:35:14.830193 29812 net.cpp:165] Memory required for data: 10172516780
I0412 01:35:14.830199 29812 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 01:35:14.830209 29812 net.cpp:100] Creating Layer rpn_accuarcy
I0412 01:35:14.830219 29812 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 01:35:14.830227 29812 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 01:35:14.830255 29812 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 01:35:14.830268 29812 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 01:35:14.830337 29812 net.cpp:150] Setting up rpn_accuarcy
I0412 01:35:14.830348 29812 net.cpp:157] Top shape: (1)
I0412 01:35:14.830356 29812 net.cpp:157] Top shape: 2 (2)
I0412 01:35:14.830364 29812 net.cpp:165] Memory required for data: 10172516792
I0412 01:35:14.830368 29812 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 01:35:14.830379 29812 net.cpp:100] Creating Layer rpn_cls_prob
I0412 01:35:14.830386 29812 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 01:35:14.830394 29812 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 01:35:14.830504 29812 net.cpp:150] Setting up rpn_cls_prob
I0412 01:35:14.830521 29812 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:35:14.830528 29812 net.cpp:165] Memory required for data: 10172545208
I0412 01:35:14.830534 29812 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 01:35:14.830543 29812 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 01:35:14.830549 29812 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 01:35:14.830560 29812 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 01:35:14.830602 29812 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 01:35:14.830615 29812 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:35:14.830619 29812 net.cpp:165] Memory required for data: 10172573624
I0412 01:35:14.830624 29812 layer_factory.hpp:77] Creating layer proposal
I0412 01:35:14.831421 29812 net.cpp:100] Creating Layer proposal
I0412 01:35:14.831435 29812 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 01:35:14.831444 29812 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 01:35:14.831455 29812 net.cpp:408] proposal -> rpn_rois
I0412 01:35:14.838016 29812 net.cpp:150] Setting up proposal
I0412 01:35:14.838066 29812 net.cpp:157] Top shape: 1 3 (3)
I0412 01:35:14.838091 29812 net.cpp:165] Memory required for data: 10172573636
I0412 01:35:14.838114 29812 layer_factory.hpp:77] Creating layer roi-data
I0412 01:35:14.838326 29812 net.cpp:100] Creating Layer roi-data
I0412 01:35:14.838357 29812 net.cpp:434] roi-data <- rpn_rois
I0412 01:35:14.838383 29812 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 01:35:14.838412 29812 net.cpp:408] roi-data -> rois
I0412 01:35:14.838440 29812 net.cpp:408] roi-data -> labels
I0412 01:35:14.838469 29812 net.cpp:408] roi-data -> twin_targets
I0412 01:35:14.838498 29812 net.cpp:408] roi-data -> twin_inside_weights
I0412 01:35:14.838527 29812 net.cpp:408] roi-data -> twin_outside_weights
I0412 01:35:14.839108 29812 net.cpp:150] Setting up roi-data
I0412 01:35:14.839146 29812 net.cpp:157] Top shape: 1 3 (3)
I0412 01:35:14.839174 29812 net.cpp:157] Top shape: 1 1 (1)
I0412 01:35:14.839200 29812 net.cpp:157] Top shape: 1 402 (402)
I0412 01:35:14.839221 29812 net.cpp:157] Top shape: 1 402 (402)
I0412 01:35:14.839242 29812 net.cpp:157] Top shape: 1 402 (402)
I0412 01:35:14.839278 29812 net.cpp:165] Memory required for data: 10172578476
I0412 01:35:14.839313 29812 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 01:35:14.839340 29812 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 01:35:14.839366 29812 net.cpp:434] labels_roi-data_1_split <- labels
I0412 01:35:14.839395 29812 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 01:35:14.839426 29812 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 01:35:14.839512 29812 net.cpp:150] Setting up labels_roi-data_1_split
I0412 01:35:14.839542 29812 net.cpp:157] Top shape: 1 1 (1)
I0412 01:35:14.839567 29812 net.cpp:157] Top shape: 1 1 (1)
I0412 01:35:14.839591 29812 net.cpp:165] Memory required for data: 10172578484
I0412 01:35:14.839612 29812 layer_factory.hpp:77] Creating layer roi_pool5
I0412 01:35:14.839639 29812 net.cpp:100] Creating Layer roi_pool5
I0412 01:35:14.839665 29812 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 01:35:14.839691 29812 net.cpp:434] roi_pool5 <- rois
I0412 01:35:14.839720 29812 net.cpp:408] roi_pool5 -> pool5
I0412 01:35:14.839749 29812 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 01:35:14.839779 29812 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 01:35:14.839869 29812 net.cpp:150] Setting up roi_pool5
I0412 01:35:14.839900 29812 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 01:35:14.839922 29812 net.cpp:165] Memory required for data: 10172611252
I0412 01:35:14.839944 29812 layer_factory.hpp:77] Creating layer fc6
I0412 01:35:14.839988 29812 net.cpp:100] Creating Layer fc6
I0412 01:35:14.840014 29812 net.cpp:434] fc6 <- pool5
I0412 01:35:14.840042 29812 net.cpp:408] fc6 -> fc6
I0412 01:35:15.261373 29812 net.cpp:150] Setting up fc6
I0412 01:35:15.261543 29812 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:35:15.261584 29812 net.cpp:165] Memory required for data: 10172627636
I0412 01:35:15.261629 29812 layer_factory.hpp:77] Creating layer relu6
I0412 01:35:15.261693 29812 net.cpp:100] Creating Layer relu6
I0412 01:35:15.261736 29812 net.cpp:434] relu6 <- fc6
I0412 01:35:15.261782 29812 net.cpp:395] relu6 -> fc6 (in-place)
I0412 01:35:15.261828 29812 net.cpp:150] Setting up relu6
I0412 01:35:15.261870 29812 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:35:15.261910 29812 net.cpp:165] Memory required for data: 10172644020
I0412 01:35:15.261953 29812 layer_factory.hpp:77] Creating layer drop6
I0412 01:35:15.261993 29812 net.cpp:100] Creating Layer drop6
I0412 01:35:15.262030 29812 net.cpp:434] drop6 <- fc6
I0412 01:35:15.262069 29812 net.cpp:395] drop6 -> fc6 (in-place)
I0412 01:35:15.262153 29812 net.cpp:150] Setting up drop6
I0412 01:35:15.262209 29812 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:35:15.262253 29812 net.cpp:165] Memory required for data: 10172660404
I0412 01:35:15.262296 29812 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 01:35:15.262337 29812 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 01:35:15.262372 29812 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 01:35:15.262955 29812 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 01:35:15.263025 29812 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 01:35:15.265614 29812 net.cpp:150] Setting up fc6_drop6_0_split
I0412 01:35:15.265693 29812 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:35:15.265738 29812 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:35:15.265779 29812 net.cpp:165] Memory required for data: 10172693172
I0412 01:35:15.265818 29812 layer_factory.hpp:77] Creating layer cls_score
I0412 01:35:15.265866 29812 net.cpp:100] Creating Layer cls_score
I0412 01:35:15.265908 29812 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 01:35:15.265957 29812 net.cpp:408] cls_score -> cls_score
I0412 01:35:15.277863 29812 net.cpp:150] Setting up cls_score
I0412 01:35:15.278084 29812 net.cpp:157] Top shape: 1 201 (201)
I0412 01:35:15.278149 29812 net.cpp:165] Memory required for data: 10172693976
I0412 01:35:15.278201 29812 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 01:35:15.278251 29812 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 01:35:15.278293 29812 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 01:35:15.278338 29812 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 01:35:15.278383 29812 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 01:35:15.278484 29812 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 01:35:15.278554 29812 net.cpp:157] Top shape: 1 201 (201)
I0412 01:35:15.278596 29812 net.cpp:157] Top shape: 1 201 (201)
I0412 01:35:15.278630 29812 net.cpp:165] Memory required for data: 10172695584
I0412 01:35:15.278663 29812 layer_factory.hpp:77] Creating layer twin_pred
I0412 01:35:15.278703 29812 net.cpp:100] Creating Layer twin_pred
I0412 01:35:15.278743 29812 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 01:35:15.278780 29812 net.cpp:408] twin_pred -> twin_pred
I0412 01:35:15.306574 29812 net.cpp:150] Setting up twin_pred
I0412 01:35:15.306607 29812 net.cpp:157] Top shape: 1 402 (402)
I0412 01:35:15.306609 29812 net.cpp:165] Memory required for data: 10172697192
I0412 01:35:15.306622 29812 layer_factory.hpp:77] Creating layer loss_cls
I0412 01:35:15.306633 29812 net.cpp:100] Creating Layer loss_cls
I0412 01:35:15.306641 29812 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 01:35:15.306648 29812 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 01:35:15.306655 29812 net.cpp:408] loss_cls -> loss_cls
I0412 01:35:15.306666 29812 layer_factory.hpp:77] Creating layer loss_cls
I0412 01:35:15.306792 29812 net.cpp:150] Setting up loss_cls
I0412 01:35:15.306800 29812 net.cpp:157] Top shape: (1)
I0412 01:35:15.306803 29812 net.cpp:160]     with loss weight 1
I0412 01:35:15.306813 29812 net.cpp:165] Memory required for data: 10172697196
I0412 01:35:15.306816 29812 layer_factory.hpp:77] Creating layer loss_twin
I0412 01:35:15.306823 29812 net.cpp:100] Creating Layer loss_twin
I0412 01:35:15.306826 29812 net.cpp:434] loss_twin <- twin_pred
I0412 01:35:15.306830 29812 net.cpp:434] loss_twin <- twin_targets
I0412 01:35:15.306834 29812 net.cpp:434] loss_twin <- twin_inside_weights
I0412 01:35:15.306838 29812 net.cpp:434] loss_twin <- twin_outside_weights
I0412 01:35:15.306846 29812 net.cpp:408] loss_twin -> loss_twin
I0412 01:35:15.306958 29812 net.cpp:150] Setting up loss_twin
I0412 01:35:15.306965 29812 net.cpp:157] Top shape: (1)
I0412 01:35:15.306968 29812 net.cpp:160]     with loss weight 1
I0412 01:35:15.306972 29812 net.cpp:165] Memory required for data: 10172697200
I0412 01:35:15.306975 29812 layer_factory.hpp:77] Creating layer accuarcy
I0412 01:35:15.306982 29812 net.cpp:100] Creating Layer accuarcy
I0412 01:35:15.306987 29812 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 01:35:15.306993 29812 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 01:35:15.306999 29812 net.cpp:408] accuarcy -> accuarcy
I0412 01:35:15.307006 29812 net.cpp:150] Setting up accuarcy
I0412 01:35:15.307009 29812 net.cpp:157] Top shape: (1)
I0412 01:35:15.307011 29812 net.cpp:165] Memory required for data: 10172697204
I0412 01:35:15.307015 29812 net.cpp:228] accuarcy does not need backward computation.
I0412 01:35:15.307018 29812 net.cpp:226] loss_twin needs backward computation.
I0412 01:35:15.307023 29812 net.cpp:226] loss_cls needs backward computation.
I0412 01:35:15.307025 29812 net.cpp:226] twin_pred needs backward computation.
I0412 01:35:15.307029 29812 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 01:35:15.307032 29812 net.cpp:226] cls_score needs backward computation.
I0412 01:35:15.307035 29812 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 01:35:15.307039 29812 net.cpp:226] drop6 needs backward computation.
I0412 01:35:15.307042 29812 net.cpp:226] relu6 needs backward computation.
I0412 01:35:15.307045 29812 net.cpp:226] fc6 needs backward computation.
I0412 01:35:15.307049 29812 net.cpp:226] roi_pool5 needs backward computation.
I0412 01:35:15.307052 29812 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 01:35:15.307059 29812 net.cpp:226] roi-data needs backward computation.
I0412 01:35:15.307063 29812 net.cpp:226] proposal needs backward computation.
I0412 01:35:15.307067 29812 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 01:35:15.307072 29812 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 01:35:15.307078 29812 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 01:35:15.307083 29812 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 01:35:15.307087 29812 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 01:35:15.307092 29812 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 01:35:15.307096 29812 net.cpp:226] rpn-data needs backward computation.
I0412 01:35:15.307101 29812 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 01:35:15.307103 29812 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 01:35:15.307107 29812 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 01:35:15.307112 29812 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 01:35:15.307117 29812 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 01:35:15.307123 29812 net.cpp:226] rpn_cls_score needs backward computation.
I0412 01:35:15.307128 29812 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 01:35:15.307133 29812 net.cpp:226] rpn/output_pool needs backward computation.
I0412 01:35:15.307137 29812 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 01:35:15.307142 29812 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 01:35:15.307147 29812 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 01:35:15.307152 29812 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 01:35:15.307157 29812 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 01:35:15.307199 29812 net.cpp:226] relu5b needs backward computation.
I0412 01:35:15.307204 29812 net.cpp:226] conv5b needs backward computation.
I0412 01:35:15.307207 29812 net.cpp:226] relu5a needs backward computation.
I0412 01:35:15.307212 29812 net.cpp:226] conv5a needs backward computation.
I0412 01:35:15.307216 29812 net.cpp:226] pool4 needs backward computation.
I0412 01:35:15.307221 29812 net.cpp:226] relu4b needs backward computation.
I0412 01:35:15.307226 29812 net.cpp:226] conv4b needs backward computation.
I0412 01:35:15.307230 29812 net.cpp:226] relu4a needs backward computation.
I0412 01:35:15.307235 29812 net.cpp:226] conv4a needs backward computation.
I0412 01:35:15.307253 29812 net.cpp:226] pool3 needs backward computation.
I0412 01:35:15.307262 29812 net.cpp:226] relu3b needs backward computation.
I0412 01:35:15.307745 29812 net.cpp:226] conv3b needs backward computation.
I0412 01:35:15.307756 29812 net.cpp:226] relu3a needs backward computation.
I0412 01:35:15.307760 29812 net.cpp:226] conv3a needs backward computation.
I0412 01:35:15.307763 29812 net.cpp:228] pool2 does not need backward computation.
I0412 01:35:15.307766 29812 net.cpp:228] relu2a does not need backward computation.
I0412 01:35:15.307770 29812 net.cpp:228] conv2a does not need backward computation.
I0412 01:35:15.307772 29812 net.cpp:228] pool1 does not need backward computation.
I0412 01:35:15.307775 29812 net.cpp:228] relu1a does not need backward computation.
I0412 01:35:15.307778 29812 net.cpp:228] conv1a does not need backward computation.
I0412 01:35:15.307785 29812 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 01:35:15.307788 29812 net.cpp:228] data_data_0_split does not need backward computation.
I0412 01:35:15.307792 29812 net.cpp:228] data does not need backward computation.
I0412 01:35:15.307795 29812 net.cpp:270] This network produces output accuarcy
I0412 01:35:15.307798 29812 net.cpp:270] This network produces output loss_cls
I0412 01:35:15.307801 29812 net.cpp:270] This network produces output loss_twin
I0412 01:35:15.307804 29812 net.cpp:270] This network produces output rpn_accuarcy
I0412 01:35:15.307807 29812 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 01:35:15.307811 29812 net.cpp:270] This network produces output rpn_cls_loss
I0412 01:35:15.307817 29812 net.cpp:270] This network produces output rpn_loss_twin
I0412 01:35:15.307855 29812 net.cpp:283] Network initialization done.
I0412 01:35:15.307996 29812 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 01:35:15.496824 29812 net.cpp:761] Ignoring source layer pool5
I0412 01:35:15.523547 29812 net.cpp:761] Ignoring source layer fc7
I0412 01:35:15.523583 29812 net.cpp:761] Ignoring source layer relu7
I0412 01:35:15.523587 29812 net.cpp:761] Ignoring source layer drop7
I0412 01:35:15.523591 29812 net.cpp:761] Ignoring source layer fc8-200
I0412 01:35:15.523596 29812 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
F0412 01:35:15.574918 29812 syncedmem.cpp:56] Check failed: error == cudaSuccess (2 vs. 0)  out of memory
*** Check failure stack trace: ***
99
(array([0]), array([97]))
99
(array([0]), array([97]))
99
(array([0]), array([97]))
99
(array([0]), array([97]))
99
(array([0]), array([97]))
