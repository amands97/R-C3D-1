Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 01:56:38.521492 28431 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 01:56:38.521533 28431 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 01:56:38.522473 28431 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 01:56:38.522778 28431 layer_factory.hpp:77] Creating layer data
I0412 01:56:38.540251 28431 net.cpp:100] Creating Layer data
I0412 01:56:38.540277 28431 net.cpp:408] data -> data
I0412 01:56:38.540294 28431 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 01:56:38.559103 28431 net.cpp:150] Setting up data
I0412 01:56:38.559131 28431 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:56:38.559141 28431 net.cpp:157] Top shape: 1 3 (3)
I0412 01:56:38.559147 28431 net.cpp:165] Memory required for data: 115605516
I0412 01:56:38.559159 28431 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 01:56:38.559175 28431 net.cpp:100] Creating Layer data_data_0_split
I0412 01:56:38.559183 28431 net.cpp:434] data_data_0_split <- data
I0412 01:56:38.559195 28431 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 01:56:38.559211 28431 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 01:56:38.559281 28431 net.cpp:150] Setting up data_data_0_split
I0412 01:56:38.559294 28431 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:56:38.559301 28431 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:56:38.559307 28431 net.cpp:165] Memory required for data: 346816524
I0412 01:56:38.559312 28431 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 01:56:38.559321 28431 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 01:56:38.559329 28431 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 01:56:38.559340 28431 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 01:56:38.559353 28431 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 01:56:38.559417 28431 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 01:56:38.559427 28431 net.cpp:157] Top shape: 1 3 (3)
I0412 01:56:38.559433 28431 net.cpp:157] Top shape: 1 3 (3)
I0412 01:56:38.559438 28431 net.cpp:165] Memory required for data: 346816548
I0412 01:56:38.559447 28431 layer_factory.hpp:77] Creating layer conv1a
I0412 01:56:38.559465 28431 net.cpp:100] Creating Layer conv1a
I0412 01:56:38.559473 28431 net.cpp:434] conv1a <- data_data_0_split_0
I0412 01:56:38.559481 28431 net.cpp:408] conv1a -> conv1a
I0412 01:56:38.582108 28431 net.cpp:150] Setting up conv1a
I0412 01:56:38.582141 28431 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 01:56:38.582145 28431 net.cpp:165] Memory required for data: 2813067300
I0412 01:56:38.582161 28431 layer_factory.hpp:77] Creating layer relu1a
I0412 01:56:38.582175 28431 net.cpp:100] Creating Layer relu1a
I0412 01:56:38.582178 28431 net.cpp:434] relu1a <- conv1a
I0412 01:56:38.582183 28431 net.cpp:395] relu1a -> conv1a (in-place)
I0412 01:56:38.582192 28431 net.cpp:150] Setting up relu1a
I0412 01:56:38.582198 28431 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 01:56:38.582201 28431 net.cpp:165] Memory required for data: 5279318052
I0412 01:56:38.582204 28431 layer_factory.hpp:77] Creating layer pool1
I0412 01:56:38.582211 28431 net.cpp:100] Creating Layer pool1
I0412 01:56:38.582213 28431 net.cpp:434] pool1 <- conv1a
I0412 01:56:38.582217 28431 net.cpp:408] pool1 -> pool1
I0412 01:56:38.582324 28431 net.cpp:150] Setting up pool1
I0412 01:56:38.582334 28431 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 01:56:38.582337 28431 net.cpp:165] Memory required for data: 5895880740
I0412 01:56:38.582340 28431 layer_factory.hpp:77] Creating layer conv2a
I0412 01:56:38.582350 28431 net.cpp:100] Creating Layer conv2a
I0412 01:56:38.582355 28431 net.cpp:434] conv2a <- pool1
I0412 01:56:38.582361 28431 net.cpp:408] conv2a -> conv2a
I0412 01:56:38.590201 28431 net.cpp:150] Setting up conv2a
I0412 01:56:38.590282 28431 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 01:56:38.590298 28431 net.cpp:165] Memory required for data: 7129006116
I0412 01:56:38.590327 28431 layer_factory.hpp:77] Creating layer relu2a
I0412 01:56:38.590349 28431 net.cpp:100] Creating Layer relu2a
I0412 01:56:38.590365 28431 net.cpp:434] relu2a <- conv2a
I0412 01:56:38.590381 28431 net.cpp:395] relu2a -> conv2a (in-place)
I0412 01:56:38.590404 28431 net.cpp:150] Setting up relu2a
I0412 01:56:38.590420 28431 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 01:56:38.590431 28431 net.cpp:165] Memory required for data: 8362131492
I0412 01:56:38.590453 28431 layer_factory.hpp:77] Creating layer pool2
I0412 01:56:38.590477 28431 net.cpp:100] Creating Layer pool2
I0412 01:56:38.590490 28431 net.cpp:434] pool2 <- conv2a
I0412 01:56:38.590505 28431 net.cpp:408] pool2 -> pool2
I0412 01:56:38.590631 28431 net.cpp:150] Setting up pool2
I0412 01:56:38.590641 28431 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 01:56:38.590646 28431 net.cpp:165] Memory required for data: 8516272164
I0412 01:56:38.590649 28431 layer_factory.hpp:77] Creating layer conv3a
I0412 01:56:38.590663 28431 net.cpp:100] Creating Layer conv3a
I0412 01:56:38.590670 28431 net.cpp:434] conv3a <- pool2
I0412 01:56:38.590678 28431 net.cpp:408] conv3a -> conv3a
I0412 01:56:38.599419 28431 net.cpp:150] Setting up conv3a
I0412 01:56:38.599493 28431 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:56:38.599516 28431 net.cpp:165] Memory required for data: 8824553508
I0412 01:56:38.599545 28431 layer_factory.hpp:77] Creating layer relu3a
I0412 01:56:38.599567 28431 net.cpp:100] Creating Layer relu3a
I0412 01:56:38.599583 28431 net.cpp:434] relu3a <- conv3a
I0412 01:56:38.599599 28431 net.cpp:395] relu3a -> conv3a (in-place)
I0412 01:56:38.599625 28431 net.cpp:150] Setting up relu3a
I0412 01:56:38.599643 28431 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:56:38.599656 28431 net.cpp:165] Memory required for data: 9132834852
I0412 01:56:38.599663 28431 layer_factory.hpp:77] Creating layer conv3b
I0412 01:56:38.599678 28431 net.cpp:100] Creating Layer conv3b
I0412 01:56:38.599684 28431 net.cpp:434] conv3b <- conv3a
I0412 01:56:38.599691 28431 net.cpp:408] conv3b -> conv3b
I0412 01:56:38.625018 28431 net.cpp:150] Setting up conv3b
I0412 01:56:38.625078 28431 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:56:38.625093 28431 net.cpp:165] Memory required for data: 9441116196
I0412 01:56:38.625114 28431 layer_factory.hpp:77] Creating layer relu3b
I0412 01:56:38.625136 28431 net.cpp:100] Creating Layer relu3b
I0412 01:56:38.625151 28431 net.cpp:434] relu3b <- conv3b
I0412 01:56:38.625171 28431 net.cpp:395] relu3b -> conv3b (in-place)
I0412 01:56:38.625191 28431 net.cpp:150] Setting up relu3b
I0412 01:56:38.625207 28431 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:56:38.625221 28431 net.cpp:165] Memory required for data: 9749397540
I0412 01:56:38.625232 28431 layer_factory.hpp:77] Creating layer pool3
I0412 01:56:38.625248 28431 net.cpp:100] Creating Layer pool3
I0412 01:56:38.625262 28431 net.cpp:434] pool3 <- conv3b
I0412 01:56:38.625279 28431 net.cpp:408] pool3 -> pool3
I0412 01:56:38.625362 28431 net.cpp:150] Setting up pool3
I0412 01:56:38.625385 28431 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 01:56:38.625401 28431 net.cpp:165] Memory required for data: 9787932708
I0412 01:56:38.625414 28431 layer_factory.hpp:77] Creating layer conv4a
I0412 01:56:38.625437 28431 net.cpp:100] Creating Layer conv4a
I0412 01:56:38.625452 28431 net.cpp:434] conv4a <- pool3
I0412 01:56:38.625468 28431 net.cpp:408] conv4a -> conv4a
I0412 01:56:38.674723 28431 net.cpp:150] Setting up conv4a
I0412 01:56:38.674875 28431 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:56:38.674913 28431 net.cpp:165] Memory required for data: 9865003044
I0412 01:56:38.674965 28431 layer_factory.hpp:77] Creating layer relu4a
I0412 01:56:38.675012 28431 net.cpp:100] Creating Layer relu4a
I0412 01:56:38.675048 28431 net.cpp:434] relu4a <- conv4a
I0412 01:56:38.675086 28431 net.cpp:395] relu4a -> conv4a (in-place)
I0412 01:56:38.675127 28431 net.cpp:150] Setting up relu4a
I0412 01:56:38.675163 28431 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:56:38.675194 28431 net.cpp:165] Memory required for data: 9942073380
I0412 01:56:38.675223 28431 layer_factory.hpp:77] Creating layer conv4b
I0412 01:56:38.675273 28431 net.cpp:100] Creating Layer conv4b
I0412 01:56:38.675307 28431 net.cpp:434] conv4b <- conv4a
I0412 01:56:38.675343 28431 net.cpp:408] conv4b -> conv4b
I0412 01:56:38.759865 28431 net.cpp:150] Setting up conv4b
I0412 01:56:38.759893 28431 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:56:38.759897 28431 net.cpp:165] Memory required for data: 10019143716
I0412 01:56:38.759905 28431 layer_factory.hpp:77] Creating layer relu4b
I0412 01:56:38.759915 28431 net.cpp:100] Creating Layer relu4b
I0412 01:56:38.759920 28431 net.cpp:434] relu4b <- conv4b
I0412 01:56:38.759927 28431 net.cpp:395] relu4b -> conv4b (in-place)
I0412 01:56:38.759935 28431 net.cpp:150] Setting up relu4b
I0412 01:56:38.759941 28431 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:56:38.759945 28431 net.cpp:165] Memory required for data: 10096214052
I0412 01:56:38.759949 28431 layer_factory.hpp:77] Creating layer pool4
I0412 01:56:38.759956 28431 net.cpp:100] Creating Layer pool4
I0412 01:56:38.759960 28431 net.cpp:434] pool4 <- conv4b
I0412 01:56:38.759968 28431 net.cpp:408] pool4 -> pool4
I0412 01:56:38.760012 28431 net.cpp:150] Setting up pool4
I0412 01:56:38.760018 28431 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:56:38.760021 28431 net.cpp:165] Memory required for data: 10105847844
I0412 01:56:38.760028 28431 layer_factory.hpp:77] Creating layer conv5a
I0412 01:56:38.760037 28431 net.cpp:100] Creating Layer conv5a
I0412 01:56:38.760041 28431 net.cpp:434] conv5a <- pool4
I0412 01:56:38.760049 28431 net.cpp:408] conv5a -> conv5a
I0412 01:56:38.846592 28431 net.cpp:150] Setting up conv5a
I0412 01:56:38.846621 28431 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:56:38.846624 28431 net.cpp:165] Memory required for data: 10115481636
I0412 01:56:38.846635 28431 layer_factory.hpp:77] Creating layer relu5a
I0412 01:56:38.846647 28431 net.cpp:100] Creating Layer relu5a
I0412 01:56:38.846653 28431 net.cpp:434] relu5a <- conv5a
I0412 01:56:38.846662 28431 net.cpp:395] relu5a -> conv5a (in-place)
I0412 01:56:38.846673 28431 net.cpp:150] Setting up relu5a
I0412 01:56:38.846678 28431 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:56:38.846681 28431 net.cpp:165] Memory required for data: 10125115428
I0412 01:56:38.846685 28431 layer_factory.hpp:77] Creating layer conv5b
I0412 01:56:38.846698 28431 net.cpp:100] Creating Layer conv5b
I0412 01:56:38.846702 28431 net.cpp:434] conv5b <- conv5a
I0412 01:56:38.846709 28431 net.cpp:408] conv5b -> conv5b
I0412 01:56:38.928953 28431 net.cpp:150] Setting up conv5b
I0412 01:56:38.929124 28431 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:56:38.929147 28431 net.cpp:165] Memory required for data: 10134749220
I0412 01:56:38.929168 28431 layer_factory.hpp:77] Creating layer relu5b
I0412 01:56:38.929198 28431 net.cpp:100] Creating Layer relu5b
I0412 01:56:38.929213 28431 net.cpp:434] relu5b <- conv5b
I0412 01:56:38.929230 28431 net.cpp:395] relu5b -> conv5b (in-place)
I0412 01:56:38.929251 28431 net.cpp:150] Setting up relu5b
I0412 01:56:38.929266 28431 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:56:38.929280 28431 net.cpp:165] Memory required for data: 10144383012
I0412 01:56:38.929293 28431 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 01:56:38.929311 28431 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 01:56:38.929325 28431 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 01:56:38.929342 28431 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 01:56:38.929359 28431 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 01:56:38.929445 28431 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 01:56:38.929464 28431 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:56:38.929478 28431 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:56:38.929491 28431 net.cpp:165] Memory required for data: 10163650596
I0412 01:56:38.929504 28431 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 01:56:38.929528 28431 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 01:56:38.929543 28431 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 01:56:38.929560 28431 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 01:56:39.010507 28431 net.cpp:150] Setting up rpn_conv/3x3
I0412 01:56:39.010571 28431 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 01:56:39.010593 28431 net.cpp:165] Memory required for data: 10166796324
I0412 01:56:39.010624 28431 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 01:56:39.010646 28431 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 01:56:39.010663 28431 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 01:56:39.010679 28431 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 01:56:39.010699 28431 net.cpp:150] Setting up rpn_relu/3x3
I0412 01:56:39.010715 28431 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 01:56:39.010727 28431 net.cpp:165] Memory required for data: 10169942052
I0412 01:56:39.010740 28431 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 01:56:39.010769 28431 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 01:56:39.010784 28431 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 01:56:39.010803 28431 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 01:56:39.101347 28431 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 01:56:39.101383 28431 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 01:56:39.101388 28431 net.cpp:165] Memory required for data: 10170728484
I0412 01:56:39.101399 28431 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 01:56:39.101410 28431 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 01:56:39.101421 28431 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 01:56:39.101429 28431 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 01:56:39.101442 28431 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 01:56:39.101449 28431 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 01:56:39.101455 28431 net.cpp:165] Memory required for data: 10171514916
I0412 01:56:39.101459 28431 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 01:56:39.101466 28431 net.cpp:100] Creating Layer rpn/output_pool
I0412 01:56:39.101471 28431 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 01:56:39.101478 28431 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 01:56:39.101538 28431 net.cpp:150] Setting up rpn/output_pool
I0412 01:56:39.101547 28431 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:56:39.101552 28431 net.cpp:165] Memory required for data: 10171711524
I0412 01:56:39.101557 28431 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 01:56:39.101563 28431 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 01:56:39.101569 28431 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 01:56:39.101575 28431 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 01:56:39.101586 28431 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 01:56:39.101634 28431 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 01:56:39.101641 28431 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:56:39.101649 28431 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:56:39.101652 28431 net.cpp:165] Memory required for data: 10172104740
I0412 01:56:39.101657 28431 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 01:56:39.101668 28431 net.cpp:100] Creating Layer rpn_cls_score
I0412 01:56:39.101673 28431 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 01:56:39.101680 28431 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 01:56:39.102496 28431 net.cpp:150] Setting up rpn_cls_score
I0412 01:56:39.102507 28431 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:56:39.102511 28431 net.cpp:165] Memory required for data: 10172133156
I0412 01:56:39.102519 28431 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 01:56:39.102527 28431 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 01:56:39.102532 28431 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 01:56:39.102540 28431 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 01:56:39.102550 28431 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 01:56:39.102612 28431 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 01:56:39.102620 28431 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:56:39.102627 28431 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:56:39.102632 28431 net.cpp:165] Memory required for data: 10172189988
I0412 01:56:39.102638 28431 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 01:56:39.102654 28431 net.cpp:100] Creating Layer rpn_twin_pred
I0412 01:56:39.102663 28431 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 01:56:39.102670 28431 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 01:56:39.103538 28431 net.cpp:150] Setting up rpn_twin_pred
I0412 01:56:39.103569 28431 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:56:39.103585 28431 net.cpp:165] Memory required for data: 10172218404
I0412 01:56:39.103601 28431 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:56:39.103618 28431 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:56:39.103643 28431 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 01:56:39.103660 28431 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 01:56:39.103679 28431 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 01:56:39.103749 28431 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:56:39.103767 28431 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:56:39.103782 28431 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:56:39.103794 28431 net.cpp:165] Memory required for data: 10172275236
I0412 01:56:39.103806 28431 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 01:56:39.103824 28431 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 01:56:39.103837 28431 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 01:56:39.103854 28431 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 01:56:39.103904 28431 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 01:56:39.103914 28431 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:56:39.103916 28431 net.cpp:165] Memory required for data: 10172303652
I0412 01:56:39.103921 28431 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:56:39.103929 28431 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:56:39.103935 28431 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 01:56:39.103941 28431 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 01:56:39.103956 28431 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 01:56:39.103965 28431 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 01:56:39.104029 28431 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:56:39.104038 28431 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:56:39.104044 28431 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:56:39.104050 28431 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:56:39.104053 28431 net.cpp:165] Memory required for data: 10172388900
I0412 01:56:39.104058 28431 layer_factory.hpp:77] Creating layer rpn-data
I0412 01:56:39.104481 28431 net.cpp:100] Creating Layer rpn-data
I0412 01:56:39.104491 28431 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 01:56:39.104496 28431 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 01:56:39.104501 28431 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 01:56:39.104507 28431 net.cpp:408] rpn-data -> rpn_labels
I0412 01:56:39.104514 28431 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 01:56:39.104521 28431 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 01:56:39.104527 28431 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 01:56:39.107326 28431 net.cpp:150] Setting up rpn-data
I0412 01:56:39.107342 28431 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:56:39.107345 28431 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:56:39.107348 28431 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:56:39.107353 28431 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:56:39.107358 28431 net.cpp:165] Memory required for data: 10172488356
I0412 01:56:39.107362 28431 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 01:56:39.107367 28431 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 01:56:39.107373 28431 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 01:56:39.107378 28431 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 01:56:39.107385 28431 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 01:56:39.107424 28431 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 01:56:39.107429 28431 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:56:39.107434 28431 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:56:39.107436 28431 net.cpp:165] Memory required for data: 10172516772
I0412 01:56:39.107439 28431 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 01:56:39.107445 28431 net.cpp:100] Creating Layer rpn_loss_cls
I0412 01:56:39.107450 28431 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 01:56:39.107455 28431 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 01:56:39.107458 28431 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 01:56:39.107466 28431 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 01:56:39.107575 28431 net.cpp:150] Setting up rpn_loss_cls
I0412 01:56:39.107581 28431 net.cpp:157] Top shape: (1)
I0412 01:56:39.107583 28431 net.cpp:160]     with loss weight 1
I0412 01:56:39.107594 28431 net.cpp:165] Memory required for data: 10172516776
I0412 01:56:39.107597 28431 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 01:56:39.107604 28431 net.cpp:100] Creating Layer rpn_loss_twin
I0412 01:56:39.107606 28431 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 01:56:39.107611 28431 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 01:56:39.107614 28431 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 01:56:39.107617 28431 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 01:56:39.107623 28431 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 01:56:39.107709 28431 net.cpp:150] Setting up rpn_loss_twin
I0412 01:56:39.107714 28431 net.cpp:157] Top shape: (1)
I0412 01:56:39.107717 28431 net.cpp:160]     with loss weight 1
I0412 01:56:39.107722 28431 net.cpp:165] Memory required for data: 10172516780
I0412 01:56:39.107726 28431 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 01:56:39.107733 28431 net.cpp:100] Creating Layer rpn_accuarcy
I0412 01:56:39.107738 28431 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 01:56:39.107741 28431 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 01:56:39.107745 28431 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 01:56:39.107750 28431 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 01:56:39.107789 28431 net.cpp:150] Setting up rpn_accuarcy
I0412 01:56:39.107794 28431 net.cpp:157] Top shape: (1)
I0412 01:56:39.107797 28431 net.cpp:157] Top shape: 2 (2)
I0412 01:56:39.107800 28431 net.cpp:165] Memory required for data: 10172516792
I0412 01:56:39.107802 28431 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 01:56:39.107808 28431 net.cpp:100] Creating Layer rpn_cls_prob
I0412 01:56:39.107811 28431 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 01:56:39.107815 28431 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 01:56:39.107879 28431 net.cpp:150] Setting up rpn_cls_prob
I0412 01:56:39.107885 28431 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:56:39.107888 28431 net.cpp:165] Memory required for data: 10172545208
I0412 01:56:39.107892 28431 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 01:56:39.107897 28431 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 01:56:39.107902 28431 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 01:56:39.107905 28431 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 01:56:39.107931 28431 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 01:56:39.107937 28431 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:56:39.107939 28431 net.cpp:165] Memory required for data: 10172573624
I0412 01:56:39.107942 28431 layer_factory.hpp:77] Creating layer proposal
I0412 01:56:39.108499 28431 net.cpp:100] Creating Layer proposal
I0412 01:56:39.108510 28431 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 01:56:39.108515 28431 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 01:56:39.108521 28431 net.cpp:408] proposal -> rpn_rois
I0412 01:56:39.112059 28431 net.cpp:150] Setting up proposal
I0412 01:56:39.112072 28431 net.cpp:157] Top shape: 1 3 (3)
I0412 01:56:39.112076 28431 net.cpp:165] Memory required for data: 10172573636
I0412 01:56:39.112079 28431 layer_factory.hpp:77] Creating layer roi-data
I0412 01:56:39.112208 28431 net.cpp:100] Creating Layer roi-data
I0412 01:56:39.112218 28431 net.cpp:434] roi-data <- rpn_rois
I0412 01:56:39.112226 28431 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 01:56:39.112233 28431 net.cpp:408] roi-data -> rois
I0412 01:56:39.112243 28431 net.cpp:408] roi-data -> labels
I0412 01:56:39.112262 28431 net.cpp:408] roi-data -> twin_targets
I0412 01:56:39.112272 28431 net.cpp:408] roi-data -> twin_inside_weights
I0412 01:56:39.112284 28431 net.cpp:408] roi-data -> twin_outside_weights
I0412 01:56:39.112637 28431 net.cpp:150] Setting up roi-data
I0412 01:56:39.112651 28431 net.cpp:157] Top shape: 1 3 (3)
I0412 01:56:39.112656 28431 net.cpp:157] Top shape: 1 1 (1)
I0412 01:56:39.112661 28431 net.cpp:157] Top shape: 1 402 (402)
I0412 01:56:39.112666 28431 net.cpp:157] Top shape: 1 402 (402)
I0412 01:56:39.112670 28431 net.cpp:157] Top shape: 1 402 (402)
I0412 01:56:39.112675 28431 net.cpp:165] Memory required for data: 10172578476
I0412 01:56:39.112689 28431 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 01:56:39.112696 28431 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 01:56:39.112704 28431 net.cpp:434] labels_roi-data_1_split <- labels
I0412 01:56:39.112712 28431 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 01:56:39.112725 28431 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 01:56:39.112771 28431 net.cpp:150] Setting up labels_roi-data_1_split
I0412 01:56:39.112777 28431 net.cpp:157] Top shape: 1 1 (1)
I0412 01:56:39.112782 28431 net.cpp:157] Top shape: 1 1 (1)
I0412 01:56:39.112787 28431 net.cpp:165] Memory required for data: 10172578484
I0412 01:56:39.112793 28431 layer_factory.hpp:77] Creating layer roi_pool5
I0412 01:56:39.112802 28431 net.cpp:100] Creating Layer roi_pool5
I0412 01:56:39.112807 28431 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 01:56:39.112815 28431 net.cpp:434] roi_pool5 <- rois
I0412 01:56:39.112823 28431 net.cpp:408] roi_pool5 -> pool5
I0412 01:56:39.112833 28431 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 01:56:39.112844 28431 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 01:56:39.112891 28431 net.cpp:150] Setting up roi_pool5
I0412 01:56:39.112900 28431 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 01:56:39.112902 28431 net.cpp:165] Memory required for data: 10172611252
I0412 01:56:39.112906 28431 layer_factory.hpp:77] Creating layer fc6
I0412 01:56:39.112920 28431 net.cpp:100] Creating Layer fc6
I0412 01:56:39.112927 28431 net.cpp:434] fc6 <- pool5
I0412 01:56:39.112934 28431 net.cpp:408] fc6 -> fc6
I0412 01:56:39.526041 28431 net.cpp:150] Setting up fc6
I0412 01:56:39.526116 28431 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:56:39.526137 28431 net.cpp:165] Memory required for data: 10172627636
I0412 01:56:39.526165 28431 layer_factory.hpp:77] Creating layer relu6
I0412 01:56:39.526207 28431 net.cpp:100] Creating Layer relu6
I0412 01:56:39.526242 28431 net.cpp:434] relu6 <- fc6
I0412 01:56:39.526266 28431 net.cpp:395] relu6 -> fc6 (in-place)
I0412 01:56:39.526296 28431 net.cpp:150] Setting up relu6
I0412 01:56:39.526314 28431 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:56:39.526331 28431 net.cpp:165] Memory required for data: 10172644020
I0412 01:56:39.526350 28431 layer_factory.hpp:77] Creating layer drop6
I0412 01:56:39.526368 28431 net.cpp:100] Creating Layer drop6
I0412 01:56:39.526393 28431 net.cpp:434] drop6 <- fc6
I0412 01:56:39.526412 28431 net.cpp:395] drop6 -> fc6 (in-place)
I0412 01:56:39.526471 28431 net.cpp:150] Setting up drop6
I0412 01:56:39.526494 28431 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:56:39.526509 28431 net.cpp:165] Memory required for data: 10172660404
I0412 01:56:39.526535 28431 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 01:56:39.526556 28431 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 01:56:39.526578 28431 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 01:56:39.526603 28431 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 01:56:39.526631 28431 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 01:56:39.526715 28431 net.cpp:150] Setting up fc6_drop6_0_split
I0412 01:56:39.526746 28431 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:56:39.526762 28431 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:56:39.526782 28431 net.cpp:165] Memory required for data: 10172693172
I0412 01:56:39.526796 28431 layer_factory.hpp:77] Creating layer cls_score
I0412 01:56:39.526816 28431 net.cpp:100] Creating Layer cls_score
I0412 01:56:39.526847 28431 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 01:56:39.526878 28431 net.cpp:408] cls_score -> cls_score
I0412 01:56:39.550840 28431 net.cpp:150] Setting up cls_score
I0412 01:56:39.550874 28431 net.cpp:157] Top shape: 1 201 (201)
I0412 01:56:39.550879 28431 net.cpp:165] Memory required for data: 10172693976
I0412 01:56:39.550894 28431 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 01:56:39.550907 28431 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 01:56:39.550938 28431 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 01:56:39.550958 28431 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 01:56:39.550982 28431 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 01:56:39.551055 28431 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 01:56:39.551075 28431 net.cpp:157] Top shape: 1 201 (201)
I0412 01:56:39.551092 28431 net.cpp:157] Top shape: 1 201 (201)
I0412 01:56:39.551100 28431 net.cpp:165] Memory required for data: 10172695584
I0412 01:56:39.551103 28431 layer_factory.hpp:77] Creating layer twin_pred
I0412 01:56:39.551115 28431 net.cpp:100] Creating Layer twin_pred
I0412 01:56:39.551123 28431 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 01:56:39.551133 28431 net.cpp:408] twin_pred -> twin_pred
I0412 01:56:39.576589 28431 net.cpp:150] Setting up twin_pred
I0412 01:56:39.576659 28431 net.cpp:157] Top shape: 1 402 (402)
I0412 01:56:39.576678 28431 net.cpp:165] Memory required for data: 10172697192
I0412 01:56:39.576699 28431 layer_factory.hpp:77] Creating layer loss_cls
I0412 01:56:39.576721 28431 net.cpp:100] Creating Layer loss_cls
I0412 01:56:39.576741 28431 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 01:56:39.576761 28431 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 01:56:39.576779 28431 net.cpp:408] loss_cls -> loss_cls
I0412 01:56:39.576810 28431 layer_factory.hpp:77] Creating layer loss_cls
I0412 01:56:39.576972 28431 net.cpp:150] Setting up loss_cls
I0412 01:56:39.576993 28431 net.cpp:157] Top shape: (1)
I0412 01:56:39.577008 28431 net.cpp:160]     with loss weight 1
I0412 01:56:39.577036 28431 net.cpp:165] Memory required for data: 10172697196
I0412 01:56:39.577052 28431 layer_factory.hpp:77] Creating layer loss_twin
I0412 01:56:39.577075 28431 net.cpp:100] Creating Layer loss_twin
I0412 01:56:39.577102 28431 net.cpp:434] loss_twin <- twin_pred
I0412 01:56:39.577122 28431 net.cpp:434] loss_twin <- twin_targets
I0412 01:56:39.577137 28431 net.cpp:434] loss_twin <- twin_inside_weights
I0412 01:56:39.577153 28431 net.cpp:434] loss_twin <- twin_outside_weights
I0412 01:56:39.577170 28431 net.cpp:408] loss_twin -> loss_twin
I0412 01:56:39.577330 28431 net.cpp:150] Setting up loss_twin
I0412 01:56:39.577356 28431 net.cpp:157] Top shape: (1)
I0412 01:56:39.577370 28431 net.cpp:160]     with loss weight 1
I0412 01:56:39.577388 28431 net.cpp:165] Memory required for data: 10172697200
I0412 01:56:39.577400 28431 layer_factory.hpp:77] Creating layer accuarcy
I0412 01:56:39.577424 28431 net.cpp:100] Creating Layer accuarcy
I0412 01:56:39.577440 28431 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 01:56:39.577457 28431 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 01:56:39.577479 28431 net.cpp:408] accuarcy -> accuarcy
I0412 01:56:39.577504 28431 net.cpp:150] Setting up accuarcy
I0412 01:56:39.577520 28431 net.cpp:157] Top shape: (1)
I0412 01:56:39.577534 28431 net.cpp:165] Memory required for data: 10172697204
I0412 01:56:39.577554 28431 net.cpp:228] accuarcy does not need backward computation.
I0412 01:56:39.577575 28431 net.cpp:226] loss_twin needs backward computation.
I0412 01:56:39.577589 28431 net.cpp:226] loss_cls needs backward computation.
I0412 01:56:39.577605 28431 net.cpp:226] twin_pred needs backward computation.
I0412 01:56:39.577620 28431 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 01:56:39.577635 28431 net.cpp:226] cls_score needs backward computation.
I0412 01:56:39.577652 28431 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 01:56:39.577667 28431 net.cpp:226] drop6 needs backward computation.
I0412 01:56:39.577680 28431 net.cpp:226] relu6 needs backward computation.
I0412 01:56:39.577695 28431 net.cpp:226] fc6 needs backward computation.
I0412 01:56:39.577713 28431 net.cpp:226] roi_pool5 needs backward computation.
I0412 01:56:39.577728 28431 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 01:56:39.577742 28431 net.cpp:226] roi-data needs backward computation.
I0412 01:56:39.577757 28431 net.cpp:226] proposal needs backward computation.
I0412 01:56:39.577771 28431 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 01:56:39.577790 28431 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 01:56:39.577805 28431 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 01:56:39.577819 28431 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 01:56:39.577836 28431 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 01:56:39.577850 28431 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 01:56:39.577867 28431 net.cpp:226] rpn-data needs backward computation.
I0412 01:56:39.577885 28431 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 01:56:39.577901 28431 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 01:56:39.577917 28431 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 01:56:39.577936 28431 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 01:56:39.577952 28431 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 01:56:39.577967 28431 net.cpp:226] rpn_cls_score needs backward computation.
I0412 01:56:39.577980 28431 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 01:56:39.577998 28431 net.cpp:226] rpn/output_pool needs backward computation.
I0412 01:56:39.578016 28431 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 01:56:39.578030 28431 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 01:56:39.578045 28431 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 01:56:39.578059 28431 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 01:56:39.578073 28431 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 01:56:39.578104 28431 net.cpp:226] relu5b needs backward computation.
I0412 01:56:39.578130 28431 net.cpp:226] conv5b needs backward computation.
I0412 01:56:39.578147 28431 net.cpp:226] relu5a needs backward computation.
I0412 01:56:39.578162 28431 net.cpp:226] conv5a needs backward computation.
I0412 01:56:39.578179 28431 net.cpp:226] pool4 needs backward computation.
I0412 01:56:39.578197 28431 net.cpp:226] relu4b needs backward computation.
I0412 01:56:39.578212 28431 net.cpp:226] conv4b needs backward computation.
I0412 01:56:39.578225 28431 net.cpp:226] relu4a needs backward computation.
I0412 01:56:39.578243 28431 net.cpp:226] conv4a needs backward computation.
I0412 01:56:39.578259 28431 net.cpp:226] pool3 needs backward computation.
I0412 01:56:39.578274 28431 net.cpp:226] relu3b needs backward computation.
I0412 01:56:39.578289 28431 net.cpp:226] conv3b needs backward computation.
I0412 01:56:39.578302 28431 net.cpp:226] relu3a needs backward computation.
I0412 01:56:39.578315 28431 net.cpp:226] conv3a needs backward computation.
I0412 01:56:39.578331 28431 net.cpp:228] pool2 does not need backward computation.
I0412 01:56:39.578351 28431 net.cpp:228] relu2a does not need backward computation.
I0412 01:56:39.578367 28431 net.cpp:228] conv2a does not need backward computation.
I0412 01:56:39.578383 28431 net.cpp:228] pool1 does not need backward computation.
I0412 01:56:39.578400 28431 net.cpp:228] relu1a does not need backward computation.
I0412 01:56:39.578418 28431 net.cpp:228] conv1a does not need backward computation.
I0412 01:56:39.578433 28431 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 01:56:39.578447 28431 net.cpp:228] data_data_0_split does not need backward computation.
I0412 01:56:39.578462 28431 net.cpp:228] data does not need backward computation.
I0412 01:56:39.578480 28431 net.cpp:270] This network produces output accuarcy
I0412 01:56:39.578500 28431 net.cpp:270] This network produces output loss_cls
I0412 01:56:39.578513 28431 net.cpp:270] This network produces output loss_twin
I0412 01:56:39.578529 28431 net.cpp:270] This network produces output rpn_accuarcy
I0412 01:56:39.578542 28431 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 01:56:39.578557 28431 net.cpp:270] This network produces output rpn_cls_loss
I0412 01:56:39.578577 28431 net.cpp:270] This network produces output rpn_loss_twin
I0412 01:56:39.578636 28431 net.cpp:283] Network initialization done.
I0412 01:56:39.578804 28431 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 01:56:39.776031 28431 net.cpp:761] Ignoring source layer pool5
I0412 01:56:39.805317 28431 net.cpp:761] Ignoring source layer fc7
I0412 01:56:39.805344 28431 net.cpp:761] Ignoring source layer relu7
I0412 01:56:39.805347 28431 net.cpp:761] Ignoring source layer drop7
I0412 01:56:39.805351 28431 net.cpp:761] Ignoring source layer fc8-200
I0412 01:56:39.805352 28431 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
99
(array([0]), array([97]))
('blob', (array([[3.1250000e-02, 3.8569803e+02]], dtype=float32), array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 0.]], dtype=float32)))
[[3.1250000e-02 3.8569803e+02 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00
  0.0000000e+00 0.0000000e+00 0.0000000e+00 0.0000000e+00 1.0000000e+00
  0.0000000e+00]]
('blob', array([[[[[-57.,   9., -31., ...,  32.,  52.,  55.],
          [-50., -17.,   4., ..., -44., -43., -24.],
          [-59.,  17.,  -3., ..., -49., -51., -53.],
          ...,
          [ 85.,  96.,  97., ...,  76.,  79.,  77.],
          [ 86.,  97., 101., ...,  76.,  79.,  77.],
          [ 86.,  96.,  96., ...,  76.,  78.,  75.]],

         [[ 10.,   2.,  11., ...,  66.,  64.,  63.],
          [ -2.,  -5.,   0., ...,  60.,  61.,  64.],
          [ -8., -11.,   0., ...,  61.,  57.,  58.],
          ...,
          [ 94.,  91.,  89., ...,  81.,  77.,  72.],
          [ 88.,  85.,  84., ...,  81.,  77.,  73.],
          [ 84.,  81.,  83., ...,  79.,  78.,  75.]],

         [[ 16.,  26.,  -6., ...,  62.,  62.,  61.],
          [ -9., -44., -23., ...,  64.,  63.,  62.],
          [ 39., -23.,  -5., ...,  65.,  64.,  62.],
          ...,
          [113., 109., 102., ...,  73.,  73.,  73.],
          [110., 108., 102., ...,  74.,  73.,  73.],
          [107., 105., 101., ...,  74.,  72.,  72.]],

         ...,

         [[-12., -13., -16., ..., -12., -15., -15.],
          [-16., -16., -16., ..., -11., -13., -14.],
          [-18., -18., -18., ...,  -6.,  -8.,  -9.],
          ...,
          [ 39.,  43.,  43., ...,  85.,  80.,  74.],
          [ 41.,  37.,  27., ...,  79.,  73.,  68.],
          [ 36.,  25.,  21., ...,  80.,  76.,  73.]],

         [[-12., -13., -16., ..., -12., -15., -15.],
          [-16., -16., -16., ..., -11., -13., -14.],
          [-18., -18., -18., ...,  -6.,  -8.,  -9.],
          ...,
          [ 39.,  43.,  43., ...,  85.,  80.,  74.],
          [ 41.,  37.,  27., ...,  79.,  73.,  68.],
          [ 36.,  25.,  21., ...,  80.,  76.,  73.]],

         [[-12., -13., -16., ..., -12., -15., -15.],
          [-16., -16., -16., ..., -11., -13., -14.],
          [-18., -18., -18., ...,  -6.,  -8.,  -9.],
          ...,
          [ 39.,  43.,  43., ...,  85.,  80.,  74.],
          [ 41.,  37.,  27., ...,  79.,  73.,  68.],
          [ 36.,  25.,  21., ...,  80.,  76.,  73.]]],


        [[[ 40., 105.,  70., ...,  25.,  45.,  48.],
          [ 41.,  73., 108., ..., -51., -50., -31.],
          [ 38., 121., 121., ..., -57., -59., -61.],
          ...,
          [ 19.,  34.,  37., ...,  73.,  74.,  72.],
          [ 19.,  34.,  40., ...,  73.,  74.,  72.],
          [ 18.,  30.,  35., ...,  73.,  73.,  70.]],

         [[123., 120., 117., ...,  59.,  57.,  56.],
          [121., 123., 116., ...,  53.,  54.,  57.],
          [121., 121., 117., ...,  54.,  50.,  51.],
          ...,
          [ 15.,  17.,  18., ...,  76.,  72.,  67.],
          [ 16.,  17.,  19., ...,  76.,  72.,  68.],
          [ 16.,  17.,  23., ...,  74.,  73.,  70.]],

         [[104., 116.,  99., ...,  55.,  55.,  54.],
          [ 75.,  43.,  83., ...,  57.,  56.,  55.],
          [127.,  70., 111., ...,  58.,  57.,  55.],
          ...,
          [ 19.,  19.,  19., ...,  70.,  70.,  70.],
          [ 18.,  18.,  20., ...,  71.,  70.,  70.],
          [ 17.,  19.,  20., ...,  71.,  69.,  69.]],

         ...,

         [[ 36.,  35.,  32., ...,  35.,  35.,  33.],
          [ 32.,  32.,  32., ...,  38.,  37.,  36.],
          [ 28.,  28.,  29., ...,  40.,  39.,  38.],
          ...,
          [ 40.,  44.,  44., ...,  89.,  85.,  79.],
          [ 43.,  39.,  29., ...,  86.,  80.,  75.],
          [ 38.,  27.,  23., ...,  87.,  83.,  80.]],

         [[ 36.,  35.,  32., ...,  35.,  35.,  33.],
          [ 32.,  32.,  32., ...,  38.,  37.,  36.],
          [ 28.,  28.,  29., ...,  40.,  39.,  38.],
          ...,
          [ 40.,  44.,  44., ...,  89.,  85.,  79.],
          [ 43.,  39.,  29., ...,  86.,  80.,  75.],
          [ 38.,  27.,  23., ...,  87.,  83.,  80.]],

         [[ 36.,  35.,  32., ...,  35.,  35.,  33.],
          [ 32.,  32.,  32., ...,  38.,  37.,  36.],
          [ 28.,  28.,  29., ...,  40.,  39.,  38.],
          ...,
          [ 40.,  44.,  44., ...,  89.,  85.,  79.],
          [ 43.,  39.,  29., ...,  86.,  80.,  75.],
          [ 38.,  27.,  23., ...,  87.,  83.,  80.]]],


        [[[ 79., 144., 110., ...,  19.,  39.,  42.],
          [ 81., 115., 147., ..., -57., -56., -37.],
          [ 77., 153., 153., ..., -61., -63., -65.],
          ...,
          [-37., -23., -20., ...,  67.,  68.,  66.],
          [-35., -21., -15., ...,  67.,  68.,  66.],
          [-38., -23., -19., ...,  67.,  67.,  64.]],

         [[151., 151., 153., ...,  51.,  49.,  48.],
          [150., 153., 153., ...,  45.,  46.,  49.],
          [149., 153., 153., ...,  48.,  44.,  45.],
          ...,
          [-57., -52., -47., ...,  70.,  66.,  61.],
          [-52., -47., -41., ...,  70.,  66.,  62.],
          [-47., -42., -34., ...,  68.,  67.,  64.]],

         [[140., 153., 135., ...,  47.,  47.,  46.],
          [114.,  83., 120., ...,  49.,  48.,  47.],
          [153., 111., 147., ...,  50.,  49.,  47.],
          ...,
          [-67., -63., -59., ...,  65.,  64.,  64.],
          [-62., -58., -56., ...,  65.,  64.,  64.],
          [-59., -54., -52., ...,  65.,  63.,  63.]],

         ...,

         [[ -9., -10., -13., ...,   4.,   2.,   0.],
          [-15., -15., -15., ...,   9.,   5.,   4.],
          [-19., -19., -20., ...,  13.,  10.,   9.],
          ...,
          [ 45.,  49.,  49., ..., 103.,  97.,  91.],
          [ 49.,  45.,  35., ...,  98.,  92.,  87.],
          [ 44.,  33.,  29., ...,  99.,  95.,  92.]],

         [[ -9., -10., -13., ...,   4.,   2.,   0.],
          [-15., -15., -15., ...,   9.,   5.,   4.],
          [-19., -19., -20., ...,  13.,  10.,   9.],
          ...,
          [ 45.,  49.,  49., ..., 103.,  97.,  91.],
          [ 49.,  45.,  35., ...,  98.,  92.,  87.],
          [ 44.,  33.,  29., ...,  99.,  95.,  92.]],

         [[ -9., -10., -13., ...,   4.,   2.,   0.],
          [-15., -15., -15., ...,   9.,   5.,   4.],
          [-19., -19., -20., ...,  13.,  10.,   9.],
          ...,
          [ 45.,  49.,  49., ..., 103.,  97.,  91.],
          [ 49.,  45.,  35., ...,  98.,  92.,  87.],
          [ 44.,  33.,  29., ...,  99.,  95.,  92.]]]]], dtype=float32))
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 95, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 130, in forward
    blob1, blob2 = blob
ValueError: need more than 1 value to unpack
Terminating BlobFetcher
