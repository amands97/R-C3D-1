Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
print done
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}]
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 02:31:13.906280 14841 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 02:31:13.906484 14841 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 02:31:13.907323 14841 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 02:31:13.911548 14841 layer_factory.hpp:77] Creating layer data
I0412 02:31:13.923270 14841 net.cpp:100] Creating Layer data
I0412 02:31:13.923296 14841 net.cpp:408] data -> data
I0412 02:31:13.923310 14841 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 02:31:13.932312 14841 net.cpp:150] Setting up data
I0412 02:31:13.932385 14841 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 02:31:13.932405 14841 net.cpp:157] Top shape: 1 3 (3)
I0412 02:31:13.932420 14841 net.cpp:165] Memory required for data: 115605516
I0412 02:31:13.932435 14841 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 02:31:13.932461 14841 net.cpp:100] Creating Layer data_data_0_split
I0412 02:31:13.932479 14841 net.cpp:434] data_data_0_split <- data
I0412 02:31:13.932502 14841 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 02:31:13.932528 14841 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 02:31:13.932610 14841 net.cpp:150] Setting up data_data_0_split
I0412 02:31:13.932636 14841 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 02:31:13.932654 14841 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 02:31:13.932672 14841 net.cpp:165] Memory required for data: 346816524
I0412 02:31:13.932687 14841 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 02:31:13.932708 14841 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 02:31:13.932723 14841 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 02:31:13.932745 14841 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 02:31:13.932770 14841 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 02:31:13.932844 14841 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 02:31:13.932869 14841 net.cpp:157] Top shape: 1 3 (3)
I0412 02:31:13.932886 14841 net.cpp:157] Top shape: 1 3 (3)
I0412 02:31:13.932900 14841 net.cpp:165] Memory required for data: 346816548
I0412 02:31:13.932915 14841 layer_factory.hpp:77] Creating layer conv1a
I0412 02:31:13.932943 14841 net.cpp:100] Creating Layer conv1a
I0412 02:31:13.932962 14841 net.cpp:434] conv1a <- data_data_0_split_0
I0412 02:31:13.932984 14841 net.cpp:408] conv1a -> conv1a
I0412 02:31:13.954403 14841 net.cpp:150] Setting up conv1a
I0412 02:31:13.954438 14841 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 02:31:13.954443 14841 net.cpp:165] Memory required for data: 2813067300
I0412 02:31:13.954461 14841 layer_factory.hpp:77] Creating layer relu1a
I0412 02:31:13.954479 14841 net.cpp:100] Creating Layer relu1a
I0412 02:31:13.954486 14841 net.cpp:434] relu1a <- conv1a
I0412 02:31:13.954494 14841 net.cpp:395] relu1a -> conv1a (in-place)
I0412 02:31:13.954506 14841 net.cpp:150] Setting up relu1a
I0412 02:31:13.954529 14841 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 02:31:13.954542 14841 net.cpp:165] Memory required for data: 5279318052
I0412 02:31:13.954556 14841 layer_factory.hpp:77] Creating layer pool1
I0412 02:31:13.954576 14841 net.cpp:100] Creating Layer pool1
I0412 02:31:13.954591 14841 net.cpp:434] pool1 <- conv1a
I0412 02:31:13.954612 14841 net.cpp:408] pool1 -> pool1
I0412 02:31:13.954744 14841 net.cpp:150] Setting up pool1
I0412 02:31:13.954754 14841 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 02:31:13.954759 14841 net.cpp:165] Memory required for data: 5895880740
I0412 02:31:13.954763 14841 layer_factory.hpp:77] Creating layer conv2a
I0412 02:31:13.954780 14841 net.cpp:100] Creating Layer conv2a
I0412 02:31:13.954785 14841 net.cpp:434] conv2a <- pool1
I0412 02:31:13.954794 14841 net.cpp:408] conv2a -> conv2a
I0412 02:31:13.963557 14841 net.cpp:150] Setting up conv2a
I0412 02:31:13.963590 14841 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 02:31:13.963594 14841 net.cpp:165] Memory required for data: 7129006116
I0412 02:31:13.963613 14841 layer_factory.hpp:77] Creating layer relu2a
I0412 02:31:13.963626 14841 net.cpp:100] Creating Layer relu2a
I0412 02:31:13.963634 14841 net.cpp:434] relu2a <- conv2a
I0412 02:31:13.963641 14841 net.cpp:395] relu2a -> conv2a (in-place)
I0412 02:31:13.963654 14841 net.cpp:150] Setting up relu2a
I0412 02:31:13.963675 14841 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 02:31:13.963691 14841 net.cpp:165] Memory required for data: 8362131492
I0412 02:31:13.963706 14841 layer_factory.hpp:77] Creating layer pool2
I0412 02:31:13.963742 14841 net.cpp:100] Creating Layer pool2
I0412 02:31:13.963758 14841 net.cpp:434] pool2 <- conv2a
I0412 02:31:13.963773 14841 net.cpp:408] pool2 -> pool2
I0412 02:31:13.964033 14841 net.cpp:150] Setting up pool2
I0412 02:31:13.964045 14841 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 02:31:13.964048 14841 net.cpp:165] Memory required for data: 8516272164
I0412 02:31:13.964052 14841 layer_factory.hpp:77] Creating layer conv3a
I0412 02:31:13.964073 14841 net.cpp:100] Creating Layer conv3a
I0412 02:31:13.964092 14841 net.cpp:434] conv3a <- pool2
I0412 02:31:13.964114 14841 net.cpp:408] conv3a -> conv3a
I0412 02:31:13.973438 14841 net.cpp:150] Setting up conv3a
I0412 02:31:13.973479 14841 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 02:31:13.973484 14841 net.cpp:165] Memory required for data: 8824553508
I0412 02:31:13.973501 14841 layer_factory.hpp:77] Creating layer relu3a
I0412 02:31:13.973515 14841 net.cpp:100] Creating Layer relu3a
I0412 02:31:13.973520 14841 net.cpp:434] relu3a <- conv3a
I0412 02:31:13.973526 14841 net.cpp:395] relu3a -> conv3a (in-place)
I0412 02:31:13.973537 14841 net.cpp:150] Setting up relu3a
I0412 02:31:13.973542 14841 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 02:31:13.973546 14841 net.cpp:165] Memory required for data: 9132834852
I0412 02:31:13.973549 14841 layer_factory.hpp:77] Creating layer conv3b
I0412 02:31:13.973562 14841 net.cpp:100] Creating Layer conv3b
I0412 02:31:13.973567 14841 net.cpp:434] conv3b <- conv3a
I0412 02:31:13.973573 14841 net.cpp:408] conv3b -> conv3b
I0412 02:31:13.992048 14841 net.cpp:150] Setting up conv3b
I0412 02:31:13.992077 14841 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 02:31:13.992081 14841 net.cpp:165] Memory required for data: 9441116196
I0412 02:31:13.992094 14841 layer_factory.hpp:77] Creating layer relu3b
I0412 02:31:13.992105 14841 net.cpp:100] Creating Layer relu3b
I0412 02:31:13.992110 14841 net.cpp:434] relu3b <- conv3b
I0412 02:31:13.992120 14841 net.cpp:395] relu3b -> conv3b (in-place)
I0412 02:31:13.992131 14841 net.cpp:150] Setting up relu3b
I0412 02:31:13.992137 14841 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 02:31:13.992141 14841 net.cpp:165] Memory required for data: 9749397540
I0412 02:31:13.992143 14841 layer_factory.hpp:77] Creating layer pool3
I0412 02:31:13.992151 14841 net.cpp:100] Creating Layer pool3
I0412 02:31:13.992156 14841 net.cpp:434] pool3 <- conv3b
I0412 02:31:13.992162 14841 net.cpp:408] pool3 -> pool3
I0412 02:31:13.992260 14841 net.cpp:150] Setting up pool3
I0412 02:31:13.992270 14841 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 02:31:13.992274 14841 net.cpp:165] Memory required for data: 9787932708
I0412 02:31:13.992280 14841 layer_factory.hpp:77] Creating layer conv4a
I0412 02:31:13.992297 14841 net.cpp:100] Creating Layer conv4a
I0412 02:31:13.992319 14841 net.cpp:434] conv4a <- pool3
I0412 02:31:13.992395 14841 net.cpp:408] conv4a -> conv4a
I0412 02:31:14.029971 14841 net.cpp:150] Setting up conv4a
I0412 02:31:14.030000 14841 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 02:31:14.030005 14841 net.cpp:165] Memory required for data: 9865003044
I0412 02:31:14.030025 14841 layer_factory.hpp:77] Creating layer relu4a
I0412 02:31:14.030036 14841 net.cpp:100] Creating Layer relu4a
I0412 02:31:14.030043 14841 net.cpp:434] relu4a <- conv4a
I0412 02:31:14.030053 14841 net.cpp:395] relu4a -> conv4a (in-place)
I0412 02:31:14.030066 14841 net.cpp:150] Setting up relu4a
I0412 02:31:14.030071 14841 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 02:31:14.030074 14841 net.cpp:165] Memory required for data: 9942073380
I0412 02:31:14.030078 14841 layer_factory.hpp:77] Creating layer conv4b
I0412 02:31:14.030097 14841 net.cpp:100] Creating Layer conv4b
I0412 02:31:14.030102 14841 net.cpp:434] conv4b <- conv4a
I0412 02:31:14.030110 14841 net.cpp:408] conv4b -> conv4b
I0412 02:31:14.103036 14841 net.cpp:150] Setting up conv4b
I0412 02:31:14.103070 14841 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 02:31:14.103075 14841 net.cpp:165] Memory required for data: 10019143716
I0412 02:31:14.103083 14841 layer_factory.hpp:77] Creating layer relu4b
I0412 02:31:14.103094 14841 net.cpp:100] Creating Layer relu4b
I0412 02:31:14.103102 14841 net.cpp:434] relu4b <- conv4b
I0412 02:31:14.103111 14841 net.cpp:395] relu4b -> conv4b (in-place)
I0412 02:31:14.103119 14841 net.cpp:150] Setting up relu4b
I0412 02:31:14.103124 14841 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 02:31:14.103128 14841 net.cpp:165] Memory required for data: 10096214052
I0412 02:31:14.103132 14841 layer_factory.hpp:77] Creating layer pool4
I0412 02:31:14.103139 14841 net.cpp:100] Creating Layer pool4
I0412 02:31:14.103142 14841 net.cpp:434] pool4 <- conv4b
I0412 02:31:14.103168 14841 net.cpp:408] pool4 -> pool4
I0412 02:31:14.103233 14841 net.cpp:150] Setting up pool4
I0412 02:31:14.103245 14841 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:31:14.103248 14841 net.cpp:165] Memory required for data: 10105847844
I0412 02:31:14.103252 14841 layer_factory.hpp:77] Creating layer conv5a
I0412 02:31:14.103263 14841 net.cpp:100] Creating Layer conv5a
I0412 02:31:14.103268 14841 net.cpp:434] conv5a <- pool4
I0412 02:31:14.103278 14841 net.cpp:408] conv5a -> conv5a
I0412 02:31:14.166800 14841 net.cpp:150] Setting up conv5a
I0412 02:31:14.166834 14841 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:31:14.166838 14841 net.cpp:165] Memory required for data: 10115481636
I0412 02:31:14.166849 14841 layer_factory.hpp:77] Creating layer relu5a
I0412 02:31:14.166862 14841 net.cpp:100] Creating Layer relu5a
I0412 02:31:14.166867 14841 net.cpp:434] relu5a <- conv5a
I0412 02:31:14.166875 14841 net.cpp:395] relu5a -> conv5a (in-place)
I0412 02:31:14.166887 14841 net.cpp:150] Setting up relu5a
I0412 02:31:14.166891 14841 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:31:14.166894 14841 net.cpp:165] Memory required for data: 10125115428
I0412 02:31:14.166898 14841 layer_factory.hpp:77] Creating layer conv5b
I0412 02:31:14.166910 14841 net.cpp:100] Creating Layer conv5b
I0412 02:31:14.166914 14841 net.cpp:434] conv5b <- conv5a
I0412 02:31:14.166920 14841 net.cpp:408] conv5b -> conv5b
I0412 02:31:14.233937 14841 net.cpp:150] Setting up conv5b
I0412 02:31:14.234001 14841 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:31:14.234019 14841 net.cpp:165] Memory required for data: 10134749220
I0412 02:31:14.234040 14841 layer_factory.hpp:77] Creating layer relu5b
I0412 02:31:14.234066 14841 net.cpp:100] Creating Layer relu5b
I0412 02:31:14.234086 14841 net.cpp:434] relu5b <- conv5b
I0412 02:31:14.234107 14841 net.cpp:395] relu5b -> conv5b (in-place)
I0412 02:31:14.234129 14841 net.cpp:150] Setting up relu5b
I0412 02:31:14.234146 14841 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:31:14.234161 14841 net.cpp:165] Memory required for data: 10144383012
I0412 02:31:14.234175 14841 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 02:31:14.234205 14841 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 02:31:14.234220 14841 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 02:31:14.234238 14841 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 02:31:14.234259 14841 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 02:31:14.234333 14841 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 02:31:14.234354 14841 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:31:14.234371 14841 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:31:14.234386 14841 net.cpp:165] Memory required for data: 10163650596
I0412 02:31:14.234401 14841 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 02:31:14.234426 14841 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 02:31:14.234442 14841 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 02:31:14.234463 14841 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 02:31:14.306916 14841 net.cpp:150] Setting up rpn_conv/3x3
I0412 02:31:14.306948 14841 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 02:31:14.306953 14841 net.cpp:165] Memory required for data: 10166796324
I0412 02:31:14.306973 14841 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 02:31:14.306984 14841 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 02:31:14.306993 14841 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 02:31:14.307000 14841 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 02:31:14.307013 14841 net.cpp:150] Setting up rpn_relu/3x3
I0412 02:31:14.307019 14841 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 02:31:14.307024 14841 net.cpp:165] Memory required for data: 10169942052
I0412 02:31:14.307029 14841 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 02:31:14.307042 14841 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 02:31:14.307047 14841 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 02:31:14.307055 14841 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 02:31:14.398205 14841 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 02:31:14.398237 14841 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 02:31:14.398241 14841 net.cpp:165] Memory required for data: 10170728484
I0412 02:31:14.398252 14841 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 02:31:14.398264 14841 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 02:31:14.398270 14841 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 02:31:14.398278 14841 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 02:31:14.398288 14841 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 02:31:14.398294 14841 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 02:31:14.398298 14841 net.cpp:165] Memory required for data: 10171514916
I0412 02:31:14.398303 14841 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 02:31:14.398311 14841 net.cpp:100] Creating Layer rpn/output_pool
I0412 02:31:14.398316 14841 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 02:31:14.398322 14841 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 02:31:14.398381 14841 net.cpp:150] Setting up rpn/output_pool
I0412 02:31:14.398389 14841 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 02:31:14.398392 14841 net.cpp:165] Memory required for data: 10171711524
I0412 02:31:14.398396 14841 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 02:31:14.398406 14841 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 02:31:14.398411 14841 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 02:31:14.398418 14841 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 02:31:14.398428 14841 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 02:31:14.398478 14841 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 02:31:14.398525 14841 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 02:31:14.398540 14841 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 02:31:14.398576 14841 net.cpp:165] Memory required for data: 10172104740
I0412 02:31:14.398586 14841 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 02:31:14.398633 14841 net.cpp:100] Creating Layer rpn_cls_score
I0412 02:31:14.398643 14841 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 02:31:14.398697 14841 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 02:31:14.399523 14841 net.cpp:150] Setting up rpn_cls_score
I0412 02:31:14.399536 14841 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:31:14.399576 14841 net.cpp:165] Memory required for data: 10172133156
I0412 02:31:14.399644 14841 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 02:31:14.399677 14841 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 02:31:14.399685 14841 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 02:31:14.399730 14841 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 02:31:14.399766 14841 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 02:31:14.399859 14841 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 02:31:14.399905 14841 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:31:14.399914 14841 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:31:14.399945 14841 net.cpp:165] Memory required for data: 10172189988
I0412 02:31:14.399955 14841 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 02:31:14.399982 14841 net.cpp:100] Creating Layer rpn_twin_pred
I0412 02:31:14.399992 14841 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 02:31:14.400007 14841 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 02:31:14.400800 14841 net.cpp:150] Setting up rpn_twin_pred
I0412 02:31:14.400813 14841 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:31:14.400825 14841 net.cpp:165] Memory required for data: 10172218404
I0412 02:31:14.400844 14841 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 02:31:14.400853 14841 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 02:31:14.400867 14841 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 02:31:14.400882 14841 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 02:31:14.400897 14841 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 02:31:14.400964 14841 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 02:31:14.400975 14841 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:31:14.400986 14841 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:31:14.400997 14841 net.cpp:165] Memory required for data: 10172275236
I0412 02:31:14.401002 14841 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 02:31:14.401017 14841 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 02:31:14.401024 14841 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 02:31:14.401041 14841 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 02:31:14.401082 14841 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 02:31:14.401090 14841 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:31:14.401093 14841 net.cpp:165] Memory required for data: 10172303652
I0412 02:31:14.401098 14841 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 02:31:14.401123 14841 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 02:31:14.401130 14841 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 02:31:14.401142 14841 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 02:31:14.401165 14841 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 02:31:14.401175 14841 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 02:31:14.401250 14841 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 02:31:14.401262 14841 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:31:14.401268 14841 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:31:14.401278 14841 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:31:14.401289 14841 net.cpp:165] Memory required for data: 10172388900
I0412 02:31:14.401294 14841 layer_factory.hpp:77] Creating layer rpn-data
I0412 02:31:14.401792 14841 net.cpp:100] Creating Layer rpn-data
I0412 02:31:14.401804 14841 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 02:31:14.401820 14841 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 02:31:14.401831 14841 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 02:31:14.401844 14841 net.cpp:408] rpn-data -> rpn_labels
I0412 02:31:14.401854 14841 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 02:31:14.401880 14841 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 02:31:14.401888 14841 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 02:31:14.405602 14841 net.cpp:150] Setting up rpn-data
I0412 02:31:14.405622 14841 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 02:31:14.405627 14841 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:31:14.405649 14841 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:31:14.405664 14841 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:31:14.405668 14841 net.cpp:165] Memory required for data: 10172488356
I0412 02:31:14.405678 14841 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 02:31:14.405691 14841 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 02:31:14.405701 14841 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 02:31:14.405715 14841 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 02:31:14.405725 14841 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 02:31:14.405784 14841 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 02:31:14.405795 14841 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 02:31:14.405828 14841 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 02:31:14.405835 14841 net.cpp:165] Memory required for data: 10172516772
I0412 02:31:14.405840 14841 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 02:31:14.405869 14841 net.cpp:100] Creating Layer rpn_loss_cls
I0412 02:31:14.405884 14841 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 02:31:14.405901 14841 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 02:31:14.405917 14841 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 02:31:14.405933 14841 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 02:31:14.406092 14841 net.cpp:150] Setting up rpn_loss_cls
I0412 02:31:14.406116 14841 net.cpp:157] Top shape: (1)
I0412 02:31:14.406138 14841 net.cpp:160]     with loss weight 1
I0412 02:31:14.406172 14841 net.cpp:165] Memory required for data: 10172516776
I0412 02:31:14.406190 14841 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 02:31:14.406221 14841 net.cpp:100] Creating Layer rpn_loss_twin
I0412 02:31:14.406239 14841 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 02:31:14.406260 14841 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 02:31:14.406280 14841 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 02:31:14.406299 14841 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 02:31:14.406337 14841 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 02:31:14.406474 14841 net.cpp:150] Setting up rpn_loss_twin
I0412 02:31:14.406502 14841 net.cpp:157] Top shape: (1)
I0412 02:31:14.406520 14841 net.cpp:160]     with loss weight 1
I0412 02:31:14.406538 14841 net.cpp:165] Memory required for data: 10172516780
I0412 02:31:14.406556 14841 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 02:31:14.406590 14841 net.cpp:100] Creating Layer rpn_accuarcy
I0412 02:31:14.406610 14841 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 02:31:14.406638 14841 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 02:31:14.406663 14841 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 02:31:14.406688 14841 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 02:31:14.406756 14841 net.cpp:150] Setting up rpn_accuarcy
I0412 02:31:14.406782 14841 net.cpp:157] Top shape: (1)
I0412 02:31:14.406805 14841 net.cpp:157] Top shape: 2 (2)
I0412 02:31:14.406821 14841 net.cpp:165] Memory required for data: 10172516792
I0412 02:31:14.406838 14841 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 02:31:14.406870 14841 net.cpp:100] Creating Layer rpn_cls_prob
I0412 02:31:14.406891 14841 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 02:31:14.406911 14841 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 02:31:14.407022 14841 net.cpp:150] Setting up rpn_cls_prob
I0412 02:31:14.407052 14841 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:31:14.407073 14841 net.cpp:165] Memory required for data: 10172545208
I0412 02:31:14.407090 14841 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 02:31:14.407115 14841 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 02:31:14.407135 14841 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 02:31:14.407163 14841 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 02:31:14.407220 14841 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 02:31:14.407245 14841 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:31:14.407263 14841 net.cpp:165] Memory required for data: 10172573624
I0412 02:31:14.407280 14841 layer_factory.hpp:77] Creating layer proposal
I0412 02:31:14.408047 14841 net.cpp:100] Creating Layer proposal
I0412 02:31:14.408090 14841 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 02:31:14.408114 14841 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 02:31:14.408136 14841 net.cpp:408] proposal -> rpn_rois
I0412 02:31:14.413014 14841 net.cpp:150] Setting up proposal
I0412 02:31:14.413056 14841 net.cpp:157] Top shape: 1 3 (3)
I0412 02:31:14.413077 14841 net.cpp:165] Memory required for data: 10172573636
I0412 02:31:14.413097 14841 layer_factory.hpp:77] Creating layer roi-data
I0412 02:31:14.413266 14841 net.cpp:100] Creating Layer roi-data
I0412 02:31:14.413295 14841 net.cpp:434] roi-data <- rpn_rois
I0412 02:31:14.413316 14841 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 02:31:14.413341 14841 net.cpp:408] roi-data -> rois
I0412 02:31:14.413364 14841 net.cpp:408] roi-data -> labels
I0412 02:31:14.413388 14841 net.cpp:408] roi-data -> twin_targets
I0412 02:31:14.413410 14841 net.cpp:408] roi-data -> twin_inside_weights
I0412 02:31:14.413432 14841 net.cpp:408] roi-data -> twin_outside_weights
I0412 02:31:14.413889 14841 net.cpp:150] Setting up roi-data
I0412 02:31:14.413925 14841 net.cpp:157] Top shape: 1 3 (3)
I0412 02:31:14.413952 14841 net.cpp:157] Top shape: 1 1 (1)
I0412 02:31:14.413972 14841 net.cpp:157] Top shape: 1 402 (402)
I0412 02:31:14.413990 14841 net.cpp:157] Top shape: 1 402 (402)
I0412 02:31:14.414007 14841 net.cpp:157] Top shape: 1 402 (402)
I0412 02:31:14.414026 14841 net.cpp:165] Memory required for data: 10172578476
I0412 02:31:14.414044 14841 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 02:31:14.414064 14841 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 02:31:14.414083 14841 net.cpp:434] labels_roi-data_1_split <- labels
I0412 02:31:14.414105 14841 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 02:31:14.414129 14841 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 02:31:14.414202 14841 net.cpp:150] Setting up labels_roi-data_1_split
I0412 02:31:14.414227 14841 net.cpp:157] Top shape: 1 1 (1)
I0412 02:31:14.414247 14841 net.cpp:157] Top shape: 1 1 (1)
I0412 02:31:14.414264 14841 net.cpp:165] Memory required for data: 10172578484
I0412 02:31:14.414283 14841 layer_factory.hpp:77] Creating layer roi_pool5
I0412 02:31:14.414306 14841 net.cpp:100] Creating Layer roi_pool5
I0412 02:31:14.414330 14841 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 02:31:14.414352 14841 net.cpp:434] roi_pool5 <- rois
I0412 02:31:14.414376 14841 net.cpp:408] roi_pool5 -> pool5
I0412 02:31:14.414400 14841 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 02:31:14.414425 14841 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 02:31:14.414495 14841 net.cpp:150] Setting up roi_pool5
I0412 02:31:14.414517 14841 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 02:31:14.414535 14841 net.cpp:165] Memory required for data: 10172611252
I0412 02:31:14.414554 14841 layer_factory.hpp:77] Creating layer fc6
I0412 02:31:14.414577 14841 net.cpp:100] Creating Layer fc6
I0412 02:31:14.414594 14841 net.cpp:434] fc6 <- pool5
I0412 02:31:14.414613 14841 net.cpp:408] fc6 -> fc6
I0412 02:31:14.700594 14841 net.cpp:150] Setting up fc6
I0412 02:31:14.700625 14841 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:31:14.700629 14841 net.cpp:165] Memory required for data: 10172627636
I0412 02:31:14.700641 14841 layer_factory.hpp:77] Creating layer relu6
I0412 02:31:14.700654 14841 net.cpp:100] Creating Layer relu6
I0412 02:31:14.700661 14841 net.cpp:434] relu6 <- fc6
I0412 02:31:14.700678 14841 net.cpp:395] relu6 -> fc6 (in-place)
I0412 02:31:14.700692 14841 net.cpp:150] Setting up relu6
I0412 02:31:14.700700 14841 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:31:14.700703 14841 net.cpp:165] Memory required for data: 10172644020
I0412 02:31:14.700707 14841 layer_factory.hpp:77] Creating layer drop6
I0412 02:31:14.700719 14841 net.cpp:100] Creating Layer drop6
I0412 02:31:14.700726 14841 net.cpp:434] drop6 <- fc6
I0412 02:31:14.700731 14841 net.cpp:395] drop6 -> fc6 (in-place)
I0412 02:31:14.700767 14841 net.cpp:150] Setting up drop6
I0412 02:31:14.700773 14841 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:31:14.700776 14841 net.cpp:165] Memory required for data: 10172660404
I0412 02:31:14.700780 14841 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 02:31:14.700788 14841 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 02:31:14.700793 14841 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 02:31:14.700804 14841 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 02:31:14.700814 14841 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 02:31:14.700860 14841 net.cpp:150] Setting up fc6_drop6_0_split
I0412 02:31:14.700866 14841 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:31:14.700871 14841 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:31:14.700875 14841 net.cpp:165] Memory required for data: 10172693172
I0412 02:31:14.700881 14841 layer_factory.hpp:77] Creating layer cls_score
I0412 02:31:14.700888 14841 net.cpp:100] Creating Layer cls_score
I0412 02:31:14.700894 14841 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 02:31:14.700903 14841 net.cpp:408] cls_score -> cls_score
I0412 02:31:14.708297 14841 net.cpp:150] Setting up cls_score
I0412 02:31:14.708317 14841 net.cpp:157] Top shape: 1 201 (201)
I0412 02:31:14.708322 14841 net.cpp:165] Memory required for data: 10172693976
I0412 02:31:14.708364 14841 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 02:31:14.708379 14841 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 02:31:14.708386 14841 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 02:31:14.708395 14841 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 02:31:14.708407 14841 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 02:31:14.708456 14841 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 02:31:14.708463 14841 net.cpp:157] Top shape: 1 201 (201)
I0412 02:31:14.708469 14841 net.cpp:157] Top shape: 1 201 (201)
I0412 02:31:14.708473 14841 net.cpp:165] Memory required for data: 10172695584
I0412 02:31:14.708477 14841 layer_factory.hpp:77] Creating layer twin_pred
I0412 02:31:14.708487 14841 net.cpp:100] Creating Layer twin_pred
I0412 02:31:14.708493 14841 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 02:31:14.708503 14841 net.cpp:408] twin_pred -> twin_pred
I0412 02:31:14.724342 14841 net.cpp:150] Setting up twin_pred
I0412 02:31:14.724370 14841 net.cpp:157] Top shape: 1 402 (402)
I0412 02:31:14.724373 14841 net.cpp:165] Memory required for data: 10172697192
I0412 02:31:14.724386 14841 layer_factory.hpp:77] Creating layer loss_cls
I0412 02:31:14.724398 14841 net.cpp:100] Creating Layer loss_cls
I0412 02:31:14.724404 14841 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 02:31:14.724412 14841 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 02:31:14.724422 14841 net.cpp:408] loss_cls -> loss_cls
I0412 02:31:14.724438 14841 layer_factory.hpp:77] Creating layer loss_cls
I0412 02:31:14.724552 14841 net.cpp:150] Setting up loss_cls
I0412 02:31:14.724560 14841 net.cpp:157] Top shape: (1)
I0412 02:31:14.724565 14841 net.cpp:160]     with loss weight 1
I0412 02:31:14.724577 14841 net.cpp:165] Memory required for data: 10172697196
I0412 02:31:14.724582 14841 layer_factory.hpp:77] Creating layer loss_twin
I0412 02:31:14.724593 14841 net.cpp:100] Creating Layer loss_twin
I0412 02:31:14.724599 14841 net.cpp:434] loss_twin <- twin_pred
I0412 02:31:14.724606 14841 net.cpp:434] loss_twin <- twin_targets
I0412 02:31:14.724611 14841 net.cpp:434] loss_twin <- twin_inside_weights
I0412 02:31:14.724617 14841 net.cpp:434] loss_twin <- twin_outside_weights
I0412 02:31:14.724624 14841 net.cpp:408] loss_twin -> loss_twin
I0412 02:31:14.724730 14841 net.cpp:150] Setting up loss_twin
I0412 02:31:14.724738 14841 net.cpp:157] Top shape: (1)
I0412 02:31:14.724742 14841 net.cpp:160]     with loss weight 1
I0412 02:31:14.724751 14841 net.cpp:165] Memory required for data: 10172697200
I0412 02:31:14.724756 14841 layer_factory.hpp:77] Creating layer accuarcy
I0412 02:31:14.724763 14841 net.cpp:100] Creating Layer accuarcy
I0412 02:31:14.724769 14841 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 02:31:14.724776 14841 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 02:31:14.724784 14841 net.cpp:408] accuarcy -> accuarcy
I0412 02:31:14.724794 14841 net.cpp:150] Setting up accuarcy
I0412 02:31:14.724803 14841 net.cpp:157] Top shape: (1)
I0412 02:31:14.724808 14841 net.cpp:165] Memory required for data: 10172697204
I0412 02:31:14.724812 14841 net.cpp:228] accuarcy does not need backward computation.
I0412 02:31:14.724818 14841 net.cpp:226] loss_twin needs backward computation.
I0412 02:31:14.724823 14841 net.cpp:226] loss_cls needs backward computation.
I0412 02:31:14.724829 14841 net.cpp:226] twin_pred needs backward computation.
I0412 02:31:14.724834 14841 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 02:31:14.724839 14841 net.cpp:226] cls_score needs backward computation.
I0412 02:31:14.724843 14841 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 02:31:14.724848 14841 net.cpp:226] drop6 needs backward computation.
I0412 02:31:14.724853 14841 net.cpp:226] relu6 needs backward computation.
I0412 02:31:14.724858 14841 net.cpp:226] fc6 needs backward computation.
I0412 02:31:14.724864 14841 net.cpp:226] roi_pool5 needs backward computation.
I0412 02:31:14.724870 14841 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 02:31:14.724875 14841 net.cpp:226] roi-data needs backward computation.
I0412 02:31:14.724880 14841 net.cpp:226] proposal needs backward computation.
I0412 02:31:14.724885 14841 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 02:31:14.724891 14841 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 02:31:14.724896 14841 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 02:31:14.724901 14841 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 02:31:14.724910 14841 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 02:31:14.724917 14841 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 02:31:14.724922 14841 net.cpp:226] rpn-data needs backward computation.
I0412 02:31:14.724931 14841 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 02:31:14.724936 14841 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 02:31:14.724941 14841 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 02:31:14.724946 14841 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 02:31:14.724951 14841 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 02:31:14.724956 14841 net.cpp:226] rpn_cls_score needs backward computation.
I0412 02:31:14.724959 14841 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 02:31:14.724964 14841 net.cpp:226] rpn/output_pool needs backward computation.
I0412 02:31:14.724969 14841 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 02:31:14.724973 14841 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 02:31:14.724978 14841 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 02:31:14.724983 14841 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 02:31:14.724988 14841 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 02:31:14.724993 14841 net.cpp:226] relu5b needs backward computation.
I0412 02:31:14.724998 14841 net.cpp:226] conv5b needs backward computation.
I0412 02:31:14.725003 14841 net.cpp:226] relu5a needs backward computation.
I0412 02:31:14.725008 14841 net.cpp:226] conv5a needs backward computation.
I0412 02:31:14.725013 14841 net.cpp:226] pool4 needs backward computation.
I0412 02:31:14.725018 14841 net.cpp:226] relu4b needs backward computation.
I0412 02:31:14.725023 14841 net.cpp:226] conv4b needs backward computation.
I0412 02:31:14.725026 14841 net.cpp:226] relu4a needs backward computation.
I0412 02:31:14.725030 14841 net.cpp:226] conv4a needs backward computation.
I0412 02:31:14.725034 14841 net.cpp:226] pool3 needs backward computation.
I0412 02:31:14.725039 14841 net.cpp:226] relu3b needs backward computation.
I0412 02:31:14.725042 14841 net.cpp:226] conv3b needs backward computation.
I0412 02:31:14.725046 14841 net.cpp:226] relu3a needs backward computation.
I0412 02:31:14.725051 14841 net.cpp:226] conv3a needs backward computation.
I0412 02:31:14.725056 14841 net.cpp:228] pool2 does not need backward computation.
I0412 02:31:14.725060 14841 net.cpp:228] relu2a does not need backward computation.
I0412 02:31:14.725065 14841 net.cpp:228] conv2a does not need backward computation.
I0412 02:31:14.725070 14841 net.cpp:228] pool1 does not need backward computation.
I0412 02:31:14.725092 14841 net.cpp:228] relu1a does not need backward computation.
I0412 02:31:14.725100 14841 net.cpp:228] conv1a does not need backward computation.
I0412 02:31:14.725106 14841 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 02:31:14.725113 14841 net.cpp:228] data_data_0_split does not need backward computation.
I0412 02:31:14.725117 14841 net.cpp:228] data does not need backward computation.
I0412 02:31:14.725121 14841 net.cpp:270] This network produces output accuarcy
I0412 02:31:14.725128 14841 net.cpp:270] This network produces output loss_cls
I0412 02:31:14.725134 14841 net.cpp:270] This network produces output loss_twin
I0412 02:31:14.725137 14841 net.cpp:270] This network produces output rpn_accuarcy
I0412 02:31:14.725142 14841 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 02:31:14.725144 14841 net.cpp:270] This network produces output rpn_cls_loss
I0412 02:31:14.725152 14841 net.cpp:270] This network produces output rpn_loss_twin
I0412 02:31:14.725188 14841 net.cpp:283] Network initialization done.
I0412 02:31:14.725306 14841 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 02:31:14.915391 14841 net.cpp:761] Ignoring source layer pool5
I0412 02:31:14.945031 14841 net.cpp:761] Ignoring source layer fc7
I0412 02:31:14.945060 14841 net.cpp:761] Ignoring source layer relu7
I0412 02:31:14.945063 14841 net.cpp:761] Ignoring source layer drop7
I0412 02:31:14.945066 14841 net.cpp:761] Ignoring source layer fc8-200
I0412 02:31:14.945070 14841 net.cpp:761] Ignoring source layer loss
maaaaasdfdfdsfadf
Solving...
BlobFetcher started
99
(array([0]), array([97]))
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 96, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 131, in forward
    blob1, blob2 = blob
ValueError: need more than 1 value to unpack
Terminating BlobFetcher
