Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
print done
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}]
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 04:16:34.062319 19041 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 04:16:34.062361 19041 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 04:16:34.063311 19041 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 04:16:34.064458 19041 layer_factory.hpp:77] Creating layer data
I0412 04:16:34.084103 19041 net.cpp:100] Creating Layer data
I0412 04:16:34.084250 19041 net.cpp:408] data -> data
I0412 04:16:34.084324 19041 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 04:16:34.099203 19041 net.cpp:150] Setting up data
I0412 04:16:34.099232 19041 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 04:16:34.099242 19041 net.cpp:157] Top shape: 1 3 (3)
I0412 04:16:34.099247 19041 net.cpp:165] Memory required for data: 115605516
I0412 04:16:34.099256 19041 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 04:16:34.099272 19041 net.cpp:100] Creating Layer data_data_0_split
I0412 04:16:34.099279 19041 net.cpp:434] data_data_0_split <- data
I0412 04:16:34.099293 19041 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 04:16:34.099331 19041 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 04:16:34.099402 19041 net.cpp:150] Setting up data_data_0_split
I0412 04:16:34.099413 19041 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 04:16:34.099438 19041 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 04:16:34.099454 19041 net.cpp:165] Memory required for data: 346816524
I0412 04:16:34.099469 19041 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 04:16:34.099488 19041 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 04:16:34.099504 19041 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 04:16:34.099524 19041 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 04:16:34.099536 19041 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 04:16:34.099594 19041 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 04:16:34.099604 19041 net.cpp:157] Top shape: 1 3 (3)
I0412 04:16:34.099609 19041 net.cpp:157] Top shape: 1 3 (3)
I0412 04:16:34.099613 19041 net.cpp:165] Memory required for data: 346816548
I0412 04:16:34.099617 19041 layer_factory.hpp:77] Creating layer conv1a
I0412 04:16:34.099634 19041 net.cpp:100] Creating Layer conv1a
I0412 04:16:34.099642 19041 net.cpp:434] conv1a <- data_data_0_split_0
I0412 04:16:34.099650 19041 net.cpp:408] conv1a -> conv1a
I0412 04:16:34.123324 19041 net.cpp:150] Setting up conv1a
I0412 04:16:34.123360 19041 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 04:16:34.123365 19041 net.cpp:165] Memory required for data: 2813067300
I0412 04:16:34.123384 19041 layer_factory.hpp:77] Creating layer relu1a
I0412 04:16:34.123399 19041 net.cpp:100] Creating Layer relu1a
I0412 04:16:34.123405 19041 net.cpp:434] relu1a <- conv1a
I0412 04:16:34.123415 19041 net.cpp:395] relu1a -> conv1a (in-place)
I0412 04:16:34.123428 19041 net.cpp:150] Setting up relu1a
I0412 04:16:34.123435 19041 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 04:16:34.123438 19041 net.cpp:165] Memory required for data: 5279318052
I0412 04:16:34.123442 19041 layer_factory.hpp:77] Creating layer pool1
I0412 04:16:34.123451 19041 net.cpp:100] Creating Layer pool1
I0412 04:16:34.123456 19041 net.cpp:434] pool1 <- conv1a
I0412 04:16:34.123461 19041 net.cpp:408] pool1 -> pool1
I0412 04:16:34.123559 19041 net.cpp:150] Setting up pool1
I0412 04:16:34.123569 19041 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 04:16:34.123572 19041 net.cpp:165] Memory required for data: 5895880740
I0412 04:16:34.123576 19041 layer_factory.hpp:77] Creating layer conv2a
I0412 04:16:34.123589 19041 net.cpp:100] Creating Layer conv2a
I0412 04:16:34.123594 19041 net.cpp:434] conv2a <- pool1
I0412 04:16:34.123602 19041 net.cpp:408] conv2a -> conv2a
I0412 04:16:34.133455 19041 net.cpp:150] Setting up conv2a
I0412 04:16:34.133536 19041 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 04:16:34.133558 19041 net.cpp:165] Memory required for data: 7129006116
I0412 04:16:34.133589 19041 layer_factory.hpp:77] Creating layer relu2a
I0412 04:16:34.133618 19041 net.cpp:100] Creating Layer relu2a
I0412 04:16:34.133639 19041 net.cpp:434] relu2a <- conv2a
I0412 04:16:34.133659 19041 net.cpp:395] relu2a -> conv2a (in-place)
I0412 04:16:34.133685 19041 net.cpp:150] Setting up relu2a
I0412 04:16:34.133708 19041 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 04:16:34.133728 19041 net.cpp:165] Memory required for data: 8362131492
I0412 04:16:34.133745 19041 layer_factory.hpp:77] Creating layer pool2
I0412 04:16:34.133774 19041 net.cpp:100] Creating Layer pool2
I0412 04:16:34.133795 19041 net.cpp:434] pool2 <- conv2a
I0412 04:16:34.133817 19041 net.cpp:408] pool2 -> pool2
I0412 04:16:34.133952 19041 net.cpp:150] Setting up pool2
I0412 04:16:34.133980 19041 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 04:16:34.133999 19041 net.cpp:165] Memory required for data: 8516272164
I0412 04:16:34.134018 19041 layer_factory.hpp:77] Creating layer conv3a
I0412 04:16:34.134048 19041 net.cpp:100] Creating Layer conv3a
I0412 04:16:34.134069 19041 net.cpp:434] conv3a <- pool2
I0412 04:16:34.134094 19041 net.cpp:408] conv3a -> conv3a
I0412 04:16:34.145071 19041 net.cpp:150] Setting up conv3a
I0412 04:16:34.145133 19041 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 04:16:34.145153 19041 net.cpp:165] Memory required for data: 8824553508
I0412 04:16:34.145182 19041 layer_factory.hpp:77] Creating layer relu3a
I0412 04:16:34.145210 19041 net.cpp:100] Creating Layer relu3a
I0412 04:16:34.145229 19041 net.cpp:434] relu3a <- conv3a
I0412 04:16:34.145251 19041 net.cpp:395] relu3a -> conv3a (in-place)
I0412 04:16:34.145274 19041 net.cpp:150] Setting up relu3a
I0412 04:16:34.145296 19041 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 04:16:34.145314 19041 net.cpp:165] Memory required for data: 9132834852
I0412 04:16:34.145331 19041 layer_factory.hpp:77] Creating layer conv3b
I0412 04:16:34.145359 19041 net.cpp:100] Creating Layer conv3b
I0412 04:16:34.145380 19041 net.cpp:434] conv3b <- conv3a
I0412 04:16:34.145406 19041 net.cpp:408] conv3b -> conv3b
I0412 04:16:34.165387 19041 net.cpp:150] Setting up conv3b
I0412 04:16:34.165412 19041 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 04:16:34.165416 19041 net.cpp:165] Memory required for data: 9441116196
I0412 04:16:34.165424 19041 layer_factory.hpp:77] Creating layer relu3b
I0412 04:16:34.165433 19041 net.cpp:100] Creating Layer relu3b
I0412 04:16:34.165438 19041 net.cpp:434] relu3b <- conv3b
I0412 04:16:34.165453 19041 net.cpp:395] relu3b -> conv3b (in-place)
I0412 04:16:34.165469 19041 net.cpp:150] Setting up relu3b
I0412 04:16:34.165474 19041 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 04:16:34.165477 19041 net.cpp:165] Memory required for data: 9749397540
I0412 04:16:34.165480 19041 layer_factory.hpp:77] Creating layer pool3
I0412 04:16:34.165486 19041 net.cpp:100] Creating Layer pool3
I0412 04:16:34.165490 19041 net.cpp:434] pool3 <- conv3b
I0412 04:16:34.165495 19041 net.cpp:408] pool3 -> pool3
I0412 04:16:34.165549 19041 net.cpp:150] Setting up pool3
I0412 04:16:34.165555 19041 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 04:16:34.165557 19041 net.cpp:165] Memory required for data: 9787932708
I0412 04:16:34.165560 19041 layer_factory.hpp:77] Creating layer conv4a
I0412 04:16:34.165570 19041 net.cpp:100] Creating Layer conv4a
I0412 04:16:34.165573 19041 net.cpp:434] conv4a <- pool3
I0412 04:16:34.165577 19041 net.cpp:408] conv4a -> conv4a
I0412 04:16:34.206187 19041 net.cpp:150] Setting up conv4a
I0412 04:16:34.206255 19041 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 04:16:34.206277 19041 net.cpp:165] Memory required for data: 9865003044
I0412 04:16:34.206312 19041 layer_factory.hpp:77] Creating layer relu4a
I0412 04:16:34.206341 19041 net.cpp:100] Creating Layer relu4a
I0412 04:16:34.206362 19041 net.cpp:434] relu4a <- conv4a
I0412 04:16:34.206388 19041 net.cpp:395] relu4a -> conv4a (in-place)
I0412 04:16:34.206415 19041 net.cpp:150] Setting up relu4a
I0412 04:16:34.206437 19041 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 04:16:34.206454 19041 net.cpp:165] Memory required for data: 9942073380
I0412 04:16:34.206472 19041 layer_factory.hpp:77] Creating layer conv4b
I0412 04:16:34.206506 19041 net.cpp:100] Creating Layer conv4b
I0412 04:16:34.206527 19041 net.cpp:434] conv4b <- conv4a
I0412 04:16:34.206549 19041 net.cpp:408] conv4b -> conv4b
I0412 04:16:34.295302 19041 net.cpp:150] Setting up conv4b
I0412 04:16:34.295377 19041 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 04:16:34.295400 19041 net.cpp:165] Memory required for data: 10019143716
I0412 04:16:34.295428 19041 layer_factory.hpp:77] Creating layer relu4b
I0412 04:16:34.295456 19041 net.cpp:100] Creating Layer relu4b
I0412 04:16:34.295477 19041 net.cpp:434] relu4b <- conv4b
I0412 04:16:34.295500 19041 net.cpp:395] relu4b -> conv4b (in-place)
I0412 04:16:34.295524 19041 net.cpp:150] Setting up relu4b
I0412 04:16:34.295545 19041 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 04:16:34.295562 19041 net.cpp:165] Memory required for data: 10096214052
I0412 04:16:34.295580 19041 layer_factory.hpp:77] Creating layer pool4
I0412 04:16:34.295603 19041 net.cpp:100] Creating Layer pool4
I0412 04:16:34.295620 19041 net.cpp:434] pool4 <- conv4b
I0412 04:16:34.295644 19041 net.cpp:408] pool4 -> pool4
I0412 04:16:34.295734 19041 net.cpp:150] Setting up pool4
I0412 04:16:34.295760 19041 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:16:34.295774 19041 net.cpp:165] Memory required for data: 10105847844
I0412 04:16:34.295792 19041 layer_factory.hpp:77] Creating layer conv5a
I0412 04:16:34.295816 19041 net.cpp:100] Creating Layer conv5a
I0412 04:16:34.295835 19041 net.cpp:434] conv5a <- pool4
I0412 04:16:34.295856 19041 net.cpp:408] conv5a -> conv5a
I0412 04:16:34.381098 19041 net.cpp:150] Setting up conv5a
I0412 04:16:34.381173 19041 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:16:34.381191 19041 net.cpp:165] Memory required for data: 10115481636
I0412 04:16:34.381211 19041 layer_factory.hpp:77] Creating layer relu5a
I0412 04:16:34.381230 19041 net.cpp:100] Creating Layer relu5a
I0412 04:16:34.381245 19041 net.cpp:434] relu5a <- conv5a
I0412 04:16:34.381264 19041 net.cpp:395] relu5a -> conv5a (in-place)
I0412 04:16:34.381290 19041 net.cpp:150] Setting up relu5a
I0412 04:16:34.381305 19041 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:16:34.381317 19041 net.cpp:165] Memory required for data: 10125115428
I0412 04:16:34.381330 19041 layer_factory.hpp:77] Creating layer conv5b
I0412 04:16:34.381352 19041 net.cpp:100] Creating Layer conv5b
I0412 04:16:34.381366 19041 net.cpp:434] conv5b <- conv5a
I0412 04:16:34.381381 19041 net.cpp:408] conv5b -> conv5b
I0412 04:16:34.464506 19041 net.cpp:150] Setting up conv5b
I0412 04:16:34.464543 19041 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:16:34.464550 19041 net.cpp:165] Memory required for data: 10134749220
I0412 04:16:34.464563 19041 layer_factory.hpp:77] Creating layer relu5b
I0412 04:16:34.464581 19041 net.cpp:100] Creating Layer relu5b
I0412 04:16:34.464591 19041 net.cpp:434] relu5b <- conv5b
I0412 04:16:34.464601 19041 net.cpp:395] relu5b -> conv5b (in-place)
I0412 04:16:34.464615 19041 net.cpp:150] Setting up relu5b
I0412 04:16:34.464624 19041 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:16:34.464632 19041 net.cpp:165] Memory required for data: 10144383012
I0412 04:16:34.464638 19041 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 04:16:34.464650 19041 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 04:16:34.464658 19041 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 04:16:34.464664 19041 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 04:16:34.464678 19041 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 04:16:34.464749 19041 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 04:16:34.464761 19041 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:16:34.464768 19041 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:16:34.464773 19041 net.cpp:165] Memory required for data: 10163650596
I0412 04:16:34.464781 19041 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 04:16:34.464797 19041 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 04:16:34.464807 19041 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 04:16:34.464819 19041 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 04:16:34.552805 19041 net.cpp:150] Setting up rpn_conv/3x3
I0412 04:16:34.552868 19041 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 04:16:34.552888 19041 net.cpp:165] Memory required for data: 10166796324
I0412 04:16:34.552920 19041 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 04:16:34.552944 19041 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 04:16:34.552964 19041 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 04:16:34.552987 19041 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 04:16:34.553010 19041 net.cpp:150] Setting up rpn_relu/3x3
I0412 04:16:34.553030 19041 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 04:16:34.553046 19041 net.cpp:165] Memory required for data: 10169942052
I0412 04:16:34.553062 19041 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 04:16:34.553091 19041 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 04:16:34.553107 19041 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 04:16:34.553125 19041 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 04:16:34.628551 19041 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 04:16:34.628634 19041 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 04:16:34.628654 19041 net.cpp:165] Memory required for data: 10170728484
I0412 04:16:34.628676 19041 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 04:16:34.628705 19041 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 04:16:34.628723 19041 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 04:16:34.628746 19041 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 04:16:34.628769 19041 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 04:16:34.628787 19041 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 04:16:34.628804 19041 net.cpp:165] Memory required for data: 10171514916
I0412 04:16:34.628821 19041 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 04:16:34.628842 19041 net.cpp:100] Creating Layer rpn/output_pool
I0412 04:16:34.628859 19041 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 04:16:34.628878 19041 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 04:16:34.628957 19041 net.cpp:150] Setting up rpn/output_pool
I0412 04:16:34.628979 19041 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 04:16:34.628994 19041 net.cpp:165] Memory required for data: 10171711524
I0412 04:16:34.629010 19041 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 04:16:34.629032 19041 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 04:16:34.629050 19041 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 04:16:34.629068 19041 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 04:16:34.629091 19041 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 04:16:34.629158 19041 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 04:16:34.629182 19041 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 04:16:34.629200 19041 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 04:16:34.629216 19041 net.cpp:165] Memory required for data: 10172104740
I0412 04:16:34.629242 19041 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 04:16:34.629271 19041 net.cpp:100] Creating Layer rpn_cls_score
I0412 04:16:34.629288 19041 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 04:16:34.629308 19041 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 04:16:34.630106 19041 net.cpp:150] Setting up rpn_cls_score
I0412 04:16:34.630133 19041 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:16:34.630149 19041 net.cpp:165] Memory required for data: 10172133156
I0412 04:16:34.630169 19041 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 04:16:34.630188 19041 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 04:16:34.630209 19041 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 04:16:34.630228 19041 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 04:16:34.630244 19041 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 04:16:34.630318 19041 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 04:16:34.630337 19041 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:16:34.630352 19041 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:16:34.630363 19041 net.cpp:165] Memory required for data: 10172189988
I0412 04:16:34.630378 19041 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 04:16:34.630404 19041 net.cpp:100] Creating Layer rpn_twin_pred
I0412 04:16:34.630420 19041 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 04:16:34.630436 19041 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 04:16:34.631204 19041 net.cpp:150] Setting up rpn_twin_pred
I0412 04:16:34.631225 19041 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:16:34.631239 19041 net.cpp:165] Memory required for data: 10172218404
I0412 04:16:34.631254 19041 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 04:16:34.631271 19041 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 04:16:34.631284 19041 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 04:16:34.631301 19041 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 04:16:34.631319 19041 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 04:16:34.631387 19041 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 04:16:34.631407 19041 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:16:34.631422 19041 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:16:34.631434 19041 net.cpp:165] Memory required for data: 10172275236
I0412 04:16:34.631448 19041 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 04:16:34.631465 19041 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 04:16:34.631479 19041 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 04:16:34.631498 19041 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 04:16:34.631547 19041 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 04:16:34.631567 19041 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 04:16:34.631580 19041 net.cpp:165] Memory required for data: 10172303652
I0412 04:16:34.631593 19041 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 04:16:34.631610 19041 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 04:16:34.631624 19041 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 04:16:34.631642 19041 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 04:16:34.631665 19041 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 04:16:34.631685 19041 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 04:16:34.631769 19041 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 04:16:34.631789 19041 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 04:16:34.631804 19041 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 04:16:34.631819 19041 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 04:16:34.631831 19041 net.cpp:165] Memory required for data: 10172388900
I0412 04:16:34.631844 19041 layer_factory.hpp:77] Creating layer rpn-data
I0412 04:16:34.632370 19041 net.cpp:100] Creating Layer rpn-data
I0412 04:16:34.632397 19041 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 04:16:34.632416 19041 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 04:16:34.632429 19041 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 04:16:34.632447 19041 net.cpp:408] rpn-data -> rpn_labels
I0412 04:16:34.632465 19041 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 04:16:34.632483 19041 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 04:16:34.632500 19041 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 04:16:34.635942 19041 net.cpp:150] Setting up rpn-data
I0412 04:16:34.635973 19041 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 04:16:34.635989 19041 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:16:34.636003 19041 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:16:34.636018 19041 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:16:34.636030 19041 net.cpp:165] Memory required for data: 10172488356
I0412 04:16:34.636044 19041 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 04:16:34.636059 19041 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 04:16:34.636072 19041 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 04:16:34.636087 19041 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 04:16:34.636106 19041 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 04:16:34.636165 19041 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 04:16:34.636184 19041 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 04:16:34.636199 19041 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 04:16:34.636211 19041 net.cpp:165] Memory required for data: 10172516772
I0412 04:16:34.636224 19041 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 04:16:34.636241 19041 net.cpp:100] Creating Layer rpn_loss_cls
I0412 04:16:34.636255 19041 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 04:16:34.636270 19041 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 04:16:34.636284 19041 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 04:16:34.636302 19041 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 04:16:34.636488 19041 net.cpp:150] Setting up rpn_loss_cls
I0412 04:16:34.636509 19041 net.cpp:157] Top shape: (1)
I0412 04:16:34.636523 19041 net.cpp:160]     with loss weight 1
I0412 04:16:34.636544 19041 net.cpp:165] Memory required for data: 10172516776
I0412 04:16:34.636557 19041 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 04:16:34.636575 19041 net.cpp:100] Creating Layer rpn_loss_twin
I0412 04:16:34.636588 19041 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 04:16:34.636602 19041 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 04:16:34.636618 19041 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 04:16:34.636631 19041 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 04:16:34.636649 19041 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 04:16:34.636776 19041 net.cpp:150] Setting up rpn_loss_twin
I0412 04:16:34.636795 19041 net.cpp:157] Top shape: (1)
I0412 04:16:34.636807 19041 net.cpp:160]     with loss weight 1
I0412 04:16:34.636822 19041 net.cpp:165] Memory required for data: 10172516780
I0412 04:16:34.636835 19041 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 04:16:34.636854 19041 net.cpp:100] Creating Layer rpn_accuarcy
I0412 04:16:34.636868 19041 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 04:16:34.636889 19041 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 04:16:34.636906 19041 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 04:16:34.636924 19041 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 04:16:34.636989 19041 net.cpp:150] Setting up rpn_accuarcy
I0412 04:16:34.637007 19041 net.cpp:157] Top shape: (1)
I0412 04:16:34.637022 19041 net.cpp:157] Top shape: 2 (2)
I0412 04:16:34.637034 19041 net.cpp:165] Memory required for data: 10172516792
I0412 04:16:34.637048 19041 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 04:16:34.637063 19041 net.cpp:100] Creating Layer rpn_cls_prob
I0412 04:16:34.637079 19041 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 04:16:34.637094 19041 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 04:16:34.637193 19041 net.cpp:150] Setting up rpn_cls_prob
I0412 04:16:34.637212 19041 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 04:16:34.637226 19041 net.cpp:165] Memory required for data: 10172545208
I0412 04:16:34.637238 19041 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 04:16:34.637256 19041 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 04:16:34.637270 19041 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 04:16:34.637285 19041 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 04:16:34.637333 19041 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 04:16:34.637352 19041 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:16:34.637364 19041 net.cpp:165] Memory required for data: 10172573624
I0412 04:16:34.637377 19041 layer_factory.hpp:77] Creating layer proposal
I0412 04:16:34.638052 19041 net.cpp:100] Creating Layer proposal
I0412 04:16:34.638078 19041 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 04:16:34.638094 19041 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 04:16:34.638113 19041 net.cpp:408] proposal -> rpn_rois
I0412 04:16:34.643013 19041 net.cpp:150] Setting up proposal
I0412 04:16:34.643044 19041 net.cpp:157] Top shape: 1 3 (3)
I0412 04:16:34.643059 19041 net.cpp:165] Memory required for data: 10172573636
I0412 04:16:34.643074 19041 layer_factory.hpp:77] Creating layer roi-data
I0412 04:16:34.643234 19041 net.cpp:100] Creating Layer roi-data
I0412 04:16:34.643257 19041 net.cpp:434] roi-data <- rpn_rois
I0412 04:16:34.643275 19041 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 04:16:34.643290 19041 net.cpp:408] roi-data -> rois
I0412 04:16:34.643309 19041 net.cpp:408] roi-data -> labels
I0412 04:16:34.643326 19041 net.cpp:408] roi-data -> twin_targets
I0412 04:16:34.643343 19041 net.cpp:408] roi-data -> twin_inside_weights
I0412 04:16:34.643360 19041 net.cpp:408] roi-data -> twin_outside_weights
I0412 04:16:34.643765 19041 net.cpp:150] Setting up roi-data
I0412 04:16:34.643777 19041 net.cpp:157] Top shape: 1 3 (3)
I0412 04:16:34.643782 19041 net.cpp:157] Top shape: 1 1 (1)
I0412 04:16:34.643787 19041 net.cpp:157] Top shape: 1 402 (402)
I0412 04:16:34.643792 19041 net.cpp:157] Top shape: 1 402 (402)
I0412 04:16:34.643797 19041 net.cpp:157] Top shape: 1 402 (402)
I0412 04:16:34.643801 19041 net.cpp:165] Memory required for data: 10172578476
I0412 04:16:34.643805 19041 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 04:16:34.643815 19041 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 04:16:34.643821 19041 net.cpp:434] labels_roi-data_1_split <- labels
I0412 04:16:34.643827 19041 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 04:16:34.643836 19041 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 04:16:34.643882 19041 net.cpp:150] Setting up labels_roi-data_1_split
I0412 04:16:34.643888 19041 net.cpp:157] Top shape: 1 1 (1)
I0412 04:16:34.643893 19041 net.cpp:157] Top shape: 1 1 (1)
I0412 04:16:34.643896 19041 net.cpp:165] Memory required for data: 10172578484
I0412 04:16:34.643900 19041 layer_factory.hpp:77] Creating layer roi_pool5
I0412 04:16:34.643908 19041 net.cpp:100] Creating Layer roi_pool5
I0412 04:16:34.643913 19041 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 04:16:34.643919 19041 net.cpp:434] roi_pool5 <- rois
I0412 04:16:34.643929 19041 net.cpp:408] roi_pool5 -> pool5
I0412 04:16:34.643936 19041 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 04:16:34.643946 19041 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 04:16:34.643993 19041 net.cpp:150] Setting up roi_pool5
I0412 04:16:34.644001 19041 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 04:16:34.644004 19041 net.cpp:165] Memory required for data: 10172611252
I0412 04:16:34.644008 19041 layer_factory.hpp:77] Creating layer fc6
I0412 04:16:34.644019 19041 net.cpp:100] Creating Layer fc6
I0412 04:16:34.644026 19041 net.cpp:434] fc6 <- pool5
I0412 04:16:34.644032 19041 net.cpp:408] fc6 -> fc6
I0412 04:16:34.981684 19041 net.cpp:150] Setting up fc6
I0412 04:16:34.981781 19041 net.cpp:157] Top shape: 1 4096 (4096)
I0412 04:16:34.981786 19041 net.cpp:165] Memory required for data: 10172627636
I0412 04:16:34.981808 19041 layer_factory.hpp:77] Creating layer relu6
I0412 04:16:34.981827 19041 net.cpp:100] Creating Layer relu6
I0412 04:16:34.981833 19041 net.cpp:434] relu6 <- fc6
I0412 04:16:34.981842 19041 net.cpp:395] relu6 -> fc6 (in-place)
I0412 04:16:34.981853 19041 net.cpp:150] Setting up relu6
I0412 04:16:34.981859 19041 net.cpp:157] Top shape: 1 4096 (4096)
I0412 04:16:34.981863 19041 net.cpp:165] Memory required for data: 10172644020
I0412 04:16:34.981868 19041 layer_factory.hpp:77] Creating layer drop6
I0412 04:16:34.981875 19041 net.cpp:100] Creating Layer drop6
I0412 04:16:34.981879 19041 net.cpp:434] drop6 <- fc6
I0412 04:16:34.981885 19041 net.cpp:395] drop6 -> fc6 (in-place)
I0412 04:16:34.981923 19041 net.cpp:150] Setting up drop6
I0412 04:16:34.981931 19041 net.cpp:157] Top shape: 1 4096 (4096)
I0412 04:16:34.981935 19041 net.cpp:165] Memory required for data: 10172660404
I0412 04:16:34.981940 19041 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 04:16:34.981946 19041 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 04:16:34.981951 19041 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 04:16:34.981959 19041 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 04:16:34.981968 19041 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 04:16:34.982017 19041 net.cpp:150] Setting up fc6_drop6_0_split
I0412 04:16:34.982025 19041 net.cpp:157] Top shape: 1 4096 (4096)
I0412 04:16:34.982029 19041 net.cpp:157] Top shape: 1 4096 (4096)
I0412 04:16:34.982033 19041 net.cpp:165] Memory required for data: 10172693172
I0412 04:16:34.982038 19041 layer_factory.hpp:77] Creating layer cls_score
I0412 04:16:34.982048 19041 net.cpp:100] Creating Layer cls_score
I0412 04:16:34.982053 19041 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 04:16:34.982061 19041 net.cpp:408] cls_score -> cls_score
I0412 04:16:34.989730 19041 net.cpp:150] Setting up cls_score
I0412 04:16:34.989755 19041 net.cpp:157] Top shape: 1 201 (201)
I0412 04:16:34.989759 19041 net.cpp:165] Memory required for data: 10172693976
I0412 04:16:34.989769 19041 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 04:16:34.989778 19041 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 04:16:34.989800 19041 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 04:16:34.989809 19041 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 04:16:34.989826 19041 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 04:16:34.989876 19041 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 04:16:34.989883 19041 net.cpp:157] Top shape: 1 201 (201)
I0412 04:16:34.989888 19041 net.cpp:157] Top shape: 1 201 (201)
I0412 04:16:34.989892 19041 net.cpp:165] Memory required for data: 10172695584
I0412 04:16:34.989897 19041 layer_factory.hpp:77] Creating layer twin_pred
I0412 04:16:34.989907 19041 net.cpp:100] Creating Layer twin_pred
I0412 04:16:34.989912 19041 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 04:16:34.989923 19041 net.cpp:408] twin_pred -> twin_pred
I0412 04:16:35.009249 19041 net.cpp:150] Setting up twin_pred
I0412 04:16:35.009342 19041 net.cpp:157] Top shape: 1 402 (402)
I0412 04:16:35.009366 19041 net.cpp:165] Memory required for data: 10172697192
I0412 04:16:35.009392 19041 layer_factory.hpp:77] Creating layer loss_cls
I0412 04:16:35.009418 19041 net.cpp:100] Creating Layer loss_cls
I0412 04:16:35.009424 19041 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 04:16:35.009433 19041 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 04:16:35.009443 19041 net.cpp:408] loss_cls -> loss_cls
I0412 04:16:35.009457 19041 layer_factory.hpp:77] Creating layer loss_cls
I0412 04:16:35.009649 19041 net.cpp:150] Setting up loss_cls
I0412 04:16:35.009680 19041 net.cpp:157] Top shape: (1)
I0412 04:16:35.009697 19041 net.cpp:160]     with loss weight 1
I0412 04:16:35.009727 19041 net.cpp:165] Memory required for data: 10172697196
I0412 04:16:35.009744 19041 layer_factory.hpp:77] Creating layer loss_twin
I0412 04:16:35.009768 19041 net.cpp:100] Creating Layer loss_twin
I0412 04:16:35.009788 19041 net.cpp:434] loss_twin <- twin_pred
I0412 04:16:35.009807 19041 net.cpp:434] loss_twin <- twin_targets
I0412 04:16:35.009824 19041 net.cpp:434] loss_twin <- twin_inside_weights
I0412 04:16:35.009841 19041 net.cpp:434] loss_twin <- twin_outside_weights
I0412 04:16:35.009860 19041 net.cpp:408] loss_twin -> loss_twin
I0412 04:16:35.009973 19041 net.cpp:150] Setting up loss_twin
I0412 04:16:35.009982 19041 net.cpp:157] Top shape: (1)
I0412 04:16:35.009986 19041 net.cpp:160]     with loss weight 1
I0412 04:16:35.009992 19041 net.cpp:165] Memory required for data: 10172697200
I0412 04:16:35.009997 19041 layer_factory.hpp:77] Creating layer accuarcy
I0412 04:16:35.010005 19041 net.cpp:100] Creating Layer accuarcy
I0412 04:16:35.010010 19041 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 04:16:35.010016 19041 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 04:16:35.010025 19041 net.cpp:408] accuarcy -> accuarcy
I0412 04:16:35.010035 19041 net.cpp:150] Setting up accuarcy
I0412 04:16:35.010058 19041 net.cpp:157] Top shape: (1)
I0412 04:16:35.010079 19041 net.cpp:165] Memory required for data: 10172697204
I0412 04:16:35.010102 19041 net.cpp:228] accuarcy does not need backward computation.
I0412 04:16:35.010124 19041 net.cpp:226] loss_twin needs backward computation.
I0412 04:16:35.010146 19041 net.cpp:226] loss_cls needs backward computation.
I0412 04:16:35.010169 19041 net.cpp:226] twin_pred needs backward computation.
I0412 04:16:35.010187 19041 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 04:16:35.010208 19041 net.cpp:226] cls_score needs backward computation.
I0412 04:16:35.010229 19041 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 04:16:35.010248 19041 net.cpp:226] drop6 needs backward computation.
I0412 04:16:35.010267 19041 net.cpp:226] relu6 needs backward computation.
I0412 04:16:35.010285 19041 net.cpp:226] fc6 needs backward computation.
I0412 04:16:35.010304 19041 net.cpp:226] roi_pool5 needs backward computation.
I0412 04:16:35.010323 19041 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 04:16:35.010340 19041 net.cpp:226] roi-data needs backward computation.
I0412 04:16:35.010361 19041 net.cpp:226] proposal needs backward computation.
I0412 04:16:35.010370 19041 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 04:16:35.010373 19041 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 04:16:35.010378 19041 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 04:16:35.010383 19041 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 04:16:35.010393 19041 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 04:16:35.010401 19041 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 04:16:35.010407 19041 net.cpp:226] rpn-data needs backward computation.
I0412 04:16:35.010416 19041 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 04:16:35.010422 19041 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 04:16:35.010430 19041 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 04:16:35.010435 19041 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 04:16:35.010440 19041 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 04:16:35.010445 19041 net.cpp:226] rpn_cls_score needs backward computation.
I0412 04:16:35.010449 19041 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 04:16:35.010454 19041 net.cpp:226] rpn/output_pool needs backward computation.
I0412 04:16:35.010459 19041 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 04:16:35.010478 19041 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 04:16:35.010490 19041 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 04:16:35.010505 19041 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 04:16:35.010517 19041 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 04:16:35.010524 19041 net.cpp:226] relu5b needs backward computation.
I0412 04:16:35.010527 19041 net.cpp:226] conv5b needs backward computation.
I0412 04:16:35.010532 19041 net.cpp:226] relu5a needs backward computation.
I0412 04:16:35.010540 19041 net.cpp:226] conv5a needs backward computation.
I0412 04:16:35.010545 19041 net.cpp:226] pool4 needs backward computation.
I0412 04:16:35.010551 19041 net.cpp:226] relu4b needs backward computation.
I0412 04:16:35.010557 19041 net.cpp:226] conv4b needs backward computation.
I0412 04:16:35.010563 19041 net.cpp:226] relu4a needs backward computation.
I0412 04:16:35.010568 19041 net.cpp:226] conv4a needs backward computation.
I0412 04:16:35.010573 19041 net.cpp:226] pool3 needs backward computation.
I0412 04:16:35.010578 19041 net.cpp:226] relu3b needs backward computation.
I0412 04:16:35.010593 19041 net.cpp:226] conv3b needs backward computation.
I0412 04:16:35.010610 19041 net.cpp:226] relu3a needs backward computation.
I0412 04:16:35.010627 19041 net.cpp:226] conv3a needs backward computation.
I0412 04:16:35.010644 19041 net.cpp:228] pool2 does not need backward computation.
I0412 04:16:35.010669 19041 net.cpp:228] relu2a does not need backward computation.
I0412 04:16:35.010690 19041 net.cpp:228] conv2a does not need backward computation.
I0412 04:16:35.010710 19041 net.cpp:228] pool1 does not need backward computation.
I0412 04:16:35.010730 19041 net.cpp:228] relu1a does not need backward computation.
I0412 04:16:35.010746 19041 net.cpp:228] conv1a does not need backward computation.
I0412 04:16:35.010766 19041 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 04:16:35.010787 19041 net.cpp:228] data_data_0_split does not need backward computation.
I0412 04:16:35.010812 19041 net.cpp:228] data does not need backward computation.
I0412 04:16:35.010829 19041 net.cpp:270] This network produces output accuarcy
I0412 04:16:35.010846 19041 net.cpp:270] This network produces output loss_cls
I0412 04:16:35.010862 19041 net.cpp:270] This network produces output loss_twin
I0412 04:16:35.010880 19041 net.cpp:270] This network produces output rpn_accuarcy
I0412 04:16:35.010887 19041 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 04:16:35.010897 19041 net.cpp:270] This network produces output rpn_cls_loss
I0412 04:16:35.010903 19041 net.cpp:270] This network produces output rpn_loss_twin
I0412 04:16:35.010948 19041 net.cpp:283] Network initialization done.
I0412 04:16:35.011075 19041 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 04:16:35.207764 19041 net.cpp:761] Ignoring source layer pool5
I0412 04:16:35.235527 19041 net.cpp:761] Ignoring source layer fc7
I0412 04:16:35.235563 19041 net.cpp:761] Ignoring source layer relu7
I0412 04:16:35.235569 19041 net.cpp:761] Ignoring source layer drop7
I0412 04:16:35.235572 19041 net.cpp:761] Ignoring source layer fc8-200
I0412 04:16:35.235576 19041 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
99
(array([0]), array([97]))
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 96, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 129, in forward
    top[top_ind].reshape(*(blob.shape))
AttributeError: 'tuple' object has no attribute 'shape'
Terminating BlobFetcher
