Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 01:48:51.995575 17274 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 01:48:51.995765 17274 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 01:48:51.996809 17274 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 01:48:52.001330 17274 layer_factory.hpp:77] Creating layer data
I0412 01:48:52.017540 17274 net.cpp:100] Creating Layer data
I0412 01:48:52.017573 17274 net.cpp:408] data -> data
I0412 01:48:52.017675 17274 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 01:48:52.030849 17274 net.cpp:150] Setting up data
I0412 01:48:52.030915 17274 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:48:52.030953 17274 net.cpp:157] Top shape: 1 3 (3)
I0412 01:48:52.030995 17274 net.cpp:165] Memory required for data: 115605516
I0412 01:48:52.031042 17274 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 01:48:52.031090 17274 net.cpp:100] Creating Layer data_data_0_split
I0412 01:48:52.031132 17274 net.cpp:434] data_data_0_split <- data
I0412 01:48:52.031213 17274 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 01:48:52.031280 17274 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 01:48:52.031405 17274 net.cpp:150] Setting up data_data_0_split
I0412 01:48:52.031457 17274 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:48:52.031497 17274 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 01:48:52.031530 17274 net.cpp:165] Memory required for data: 346816524
I0412 01:48:52.031565 17274 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 01:48:52.031607 17274 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 01:48:52.031648 17274 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 01:48:52.031687 17274 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 01:48:52.031736 17274 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 01:48:52.031836 17274 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 01:48:52.031886 17274 net.cpp:157] Top shape: 1 3 (3)
I0412 01:48:52.031924 17274 net.cpp:157] Top shape: 1 3 (3)
I0412 01:48:52.031962 17274 net.cpp:165] Memory required for data: 346816548
I0412 01:48:52.031994 17274 layer_factory.hpp:77] Creating layer conv1a
I0412 01:48:52.032044 17274 net.cpp:100] Creating Layer conv1a
I0412 01:48:52.032083 17274 net.cpp:434] conv1a <- data_data_0_split_0
I0412 01:48:52.032129 17274 net.cpp:408] conv1a -> conv1a
I0412 01:48:52.062556 17274 net.cpp:150] Setting up conv1a
I0412 01:48:52.062598 17274 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 01:48:52.062603 17274 net.cpp:165] Memory required for data: 2813067300
I0412 01:48:52.062633 17274 layer_factory.hpp:77] Creating layer relu1a
I0412 01:48:52.062651 17274 net.cpp:100] Creating Layer relu1a
I0412 01:48:52.062656 17274 net.cpp:434] relu1a <- conv1a
I0412 01:48:52.062664 17274 net.cpp:395] relu1a -> conv1a (in-place)
I0412 01:48:52.062675 17274 net.cpp:150] Setting up relu1a
I0412 01:48:52.062680 17274 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 01:48:52.062685 17274 net.cpp:165] Memory required for data: 5279318052
I0412 01:48:52.062688 17274 layer_factory.hpp:77] Creating layer pool1
I0412 01:48:52.062696 17274 net.cpp:100] Creating Layer pool1
I0412 01:48:52.062701 17274 net.cpp:434] pool1 <- conv1a
I0412 01:48:52.062717 17274 net.cpp:408] pool1 -> pool1
I0412 01:48:52.062835 17274 net.cpp:150] Setting up pool1
I0412 01:48:52.062845 17274 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 01:48:52.062853 17274 net.cpp:165] Memory required for data: 5895880740
I0412 01:48:52.062860 17274 layer_factory.hpp:77] Creating layer conv2a
I0412 01:48:52.062873 17274 net.cpp:100] Creating Layer conv2a
I0412 01:48:52.062878 17274 net.cpp:434] conv2a <- pool1
I0412 01:48:52.062894 17274 net.cpp:408] conv2a -> conv2a
I0412 01:48:52.082213 17274 net.cpp:150] Setting up conv2a
I0412 01:48:52.082306 17274 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 01:48:52.082330 17274 net.cpp:165] Memory required for data: 7129006116
I0412 01:48:52.082376 17274 layer_factory.hpp:77] Creating layer relu2a
I0412 01:48:52.082410 17274 net.cpp:100] Creating Layer relu2a
I0412 01:48:52.082432 17274 net.cpp:434] relu2a <- conv2a
I0412 01:48:52.082458 17274 net.cpp:395] relu2a -> conv2a (in-place)
I0412 01:48:52.082489 17274 net.cpp:150] Setting up relu2a
I0412 01:48:52.082510 17274 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 01:48:52.082530 17274 net.cpp:165] Memory required for data: 8362131492
I0412 01:48:52.082559 17274 layer_factory.hpp:77] Creating layer pool2
I0412 01:48:52.082590 17274 net.cpp:100] Creating Layer pool2
I0412 01:48:52.082612 17274 net.cpp:434] pool2 <- conv2a
I0412 01:48:52.082633 17274 net.cpp:408] pool2 -> pool2
I0412 01:48:52.082792 17274 net.cpp:150] Setting up pool2
I0412 01:48:52.082818 17274 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 01:48:52.082836 17274 net.cpp:165] Memory required for data: 8516272164
I0412 01:48:52.082854 17274 layer_factory.hpp:77] Creating layer conv3a
I0412 01:48:52.082883 17274 net.cpp:100] Creating Layer conv3a
I0412 01:48:52.082904 17274 net.cpp:434] conv3a <- pool2
I0412 01:48:52.082927 17274 net.cpp:408] conv3a -> conv3a
I0412 01:48:52.107199 17274 net.cpp:150] Setting up conv3a
I0412 01:48:52.107237 17274 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:48:52.107242 17274 net.cpp:165] Memory required for data: 8824553508
I0412 01:48:52.107262 17274 layer_factory.hpp:77] Creating layer relu3a
I0412 01:48:52.107280 17274 net.cpp:100] Creating Layer relu3a
I0412 01:48:52.107285 17274 net.cpp:434] relu3a <- conv3a
I0412 01:48:52.107295 17274 net.cpp:395] relu3a -> conv3a (in-place)
I0412 01:48:52.107308 17274 net.cpp:150] Setting up relu3a
I0412 01:48:52.107316 17274 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:48:52.107318 17274 net.cpp:165] Memory required for data: 9132834852
I0412 01:48:52.107323 17274 layer_factory.hpp:77] Creating layer conv3b
I0412 01:48:52.107338 17274 net.cpp:100] Creating Layer conv3b
I0412 01:48:52.107343 17274 net.cpp:434] conv3b <- conv3a
I0412 01:48:52.107352 17274 net.cpp:408] conv3b -> conv3b
I0412 01:48:52.131340 17274 net.cpp:150] Setting up conv3b
I0412 01:48:52.131415 17274 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:48:52.131427 17274 net.cpp:165] Memory required for data: 9441116196
I0412 01:48:52.131438 17274 layer_factory.hpp:77] Creating layer relu3b
I0412 01:48:52.131453 17274 net.cpp:100] Creating Layer relu3b
I0412 01:48:52.131469 17274 net.cpp:434] relu3b <- conv3b
I0412 01:48:52.131489 17274 net.cpp:395] relu3b -> conv3b (in-place)
I0412 01:48:52.131517 17274 net.cpp:150] Setting up relu3b
I0412 01:48:52.131539 17274 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 01:48:52.131554 17274 net.cpp:165] Memory required for data: 9749397540
I0412 01:48:52.131570 17274 layer_factory.hpp:77] Creating layer pool3
I0412 01:48:52.131589 17274 net.cpp:100] Creating Layer pool3
I0412 01:48:52.131605 17274 net.cpp:434] pool3 <- conv3b
I0412 01:48:52.131628 17274 net.cpp:408] pool3 -> pool3
I0412 01:48:52.131712 17274 net.cpp:150] Setting up pool3
I0412 01:48:52.131736 17274 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 01:48:52.131747 17274 net.cpp:165] Memory required for data: 9787932708
I0412 01:48:52.131752 17274 layer_factory.hpp:77] Creating layer conv4a
I0412 01:48:52.131767 17274 net.cpp:100] Creating Layer conv4a
I0412 01:48:52.131777 17274 net.cpp:434] conv4a <- pool3
I0412 01:48:52.131786 17274 net.cpp:408] conv4a -> conv4a
I0412 01:48:52.182332 17274 net.cpp:150] Setting up conv4a
I0412 01:48:52.182503 17274 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:48:52.182554 17274 net.cpp:165] Memory required for data: 9865003044
I0412 01:48:52.182657 17274 layer_factory.hpp:77] Creating layer relu4a
I0412 01:48:52.182710 17274 net.cpp:100] Creating Layer relu4a
I0412 01:48:52.182750 17274 net.cpp:434] relu4a <- conv4a
I0412 01:48:52.182797 17274 net.cpp:395] relu4a -> conv4a (in-place)
I0412 01:48:52.182865 17274 net.cpp:150] Setting up relu4a
I0412 01:48:52.182911 17274 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:48:52.182948 17274 net.cpp:165] Memory required for data: 9942073380
I0412 01:48:52.182984 17274 layer_factory.hpp:77] Creating layer conv4b
I0412 01:48:52.183035 17274 net.cpp:100] Creating Layer conv4b
I0412 01:48:52.183074 17274 net.cpp:434] conv4b <- conv4a
I0412 01:48:52.183120 17274 net.cpp:408] conv4b -> conv4b
I0412 01:48:52.276185 17274 net.cpp:150] Setting up conv4b
I0412 01:48:52.276217 17274 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:48:52.276222 17274 net.cpp:165] Memory required for data: 10019143716
I0412 01:48:52.276311 17274 layer_factory.hpp:77] Creating layer relu4b
I0412 01:48:52.276356 17274 net.cpp:100] Creating Layer relu4b
I0412 01:48:52.276365 17274 net.cpp:434] relu4b <- conv4b
I0412 01:48:52.276378 17274 net.cpp:395] relu4b -> conv4b (in-place)
I0412 01:48:52.276391 17274 net.cpp:150] Setting up relu4b
I0412 01:48:52.276398 17274 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 01:48:52.276403 17274 net.cpp:165] Memory required for data: 10096214052
I0412 01:48:52.276408 17274 layer_factory.hpp:77] Creating layer pool4
I0412 01:48:52.276417 17274 net.cpp:100] Creating Layer pool4
I0412 01:48:52.276428 17274 net.cpp:434] pool4 <- conv4b
I0412 01:48:52.276449 17274 net.cpp:408] pool4 -> pool4
I0412 01:48:52.276512 17274 net.cpp:150] Setting up pool4
I0412 01:48:52.276520 17274 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:48:52.276525 17274 net.cpp:165] Memory required for data: 10105847844
I0412 01:48:52.276530 17274 layer_factory.hpp:77] Creating layer conv5a
I0412 01:48:52.276543 17274 net.cpp:100] Creating Layer conv5a
I0412 01:48:52.276548 17274 net.cpp:434] conv5a <- pool4
I0412 01:48:52.276557 17274 net.cpp:408] conv5a -> conv5a
I0412 01:48:52.374023 17274 net.cpp:150] Setting up conv5a
I0412 01:48:52.374063 17274 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:48:52.374069 17274 net.cpp:165] Memory required for data: 10115481636
I0412 01:48:52.374083 17274 layer_factory.hpp:77] Creating layer relu5a
I0412 01:48:52.374097 17274 net.cpp:100] Creating Layer relu5a
I0412 01:48:52.374106 17274 net.cpp:434] relu5a <- conv5a
I0412 01:48:52.374121 17274 net.cpp:395] relu5a -> conv5a (in-place)
I0412 01:48:52.374136 17274 net.cpp:150] Setting up relu5a
I0412 01:48:52.374145 17274 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:48:52.374152 17274 net.cpp:165] Memory required for data: 10125115428
I0412 01:48:52.374156 17274 layer_factory.hpp:77] Creating layer conv5b
I0412 01:48:52.374173 17274 net.cpp:100] Creating Layer conv5b
I0412 01:48:52.374181 17274 net.cpp:434] conv5b <- conv5a
I0412 01:48:52.374189 17274 net.cpp:408] conv5b -> conv5b
I0412 01:48:52.457954 17274 net.cpp:150] Setting up conv5b
I0412 01:48:52.457981 17274 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:48:52.457984 17274 net.cpp:165] Memory required for data: 10134749220
I0412 01:48:52.457993 17274 layer_factory.hpp:77] Creating layer relu5b
I0412 01:48:52.458003 17274 net.cpp:100] Creating Layer relu5b
I0412 01:48:52.458007 17274 net.cpp:434] relu5b <- conv5b
I0412 01:48:52.458012 17274 net.cpp:395] relu5b -> conv5b (in-place)
I0412 01:48:52.458020 17274 net.cpp:150] Setting up relu5b
I0412 01:48:52.458024 17274 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:48:52.458026 17274 net.cpp:165] Memory required for data: 10144383012
I0412 01:48:52.458029 17274 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 01:48:52.458035 17274 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 01:48:52.458037 17274 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 01:48:52.458041 17274 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 01:48:52.458047 17274 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 01:48:52.458089 17274 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 01:48:52.458094 17274 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:48:52.458097 17274 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 01:48:52.458101 17274 net.cpp:165] Memory required for data: 10163650596
I0412 01:48:52.458102 17274 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 01:48:52.458112 17274 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 01:48:52.458115 17274 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 01:48:52.458122 17274 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 01:48:52.544188 17274 net.cpp:150] Setting up rpn_conv/3x3
I0412 01:48:52.544229 17274 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 01:48:52.544234 17274 net.cpp:165] Memory required for data: 10166796324
I0412 01:48:52.544260 17274 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 01:48:52.544275 17274 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 01:48:52.544281 17274 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 01:48:52.544288 17274 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 01:48:52.544301 17274 net.cpp:150] Setting up rpn_relu/3x3
I0412 01:48:52.544304 17274 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 01:48:52.544306 17274 net.cpp:165] Memory required for data: 10169942052
I0412 01:48:52.544311 17274 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 01:48:52.544376 17274 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 01:48:52.544383 17274 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 01:48:52.544391 17274 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 01:48:52.631304 17274 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 01:48:52.631340 17274 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 01:48:52.631345 17274 net.cpp:165] Memory required for data: 10170728484
I0412 01:48:52.631356 17274 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 01:48:52.631367 17274 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 01:48:52.631376 17274 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 01:48:52.631382 17274 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 01:48:52.631397 17274 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 01:48:52.631405 17274 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 01:48:52.631410 17274 net.cpp:165] Memory required for data: 10171514916
I0412 01:48:52.631415 17274 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 01:48:52.631428 17274 net.cpp:100] Creating Layer rpn/output_pool
I0412 01:48:52.631433 17274 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 01:48:52.631440 17274 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 01:48:52.631497 17274 net.cpp:150] Setting up rpn/output_pool
I0412 01:48:52.631506 17274 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:48:52.631511 17274 net.cpp:165] Memory required for data: 10171711524
I0412 01:48:52.631518 17274 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 01:48:52.631528 17274 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 01:48:52.631536 17274 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 01:48:52.631543 17274 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 01:48:52.631554 17274 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 01:48:52.631600 17274 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 01:48:52.631608 17274 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:48:52.631613 17274 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 01:48:52.631620 17274 net.cpp:165] Memory required for data: 10172104740
I0412 01:48:52.631628 17274 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 01:48:52.631640 17274 net.cpp:100] Creating Layer rpn_cls_score
I0412 01:48:52.631644 17274 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 01:48:52.631651 17274 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 01:48:52.632431 17274 net.cpp:150] Setting up rpn_cls_score
I0412 01:48:52.632462 17274 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:48:52.632477 17274 net.cpp:165] Memory required for data: 10172133156
I0412 01:48:52.632495 17274 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 01:48:52.632513 17274 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 01:48:52.632529 17274 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 01:48:52.632545 17274 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 01:48:52.632562 17274 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 01:48:52.632642 17274 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 01:48:52.632661 17274 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:48:52.632675 17274 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:48:52.632688 17274 net.cpp:165] Memory required for data: 10172189988
I0412 01:48:52.632699 17274 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 01:48:52.632725 17274 net.cpp:100] Creating Layer rpn_twin_pred
I0412 01:48:52.632740 17274 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 01:48:52.632756 17274 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 01:48:52.633321 17274 net.cpp:150] Setting up rpn_twin_pred
I0412 01:48:52.633332 17274 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:48:52.633335 17274 net.cpp:165] Memory required for data: 10172218404
I0412 01:48:52.633342 17274 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:48:52.633350 17274 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:48:52.633363 17274 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 01:48:52.633370 17274 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 01:48:52.633384 17274 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 01:48:52.633435 17274 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 01:48:52.633442 17274 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:48:52.633447 17274 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:48:52.633451 17274 net.cpp:165] Memory required for data: 10172275236
I0412 01:48:52.633455 17274 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 01:48:52.633464 17274 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 01:48:52.633471 17274 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 01:48:52.633479 17274 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 01:48:52.633512 17274 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 01:48:52.633518 17274 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:48:52.633522 17274 net.cpp:165] Memory required for data: 10172303652
I0412 01:48:52.633527 17274 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:48:52.633535 17274 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:48:52.633540 17274 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 01:48:52.633548 17274 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 01:48:52.633563 17274 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 01:48:52.633570 17274 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 01:48:52.633626 17274 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 01:48:52.633635 17274 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:48:52.633641 17274 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:48:52.633646 17274 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:48:52.633649 17274 net.cpp:165] Memory required for data: 10172388900
I0412 01:48:52.633653 17274 layer_factory.hpp:77] Creating layer rpn-data
I0412 01:48:52.634033 17274 net.cpp:100] Creating Layer rpn-data
I0412 01:48:52.634045 17274 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 01:48:52.634052 17274 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 01:48:52.634059 17274 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 01:48:52.634070 17274 net.cpp:408] rpn-data -> rpn_labels
I0412 01:48:52.634081 17274 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 01:48:52.634091 17274 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 01:48:52.634101 17274 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 01:48:52.636387 17274 net.cpp:150] Setting up rpn-data
I0412 01:48:52.636401 17274 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:48:52.636407 17274 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:48:52.636412 17274 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:48:52.636418 17274 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:48:52.636425 17274 net.cpp:165] Memory required for data: 10172488356
I0412 01:48:52.636430 17274 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 01:48:52.636436 17274 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 01:48:52.636442 17274 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 01:48:52.636449 17274 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 01:48:52.636458 17274 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 01:48:52.636499 17274 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 01:48:52.636507 17274 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:48:52.636512 17274 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 01:48:52.636517 17274 net.cpp:165] Memory required for data: 10172516772
I0412 01:48:52.636520 17274 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 01:48:52.636529 17274 net.cpp:100] Creating Layer rpn_loss_cls
I0412 01:48:52.636534 17274 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 01:48:52.636540 17274 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 01:48:52.636548 17274 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 01:48:52.636557 17274 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 01:48:52.636665 17274 net.cpp:150] Setting up rpn_loss_cls
I0412 01:48:52.636673 17274 net.cpp:157] Top shape: (1)
I0412 01:48:52.636677 17274 net.cpp:160]     with loss weight 1
I0412 01:48:52.636690 17274 net.cpp:165] Memory required for data: 10172516776
I0412 01:48:52.636695 17274 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 01:48:52.636703 17274 net.cpp:100] Creating Layer rpn_loss_twin
I0412 01:48:52.636709 17274 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 01:48:52.636715 17274 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 01:48:52.636721 17274 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 01:48:52.636726 17274 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 01:48:52.636737 17274 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 01:48:52.636828 17274 net.cpp:150] Setting up rpn_loss_twin
I0412 01:48:52.636835 17274 net.cpp:157] Top shape: (1)
I0412 01:48:52.636839 17274 net.cpp:160]     with loss weight 1
I0412 01:48:52.636845 17274 net.cpp:165] Memory required for data: 10172516780
I0412 01:48:52.636849 17274 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 01:48:52.636858 17274 net.cpp:100] Creating Layer rpn_accuarcy
I0412 01:48:52.636863 17274 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 01:48:52.636868 17274 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 01:48:52.636878 17274 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 01:48:52.636886 17274 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 01:48:52.636931 17274 net.cpp:150] Setting up rpn_accuarcy
I0412 01:48:52.636937 17274 net.cpp:157] Top shape: (1)
I0412 01:48:52.636943 17274 net.cpp:157] Top shape: 2 (2)
I0412 01:48:52.636946 17274 net.cpp:165] Memory required for data: 10172516792
I0412 01:48:52.636950 17274 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 01:48:52.636960 17274 net.cpp:100] Creating Layer rpn_cls_prob
I0412 01:48:52.636966 17274 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 01:48:52.636972 17274 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 01:48:52.637040 17274 net.cpp:150] Setting up rpn_cls_prob
I0412 01:48:52.637048 17274 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 01:48:52.637051 17274 net.cpp:165] Memory required for data: 10172545208
I0412 01:48:52.637055 17274 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 01:48:52.637064 17274 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 01:48:52.637069 17274 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 01:48:52.637076 17274 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 01:48:52.637112 17274 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 01:48:52.637120 17274 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 01:48:52.637123 17274 net.cpp:165] Memory required for data: 10172573624
I0412 01:48:52.637128 17274 layer_factory.hpp:77] Creating layer proposal
I0412 01:48:52.637643 17274 net.cpp:100] Creating Layer proposal
I0412 01:48:52.637655 17274 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 01:48:52.637662 17274 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 01:48:52.637671 17274 net.cpp:408] proposal -> rpn_rois
I0412 01:48:52.641299 17274 net.cpp:150] Setting up proposal
I0412 01:48:52.641330 17274 net.cpp:157] Top shape: 1 3 (3)
I0412 01:48:52.641337 17274 net.cpp:165] Memory required for data: 10172573636
I0412 01:48:52.641343 17274 layer_factory.hpp:77] Creating layer roi-data
I0412 01:48:52.641491 17274 net.cpp:100] Creating Layer roi-data
I0412 01:48:52.641500 17274 net.cpp:434] roi-data <- rpn_rois
I0412 01:48:52.641507 17274 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 01:48:52.641515 17274 net.cpp:408] roi-data -> rois
I0412 01:48:52.641527 17274 net.cpp:408] roi-data -> labels
I0412 01:48:52.641536 17274 net.cpp:408] roi-data -> twin_targets
I0412 01:48:52.641546 17274 net.cpp:408] roi-data -> twin_inside_weights
I0412 01:48:52.641554 17274 net.cpp:408] roi-data -> twin_outside_weights
I0412 01:48:52.641880 17274 net.cpp:150] Setting up roi-data
I0412 01:48:52.641893 17274 net.cpp:157] Top shape: 1 3 (3)
I0412 01:48:52.641898 17274 net.cpp:157] Top shape: 1 1 (1)
I0412 01:48:52.641904 17274 net.cpp:157] Top shape: 1 402 (402)
I0412 01:48:52.641908 17274 net.cpp:157] Top shape: 1 402 (402)
I0412 01:48:52.641913 17274 net.cpp:157] Top shape: 1 402 (402)
I0412 01:48:52.641919 17274 net.cpp:165] Memory required for data: 10172578476
I0412 01:48:52.641924 17274 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 01:48:52.641932 17274 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 01:48:52.641937 17274 net.cpp:434] labels_roi-data_1_split <- labels
I0412 01:48:52.641944 17274 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 01:48:52.641954 17274 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 01:48:52.642001 17274 net.cpp:150] Setting up labels_roi-data_1_split
I0412 01:48:52.642011 17274 net.cpp:157] Top shape: 1 1 (1)
I0412 01:48:52.642017 17274 net.cpp:157] Top shape: 1 1 (1)
I0412 01:48:52.642022 17274 net.cpp:165] Memory required for data: 10172578484
I0412 01:48:52.642026 17274 layer_factory.hpp:77] Creating layer roi_pool5
I0412 01:48:52.642033 17274 net.cpp:100] Creating Layer roi_pool5
I0412 01:48:52.642040 17274 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 01:48:52.642046 17274 net.cpp:434] roi_pool5 <- rois
I0412 01:48:52.642052 17274 net.cpp:408] roi_pool5 -> pool5
I0412 01:48:52.642062 17274 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 01:48:52.642072 17274 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 01:48:52.642134 17274 net.cpp:150] Setting up roi_pool5
I0412 01:48:52.642145 17274 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 01:48:52.642149 17274 net.cpp:165] Memory required for data: 10172611252
I0412 01:48:52.642154 17274 layer_factory.hpp:77] Creating layer fc6
I0412 01:48:52.642164 17274 net.cpp:100] Creating Layer fc6
I0412 01:48:52.642171 17274 net.cpp:434] fc6 <- pool5
I0412 01:48:52.642179 17274 net.cpp:408] fc6 -> fc6
I0412 01:48:53.064360 17274 net.cpp:150] Setting up fc6
I0412 01:48:53.064436 17274 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:48:53.064452 17274 net.cpp:165] Memory required for data: 10172627636
I0412 01:48:53.064479 17274 layer_factory.hpp:77] Creating layer relu6
I0412 01:48:53.064512 17274 net.cpp:100] Creating Layer relu6
I0412 01:48:53.064538 17274 net.cpp:434] relu6 <- fc6
I0412 01:48:53.064594 17274 net.cpp:395] relu6 -> fc6 (in-place)
I0412 01:48:53.064620 17274 net.cpp:150] Setting up relu6
I0412 01:48:53.064651 17274 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:48:53.064680 17274 net.cpp:165] Memory required for data: 10172644020
I0412 01:48:53.064699 17274 layer_factory.hpp:77] Creating layer drop6
I0412 01:48:53.064716 17274 net.cpp:100] Creating Layer drop6
I0412 01:48:53.064738 17274 net.cpp:434] drop6 <- fc6
I0412 01:48:53.064754 17274 net.cpp:395] drop6 -> fc6 (in-place)
I0412 01:48:53.064808 17274 net.cpp:150] Setting up drop6
I0412 01:48:53.064829 17274 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:48:53.064842 17274 net.cpp:165] Memory required for data: 10172660404
I0412 01:48:53.064857 17274 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 01:48:53.064879 17274 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 01:48:53.064895 17274 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 01:48:53.064910 17274 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 01:48:53.064935 17274 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 01:48:53.065008 17274 net.cpp:150] Setting up fc6_drop6_0_split
I0412 01:48:53.065037 17274 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:48:53.065053 17274 net.cpp:157] Top shape: 1 4096 (4096)
I0412 01:48:53.065071 17274 net.cpp:165] Memory required for data: 10172693172
I0412 01:48:53.065086 17274 layer_factory.hpp:77] Creating layer cls_score
I0412 01:48:53.065105 17274 net.cpp:100] Creating Layer cls_score
I0412 01:48:53.065120 17274 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 01:48:53.065140 17274 net.cpp:408] cls_score -> cls_score
I0412 01:48:53.076743 17274 net.cpp:150] Setting up cls_score
I0412 01:48:53.076804 17274 net.cpp:157] Top shape: 1 201 (201)
I0412 01:48:53.076818 17274 net.cpp:165] Memory required for data: 10172693976
I0412 01:48:53.076841 17274 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 01:48:53.076864 17274 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 01:48:53.076894 17274 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 01:48:53.076911 17274 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 01:48:53.076933 17274 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 01:48:53.077008 17274 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 01:48:53.077030 17274 net.cpp:157] Top shape: 1 201 (201)
I0412 01:48:53.077044 17274 net.cpp:157] Top shape: 1 201 (201)
I0412 01:48:53.077056 17274 net.cpp:165] Memory required for data: 10172695584
I0412 01:48:53.077075 17274 layer_factory.hpp:77] Creating layer twin_pred
I0412 01:48:53.077095 17274 net.cpp:100] Creating Layer twin_pred
I0412 01:48:53.077116 17274 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 01:48:53.077134 17274 net.cpp:408] twin_pred -> twin_pred
I0412 01:48:53.098474 17274 net.cpp:150] Setting up twin_pred
I0412 01:48:53.098542 17274 net.cpp:157] Top shape: 1 402 (402)
I0412 01:48:53.098557 17274 net.cpp:165] Memory required for data: 10172697192
I0412 01:48:53.098579 17274 layer_factory.hpp:77] Creating layer loss_cls
I0412 01:48:53.098600 17274 net.cpp:100] Creating Layer loss_cls
I0412 01:48:53.098615 17274 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 01:48:53.098637 17274 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 01:48:53.098654 17274 net.cpp:408] loss_cls -> loss_cls
I0412 01:48:53.098687 17274 layer_factory.hpp:77] Creating layer loss_cls
I0412 01:48:53.098865 17274 net.cpp:150] Setting up loss_cls
I0412 01:48:53.098894 17274 net.cpp:157] Top shape: (1)
I0412 01:48:53.098908 17274 net.cpp:160]     with loss weight 1
I0412 01:48:53.098935 17274 net.cpp:165] Memory required for data: 10172697196
I0412 01:48:53.098954 17274 layer_factory.hpp:77] Creating layer loss_twin
I0412 01:48:53.098975 17274 net.cpp:100] Creating Layer loss_twin
I0412 01:48:53.099014 17274 net.cpp:434] loss_twin <- twin_pred
I0412 01:48:53.099023 17274 net.cpp:434] loss_twin <- twin_targets
I0412 01:48:53.099030 17274 net.cpp:434] loss_twin <- twin_inside_weights
I0412 01:48:53.099035 17274 net.cpp:434] loss_twin <- twin_outside_weights
I0412 01:48:53.099048 17274 net.cpp:408] loss_twin -> loss_twin
I0412 01:48:53.099202 17274 net.cpp:150] Setting up loss_twin
I0412 01:48:53.099225 17274 net.cpp:157] Top shape: (1)
I0412 01:48:53.099241 17274 net.cpp:160]     with loss weight 1
I0412 01:48:53.099256 17274 net.cpp:165] Memory required for data: 10172697200
I0412 01:48:53.099270 17274 layer_factory.hpp:77] Creating layer accuarcy
I0412 01:48:53.099297 17274 net.cpp:100] Creating Layer accuarcy
I0412 01:48:53.099313 17274 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 01:48:53.099328 17274 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 01:48:53.099354 17274 net.cpp:408] accuarcy -> accuarcy
I0412 01:48:53.099375 17274 net.cpp:150] Setting up accuarcy
I0412 01:48:53.099392 17274 net.cpp:157] Top shape: (1)
I0412 01:48:53.099406 17274 net.cpp:165] Memory required for data: 10172697204
I0412 01:48:53.099419 17274 net.cpp:228] accuarcy does not need backward computation.
I0412 01:48:53.099438 17274 net.cpp:226] loss_twin needs backward computation.
I0412 01:48:53.099454 17274 net.cpp:226] loss_cls needs backward computation.
I0412 01:48:53.099469 17274 net.cpp:226] twin_pred needs backward computation.
I0412 01:48:53.099484 17274 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 01:48:53.099498 17274 net.cpp:226] cls_score needs backward computation.
I0412 01:48:53.099511 17274 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 01:48:53.099540 17274 net.cpp:226] drop6 needs backward computation.
I0412 01:48:53.099555 17274 net.cpp:226] relu6 needs backward computation.
I0412 01:48:53.099566 17274 net.cpp:226] fc6 needs backward computation.
I0412 01:48:53.099581 17274 net.cpp:226] roi_pool5 needs backward computation.
I0412 01:48:53.099596 17274 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 01:48:53.099607 17274 net.cpp:226] roi-data needs backward computation.
I0412 01:48:53.099622 17274 net.cpp:226] proposal needs backward computation.
I0412 01:48:53.099642 17274 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 01:48:53.099656 17274 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 01:48:53.099669 17274 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 01:48:53.099684 17274 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 01:48:53.099697 17274 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 01:48:53.099714 17274 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 01:48:53.099735 17274 net.cpp:226] rpn-data needs backward computation.
I0412 01:48:53.099750 17274 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 01:48:53.099764 17274 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 01:48:53.099783 17274 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 01:48:53.099798 17274 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 01:48:53.099812 17274 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 01:48:53.099829 17274 net.cpp:226] rpn_cls_score needs backward computation.
I0412 01:48:53.099845 17274 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 01:48:53.099858 17274 net.cpp:226] rpn/output_pool needs backward computation.
I0412 01:48:53.099871 17274 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 01:48:53.099884 17274 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 01:48:53.099900 17274 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 01:48:53.099912 17274 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 01:48:53.099925 17274 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 01:48:53.099942 17274 net.cpp:226] relu5b needs backward computation.
I0412 01:48:53.099956 17274 net.cpp:226] conv5b needs backward computation.
I0412 01:48:53.099974 17274 net.cpp:226] relu5a needs backward computation.
I0412 01:48:53.099987 17274 net.cpp:226] conv5a needs backward computation.
I0412 01:48:53.099999 17274 net.cpp:226] pool4 needs backward computation.
I0412 01:48:53.100014 17274 net.cpp:226] relu4b needs backward computation.
I0412 01:48:53.100028 17274 net.cpp:226] conv4b needs backward computation.
I0412 01:48:53.100039 17274 net.cpp:226] relu4a needs backward computation.
I0412 01:48:53.100051 17274 net.cpp:226] conv4a needs backward computation.
I0412 01:48:53.100065 17274 net.cpp:226] pool3 needs backward computation.
I0412 01:48:53.100078 17274 net.cpp:226] relu3b needs backward computation.
I0412 01:48:53.100090 17274 net.cpp:226] conv3b needs backward computation.
I0412 01:48:53.100103 17274 net.cpp:226] relu3a needs backward computation.
I0412 01:48:53.100123 17274 net.cpp:226] conv3a needs backward computation.
I0412 01:48:53.100136 17274 net.cpp:228] pool2 does not need backward computation.
I0412 01:48:53.100150 17274 net.cpp:228] relu2a does not need backward computation.
I0412 01:48:53.100162 17274 net.cpp:228] conv2a does not need backward computation.
I0412 01:48:53.100175 17274 net.cpp:228] pool1 does not need backward computation.
I0412 01:48:53.100188 17274 net.cpp:228] relu1a does not need backward computation.
I0412 01:48:53.100200 17274 net.cpp:228] conv1a does not need backward computation.
I0412 01:48:53.100214 17274 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 01:48:53.100229 17274 net.cpp:228] data_data_0_split does not need backward computation.
I0412 01:48:53.100241 17274 net.cpp:228] data does not need backward computation.
I0412 01:48:53.100253 17274 net.cpp:270] This network produces output accuarcy
I0412 01:48:53.100267 17274 net.cpp:270] This network produces output loss_cls
I0412 01:48:53.100281 17274 net.cpp:270] This network produces output loss_twin
I0412 01:48:53.100293 17274 net.cpp:270] This network produces output rpn_accuarcy
I0412 01:48:53.100306 17274 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 01:48:53.100319 17274 net.cpp:270] This network produces output rpn_cls_loss
I0412 01:48:53.100375 17274 net.cpp:270] This network produces output rpn_loss_twin
I0412 01:48:53.100440 17274 net.cpp:283] Network initialization done.
I0412 01:48:53.100625 17274 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 01:48:53.297580 17274 net.cpp:761] Ignoring source layer pool5
I0412 01:48:53.322827 17274 net.cpp:761] Ignoring source layer fc7
I0412 01:48:53.322996 17274 net.cpp:761] Ignoring source layer relu7
I0412 01:48:53.323040 17274 net.cpp:761] Ignoring source layer drop7
I0412 01:48:53.323077 17274 net.cpp:761] Ignoring source layer fc8-200
I0412 01:48:53.323117 17274 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
99
(array([0]), array([97]))
(array([[3.1250000e-02, 3.8569803e+02]], dtype=float32), array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 0.]], dtype=float32))
(1, 101)
[[3.1250000e-02 3.8569803e+02]]
[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0.]]
[(array([3.1250000e-02, 3.8569803e+02], dtype=float32), array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.],
      dtype=float32))]
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 95, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 137, in forward
    print(np.concatenate(blob1, blob2))
TypeError: only integer scalar arrays can be converted to a scalar index
Terminating BlobFetcher
