Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
print done
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}]
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 04:03:01.714313  8088 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 04:03:01.714351  8088 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 04:03:01.715065  8088 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 04:03:01.715273  8088 layer_factory.hpp:77] Creating layer data
I0412 04:03:01.730015  8088 net.cpp:100] Creating Layer data
I0412 04:03:01.730079  8088 net.cpp:408] data -> data
I0412 04:03:01.730099  8088 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 04:03:01.741475  8088 net.cpp:150] Setting up data
I0412 04:03:01.741513  8088 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 04:03:01.741536  8088 net.cpp:157] Top shape: 1 3 (3)
I0412 04:03:01.741555  8088 net.cpp:165] Memory required for data: 115605516
I0412 04:03:01.741576  8088 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 04:03:01.741610  8088 net.cpp:100] Creating Layer data_data_0_split
I0412 04:03:01.741631  8088 net.cpp:434] data_data_0_split <- data
I0412 04:03:01.741655  8088 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 04:03:01.741683  8088 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 04:03:01.741755  8088 net.cpp:150] Setting up data_data_0_split
I0412 04:03:01.741770  8088 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 04:03:01.741776  8088 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 04:03:01.741780  8088 net.cpp:165] Memory required for data: 346816524
I0412 04:03:01.741786  8088 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 04:03:01.741796  8088 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 04:03:01.741802  8088 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 04:03:01.741811  8088 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 04:03:01.741823  8088 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 04:03:01.741886  8088 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 04:03:01.741897  8088 net.cpp:157] Top shape: 1 3 (3)
I0412 04:03:01.741905  8088 net.cpp:157] Top shape: 1 3 (3)
I0412 04:03:01.741909  8088 net.cpp:165] Memory required for data: 346816548
I0412 04:03:01.741932  8088 layer_factory.hpp:77] Creating layer conv1a
I0412 04:03:01.741955  8088 net.cpp:100] Creating Layer conv1a
I0412 04:03:01.741964  8088 net.cpp:434] conv1a <- data_data_0_split_0
I0412 04:03:01.741974  8088 net.cpp:408] conv1a -> conv1a
I0412 04:03:01.761804  8088 net.cpp:150] Setting up conv1a
I0412 04:03:01.761873  8088 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 04:03:01.761878  8088 net.cpp:165] Memory required for data: 2813067300
I0412 04:03:01.761898  8088 layer_factory.hpp:77] Creating layer relu1a
I0412 04:03:01.761916  8088 net.cpp:100] Creating Layer relu1a
I0412 04:03:01.761922  8088 net.cpp:434] relu1a <- conv1a
I0412 04:03:01.761929  8088 net.cpp:395] relu1a -> conv1a (in-place)
I0412 04:03:01.761953  8088 net.cpp:150] Setting up relu1a
I0412 04:03:01.761978  8088 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 04:03:01.761994  8088 net.cpp:165] Memory required for data: 5279318052
I0412 04:03:01.762001  8088 layer_factory.hpp:77] Creating layer pool1
I0412 04:03:01.762013  8088 net.cpp:100] Creating Layer pool1
I0412 04:03:01.762028  8088 net.cpp:434] pool1 <- conv1a
I0412 04:03:01.762049  8088 net.cpp:408] pool1 -> pool1
I0412 04:03:01.762171  8088 net.cpp:150] Setting up pool1
I0412 04:03:01.762197  8088 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 04:03:01.762223  8088 net.cpp:165] Memory required for data: 5895880740
I0412 04:03:01.762238  8088 layer_factory.hpp:77] Creating layer conv2a
I0412 04:03:01.762254  8088 net.cpp:100] Creating Layer conv2a
I0412 04:03:01.762261  8088 net.cpp:434] conv2a <- pool1
I0412 04:03:01.762270  8088 net.cpp:408] conv2a -> conv2a
I0412 04:03:01.772143  8088 net.cpp:150] Setting up conv2a
I0412 04:03:01.772186  8088 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 04:03:01.772192  8088 net.cpp:165] Memory required for data: 7129006116
I0412 04:03:01.772212  8088 layer_factory.hpp:77] Creating layer relu2a
I0412 04:03:01.772230  8088 net.cpp:100] Creating Layer relu2a
I0412 04:03:01.772240  8088 net.cpp:434] relu2a <- conv2a
I0412 04:03:01.772251  8088 net.cpp:395] relu2a -> conv2a (in-place)
I0412 04:03:01.772287  8088 net.cpp:150] Setting up relu2a
I0412 04:03:01.772305  8088 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 04:03:01.772318  8088 net.cpp:165] Memory required for data: 8362131492
I0412 04:03:01.772378  8088 layer_factory.hpp:77] Creating layer pool2
I0412 04:03:01.772403  8088 net.cpp:100] Creating Layer pool2
I0412 04:03:01.772419  8088 net.cpp:434] pool2 <- conv2a
I0412 04:03:01.772436  8088 net.cpp:408] pool2 -> pool2
I0412 04:03:01.772562  8088 net.cpp:150] Setting up pool2
I0412 04:03:01.772574  8088 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 04:03:01.772578  8088 net.cpp:165] Memory required for data: 8516272164
I0412 04:03:01.772583  8088 layer_factory.hpp:77] Creating layer conv3a
I0412 04:03:01.772596  8088 net.cpp:100] Creating Layer conv3a
I0412 04:03:01.772615  8088 net.cpp:434] conv3a <- pool2
I0412 04:03:01.772635  8088 net.cpp:408] conv3a -> conv3a
I0412 04:03:01.782815  8088 net.cpp:150] Setting up conv3a
I0412 04:03:01.782871  8088 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 04:03:01.782887  8088 net.cpp:165] Memory required for data: 8824553508
I0412 04:03:01.782912  8088 layer_factory.hpp:77] Creating layer relu3a
I0412 04:03:01.782933  8088 net.cpp:100] Creating Layer relu3a
I0412 04:03:01.782949  8088 net.cpp:434] relu3a <- conv3a
I0412 04:03:01.782968  8088 net.cpp:395] relu3a -> conv3a (in-place)
I0412 04:03:01.782986  8088 net.cpp:150] Setting up relu3a
I0412 04:03:01.783001  8088 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 04:03:01.783015  8088 net.cpp:165] Memory required for data: 9132834852
I0412 04:03:01.783028  8088 layer_factory.hpp:77] Creating layer conv3b
I0412 04:03:01.783051  8088 net.cpp:100] Creating Layer conv3b
I0412 04:03:01.783066  8088 net.cpp:434] conv3b <- conv3a
I0412 04:03:01.783083  8088 net.cpp:408] conv3b -> conv3b
I0412 04:03:01.808567  8088 net.cpp:150] Setting up conv3b
I0412 04:03:01.808629  8088 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 04:03:01.808643  8088 net.cpp:165] Memory required for data: 9441116196
I0412 04:03:01.808665  8088 layer_factory.hpp:77] Creating layer relu3b
I0412 04:03:01.808686  8088 net.cpp:100] Creating Layer relu3b
I0412 04:03:01.808701  8088 net.cpp:434] relu3b <- conv3b
I0412 04:03:01.808720  8088 net.cpp:395] relu3b -> conv3b (in-place)
I0412 04:03:01.808742  8088 net.cpp:150] Setting up relu3b
I0412 04:03:01.808756  8088 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 04:03:01.808770  8088 net.cpp:165] Memory required for data: 9749397540
I0412 04:03:01.808784  8088 layer_factory.hpp:77] Creating layer pool3
I0412 04:03:01.808800  8088 net.cpp:100] Creating Layer pool3
I0412 04:03:01.808815  8088 net.cpp:434] pool3 <- conv3b
I0412 04:03:01.808830  8088 net.cpp:408] pool3 -> pool3
I0412 04:03:01.808905  8088 net.cpp:150] Setting up pool3
I0412 04:03:01.808929  8088 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 04:03:01.808944  8088 net.cpp:165] Memory required for data: 9787932708
I0412 04:03:01.808957  8088 layer_factory.hpp:77] Creating layer conv4a
I0412 04:03:01.808980  8088 net.cpp:100] Creating Layer conv4a
I0412 04:03:01.808995  8088 net.cpp:434] conv4a <- pool3
I0412 04:03:01.809020  8088 net.cpp:408] conv4a -> conv4a
I0412 04:03:01.853924  8088 net.cpp:150] Setting up conv4a
I0412 04:03:01.853988  8088 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 04:03:01.854005  8088 net.cpp:165] Memory required for data: 9865003044
I0412 04:03:01.854032  8088 layer_factory.hpp:77] Creating layer relu4a
I0412 04:03:01.854053  8088 net.cpp:100] Creating Layer relu4a
I0412 04:03:01.854069  8088 net.cpp:434] relu4a <- conv4a
I0412 04:03:01.854089  8088 net.cpp:395] relu4a -> conv4a (in-place)
I0412 04:03:01.854111  8088 net.cpp:150] Setting up relu4a
I0412 04:03:01.854127  8088 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 04:03:01.854141  8088 net.cpp:165] Memory required for data: 9942073380
I0412 04:03:01.854154  8088 layer_factory.hpp:77] Creating layer conv4b
I0412 04:03:01.854180  8088 net.cpp:100] Creating Layer conv4b
I0412 04:03:01.854195  8088 net.cpp:434] conv4b <- conv4a
I0412 04:03:01.854214  8088 net.cpp:408] conv4b -> conv4b
I0412 04:03:01.916502  8088 net.cpp:150] Setting up conv4b
I0412 04:03:01.916533  8088 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 04:03:01.916537  8088 net.cpp:165] Memory required for data: 10019143716
I0412 04:03:01.916544  8088 layer_factory.hpp:77] Creating layer relu4b
I0412 04:03:01.916553  8088 net.cpp:100] Creating Layer relu4b
I0412 04:03:01.916558  8088 net.cpp:434] relu4b <- conv4b
I0412 04:03:01.916564  8088 net.cpp:395] relu4b -> conv4b (in-place)
I0412 04:03:01.916573  8088 net.cpp:150] Setting up relu4b
I0412 04:03:01.916576  8088 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 04:03:01.916579  8088 net.cpp:165] Memory required for data: 10096214052
I0412 04:03:01.916582  8088 layer_factory.hpp:77] Creating layer pool4
I0412 04:03:01.916587  8088 net.cpp:100] Creating Layer pool4
I0412 04:03:01.916590  8088 net.cpp:434] pool4 <- conv4b
I0412 04:03:01.916596  8088 net.cpp:408] pool4 -> pool4
I0412 04:03:01.916640  8088 net.cpp:150] Setting up pool4
I0412 04:03:01.916646  8088 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:03:01.916649  8088 net.cpp:165] Memory required for data: 10105847844
I0412 04:03:01.916652  8088 layer_factory.hpp:77] Creating layer conv5a
I0412 04:03:01.916661  8088 net.cpp:100] Creating Layer conv5a
I0412 04:03:01.916666  8088 net.cpp:434] conv5a <- pool4
I0412 04:03:01.916671  8088 net.cpp:408] conv5a -> conv5a
I0412 04:03:01.975780  8088 net.cpp:150] Setting up conv5a
I0412 04:03:01.975811  8088 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:03:01.975814  8088 net.cpp:165] Memory required for data: 10115481636
I0412 04:03:01.975826  8088 layer_factory.hpp:77] Creating layer relu5a
I0412 04:03:01.975837  8088 net.cpp:100] Creating Layer relu5a
I0412 04:03:01.975843  8088 net.cpp:434] relu5a <- conv5a
I0412 04:03:01.975854  8088 net.cpp:395] relu5a -> conv5a (in-place)
I0412 04:03:01.975864  8088 net.cpp:150] Setting up relu5a
I0412 04:03:01.975872  8088 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:03:01.975877  8088 net.cpp:165] Memory required for data: 10125115428
I0412 04:03:01.975880  8088 layer_factory.hpp:77] Creating layer conv5b
I0412 04:03:01.975894  8088 net.cpp:100] Creating Layer conv5b
I0412 04:03:01.975915  8088 net.cpp:434] conv5b <- conv5a
I0412 04:03:01.975924  8088 net.cpp:408] conv5b -> conv5b
I0412 04:03:02.046440  8088 net.cpp:150] Setting up conv5b
I0412 04:03:02.046510  8088 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:03:02.046528  8088 net.cpp:165] Memory required for data: 10134749220
I0412 04:03:02.046550  8088 layer_factory.hpp:77] Creating layer relu5b
I0412 04:03:02.046571  8088 net.cpp:100] Creating Layer relu5b
I0412 04:03:02.046587  8088 net.cpp:434] relu5b <- conv5b
I0412 04:03:02.046607  8088 net.cpp:395] relu5b -> conv5b (in-place)
I0412 04:03:02.046627  8088 net.cpp:150] Setting up relu5b
I0412 04:03:02.046643  8088 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:03:02.046656  8088 net.cpp:165] Memory required for data: 10144383012
I0412 04:03:02.046670  8088 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 04:03:02.046695  8088 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 04:03:02.046710  8088 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 04:03:02.046749  8088 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 04:03:02.046772  8088 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 04:03:02.046844  8088 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 04:03:02.046864  8088 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:03:02.046880  8088 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 04:03:02.046893  8088 net.cpp:165] Memory required for data: 10163650596
I0412 04:03:02.046907  8088 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 04:03:02.046928  8088 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 04:03:02.046943  8088 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 04:03:02.046963  8088 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 04:03:02.115314  8088 net.cpp:150] Setting up rpn_conv/3x3
I0412 04:03:02.115341  8088 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 04:03:02.115346  8088 net.cpp:165] Memory required for data: 10166796324
I0412 04:03:02.115365  8088 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 04:03:02.115377  8088 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 04:03:02.115386  8088 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 04:03:02.115393  8088 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 04:03:02.115406  8088 net.cpp:150] Setting up rpn_relu/3x3
I0412 04:03:02.115413  8088 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 04:03:02.115417  8088 net.cpp:165] Memory required for data: 10169942052
I0412 04:03:02.115420  8088 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 04:03:02.115435  8088 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 04:03:02.115442  8088 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 04:03:02.115449  8088 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 04:03:02.200366  8088 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 04:03:02.200434  8088 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 04:03:02.200451  8088 net.cpp:165] Memory required for data: 10170728484
I0412 04:03:02.200474  8088 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 04:03:02.200498  8088 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 04:03:02.200515  8088 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 04:03:02.200533  8088 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 04:03:02.200559  8088 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 04:03:02.200577  8088 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 04:03:02.200590  8088 net.cpp:165] Memory required for data: 10171514916
I0412 04:03:02.200604  8088 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 04:03:02.200630  8088 net.cpp:100] Creating Layer rpn/output_pool
I0412 04:03:02.200649  8088 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 04:03:02.200666  8088 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 04:03:02.200742  8088 net.cpp:150] Setting up rpn/output_pool
I0412 04:03:02.200762  8088 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 04:03:02.200775  8088 net.cpp:165] Memory required for data: 10171711524
I0412 04:03:02.200789  8088 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 04:03:02.200809  8088 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 04:03:02.200824  8088 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 04:03:02.200840  8088 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 04:03:02.200857  8088 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 04:03:02.200922  8088 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 04:03:02.200943  8088 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 04:03:02.200959  8088 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 04:03:02.200973  8088 net.cpp:165] Memory required for data: 10172104740
I0412 04:03:02.200994  8088 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 04:03:02.201016  8088 net.cpp:100] Creating Layer rpn_cls_score
I0412 04:03:02.201030  8088 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 04:03:02.201050  8088 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 04:03:02.201882  8088 net.cpp:150] Setting up rpn_cls_score
I0412 04:03:02.201905  8088 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:03:02.201920  8088 net.cpp:165] Memory required for data: 10172133156
I0412 04:03:02.201938  8088 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 04:03:02.201956  8088 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 04:03:02.201970  8088 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 04:03:02.201987  8088 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 04:03:02.202008  8088 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 04:03:02.202083  8088 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 04:03:02.202103  8088 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:03:02.202119  8088 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:03:02.202132  8088 net.cpp:165] Memory required for data: 10172189988
I0412 04:03:02.202147  8088 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 04:03:02.202173  8088 net.cpp:100] Creating Layer rpn_twin_pred
I0412 04:03:02.202189  8088 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 04:03:02.202208  8088 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 04:03:02.203011  8088 net.cpp:150] Setting up rpn_twin_pred
I0412 04:03:02.203033  8088 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:03:02.203048  8088 net.cpp:165] Memory required for data: 10172218404
I0412 04:03:02.203075  8088 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 04:03:02.203097  8088 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 04:03:02.203105  8088 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 04:03:02.203114  8088 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 04:03:02.203125  8088 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 04:03:02.203215  8088 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 04:03:02.203227  8088 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:03:02.203232  8088 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:03:02.203238  8088 net.cpp:165] Memory required for data: 10172275236
I0412 04:03:02.203241  8088 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 04:03:02.203253  8088 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 04:03:02.203258  8088 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 04:03:02.203269  8088 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 04:03:02.203312  8088 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 04:03:02.203323  8088 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 04:03:02.203331  8088 net.cpp:165] Memory required for data: 10172303652
I0412 04:03:02.203336  8088 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 04:03:02.203343  8088 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 04:03:02.203348  8088 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 04:03:02.203356  8088 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 04:03:02.203377  8088 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 04:03:02.203387  8088 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 04:03:02.203464  8088 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 04:03:02.203475  8088 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 04:03:02.203481  8088 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 04:03:02.203488  8088 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 04:03:02.203492  8088 net.cpp:165] Memory required for data: 10172388900
I0412 04:03:02.203496  8088 layer_factory.hpp:77] Creating layer rpn-data
I0412 04:03:02.204000  8088 net.cpp:100] Creating Layer rpn-data
I0412 04:03:02.204013  8088 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 04:03:02.204020  8088 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 04:03:02.204027  8088 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 04:03:02.204036  8088 net.cpp:408] rpn-data -> rpn_labels
I0412 04:03:02.204047  8088 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 04:03:02.204056  8088 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 04:03:02.204066  8088 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 04:03:02.207708  8088 net.cpp:150] Setting up rpn-data
I0412 04:03:02.207726  8088 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 04:03:02.207732  8088 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:03:02.207737  8088 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:03:02.207744  8088 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:03:02.207748  8088 net.cpp:165] Memory required for data: 10172488356
I0412 04:03:02.207753  8088 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 04:03:02.207762  8088 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 04:03:02.207767  8088 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 04:03:02.207775  8088 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 04:03:02.207784  8088 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 04:03:02.207835  8088 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 04:03:02.207844  8088 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 04:03:02.207849  8088 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 04:03:02.207855  8088 net.cpp:165] Memory required for data: 10172516772
I0412 04:03:02.207859  8088 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 04:03:02.207868  8088 net.cpp:100] Creating Layer rpn_loss_cls
I0412 04:03:02.207875  8088 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 04:03:02.207880  8088 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 04:03:02.207886  8088 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 04:03:02.207897  8088 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 04:03:02.208050  8088 net.cpp:150] Setting up rpn_loss_cls
I0412 04:03:02.208058  8088 net.cpp:157] Top shape: (1)
I0412 04:03:02.208062  8088 net.cpp:160]     with loss weight 1
I0412 04:03:02.208077  8088 net.cpp:165] Memory required for data: 10172516776
I0412 04:03:02.208082  8088 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 04:03:02.208093  8088 net.cpp:100] Creating Layer rpn_loss_twin
I0412 04:03:02.208101  8088 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 04:03:02.208106  8088 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 04:03:02.208112  8088 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 04:03:02.208117  8088 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 04:03:02.208124  8088 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 04:03:02.208240  8088 net.cpp:150] Setting up rpn_loss_twin
I0412 04:03:02.208248  8088 net.cpp:157] Top shape: (1)
I0412 04:03:02.208252  8088 net.cpp:160]     with loss weight 1
I0412 04:03:02.208259  8088 net.cpp:165] Memory required for data: 10172516780
I0412 04:03:02.208264  8088 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 04:03:02.208276  8088 net.cpp:100] Creating Layer rpn_accuarcy
I0412 04:03:02.208282  8088 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 04:03:02.208288  8088 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 04:03:02.208295  8088 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 04:03:02.208303  8088 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 04:03:02.208397  8088 net.cpp:150] Setting up rpn_accuarcy
I0412 04:03:02.208407  8088 net.cpp:157] Top shape: (1)
I0412 04:03:02.208412  8088 net.cpp:157] Top shape: 2 (2)
I0412 04:03:02.208416  8088 net.cpp:165] Memory required for data: 10172516792
I0412 04:03:02.208420  8088 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 04:03:02.208427  8088 net.cpp:100] Creating Layer rpn_cls_prob
I0412 04:03:02.208433  8088 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 04:03:02.208441  8088 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 04:03:02.208529  8088 net.cpp:150] Setting up rpn_cls_prob
I0412 04:03:02.208539  8088 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 04:03:02.208542  8088 net.cpp:165] Memory required for data: 10172545208
I0412 04:03:02.208546  8088 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 04:03:02.208556  8088 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 04:03:02.208562  8088 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 04:03:02.208569  8088 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 04:03:02.208602  8088 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 04:03:02.208611  8088 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 04:03:02.208616  8088 net.cpp:165] Memory required for data: 10172573624
I0412 04:03:02.208621  8088 layer_factory.hpp:77] Creating layer proposal
I0412 04:03:02.209333  8088 net.cpp:100] Creating Layer proposal
I0412 04:03:02.209347  8088 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 04:03:02.209353  8088 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 04:03:02.209363  8088 net.cpp:408] proposal -> rpn_rois
I0412 04:03:02.214308  8088 net.cpp:150] Setting up proposal
I0412 04:03:02.214325  8088 net.cpp:157] Top shape: 1 3 (3)
I0412 04:03:02.214330  8088 net.cpp:165] Memory required for data: 10172573636
I0412 04:03:02.214335  8088 layer_factory.hpp:77] Creating layer roi-data
I0412 04:03:02.214514  8088 net.cpp:100] Creating Layer roi-data
I0412 04:03:02.214525  8088 net.cpp:434] roi-data <- rpn_rois
I0412 04:03:02.214532  8088 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 04:03:02.214547  8088 net.cpp:408] roi-data -> rois
I0412 04:03:02.214560  8088 net.cpp:408] roi-data -> labels
I0412 04:03:02.214568  8088 net.cpp:408] roi-data -> twin_targets
I0412 04:03:02.214576  8088 net.cpp:408] roi-data -> twin_inside_weights
I0412 04:03:02.214586  8088 net.cpp:408] roi-data -> twin_outside_weights
I0412 04:03:02.215028  8088 net.cpp:150] Setting up roi-data
I0412 04:03:02.215042  8088 net.cpp:157] Top shape: 1 3 (3)
I0412 04:03:02.215047  8088 net.cpp:157] Top shape: 1 1 (1)
I0412 04:03:02.215056  8088 net.cpp:157] Top shape: 1 402 (402)
I0412 04:03:02.215061  8088 net.cpp:157] Top shape: 1 402 (402)
I0412 04:03:02.215066  8088 net.cpp:157] Top shape: 1 402 (402)
I0412 04:03:02.215070  8088 net.cpp:165] Memory required for data: 10172578476
I0412 04:03:02.215075  8088 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 04:03:02.215083  8088 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 04:03:02.215091  8088 net.cpp:434] labels_roi-data_1_split <- labels
I0412 04:03:02.215098  8088 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 04:03:02.215109  8088 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 04:03:02.215160  8088 net.cpp:150] Setting up labels_roi-data_1_split
I0412 04:03:02.215169  8088 net.cpp:157] Top shape: 1 1 (1)
I0412 04:03:02.215175  8088 net.cpp:157] Top shape: 1 1 (1)
I0412 04:03:02.215181  8088 net.cpp:165] Memory required for data: 10172578484
I0412 04:03:02.215185  8088 layer_factory.hpp:77] Creating layer roi_pool5
I0412 04:03:02.215198  8088 net.cpp:100] Creating Layer roi_pool5
I0412 04:03:02.215204  8088 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 04:03:02.215211  8088 net.cpp:434] roi_pool5 <- rois
I0412 04:03:02.215217  8088 net.cpp:408] roi_pool5 -> pool5
I0412 04:03:02.215226  8088 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 04:03:02.215236  8088 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 04:03:02.215291  8088 net.cpp:150] Setting up roi_pool5
I0412 04:03:02.215299  8088 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 04:03:02.215303  8088 net.cpp:165] Memory required for data: 10172611252
I0412 04:03:02.215308  8088 layer_factory.hpp:77] Creating layer fc6
I0412 04:03:02.215317  8088 net.cpp:100] Creating Layer fc6
I0412 04:03:02.215323  8088 net.cpp:434] fc6 <- pool5
I0412 04:03:02.215330  8088 net.cpp:408] fc6 -> fc6
I0412 04:03:02.548650  8088 net.cpp:150] Setting up fc6
I0412 04:03:02.548722  8088 net.cpp:157] Top shape: 1 4096 (4096)
I0412 04:03:02.548738  8088 net.cpp:165] Memory required for data: 10172627636
I0412 04:03:02.548760  8088 layer_factory.hpp:77] Creating layer relu6
I0412 04:03:02.548781  8088 net.cpp:100] Creating Layer relu6
I0412 04:03:02.548797  8088 net.cpp:434] relu6 <- fc6
I0412 04:03:02.548815  8088 net.cpp:395] relu6 -> fc6 (in-place)
I0412 04:03:02.548835  8088 net.cpp:150] Setting up relu6
I0412 04:03:02.548851  8088 net.cpp:157] Top shape: 1 4096 (4096)
I0412 04:03:02.548866  8088 net.cpp:165] Memory required for data: 10172644020
I0412 04:03:02.548878  8088 layer_factory.hpp:77] Creating layer drop6
I0412 04:03:02.548898  8088 net.cpp:100] Creating Layer drop6
I0412 04:03:02.548913  8088 net.cpp:434] drop6 <- fc6
I0412 04:03:02.548928  8088 net.cpp:395] drop6 -> fc6 (in-place)
I0412 04:03:02.548975  8088 net.cpp:150] Setting up drop6
I0412 04:03:02.548995  8088 net.cpp:157] Top shape: 1 4096 (4096)
I0412 04:03:02.549008  8088 net.cpp:165] Memory required for data: 10172660404
I0412 04:03:02.549022  8088 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 04:03:02.549047  8088 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 04:03:02.549062  8088 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 04:03:02.549080  8088 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 04:03:02.549091  8088 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 04:03:02.549149  8088 net.cpp:150] Setting up fc6_drop6_0_split
I0412 04:03:02.549168  8088 net.cpp:157] Top shape: 1 4096 (4096)
I0412 04:03:02.549182  8088 net.cpp:157] Top shape: 1 4096 (4096)
I0412 04:03:02.549196  8088 net.cpp:165] Memory required for data: 10172693172
I0412 04:03:02.549209  8088 layer_factory.hpp:77] Creating layer cls_score
I0412 04:03:02.549232  8088 net.cpp:100] Creating Layer cls_score
I0412 04:03:02.549247  8088 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 04:03:02.549266  8088 net.cpp:408] cls_score -> cls_score
I0412 04:03:02.560974  8088 net.cpp:150] Setting up cls_score
I0412 04:03:02.561041  8088 net.cpp:157] Top shape: 1 201 (201)
I0412 04:03:02.561058  8088 net.cpp:165] Memory required for data: 10172693976
I0412 04:03:02.561080  8088 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 04:03:02.561101  8088 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 04:03:02.561118  8088 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 04:03:02.561137  8088 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 04:03:02.561159  8088 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 04:03:02.561230  8088 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 04:03:02.561239  8088 net.cpp:157] Top shape: 1 201 (201)
I0412 04:03:02.561244  8088 net.cpp:157] Top shape: 1 201 (201)
I0412 04:03:02.561246  8088 net.cpp:165] Memory required for data: 10172695584
I0412 04:03:02.561249  8088 layer_factory.hpp:77] Creating layer twin_pred
I0412 04:03:02.561256  8088 net.cpp:100] Creating Layer twin_pred
I0412 04:03:02.561262  8088 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 04:03:02.561269  8088 net.cpp:408] twin_pred -> twin_pred
I0412 04:03:02.583365  8088 net.cpp:150] Setting up twin_pred
I0412 04:03:02.583441  8088 net.cpp:157] Top shape: 1 402 (402)
I0412 04:03:02.583456  8088 net.cpp:165] Memory required for data: 10172697192
I0412 04:03:02.583477  8088 layer_factory.hpp:77] Creating layer loss_cls
I0412 04:03:02.583514  8088 net.cpp:100] Creating Layer loss_cls
I0412 04:03:02.583534  8088 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 04:03:02.583552  8088 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 04:03:02.583573  8088 net.cpp:408] loss_cls -> loss_cls
I0412 04:03:02.583600  8088 layer_factory.hpp:77] Creating layer loss_cls
I0412 04:03:02.583772  8088 net.cpp:150] Setting up loss_cls
I0412 04:03:02.583796  8088 net.cpp:157] Top shape: (1)
I0412 04:03:02.583811  8088 net.cpp:160]     with loss weight 1
I0412 04:03:02.583833  8088 net.cpp:165] Memory required for data: 10172697196
I0412 04:03:02.583847  8088 layer_factory.hpp:77] Creating layer loss_twin
I0412 04:03:02.583863  8088 net.cpp:100] Creating Layer loss_twin
I0412 04:03:02.583879  8088 net.cpp:434] loss_twin <- twin_pred
I0412 04:03:02.583894  8088 net.cpp:434] loss_twin <- twin_targets
I0412 04:03:02.583909  8088 net.cpp:434] loss_twin <- twin_inside_weights
I0412 04:03:02.583923  8088 net.cpp:434] loss_twin <- twin_outside_weights
I0412 04:03:02.583938  8088 net.cpp:408] loss_twin -> loss_twin
I0412 04:03:02.584086  8088 net.cpp:150] Setting up loss_twin
I0412 04:03:02.584110  8088 net.cpp:157] Top shape: (1)
I0412 04:03:02.584123  8088 net.cpp:160]     with loss weight 1
I0412 04:03:02.584139  8088 net.cpp:165] Memory required for data: 10172697200
I0412 04:03:02.584153  8088 layer_factory.hpp:77] Creating layer accuarcy
I0412 04:03:02.584170  8088 net.cpp:100] Creating Layer accuarcy
I0412 04:03:02.584185  8088 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 04:03:02.584201  8088 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 04:03:02.584218  8088 net.cpp:408] accuarcy -> accuarcy
I0412 04:03:02.584239  8088 net.cpp:150] Setting up accuarcy
I0412 04:03:02.584255  8088 net.cpp:157] Top shape: (1)
I0412 04:03:02.584270  8088 net.cpp:165] Memory required for data: 10172697204
I0412 04:03:02.584286  8088 net.cpp:228] accuarcy does not need backward computation.
I0412 04:03:02.584305  8088 net.cpp:226] loss_twin needs backward computation.
I0412 04:03:02.584318  8088 net.cpp:226] loss_cls needs backward computation.
I0412 04:03:02.584364  8088 net.cpp:226] twin_pred needs backward computation.
I0412 04:03:02.584384  8088 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 04:03:02.584401  8088 net.cpp:226] cls_score needs backward computation.
I0412 04:03:02.584415  8088 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 04:03:02.584429  8088 net.cpp:226] drop6 needs backward computation.
I0412 04:03:02.584444  8088 net.cpp:226] relu6 needs backward computation.
I0412 04:03:02.584457  8088 net.cpp:226] fc6 needs backward computation.
I0412 04:03:02.584471  8088 net.cpp:226] roi_pool5 needs backward computation.
I0412 04:03:02.584486  8088 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 04:03:02.584499  8088 net.cpp:226] roi-data needs backward computation.
I0412 04:03:02.584514  8088 net.cpp:226] proposal needs backward computation.
I0412 04:03:02.584527  8088 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 04:03:02.584544  8088 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 04:03:02.584563  8088 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 04:03:02.584578  8088 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 04:03:02.584595  8088 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 04:03:02.584615  8088 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 04:03:02.584633  8088 net.cpp:226] rpn-data needs backward computation.
I0412 04:03:02.584650  8088 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 04:03:02.584664  8088 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 04:03:02.584684  8088 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 04:03:02.584699  8088 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 04:03:02.584714  8088 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 04:03:02.584728  8088 net.cpp:226] rpn_cls_score needs backward computation.
I0412 04:03:02.584743  8088 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 04:03:02.584758  8088 net.cpp:226] rpn/output_pool needs backward computation.
I0412 04:03:02.584772  8088 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 04:03:02.584790  8088 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 04:03:02.584805  8088 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 04:03:02.584822  8088 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 04:03:02.584839  8088 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 04:03:02.584856  8088 net.cpp:226] relu5b needs backward computation.
I0412 04:03:02.584870  8088 net.cpp:226] conv5b needs backward computation.
I0412 04:03:02.584884  8088 net.cpp:226] relu5a needs backward computation.
I0412 04:03:02.584898  8088 net.cpp:226] conv5a needs backward computation.
I0412 04:03:02.584911  8088 net.cpp:226] pool4 needs backward computation.
I0412 04:03:02.584929  8088 net.cpp:226] relu4b needs backward computation.
I0412 04:03:02.584944  8088 net.cpp:226] conv4b needs backward computation.
I0412 04:03:02.584959  8088 net.cpp:226] relu4a needs backward computation.
I0412 04:03:02.584976  8088 net.cpp:226] conv4a needs backward computation.
I0412 04:03:02.584991  8088 net.cpp:226] pool3 needs backward computation.
I0412 04:03:02.585005  8088 net.cpp:226] relu3b needs backward computation.
I0412 04:03:02.585018  8088 net.cpp:226] conv3b needs backward computation.
I0412 04:03:02.585031  8088 net.cpp:226] relu3a needs backward computation.
I0412 04:03:02.585045  8088 net.cpp:226] conv3a needs backward computation.
I0412 04:03:02.585059  8088 net.cpp:228] pool2 does not need backward computation.
I0412 04:03:02.585078  8088 net.cpp:228] relu2a does not need backward computation.
I0412 04:03:02.585086  8088 net.cpp:228] conv2a does not need backward computation.
I0412 04:03:02.585093  8088 net.cpp:228] pool1 does not need backward computation.
I0412 04:03:02.585098  8088 net.cpp:228] relu1a does not need backward computation.
I0412 04:03:02.585101  8088 net.cpp:228] conv1a does not need backward computation.
I0412 04:03:02.585108  8088 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 04:03:02.585114  8088 net.cpp:228] data_data_0_split does not need backward computation.
I0412 04:03:02.585122  8088 net.cpp:228] data does not need backward computation.
I0412 04:03:02.585129  8088 net.cpp:270] This network produces output accuarcy
I0412 04:03:02.585135  8088 net.cpp:270] This network produces output loss_cls
I0412 04:03:02.585142  8088 net.cpp:270] This network produces output loss_twin
I0412 04:03:02.585147  8088 net.cpp:270] This network produces output rpn_accuarcy
I0412 04:03:02.585152  8088 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 04:03:02.585156  8088 net.cpp:270] This network produces output rpn_cls_loss
I0412 04:03:02.585161  8088 net.cpp:270] This network produces output rpn_loss_twin
I0412 04:03:02.585216  8088 net.cpp:283] Network initialization done.
I0412 04:03:02.585410  8088 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 04:03:02.755203  8088 net.cpp:761] Ignoring source layer pool5
I0412 04:03:02.777287  8088 net.cpp:761] Ignoring source layer fc7
I0412 04:03:02.777303  8088 net.cpp:761] Ignoring source layer relu7
I0412 04:03:02.777307  8088 net.cpp:761] Ignoring source layer drop7
I0412 04:03:02.777310  8088 net.cpp:761] Ignoring source layer fc8-200
I0412 04:03:02.777315  8088 net.cpp:761] Ignoring source layer loss
('tempppppppppppppppppppppppppppp', [{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}])
('tempppppppppppppppppppppppppppp', [{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}])
maaaaasdfdfdsfadf
Solving...
BlobFetcher started
('db_inds', array([1]))
('minibatch\n\n\n', [{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}])
99
(array([0]), array([97]))
('db_inds', array([0]))
('minibatch\n\n\n', [{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}])
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 96, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 134, in forward
    blob1, blob2 = blob
ValueError: need more than 1 value to unpack
Terminating BlobFetcher
