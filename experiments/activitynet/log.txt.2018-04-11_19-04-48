Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0411 19:04:49.679502 32641 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0411 19:04:49.679538 32641 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0411 19:04:49.680086 32641 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0411 19:04:49.680418 32641 layer_factory.hpp:77] Creating layer data
I0411 19:04:49.692742 32641 net.cpp:100] Creating Layer data
I0411 19:04:49.692767 32641 net.cpp:408] data -> data
I0411 19:04:49.692780 32641 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0411 19:04:49.704373 32641 net.cpp:150] Setting up data
I0411 19:04:49.704406 32641 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0411 19:04:49.704411 32641 net.cpp:157] Top shape: 1 3 (3)
I0411 19:04:49.704416 32641 net.cpp:165] Memory required for data: 115605516
I0411 19:04:49.704423 32641 layer_factory.hpp:77] Creating layer data_data_0_split
I0411 19:04:49.704437 32641 net.cpp:100] Creating Layer data_data_0_split
I0411 19:04:49.704444 32641 net.cpp:434] data_data_0_split <- data
I0411 19:04:49.704457 32641 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0411 19:04:49.704470 32641 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0411 19:04:49.704514 32641 net.cpp:150] Setting up data_data_0_split
I0411 19:04:49.704525 32641 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0411 19:04:49.704533 32641 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0411 19:04:49.704537 32641 net.cpp:165] Memory required for data: 346816524
I0411 19:04:49.704542 32641 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0411 19:04:49.704550 32641 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0411 19:04:49.704555 32641 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0411 19:04:49.704563 32641 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0411 19:04:49.704572 32641 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0411 19:04:49.704612 32641 net.cpp:150] Setting up gt_boxes_data_1_split
I0411 19:04:49.704620 32641 net.cpp:157] Top shape: 1 3 (3)
I0411 19:04:49.704625 32641 net.cpp:157] Top shape: 1 3 (3)
I0411 19:04:49.704629 32641 net.cpp:165] Memory required for data: 346816548
I0411 19:04:49.704634 32641 layer_factory.hpp:77] Creating layer conv1a
I0411 19:04:49.704674 32641 net.cpp:100] Creating Layer conv1a
I0411 19:04:49.704681 32641 net.cpp:434] conv1a <- data_data_0_split_0
I0411 19:04:49.704692 32641 net.cpp:408] conv1a -> conv1a
I0411 19:04:49.722491 32641 net.cpp:150] Setting up conv1a
I0411 19:04:49.722620 32641 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0411 19:04:49.722638 32641 net.cpp:165] Memory required for data: 2813067300
I0411 19:04:49.722668 32641 layer_factory.hpp:77] Creating layer relu1a
I0411 19:04:49.722699 32641 net.cpp:100] Creating Layer relu1a
I0411 19:04:49.722723 32641 net.cpp:434] relu1a <- conv1a
I0411 19:04:49.722746 32641 net.cpp:395] relu1a -> conv1a (in-place)
I0411 19:04:49.722774 32641 net.cpp:150] Setting up relu1a
I0411 19:04:49.722792 32641 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0411 19:04:49.722807 32641 net.cpp:165] Memory required for data: 5279318052
I0411 19:04:49.722822 32641 layer_factory.hpp:77] Creating layer pool1
I0411 19:04:49.722843 32641 net.cpp:100] Creating Layer pool1
I0411 19:04:49.722859 32641 net.cpp:434] pool1 <- conv1a
I0411 19:04:49.722910 32641 net.cpp:408] pool1 -> pool1
I0411 19:04:49.723016 32641 net.cpp:150] Setting up pool1
I0411 19:04:49.723045 32641 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0411 19:04:49.723064 32641 net.cpp:165] Memory required for data: 5895880740
I0411 19:04:49.723088 32641 layer_factory.hpp:77] Creating layer conv2a
I0411 19:04:49.723119 32641 net.cpp:100] Creating Layer conv2a
I0411 19:04:49.723145 32641 net.cpp:434] conv2a <- pool1
I0411 19:04:49.723165 32641 net.cpp:408] conv2a -> conv2a
I0411 19:04:49.731456 32641 net.cpp:150] Setting up conv2a
I0411 19:04:49.731494 32641 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0411 19:04:49.731499 32641 net.cpp:165] Memory required for data: 7129006116
I0411 19:04:49.731518 32641 layer_factory.hpp:77] Creating layer relu2a
I0411 19:04:49.731530 32641 net.cpp:100] Creating Layer relu2a
I0411 19:04:49.731536 32641 net.cpp:434] relu2a <- conv2a
I0411 19:04:49.731544 32641 net.cpp:395] relu2a -> conv2a (in-place)
I0411 19:04:49.731556 32641 net.cpp:150] Setting up relu2a
I0411 19:04:49.731561 32641 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0411 19:04:49.731565 32641 net.cpp:165] Memory required for data: 8362131492
I0411 19:04:49.731568 32641 layer_factory.hpp:77] Creating layer pool2
I0411 19:04:49.731582 32641 net.cpp:100] Creating Layer pool2
I0411 19:04:49.731587 32641 net.cpp:434] pool2 <- conv2a
I0411 19:04:49.731595 32641 net.cpp:408] pool2 -> pool2
I0411 19:04:49.731680 32641 net.cpp:150] Setting up pool2
I0411 19:04:49.731691 32641 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0411 19:04:49.731695 32641 net.cpp:165] Memory required for data: 8516272164
I0411 19:04:49.731699 32641 layer_factory.hpp:77] Creating layer conv3a
I0411 19:04:49.731714 32641 net.cpp:100] Creating Layer conv3a
I0411 19:04:49.731721 32641 net.cpp:434] conv3a <- pool2
I0411 19:04:49.731731 32641 net.cpp:408] conv3a -> conv3a
I0411 19:04:49.739836 32641 net.cpp:150] Setting up conv3a
I0411 19:04:49.739866 32641 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 19:04:49.739871 32641 net.cpp:165] Memory required for data: 8824553508
I0411 19:04:49.739886 32641 layer_factory.hpp:77] Creating layer relu3a
I0411 19:04:49.739899 32641 net.cpp:100] Creating Layer relu3a
I0411 19:04:49.739908 32641 net.cpp:434] relu3a <- conv3a
I0411 19:04:49.739917 32641 net.cpp:395] relu3a -> conv3a (in-place)
I0411 19:04:49.739926 32641 net.cpp:150] Setting up relu3a
I0411 19:04:49.739933 32641 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 19:04:49.739938 32641 net.cpp:165] Memory required for data: 9132834852
I0411 19:04:49.739943 32641 layer_factory.hpp:77] Creating layer conv3b
I0411 19:04:49.739956 32641 net.cpp:100] Creating Layer conv3b
I0411 19:04:49.739962 32641 net.cpp:434] conv3b <- conv3a
I0411 19:04:49.739969 32641 net.cpp:408] conv3b -> conv3b
I0411 19:04:49.755759 32641 net.cpp:150] Setting up conv3b
I0411 19:04:49.755785 32641 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 19:04:49.755789 32641 net.cpp:165] Memory required for data: 9441116196
I0411 19:04:49.755798 32641 layer_factory.hpp:77] Creating layer relu3b
I0411 19:04:49.755810 32641 net.cpp:100] Creating Layer relu3b
I0411 19:04:49.755817 32641 net.cpp:434] relu3b <- conv3b
I0411 19:04:49.755825 32641 net.cpp:395] relu3b -> conv3b (in-place)
I0411 19:04:49.755836 32641 net.cpp:150] Setting up relu3b
I0411 19:04:49.755844 32641 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 19:04:49.755849 32641 net.cpp:165] Memory required for data: 9749397540
I0411 19:04:49.755853 32641 layer_factory.hpp:77] Creating layer pool3
I0411 19:04:49.755863 32641 net.cpp:100] Creating Layer pool3
I0411 19:04:49.755869 32641 net.cpp:434] pool3 <- conv3b
I0411 19:04:49.755877 32641 net.cpp:408] pool3 -> pool3
I0411 19:04:49.755923 32641 net.cpp:150] Setting up pool3
I0411 19:04:49.755929 32641 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0411 19:04:49.755933 32641 net.cpp:165] Memory required for data: 9787932708
I0411 19:04:49.755935 32641 layer_factory.hpp:77] Creating layer conv4a
I0411 19:04:49.755949 32641 net.cpp:100] Creating Layer conv4a
I0411 19:04:49.755954 32641 net.cpp:434] conv4a <- pool3
I0411 19:04:49.755967 32641 net.cpp:408] conv4a -> conv4a
I0411 19:04:49.786665 32641 net.cpp:150] Setting up conv4a
I0411 19:04:49.786692 32641 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 19:04:49.786696 32641 net.cpp:165] Memory required for data: 9865003044
I0411 19:04:49.786712 32641 layer_factory.hpp:77] Creating layer relu4a
I0411 19:04:49.786731 32641 net.cpp:100] Creating Layer relu4a
I0411 19:04:49.786752 32641 net.cpp:434] relu4a <- conv4a
I0411 19:04:49.786773 32641 net.cpp:395] relu4a -> conv4a (in-place)
I0411 19:04:49.786797 32641 net.cpp:150] Setting up relu4a
I0411 19:04:49.786815 32641 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 19:04:49.786833 32641 net.cpp:165] Memory required for data: 9942073380
I0411 19:04:49.786847 32641 layer_factory.hpp:77] Creating layer conv4b
I0411 19:04:49.786878 32641 net.cpp:100] Creating Layer conv4b
I0411 19:04:49.786885 32641 net.cpp:434] conv4b <- conv4a
I0411 19:04:49.786892 32641 net.cpp:408] conv4b -> conv4b
I0411 19:04:49.844416 32641 net.cpp:150] Setting up conv4b
I0411 19:04:49.844444 32641 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 19:04:49.844449 32641 net.cpp:165] Memory required for data: 10019143716
I0411 19:04:49.844460 32641 layer_factory.hpp:77] Creating layer relu4b
I0411 19:04:49.844470 32641 net.cpp:100] Creating Layer relu4b
I0411 19:04:49.844476 32641 net.cpp:434] relu4b <- conv4b
I0411 19:04:49.844486 32641 net.cpp:395] relu4b -> conv4b (in-place)
I0411 19:04:49.844497 32641 net.cpp:150] Setting up relu4b
I0411 19:04:49.844503 32641 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 19:04:49.844508 32641 net.cpp:165] Memory required for data: 10096214052
I0411 19:04:49.844512 32641 layer_factory.hpp:77] Creating layer pool4
I0411 19:04:49.844521 32641 net.cpp:100] Creating Layer pool4
I0411 19:04:49.844525 32641 net.cpp:434] pool4 <- conv4b
I0411 19:04:49.844534 32641 net.cpp:408] pool4 -> pool4
I0411 19:04:49.844574 32641 net.cpp:150] Setting up pool4
I0411 19:04:49.844599 32641 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:04:49.844615 32641 net.cpp:165] Memory required for data: 10105847844
I0411 19:04:49.844630 32641 layer_factory.hpp:77] Creating layer conv5a
I0411 19:04:49.844658 32641 net.cpp:100] Creating Layer conv5a
I0411 19:04:49.844666 32641 net.cpp:434] conv5a <- pool4
I0411 19:04:49.844674 32641 net.cpp:408] conv5a -> conv5a
I0411 19:04:49.907681 32641 net.cpp:150] Setting up conv5a
I0411 19:04:49.907714 32641 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:04:49.907717 32641 net.cpp:165] Memory required for data: 10115481636
I0411 19:04:49.907728 32641 layer_factory.hpp:77] Creating layer relu5a
I0411 19:04:49.907742 32641 net.cpp:100] Creating Layer relu5a
I0411 19:04:49.907747 32641 net.cpp:434] relu5a <- conv5a
I0411 19:04:49.907757 32641 net.cpp:395] relu5a -> conv5a (in-place)
I0411 19:04:49.907768 32641 net.cpp:150] Setting up relu5a
I0411 19:04:49.907774 32641 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:04:49.907778 32641 net.cpp:165] Memory required for data: 10125115428
I0411 19:04:49.907783 32641 layer_factory.hpp:77] Creating layer conv5b
I0411 19:04:49.907794 32641 net.cpp:100] Creating Layer conv5b
I0411 19:04:49.907801 32641 net.cpp:434] conv5b <- conv5a
I0411 19:04:49.907811 32641 net.cpp:408] conv5b -> conv5b
I0411 19:04:49.978562 32641 net.cpp:150] Setting up conv5b
I0411 19:04:49.978595 32641 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:04:49.978600 32641 net.cpp:165] Memory required for data: 10134749220
I0411 19:04:49.978611 32641 layer_factory.hpp:77] Creating layer relu5b
I0411 19:04:49.978624 32641 net.cpp:100] Creating Layer relu5b
I0411 19:04:49.978631 32641 net.cpp:434] relu5b <- conv5b
I0411 19:04:49.978641 32641 net.cpp:395] relu5b -> conv5b (in-place)
I0411 19:04:49.978652 32641 net.cpp:150] Setting up relu5b
I0411 19:04:49.978657 32641 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:04:49.978662 32641 net.cpp:165] Memory required for data: 10144383012
I0411 19:04:49.978665 32641 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0411 19:04:49.978675 32641 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0411 19:04:49.978680 32641 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0411 19:04:49.978689 32641 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0411 19:04:49.978698 32641 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0411 19:04:49.978732 32641 net.cpp:150] Setting up conv5b_relu5b_0_split
I0411 19:04:49.978739 32641 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:04:49.978744 32641 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:04:49.978750 32641 net.cpp:165] Memory required for data: 10163650596
I0411 19:04:49.978754 32641 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0411 19:04:49.978767 32641 net.cpp:100] Creating Layer rpn_conv/3x3
I0411 19:04:49.978771 32641 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0411 19:04:49.978781 32641 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0411 19:04:50.039536 32641 net.cpp:150] Setting up rpn_conv/3x3
I0411 19:04:50.039563 32641 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0411 19:04:50.039568 32641 net.cpp:165] Memory required for data: 10166796324
I0411 19:04:50.039587 32641 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0411 19:04:50.039600 32641 net.cpp:100] Creating Layer rpn_relu/3x3
I0411 19:04:50.039607 32641 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0411 19:04:50.039614 32641 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0411 19:04:50.039625 32641 net.cpp:150] Setting up rpn_relu/3x3
I0411 19:04:50.039630 32641 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0411 19:04:50.039633 32641 net.cpp:165] Memory required for data: 10169942052
I0411 19:04:50.039638 32641 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0411 19:04:50.039654 32641 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0411 19:04:50.039659 32641 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0411 19:04:50.039669 32641 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0411 19:04:50.097456 32641 net.cpp:150] Setting up rpn_conv/3x3_2
I0411 19:04:50.097487 32641 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0411 19:04:50.097492 32641 net.cpp:165] Memory required for data: 10170728484
I0411 19:04:50.097503 32641 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0411 19:04:50.097517 32641 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0411 19:04:50.097522 32641 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0411 19:04:50.097530 32641 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0411 19:04:50.097539 32641 net.cpp:150] Setting up rpn_relu/3x3_2
I0411 19:04:50.097544 32641 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0411 19:04:50.097548 32641 net.cpp:165] Memory required for data: 10171514916
I0411 19:04:50.097553 32641 layer_factory.hpp:77] Creating layer rpn/output_pool
I0411 19:04:50.097561 32641 net.cpp:100] Creating Layer rpn/output_pool
I0411 19:04:50.097566 32641 net.cpp:434] rpn/output_pool <- rpn/output_2
I0411 19:04:50.097573 32641 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0411 19:04:50.097620 32641 net.cpp:150] Setting up rpn/output_pool
I0411 19:04:50.097627 32641 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0411 19:04:50.097631 32641 net.cpp:165] Memory required for data: 10171711524
I0411 19:04:50.097635 32641 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0411 19:04:50.097642 32641 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0411 19:04:50.097647 32641 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0411 19:04:50.097654 32641 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0411 19:04:50.097662 32641 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0411 19:04:50.097700 32641 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0411 19:04:50.097709 32641 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0411 19:04:50.097714 32641 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0411 19:04:50.097719 32641 net.cpp:165] Memory required for data: 10172104740
I0411 19:04:50.097723 32641 layer_factory.hpp:77] Creating layer rpn_cls_score
I0411 19:04:50.097736 32641 net.cpp:100] Creating Layer rpn_cls_score
I0411 19:04:50.097741 32641 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0411 19:04:50.097750 32641 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0411 19:04:50.098230 32641 net.cpp:150] Setting up rpn_cls_score
I0411 19:04:50.098240 32641 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:04:50.098244 32641 net.cpp:165] Memory required for data: 10172133156
I0411 19:04:50.098253 32641 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0411 19:04:50.098259 32641 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0411 19:04:50.098264 32641 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0411 19:04:50.098273 32641 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0411 19:04:50.098282 32641 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0411 19:04:50.098325 32641 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0411 19:04:50.098333 32641 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:04:50.098338 32641 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:04:50.098343 32641 net.cpp:165] Memory required for data: 10172189988
I0411 19:04:50.098347 32641 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0411 19:04:50.098366 32641 net.cpp:100] Creating Layer rpn_twin_pred
I0411 19:04:50.098373 32641 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0411 19:04:50.098381 32641 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0411 19:04:50.098829 32641 net.cpp:150] Setting up rpn_twin_pred
I0411 19:04:50.098839 32641 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:04:50.098841 32641 net.cpp:165] Memory required for data: 10172218404
I0411 19:04:50.098850 32641 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0411 19:04:50.098858 32641 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0411 19:04:50.098863 32641 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0411 19:04:50.098871 32641 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0411 19:04:50.098879 32641 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0411 19:04:50.098927 32641 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0411 19:04:50.098938 32641 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:04:50.098944 32641 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:04:50.098948 32641 net.cpp:165] Memory required for data: 10172275236
I0411 19:04:50.098953 32641 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0411 19:04:50.098961 32641 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0411 19:04:50.098966 32641 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0411 19:04:50.098974 32641 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0411 19:04:50.099004 32641 net.cpp:150] Setting up rpn_cls_score_reshape
I0411 19:04:50.099016 32641 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 19:04:50.099020 32641 net.cpp:165] Memory required for data: 10172303652
I0411 19:04:50.099025 32641 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 19:04:50.099040 32641 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 19:04:50.099047 32641 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0411 19:04:50.099053 32641 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0411 19:04:50.099071 32641 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0411 19:04:50.099079 32641 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0411 19:04:50.099135 32641 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 19:04:50.099143 32641 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 19:04:50.099149 32641 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 19:04:50.099154 32641 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 19:04:50.099159 32641 net.cpp:165] Memory required for data: 10172388900
I0411 19:04:50.099162 32641 layer_factory.hpp:77] Creating layer rpn-data
I0411 19:04:50.099587 32641 net.cpp:100] Creating Layer rpn-data
I0411 19:04:50.099597 32641 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0411 19:04:50.099604 32641 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0411 19:04:50.099611 32641 net.cpp:434] rpn-data <- data_data_0_split_1
I0411 19:04:50.099619 32641 net.cpp:408] rpn-data -> rpn_labels
I0411 19:04:50.099630 32641 net.cpp:408] rpn-data -> rpn_twin_targets
I0411 19:04:50.099639 32641 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0411 19:04:50.099649 32641 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0411 19:04:50.101971 32641 net.cpp:150] Setting up rpn-data
I0411 19:04:50.101985 32641 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0411 19:04:50.101991 32641 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:04:50.101997 32641 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:04:50.102002 32641 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:04:50.102006 32641 net.cpp:165] Memory required for data: 10172488356
I0411 19:04:50.102011 32641 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0411 19:04:50.102020 32641 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0411 19:04:50.102025 32641 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0411 19:04:50.102031 32641 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0411 19:04:50.102041 32641 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0411 19:04:50.102078 32641 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0411 19:04:50.102087 32641 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0411 19:04:50.102092 32641 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0411 19:04:50.102097 32641 net.cpp:165] Memory required for data: 10172516772
I0411 19:04:50.102102 32641 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0411 19:04:50.102110 32641 net.cpp:100] Creating Layer rpn_loss_cls
I0411 19:04:50.102115 32641 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0411 19:04:50.102121 32641 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0411 19:04:50.102128 32641 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0411 19:04:50.102139 32641 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0411 19:04:50.102229 32641 net.cpp:150] Setting up rpn_loss_cls
I0411 19:04:50.102237 32641 net.cpp:157] Top shape: (1)
I0411 19:04:50.102241 32641 net.cpp:160]     with loss weight 1
I0411 19:04:50.102254 32641 net.cpp:165] Memory required for data: 10172516776
I0411 19:04:50.102258 32641 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0411 19:04:50.102267 32641 net.cpp:100] Creating Layer rpn_loss_twin
I0411 19:04:50.102272 32641 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0411 19:04:50.102278 32641 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0411 19:04:50.102284 32641 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0411 19:04:50.102289 32641 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0411 19:04:50.102296 32641 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0411 19:04:50.102371 32641 net.cpp:150] Setting up rpn_loss_twin
I0411 19:04:50.102380 32641 net.cpp:157] Top shape: (1)
I0411 19:04:50.102383 32641 net.cpp:160]     with loss weight 1
I0411 19:04:50.102389 32641 net.cpp:165] Memory required for data: 10172516780
I0411 19:04:50.102404 32641 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0411 19:04:50.102414 32641 net.cpp:100] Creating Layer rpn_accuarcy
I0411 19:04:50.102418 32641 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0411 19:04:50.102424 32641 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0411 19:04:50.102432 32641 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0411 19:04:50.102440 32641 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0411 19:04:50.102481 32641 net.cpp:150] Setting up rpn_accuarcy
I0411 19:04:50.102490 32641 net.cpp:157] Top shape: (1)
I0411 19:04:50.102495 32641 net.cpp:157] Top shape: 2 (2)
I0411 19:04:50.102499 32641 net.cpp:165] Memory required for data: 10172516792
I0411 19:04:50.102504 32641 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0411 19:04:50.102509 32641 net.cpp:100] Creating Layer rpn_cls_prob
I0411 19:04:50.102514 32641 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0411 19:04:50.102520 32641 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0411 19:04:50.102578 32641 net.cpp:150] Setting up rpn_cls_prob
I0411 19:04:50.102586 32641 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 19:04:50.102591 32641 net.cpp:165] Memory required for data: 10172545208
I0411 19:04:50.102594 32641 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0411 19:04:50.102602 32641 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0411 19:04:50.102607 32641 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0411 19:04:50.102614 32641 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0411 19:04:50.102645 32641 net.cpp:150] Setting up rpn_cls_prob_reshape
I0411 19:04:50.102654 32641 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:04:50.102658 32641 net.cpp:165] Memory required for data: 10172573624
I0411 19:04:50.102663 32641 layer_factory.hpp:77] Creating layer proposal
I0411 19:04:50.103215 32641 net.cpp:100] Creating Layer proposal
I0411 19:04:50.103227 32641 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0411 19:04:50.103235 32641 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0411 19:04:50.103242 32641 net.cpp:408] proposal -> rpn_rois
I0411 19:04:50.106714 32641 net.cpp:150] Setting up proposal
I0411 19:04:50.106727 32641 net.cpp:157] Top shape: 1 3 (3)
I0411 19:04:50.106731 32641 net.cpp:165] Memory required for data: 10172573636
I0411 19:04:50.106737 32641 layer_factory.hpp:77] Creating layer roi-data
I0411 19:04:50.106883 32641 net.cpp:100] Creating Layer roi-data
I0411 19:04:50.106892 32641 net.cpp:434] roi-data <- rpn_rois
I0411 19:04:50.106899 32641 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0411 19:04:50.106907 32641 net.cpp:408] roi-data -> rois
I0411 19:04:50.106917 32641 net.cpp:408] roi-data -> labels
I0411 19:04:50.106926 32641 net.cpp:408] roi-data -> twin_targets
I0411 19:04:50.106936 32641 net.cpp:408] roi-data -> twin_inside_weights
I0411 19:04:50.106945 32641 net.cpp:408] roi-data -> twin_outside_weights
I0411 19:04:50.107252 32641 net.cpp:150] Setting up roi-data
I0411 19:04:50.107264 32641 net.cpp:157] Top shape: 1 3 (3)
I0411 19:04:50.107270 32641 net.cpp:157] Top shape: 1 1 (1)
I0411 19:04:50.107275 32641 net.cpp:157] Top shape: 1 402 (402)
I0411 19:04:50.107278 32641 net.cpp:157] Top shape: 1 402 (402)
I0411 19:04:50.107283 32641 net.cpp:157] Top shape: 1 402 (402)
I0411 19:04:50.107287 32641 net.cpp:165] Memory required for data: 10172578476
I0411 19:04:50.107292 32641 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0411 19:04:50.107300 32641 net.cpp:100] Creating Layer labels_roi-data_1_split
I0411 19:04:50.107306 32641 net.cpp:434] labels_roi-data_1_split <- labels
I0411 19:04:50.107313 32641 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0411 19:04:50.107322 32641 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0411 19:04:50.107358 32641 net.cpp:150] Setting up labels_roi-data_1_split
I0411 19:04:50.107367 32641 net.cpp:157] Top shape: 1 1 (1)
I0411 19:04:50.107372 32641 net.cpp:157] Top shape: 1 1 (1)
I0411 19:04:50.107376 32641 net.cpp:165] Memory required for data: 10172578484
I0411 19:04:50.107380 32641 layer_factory.hpp:77] Creating layer roi_pool5
I0411 19:04:50.107388 32641 net.cpp:100] Creating Layer roi_pool5
I0411 19:04:50.107393 32641 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0411 19:04:50.107399 32641 net.cpp:434] roi_pool5 <- rois
I0411 19:04:50.107405 32641 net.cpp:408] roi_pool5 -> pool5
I0411 19:04:50.107414 32641 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0411 19:04:50.107422 32641 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0411 19:04:50.107460 32641 net.cpp:150] Setting up roi_pool5
I0411 19:04:50.107486 32641 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0411 19:04:50.107502 32641 net.cpp:165] Memory required for data: 10172611252
I0411 19:04:50.107518 32641 layer_factory.hpp:77] Creating layer fc6
I0411 19:04:50.107542 32641 net.cpp:100] Creating Layer fc6
I0411 19:04:50.107548 32641 net.cpp:434] fc6 <- pool5
I0411 19:04:50.107556 32641 net.cpp:408] fc6 -> fc6
I0411 19:04:50.397800 32641 net.cpp:150] Setting up fc6
I0411 19:04:50.397835 32641 net.cpp:157] Top shape: 1 4096 (4096)
I0411 19:04:50.397838 32641 net.cpp:165] Memory required for data: 10172627636
I0411 19:04:50.397850 32641 layer_factory.hpp:77] Creating layer relu6
I0411 19:04:50.397862 32641 net.cpp:100] Creating Layer relu6
I0411 19:04:50.397868 32641 net.cpp:434] relu6 <- fc6
I0411 19:04:50.397876 32641 net.cpp:395] relu6 -> fc6 (in-place)
I0411 19:04:50.397886 32641 net.cpp:150] Setting up relu6
I0411 19:04:50.397891 32641 net.cpp:157] Top shape: 1 4096 (4096)
I0411 19:04:50.397894 32641 net.cpp:165] Memory required for data: 10172644020
I0411 19:04:50.397897 32641 layer_factory.hpp:77] Creating layer drop6
I0411 19:04:50.397904 32641 net.cpp:100] Creating Layer drop6
I0411 19:04:50.397908 32641 net.cpp:434] drop6 <- fc6
I0411 19:04:50.397914 32641 net.cpp:395] drop6 -> fc6 (in-place)
I0411 19:04:50.397938 32641 net.cpp:150] Setting up drop6
I0411 19:04:50.397943 32641 net.cpp:157] Top shape: 1 4096 (4096)
I0411 19:04:50.397948 32641 net.cpp:165] Memory required for data: 10172660404
I0411 19:04:50.397953 32641 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0411 19:04:50.397961 32641 net.cpp:100] Creating Layer fc6_drop6_0_split
I0411 19:04:50.397965 32641 net.cpp:434] fc6_drop6_0_split <- fc6
I0411 19:04:50.397972 32641 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0411 19:04:50.397981 32641 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0411 19:04:50.398017 32641 net.cpp:150] Setting up fc6_drop6_0_split
I0411 19:04:50.398025 32641 net.cpp:157] Top shape: 1 4096 (4096)
I0411 19:04:50.398030 32641 net.cpp:157] Top shape: 1 4096 (4096)
I0411 19:04:50.398032 32641 net.cpp:165] Memory required for data: 10172693172
I0411 19:04:50.398036 32641 layer_factory.hpp:77] Creating layer cls_score
I0411 19:04:50.398046 32641 net.cpp:100] Creating Layer cls_score
I0411 19:04:50.398051 32641 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0411 19:04:50.398061 32641 net.cpp:408] cls_score -> cls_score
I0411 19:04:50.405153 32641 net.cpp:150] Setting up cls_score
I0411 19:04:50.405181 32641 net.cpp:157] Top shape: 1 201 (201)
I0411 19:04:50.405185 32641 net.cpp:165] Memory required for data: 10172693976
I0411 19:04:50.405197 32641 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0411 19:04:50.405208 32641 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0411 19:04:50.405215 32641 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0411 19:04:50.405223 32641 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0411 19:04:50.405236 32641 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0411 19:04:50.405272 32641 net.cpp:150] Setting up cls_score_cls_score_0_split
I0411 19:04:50.405278 32641 net.cpp:157] Top shape: 1 201 (201)
I0411 19:04:50.405282 32641 net.cpp:157] Top shape: 1 201 (201)
I0411 19:04:50.405287 32641 net.cpp:165] Memory required for data: 10172695584
I0411 19:04:50.405290 32641 layer_factory.hpp:77] Creating layer twin_pred
I0411 19:04:50.405303 32641 net.cpp:100] Creating Layer twin_pred
I0411 19:04:50.405308 32641 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0411 19:04:50.405315 32641 net.cpp:408] twin_pred -> twin_pred
I0411 19:04:50.418938 32641 net.cpp:150] Setting up twin_pred
I0411 19:04:50.418969 32641 net.cpp:157] Top shape: 1 402 (402)
I0411 19:04:50.418972 32641 net.cpp:165] Memory required for data: 10172697192
I0411 19:04:50.418984 32641 layer_factory.hpp:77] Creating layer loss_cls
I0411 19:04:50.419000 32641 net.cpp:100] Creating Layer loss_cls
I0411 19:04:50.419008 32641 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0411 19:04:50.419016 32641 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0411 19:04:50.419023 32641 net.cpp:408] loss_cls -> loss_cls
I0411 19:04:50.419036 32641 layer_factory.hpp:77] Creating layer loss_cls
I0411 19:04:50.419131 32641 net.cpp:150] Setting up loss_cls
I0411 19:04:50.419162 32641 net.cpp:157] Top shape: (1)
I0411 19:04:50.419178 32641 net.cpp:160]     with loss weight 1
I0411 19:04:50.419203 32641 net.cpp:165] Memory required for data: 10172697196
I0411 19:04:50.419219 32641 layer_factory.hpp:77] Creating layer loss_twin
I0411 19:04:50.419237 32641 net.cpp:100] Creating Layer loss_twin
I0411 19:04:50.419265 32641 net.cpp:434] loss_twin <- twin_pred
I0411 19:04:50.419275 32641 net.cpp:434] loss_twin <- twin_targets
I0411 19:04:50.419279 32641 net.cpp:434] loss_twin <- twin_inside_weights
I0411 19:04:50.419284 32641 net.cpp:434] loss_twin <- twin_outside_weights
I0411 19:04:50.419292 32641 net.cpp:408] loss_twin -> loss_twin
I0411 19:04:50.419386 32641 net.cpp:150] Setting up loss_twin
I0411 19:04:50.419395 32641 net.cpp:157] Top shape: (1)
I0411 19:04:50.419399 32641 net.cpp:160]     with loss weight 1
I0411 19:04:50.419405 32641 net.cpp:165] Memory required for data: 10172697200
I0411 19:04:50.419409 32641 layer_factory.hpp:77] Creating layer accuarcy
I0411 19:04:50.419420 32641 net.cpp:100] Creating Layer accuarcy
I0411 19:04:50.419425 32641 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0411 19:04:50.419431 32641 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0411 19:04:50.419438 32641 net.cpp:408] accuarcy -> accuarcy
I0411 19:04:50.419448 32641 net.cpp:150] Setting up accuarcy
I0411 19:04:50.419466 32641 net.cpp:157] Top shape: (1)
I0411 19:04:50.419482 32641 net.cpp:165] Memory required for data: 10172697204
I0411 19:04:50.419497 32641 net.cpp:228] accuarcy does not need backward computation.
I0411 19:04:50.419513 32641 net.cpp:226] loss_twin needs backward computation.
I0411 19:04:50.419528 32641 net.cpp:226] loss_cls needs backward computation.
I0411 19:04:50.419544 32641 net.cpp:226] twin_pred needs backward computation.
I0411 19:04:50.419565 32641 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0411 19:04:50.419569 32641 net.cpp:226] cls_score needs backward computation.
I0411 19:04:50.419574 32641 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0411 19:04:50.419579 32641 net.cpp:226] drop6 needs backward computation.
I0411 19:04:50.419584 32641 net.cpp:226] relu6 needs backward computation.
I0411 19:04:50.419587 32641 net.cpp:226] fc6 needs backward computation.
I0411 19:04:50.419592 32641 net.cpp:226] roi_pool5 needs backward computation.
I0411 19:04:50.419597 32641 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0411 19:04:50.419602 32641 net.cpp:226] roi-data needs backward computation.
I0411 19:04:50.419608 32641 net.cpp:226] proposal needs backward computation.
I0411 19:04:50.419613 32641 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0411 19:04:50.419618 32641 net.cpp:226] rpn_cls_prob needs backward computation.
I0411 19:04:50.419623 32641 net.cpp:228] rpn_accuarcy does not need backward computation.
I0411 19:04:50.419627 32641 net.cpp:226] rpn_loss_twin needs backward computation.
I0411 19:04:50.419634 32641 net.cpp:226] rpn_loss_cls needs backward computation.
I0411 19:04:50.419642 32641 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0411 19:04:50.419661 32641 net.cpp:226] rpn-data needs backward computation.
I0411 19:04:50.419678 32641 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0411 19:04:50.419695 32641 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0411 19:04:50.419710 32641 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0411 19:04:50.419726 32641 net.cpp:226] rpn_twin_pred needs backward computation.
I0411 19:04:50.419741 32641 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0411 19:04:50.419755 32641 net.cpp:226] rpn_cls_score needs backward computation.
I0411 19:04:50.419770 32641 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0411 19:04:50.419798 32641 net.cpp:226] rpn/output_pool needs backward computation.
I0411 19:04:50.419806 32641 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0411 19:04:50.419813 32641 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0411 19:04:50.419818 32641 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0411 19:04:50.419823 32641 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0411 19:04:50.419828 32641 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0411 19:04:50.419833 32641 net.cpp:226] relu5b needs backward computation.
I0411 19:04:50.419837 32641 net.cpp:226] conv5b needs backward computation.
I0411 19:04:50.419842 32641 net.cpp:226] relu5a needs backward computation.
I0411 19:04:50.419847 32641 net.cpp:226] conv5a needs backward computation.
I0411 19:04:50.419852 32641 net.cpp:226] pool4 needs backward computation.
I0411 19:04:50.419857 32641 net.cpp:226] relu4b needs backward computation.
I0411 19:04:50.419860 32641 net.cpp:226] conv4b needs backward computation.
I0411 19:04:50.419864 32641 net.cpp:226] relu4a needs backward computation.
I0411 19:04:50.419868 32641 net.cpp:226] conv4a needs backward computation.
I0411 19:04:50.419873 32641 net.cpp:226] pool3 needs backward computation.
I0411 19:04:50.419878 32641 net.cpp:226] relu3b needs backward computation.
I0411 19:04:50.419883 32641 net.cpp:226] conv3b needs backward computation.
I0411 19:04:50.419886 32641 net.cpp:226] relu3a needs backward computation.
I0411 19:04:50.419891 32641 net.cpp:226] conv3a needs backward computation.
I0411 19:04:50.419896 32641 net.cpp:228] pool2 does not need backward computation.
I0411 19:04:50.419901 32641 net.cpp:228] relu2a does not need backward computation.
I0411 19:04:50.419905 32641 net.cpp:228] conv2a does not need backward computation.
I0411 19:04:50.419910 32641 net.cpp:228] pool1 does not need backward computation.
I0411 19:04:50.419915 32641 net.cpp:228] relu1a does not need backward computation.
I0411 19:04:50.419919 32641 net.cpp:228] conv1a does not need backward computation.
I0411 19:04:50.419924 32641 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0411 19:04:50.419930 32641 net.cpp:228] data_data_0_split does not need backward computation.
I0411 19:04:50.419935 32641 net.cpp:228] data does not need backward computation.
I0411 19:04:50.419939 32641 net.cpp:270] This network produces output accuarcy
I0411 19:04:50.419945 32641 net.cpp:270] This network produces output loss_cls
I0411 19:04:50.419950 32641 net.cpp:270] This network produces output loss_twin
I0411 19:04:50.419955 32641 net.cpp:270] This network produces output rpn_accuarcy
I0411 19:04:50.419958 32641 net.cpp:270] This network produces output rpn_accuarcy_class
I0411 19:04:50.419963 32641 net.cpp:270] This network produces output rpn_cls_loss
I0411 19:04:50.419968 32641 net.cpp:270] This network produces output rpn_loss_twin
I0411 19:04:50.420019 32641 net.cpp:283] Network initialization done.
I0411 19:04:50.420163 32641 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0411 19:04:51.142699 32641 net.cpp:761] Ignoring source layer pool5
I0411 19:04:51.165566 32641 net.cpp:761] Ignoring source layer fc7
I0411 19:04:51.165587 32641 net.cpp:761] Ignoring source layer relu7
I0411 19:04:51.165592 32641 net.cpp:761] Ignoring source layer drop7
I0411 19:04:51.165596 32641 net.cpp:761] Ignoring source layer fc8-200
I0411 19:04:51.165598 32641 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
99
(array([0]), array([97]))
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 95, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 129, in forward
    top[top_ind].reshape(*(blob.shape))
AttributeError: 'tuple' object has no attribute 'shape'
Terminating BlobFetcher
