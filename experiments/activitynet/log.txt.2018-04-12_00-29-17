Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 00:29:18.733510 19449 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 00:29:18.733544 19449 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 00:29:18.734091 19449 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 00:29:18.734357 19449 layer_factory.hpp:77] Creating layer data
I0412 00:29:18.745885 19449 net.cpp:100] Creating Layer data
I0412 00:29:18.745944 19449 net.cpp:408] data -> data
I0412 00:29:18.745977 19449 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 00:29:18.756580 19449 net.cpp:150] Setting up data
I0412 00:29:18.756605 19449 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 00:29:18.756613 19449 net.cpp:157] Top shape: 1 3 (3)
I0412 00:29:18.756616 19449 net.cpp:165] Memory required for data: 115605516
I0412 00:29:18.756624 19449 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 00:29:18.756642 19449 net.cpp:100] Creating Layer data_data_0_split
I0412 00:29:18.756649 19449 net.cpp:434] data_data_0_split <- data
I0412 00:29:18.756659 19449 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 00:29:18.756671 19449 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 00:29:18.756732 19449 net.cpp:150] Setting up data_data_0_split
I0412 00:29:18.756760 19449 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 00:29:18.756777 19449 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 00:29:18.756788 19449 net.cpp:165] Memory required for data: 346816524
I0412 00:29:18.756794 19449 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 00:29:18.756804 19449 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 00:29:18.756808 19449 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 00:29:18.756814 19449 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 00:29:18.756824 19449 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 00:29:18.756872 19449 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 00:29:18.756880 19449 net.cpp:157] Top shape: 1 3 (3)
I0412 00:29:18.756882 19449 net.cpp:157] Top shape: 1 3 (3)
I0412 00:29:18.756886 19449 net.cpp:165] Memory required for data: 346816548
I0412 00:29:18.756889 19449 layer_factory.hpp:77] Creating layer conv1a
I0412 00:29:18.756901 19449 net.cpp:100] Creating Layer conv1a
I0412 00:29:18.756903 19449 net.cpp:434] conv1a <- data_data_0_split_0
I0412 00:29:18.756908 19449 net.cpp:408] conv1a -> conv1a
I0412 00:29:18.775794 19449 net.cpp:150] Setting up conv1a
I0412 00:29:18.775866 19449 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 00:29:18.775882 19449 net.cpp:165] Memory required for data: 2813067300
I0412 00:29:18.775913 19449 layer_factory.hpp:77] Creating layer relu1a
I0412 00:29:18.775939 19449 net.cpp:100] Creating Layer relu1a
I0412 00:29:18.775954 19449 net.cpp:434] relu1a <- conv1a
I0412 00:29:18.775970 19449 net.cpp:395] relu1a -> conv1a (in-place)
I0412 00:29:18.775992 19449 net.cpp:150] Setting up relu1a
I0412 00:29:18.776008 19449 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 00:29:18.776021 19449 net.cpp:165] Memory required for data: 5279318052
I0412 00:29:18.776033 19449 layer_factory.hpp:77] Creating layer pool1
I0412 00:29:18.776052 19449 net.cpp:100] Creating Layer pool1
I0412 00:29:18.776065 19449 net.cpp:434] pool1 <- conv1a
I0412 00:29:18.776080 19449 net.cpp:408] pool1 -> pool1
I0412 00:29:18.776221 19449 net.cpp:150] Setting up pool1
I0412 00:29:18.776244 19449 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 00:29:18.776259 19449 net.cpp:165] Memory required for data: 5895880740
I0412 00:29:18.776273 19449 layer_factory.hpp:77] Creating layer conv2a
I0412 00:29:18.776298 19449 net.cpp:100] Creating Layer conv2a
I0412 00:29:18.776314 19449 net.cpp:434] conv2a <- pool1
I0412 00:29:18.776352 19449 net.cpp:408] conv2a -> conv2a
I0412 00:29:18.786559 19449 net.cpp:150] Setting up conv2a
I0412 00:29:18.786628 19449 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 00:29:18.786645 19449 net.cpp:165] Memory required for data: 7129006116
I0412 00:29:18.786677 19449 layer_factory.hpp:77] Creating layer relu2a
I0412 00:29:18.786702 19449 net.cpp:100] Creating Layer relu2a
I0412 00:29:18.786718 19449 net.cpp:434] relu2a <- conv2a
I0412 00:29:18.786736 19449 net.cpp:395] relu2a -> conv2a (in-place)
I0412 00:29:18.786761 19449 net.cpp:150] Setting up relu2a
I0412 00:29:18.786779 19449 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 00:29:18.786792 19449 net.cpp:165] Memory required for data: 8362131492
I0412 00:29:18.786814 19449 layer_factory.hpp:77] Creating layer pool2
I0412 00:29:18.786839 19449 net.cpp:100] Creating Layer pool2
I0412 00:29:18.786854 19449 net.cpp:434] pool2 <- conv2a
I0412 00:29:18.786869 19449 net.cpp:408] pool2 -> pool2
I0412 00:29:18.786985 19449 net.cpp:150] Setting up pool2
I0412 00:29:18.787006 19449 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 00:29:18.787019 19449 net.cpp:165] Memory required for data: 8516272164
I0412 00:29:18.787032 19449 layer_factory.hpp:77] Creating layer conv3a
I0412 00:29:18.787055 19449 net.cpp:100] Creating Layer conv3a
I0412 00:29:18.787070 19449 net.cpp:434] conv3a <- pool2
I0412 00:29:18.787087 19449 net.cpp:408] conv3a -> conv3a
I0412 00:29:18.799896 19449 net.cpp:150] Setting up conv3a
I0412 00:29:18.799962 19449 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 00:29:18.799979 19449 net.cpp:165] Memory required for data: 8824553508
I0412 00:29:18.800006 19449 layer_factory.hpp:77] Creating layer relu3a
I0412 00:29:18.800029 19449 net.cpp:100] Creating Layer relu3a
I0412 00:29:18.800042 19449 net.cpp:434] relu3a <- conv3a
I0412 00:29:18.800061 19449 net.cpp:395] relu3a -> conv3a (in-place)
I0412 00:29:18.800082 19449 net.cpp:150] Setting up relu3a
I0412 00:29:18.800097 19449 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 00:29:18.800109 19449 net.cpp:165] Memory required for data: 9132834852
I0412 00:29:18.800122 19449 layer_factory.hpp:77] Creating layer conv3b
I0412 00:29:18.800143 19449 net.cpp:100] Creating Layer conv3b
I0412 00:29:18.800155 19449 net.cpp:434] conv3b <- conv3a
I0412 00:29:18.800173 19449 net.cpp:408] conv3b -> conv3b
I0412 00:29:18.825739 19449 net.cpp:150] Setting up conv3b
I0412 00:29:18.825765 19449 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 00:29:18.825770 19449 net.cpp:165] Memory required for data: 9441116196
I0412 00:29:18.825783 19449 layer_factory.hpp:77] Creating layer relu3b
I0412 00:29:18.825794 19449 net.cpp:100] Creating Layer relu3b
I0412 00:29:18.825811 19449 net.cpp:434] relu3b <- conv3b
I0412 00:29:18.825824 19449 net.cpp:395] relu3b -> conv3b (in-place)
I0412 00:29:18.825847 19449 net.cpp:150] Setting up relu3b
I0412 00:29:18.825855 19449 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 00:29:18.825860 19449 net.cpp:165] Memory required for data: 9749397540
I0412 00:29:18.825865 19449 layer_factory.hpp:77] Creating layer pool3
I0412 00:29:18.825875 19449 net.cpp:100] Creating Layer pool3
I0412 00:29:18.825879 19449 net.cpp:434] pool3 <- conv3b
I0412 00:29:18.825887 19449 net.cpp:408] pool3 -> pool3
I0412 00:29:18.825948 19449 net.cpp:150] Setting up pool3
I0412 00:29:18.825956 19449 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 00:29:18.825961 19449 net.cpp:165] Memory required for data: 9787932708
I0412 00:29:18.825965 19449 layer_factory.hpp:77] Creating layer conv4a
I0412 00:29:18.825978 19449 net.cpp:100] Creating Layer conv4a
I0412 00:29:18.825984 19449 net.cpp:434] conv4a <- pool3
I0412 00:29:18.825992 19449 net.cpp:408] conv4a -> conv4a
I0412 00:29:18.859685 19449 net.cpp:150] Setting up conv4a
I0412 00:29:18.859714 19449 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 00:29:18.859719 19449 net.cpp:165] Memory required for data: 9865003044
I0412 00:29:18.859738 19449 layer_factory.hpp:77] Creating layer relu4a
I0412 00:29:18.859752 19449 net.cpp:100] Creating Layer relu4a
I0412 00:29:18.859762 19449 net.cpp:434] relu4a <- conv4a
I0412 00:29:18.859773 19449 net.cpp:395] relu4a -> conv4a (in-place)
I0412 00:29:18.859786 19449 net.cpp:150] Setting up relu4a
I0412 00:29:18.859793 19449 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 00:29:18.859797 19449 net.cpp:165] Memory required for data: 9942073380
I0412 00:29:18.859802 19449 layer_factory.hpp:77] Creating layer conv4b
I0412 00:29:18.859817 19449 net.cpp:100] Creating Layer conv4b
I0412 00:29:18.859819 19449 net.cpp:434] conv4b <- conv4a
I0412 00:29:18.859825 19449 net.cpp:408] conv4b -> conv4b
I0412 00:29:18.920302 19449 net.cpp:150] Setting up conv4b
I0412 00:29:18.920397 19449 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 00:29:18.920413 19449 net.cpp:165] Memory required for data: 10019143716
I0412 00:29:18.920434 19449 layer_factory.hpp:77] Creating layer relu4b
I0412 00:29:18.920446 19449 net.cpp:100] Creating Layer relu4b
I0412 00:29:18.920454 19449 net.cpp:434] relu4b <- conv4b
I0412 00:29:18.920464 19449 net.cpp:395] relu4b -> conv4b (in-place)
I0412 00:29:18.920476 19449 net.cpp:150] Setting up relu4b
I0412 00:29:18.920482 19449 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 00:29:18.920487 19449 net.cpp:165] Memory required for data: 10096214052
I0412 00:29:18.920490 19449 layer_factory.hpp:77] Creating layer pool4
I0412 00:29:18.920500 19449 net.cpp:100] Creating Layer pool4
I0412 00:29:18.920506 19449 net.cpp:434] pool4 <- conv4b
I0412 00:29:18.920512 19449 net.cpp:408] pool4 -> pool4
I0412 00:29:18.920565 19449 net.cpp:150] Setting up pool4
I0412 00:29:18.920573 19449 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 00:29:18.920578 19449 net.cpp:165] Memory required for data: 10105847844
I0412 00:29:18.920581 19449 layer_factory.hpp:77] Creating layer conv5a
I0412 00:29:18.920594 19449 net.cpp:100] Creating Layer conv5a
I0412 00:29:18.920600 19449 net.cpp:434] conv5a <- pool4
I0412 00:29:18.920609 19449 net.cpp:408] conv5a -> conv5a
I0412 00:29:18.981662 19449 net.cpp:150] Setting up conv5a
I0412 00:29:18.981690 19449 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 00:29:18.981694 19449 net.cpp:165] Memory required for data: 10115481636
I0412 00:29:18.981705 19449 layer_factory.hpp:77] Creating layer relu5a
I0412 00:29:18.981719 19449 net.cpp:100] Creating Layer relu5a
I0412 00:29:18.981725 19449 net.cpp:434] relu5a <- conv5a
I0412 00:29:18.981734 19449 net.cpp:395] relu5a -> conv5a (in-place)
I0412 00:29:18.981743 19449 net.cpp:150] Setting up relu5a
I0412 00:29:18.981748 19449 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 00:29:18.981751 19449 net.cpp:165] Memory required for data: 10125115428
I0412 00:29:18.981755 19449 layer_factory.hpp:77] Creating layer conv5b
I0412 00:29:18.981768 19449 net.cpp:100] Creating Layer conv5b
I0412 00:29:18.981772 19449 net.cpp:434] conv5b <- conv5a
I0412 00:29:18.981781 19449 net.cpp:408] conv5b -> conv5b
I0412 00:29:19.044042 19449 net.cpp:150] Setting up conv5b
I0412 00:29:19.044071 19449 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 00:29:19.044076 19449 net.cpp:165] Memory required for data: 10134749220
I0412 00:29:19.044087 19449 layer_factory.hpp:77] Creating layer relu5b
I0412 00:29:19.044097 19449 net.cpp:100] Creating Layer relu5b
I0412 00:29:19.044103 19449 net.cpp:434] relu5b <- conv5b
I0412 00:29:19.044111 19449 net.cpp:395] relu5b -> conv5b (in-place)
I0412 00:29:19.044121 19449 net.cpp:150] Setting up relu5b
I0412 00:29:19.044126 19449 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 00:29:19.044128 19449 net.cpp:165] Memory required for data: 10144383012
I0412 00:29:19.044132 19449 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 00:29:19.044140 19449 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 00:29:19.044144 19449 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 00:29:19.044150 19449 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 00:29:19.044158 19449 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 00:29:19.044221 19449 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 00:29:19.044230 19449 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 00:29:19.044235 19449 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 00:29:19.044239 19449 net.cpp:165] Memory required for data: 10163650596
I0412 00:29:19.044243 19449 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 00:29:19.044262 19449 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 00:29:19.044267 19449 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 00:29:19.044276 19449 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 00:29:19.109683 19449 net.cpp:150] Setting up rpn_conv/3x3
I0412 00:29:19.109710 19449 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 00:29:19.109714 19449 net.cpp:165] Memory required for data: 10166796324
I0412 00:29:19.109735 19449 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 00:29:19.109746 19449 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 00:29:19.109752 19449 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 00:29:19.109760 19449 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 00:29:19.109776 19449 net.cpp:150] Setting up rpn_relu/3x3
I0412 00:29:19.109781 19449 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 00:29:19.109784 19449 net.cpp:165] Memory required for data: 10169942052
I0412 00:29:19.109788 19449 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 00:29:19.109808 19449 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 00:29:19.109813 19449 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 00:29:19.109823 19449 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 00:29:19.175215 19449 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 00:29:19.175251 19449 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 00:29:19.175256 19449 net.cpp:165] Memory required for data: 10170728484
I0412 00:29:19.175266 19449 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 00:29:19.175281 19449 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 00:29:19.175288 19449 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 00:29:19.175295 19449 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 00:29:19.175307 19449 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 00:29:19.175313 19449 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 00:29:19.175318 19449 net.cpp:165] Memory required for data: 10171514916
I0412 00:29:19.175321 19449 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 00:29:19.175333 19449 net.cpp:100] Creating Layer rpn/output_pool
I0412 00:29:19.175338 19449 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 00:29:19.175346 19449 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 00:29:19.175400 19449 net.cpp:150] Setting up rpn/output_pool
I0412 00:29:19.175407 19449 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 00:29:19.175411 19449 net.cpp:165] Memory required for data: 10171711524
I0412 00:29:19.175415 19449 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 00:29:19.175424 19449 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 00:29:19.175431 19449 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 00:29:19.175436 19449 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 00:29:19.175444 19449 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 00:29:19.175488 19449 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 00:29:19.175495 19449 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 00:29:19.175500 19449 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 00:29:19.175504 19449 net.cpp:165] Memory required for data: 10172104740
I0412 00:29:19.175510 19449 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 00:29:19.175523 19449 net.cpp:100] Creating Layer rpn_cls_score
I0412 00:29:19.175526 19449 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 00:29:19.175534 19449 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 00:29:19.176271 19449 net.cpp:150] Setting up rpn_cls_score
I0412 00:29:19.176285 19449 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 00:29:19.176288 19449 net.cpp:165] Memory required for data: 10172133156
I0412 00:29:19.176297 19449 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 00:29:19.176306 19449 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 00:29:19.176311 19449 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 00:29:19.176321 19449 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 00:29:19.176364 19449 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 00:29:19.176425 19449 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 00:29:19.176434 19449 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 00:29:19.176439 19449 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 00:29:19.176442 19449 net.cpp:165] Memory required for data: 10172189988
I0412 00:29:19.176446 19449 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 00:29:19.176466 19449 net.cpp:100] Creating Layer rpn_twin_pred
I0412 00:29:19.176473 19449 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 00:29:19.176481 19449 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 00:29:19.177027 19449 net.cpp:150] Setting up rpn_twin_pred
I0412 00:29:19.177037 19449 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 00:29:19.177040 19449 net.cpp:165] Memory required for data: 10172218404
I0412 00:29:19.177048 19449 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 00:29:19.177055 19449 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 00:29:19.177062 19449 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 00:29:19.177069 19449 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 00:29:19.177078 19449 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 00:29:19.177124 19449 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 00:29:19.177131 19449 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 00:29:19.177136 19449 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 00:29:19.177140 19449 net.cpp:165] Memory required for data: 10172275236
I0412 00:29:19.177145 19449 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 00:29:19.177156 19449 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 00:29:19.177162 19449 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 00:29:19.177172 19449 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 00:29:19.177203 19449 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 00:29:19.177212 19449 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 00:29:19.177215 19449 net.cpp:165] Memory required for data: 10172303652
I0412 00:29:19.177220 19449 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 00:29:19.177227 19449 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 00:29:19.177232 19449 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 00:29:19.177240 19449 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 00:29:19.177258 19449 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 00:29:19.177265 19449 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 00:29:19.177330 19449 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 00:29:19.177338 19449 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 00:29:19.177345 19449 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 00:29:19.177350 19449 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 00:29:19.177356 19449 net.cpp:165] Memory required for data: 10172388900
I0412 00:29:19.177361 19449 layer_factory.hpp:77] Creating layer rpn-data
I0412 00:29:19.177740 19449 net.cpp:100] Creating Layer rpn-data
I0412 00:29:19.177750 19449 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 00:29:19.177757 19449 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 00:29:19.177763 19449 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 00:29:19.177774 19449 net.cpp:408] rpn-data -> rpn_labels
I0412 00:29:19.177784 19449 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 00:29:19.177794 19449 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 00:29:19.177803 19449 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 00:29:19.180403 19449 net.cpp:150] Setting up rpn-data
I0412 00:29:19.180426 19449 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 00:29:19.180433 19449 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 00:29:19.180438 19449 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 00:29:19.180443 19449 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 00:29:19.180446 19449 net.cpp:165] Memory required for data: 10172488356
I0412 00:29:19.180452 19449 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 00:29:19.180461 19449 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 00:29:19.180469 19449 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 00:29:19.180476 19449 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 00:29:19.180488 19449 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 00:29:19.180529 19449 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 00:29:19.180537 19449 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 00:29:19.180542 19449 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 00:29:19.180546 19449 net.cpp:165] Memory required for data: 10172516772
I0412 00:29:19.180552 19449 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 00:29:19.180560 19449 net.cpp:100] Creating Layer rpn_loss_cls
I0412 00:29:19.180567 19449 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 00:29:19.180572 19449 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 00:29:19.180579 19449 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 00:29:19.180590 19449 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 00:29:19.180702 19449 net.cpp:150] Setting up rpn_loss_cls
I0412 00:29:19.180708 19449 net.cpp:157] Top shape: (1)
I0412 00:29:19.180712 19449 net.cpp:160]     with loss weight 1
I0412 00:29:19.180727 19449 net.cpp:165] Memory required for data: 10172516776
I0412 00:29:19.180730 19449 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 00:29:19.180742 19449 net.cpp:100] Creating Layer rpn_loss_twin
I0412 00:29:19.180748 19449 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 00:29:19.180754 19449 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 00:29:19.180760 19449 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 00:29:19.180765 19449 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 00:29:19.180773 19449 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 00:29:19.180863 19449 net.cpp:150] Setting up rpn_loss_twin
I0412 00:29:19.180869 19449 net.cpp:157] Top shape: (1)
I0412 00:29:19.180873 19449 net.cpp:160]     with loss weight 1
I0412 00:29:19.180879 19449 net.cpp:165] Memory required for data: 10172516780
I0412 00:29:19.180884 19449 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 00:29:19.180891 19449 net.cpp:100] Creating Layer rpn_accuarcy
I0412 00:29:19.180896 19449 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 00:29:19.180902 19449 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 00:29:19.180909 19449 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 00:29:19.180917 19449 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 00:29:19.180964 19449 net.cpp:150] Setting up rpn_accuarcy
I0412 00:29:19.180970 19449 net.cpp:157] Top shape: (1)
I0412 00:29:19.180975 19449 net.cpp:157] Top shape: 2 (2)
I0412 00:29:19.180979 19449 net.cpp:165] Memory required for data: 10172516792
I0412 00:29:19.180984 19449 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 00:29:19.180989 19449 net.cpp:100] Creating Layer rpn_cls_prob
I0412 00:29:19.180995 19449 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 00:29:19.181000 19449 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 00:29:19.181071 19449 net.cpp:150] Setting up rpn_cls_prob
I0412 00:29:19.181079 19449 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 00:29:19.181082 19449 net.cpp:165] Memory required for data: 10172545208
I0412 00:29:19.181087 19449 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 00:29:19.181097 19449 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 00:29:19.181102 19449 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 00:29:19.181109 19449 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 00:29:19.181150 19449 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 00:29:19.181159 19449 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 00:29:19.181164 19449 net.cpp:165] Memory required for data: 10172573624
I0412 00:29:19.181169 19449 layer_factory.hpp:77] Creating layer proposal
I0412 00:29:19.181955 19449 net.cpp:100] Creating Layer proposal
I0412 00:29:19.181968 19449 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 00:29:19.181974 19449 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 00:29:19.181983 19449 net.cpp:408] proposal -> rpn_rois
I0412 00:29:19.185818 19449 net.cpp:150] Setting up proposal
I0412 00:29:19.185887 19449 net.cpp:157] Top shape: 1 3 (3)
I0412 00:29:19.185901 19449 net.cpp:165] Memory required for data: 10172573636
I0412 00:29:19.185917 19449 layer_factory.hpp:77] Creating layer roi-data
I0412 00:29:19.186151 19449 net.cpp:100] Creating Layer roi-data
I0412 00:29:19.186174 19449 net.cpp:434] roi-data <- rpn_rois
I0412 00:29:19.186192 19449 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 00:29:19.186210 19449 net.cpp:408] roi-data -> rois
I0412 00:29:19.186229 19449 net.cpp:408] roi-data -> labels
I0412 00:29:19.186246 19449 net.cpp:408] roi-data -> twin_targets
I0412 00:29:19.186264 19449 net.cpp:408] roi-data -> twin_inside_weights
I0412 00:29:19.186281 19449 net.cpp:408] roi-data -> twin_outside_weights
I0412 00:29:19.186794 19449 net.cpp:150] Setting up roi-data
I0412 00:29:19.186822 19449 net.cpp:157] Top shape: 1 3 (3)
I0412 00:29:19.186837 19449 net.cpp:157] Top shape: 1 1 (1)
I0412 00:29:19.186851 19449 net.cpp:157] Top shape: 1 402 (402)
I0412 00:29:19.186864 19449 net.cpp:157] Top shape: 1 402 (402)
I0412 00:29:19.186877 19449 net.cpp:157] Top shape: 1 402 (402)
I0412 00:29:19.186889 19449 net.cpp:165] Memory required for data: 10172578476
I0412 00:29:19.186902 19449 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 00:29:19.186920 19449 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 00:29:19.186933 19449 net.cpp:434] labels_roi-data_1_split <- labels
I0412 00:29:19.186949 19449 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 00:29:19.186967 19449 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 00:29:19.187028 19449 net.cpp:150] Setting up labels_roi-data_1_split
I0412 00:29:19.187047 19449 net.cpp:157] Top shape: 1 1 (1)
I0412 00:29:19.187062 19449 net.cpp:157] Top shape: 1 1 (1)
I0412 00:29:19.187073 19449 net.cpp:165] Memory required for data: 10172578484
I0412 00:29:19.187086 19449 layer_factory.hpp:77] Creating layer roi_pool5
I0412 00:29:19.187104 19449 net.cpp:100] Creating Layer roi_pool5
I0412 00:29:19.187119 19449 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 00:29:19.187145 19449 net.cpp:434] roi_pool5 <- rois
I0412 00:29:19.187161 19449 net.cpp:408] roi_pool5 -> pool5
I0412 00:29:19.187180 19449 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 00:29:19.187201 19449 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 00:29:19.187268 19449 net.cpp:150] Setting up roi_pool5
I0412 00:29:19.187288 19449 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 00:29:19.187300 19449 net.cpp:165] Memory required for data: 10172611252
I0412 00:29:19.187314 19449 layer_factory.hpp:77] Creating layer fc6
I0412 00:29:19.187335 19449 net.cpp:100] Creating Layer fc6
I0412 00:29:19.187348 19449 net.cpp:434] fc6 <- pool5
I0412 00:29:19.187364 19449 net.cpp:408] fc6 -> fc6
I0412 00:29:19.575703 19449 net.cpp:150] Setting up fc6
I0412 00:29:19.575742 19449 net.cpp:157] Top shape: 1 4096 (4096)
I0412 00:29:19.575747 19449 net.cpp:165] Memory required for data: 10172627636
I0412 00:29:19.575760 19449 layer_factory.hpp:77] Creating layer relu6
I0412 00:29:19.575772 19449 net.cpp:100] Creating Layer relu6
I0412 00:29:19.575778 19449 net.cpp:434] relu6 <- fc6
I0412 00:29:19.575785 19449 net.cpp:395] relu6 -> fc6 (in-place)
I0412 00:29:19.575798 19449 net.cpp:150] Setting up relu6
I0412 00:29:19.575808 19449 net.cpp:157] Top shape: 1 4096 (4096)
I0412 00:29:19.575814 19449 net.cpp:165] Memory required for data: 10172644020
I0412 00:29:19.575817 19449 layer_factory.hpp:77] Creating layer drop6
I0412 00:29:19.575831 19449 net.cpp:100] Creating Layer drop6
I0412 00:29:19.575837 19449 net.cpp:434] drop6 <- fc6
I0412 00:29:19.575845 19449 net.cpp:395] drop6 -> fc6 (in-place)
I0412 00:29:19.575877 19449 net.cpp:150] Setting up drop6
I0412 00:29:19.575886 19449 net.cpp:157] Top shape: 1 4096 (4096)
I0412 00:29:19.575891 19449 net.cpp:165] Memory required for data: 10172660404
I0412 00:29:19.575896 19449 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 00:29:19.575906 19449 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 00:29:19.575908 19449 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 00:29:19.575914 19449 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 00:29:19.575920 19449 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 00:29:19.575971 19449 net.cpp:150] Setting up fc6_drop6_0_split
I0412 00:29:19.575981 19449 net.cpp:157] Top shape: 1 4096 (4096)
I0412 00:29:19.575986 19449 net.cpp:157] Top shape: 1 4096 (4096)
I0412 00:29:19.575991 19449 net.cpp:165] Memory required for data: 10172693172
I0412 00:29:19.575997 19449 layer_factory.hpp:77] Creating layer cls_score
I0412 00:29:19.576009 19449 net.cpp:100] Creating Layer cls_score
I0412 00:29:19.576015 19449 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 00:29:19.576025 19449 net.cpp:408] cls_score -> cls_score
I0412 00:29:19.584127 19449 net.cpp:150] Setting up cls_score
I0412 00:29:19.584141 19449 net.cpp:157] Top shape: 1 201 (201)
I0412 00:29:19.584143 19449 net.cpp:165] Memory required for data: 10172693976
I0412 00:29:19.584151 19449 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 00:29:19.584157 19449 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 00:29:19.584161 19449 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 00:29:19.584167 19449 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 00:29:19.584177 19449 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 00:29:19.584216 19449 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 00:29:19.584223 19449 net.cpp:157] Top shape: 1 201 (201)
I0412 00:29:19.584226 19449 net.cpp:157] Top shape: 1 201 (201)
I0412 00:29:19.584229 19449 net.cpp:165] Memory required for data: 10172695584
I0412 00:29:19.584233 19449 layer_factory.hpp:77] Creating layer twin_pred
I0412 00:29:19.584239 19449 net.cpp:100] Creating Layer twin_pred
I0412 00:29:19.584244 19449 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 00:29:19.584249 19449 net.cpp:408] twin_pred -> twin_pred
I0412 00:29:19.599686 19449 net.cpp:150] Setting up twin_pred
I0412 00:29:19.599706 19449 net.cpp:157] Top shape: 1 402 (402)
I0412 00:29:19.599709 19449 net.cpp:165] Memory required for data: 10172697192
I0412 00:29:19.599719 19449 layer_factory.hpp:77] Creating layer loss_cls
I0412 00:29:19.599728 19449 net.cpp:100] Creating Layer loss_cls
I0412 00:29:19.599733 19449 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 00:29:19.599740 19449 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 00:29:19.599745 19449 net.cpp:408] loss_cls -> loss_cls
I0412 00:29:19.599756 19449 layer_factory.hpp:77] Creating layer loss_cls
I0412 00:29:19.599864 19449 net.cpp:150] Setting up loss_cls
I0412 00:29:19.599869 19449 net.cpp:157] Top shape: (1)
I0412 00:29:19.599872 19449 net.cpp:160]     with loss weight 1
I0412 00:29:19.599882 19449 net.cpp:165] Memory required for data: 10172697196
I0412 00:29:19.599885 19449 layer_factory.hpp:77] Creating layer loss_twin
I0412 00:29:19.599890 19449 net.cpp:100] Creating Layer loss_twin
I0412 00:29:19.599895 19449 net.cpp:434] loss_twin <- twin_pred
I0412 00:29:19.599898 19449 net.cpp:434] loss_twin <- twin_targets
I0412 00:29:19.599902 19449 net.cpp:434] loss_twin <- twin_inside_weights
I0412 00:29:19.599905 19449 net.cpp:434] loss_twin <- twin_outside_weights
I0412 00:29:19.599911 19449 net.cpp:408] loss_twin -> loss_twin
I0412 00:29:19.600009 19449 net.cpp:150] Setting up loss_twin
I0412 00:29:19.600015 19449 net.cpp:157] Top shape: (1)
I0412 00:29:19.600018 19449 net.cpp:160]     with loss weight 1
I0412 00:29:19.600023 19449 net.cpp:165] Memory required for data: 10172697200
I0412 00:29:19.600026 19449 layer_factory.hpp:77] Creating layer accuarcy
I0412 00:29:19.600031 19449 net.cpp:100] Creating Layer accuarcy
I0412 00:29:19.600035 19449 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 00:29:19.600039 19449 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 00:29:19.600045 19449 net.cpp:408] accuarcy -> accuarcy
I0412 00:29:19.600052 19449 net.cpp:150] Setting up accuarcy
I0412 00:29:19.600055 19449 net.cpp:157] Top shape: (1)
I0412 00:29:19.600059 19449 net.cpp:165] Memory required for data: 10172697204
I0412 00:29:19.600061 19449 net.cpp:228] accuarcy does not need backward computation.
I0412 00:29:19.600065 19449 net.cpp:226] loss_twin needs backward computation.
I0412 00:29:19.600072 19449 net.cpp:226] loss_cls needs backward computation.
I0412 00:29:19.600077 19449 net.cpp:226] twin_pred needs backward computation.
I0412 00:29:19.600082 19449 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 00:29:19.600088 19449 net.cpp:226] cls_score needs backward computation.
I0412 00:29:19.600092 19449 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 00:29:19.600098 19449 net.cpp:226] drop6 needs backward computation.
I0412 00:29:19.600103 19449 net.cpp:226] relu6 needs backward computation.
I0412 00:29:19.600108 19449 net.cpp:226] fc6 needs backward computation.
I0412 00:29:19.600113 19449 net.cpp:226] roi_pool5 needs backward computation.
I0412 00:29:19.600119 19449 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 00:29:19.600123 19449 net.cpp:226] roi-data needs backward computation.
I0412 00:29:19.600128 19449 net.cpp:226] proposal needs backward computation.
I0412 00:29:19.600133 19449 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 00:29:19.600141 19449 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 00:29:19.600147 19449 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 00:29:19.600152 19449 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 00:29:19.600160 19449 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 00:29:19.600168 19449 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 00:29:19.600172 19449 net.cpp:226] rpn-data needs backward computation.
I0412 00:29:19.600177 19449 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 00:29:19.600180 19449 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 00:29:19.600183 19449 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 00:29:19.600188 19449 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 00:29:19.600190 19449 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 00:29:19.600193 19449 net.cpp:226] rpn_cls_score needs backward computation.
I0412 00:29:19.600198 19449 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 00:29:19.600203 19449 net.cpp:226] rpn/output_pool needs backward computation.
I0412 00:29:19.600205 19449 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 00:29:19.600208 19449 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 00:29:19.600211 19449 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 00:29:19.600214 19449 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 00:29:19.600217 19449 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 00:29:19.600221 19449 net.cpp:226] relu5b needs backward computation.
I0412 00:29:19.600224 19449 net.cpp:226] conv5b needs backward computation.
I0412 00:29:19.600227 19449 net.cpp:226] relu5a needs backward computation.
I0412 00:29:19.600230 19449 net.cpp:226] conv5a needs backward computation.
I0412 00:29:19.600236 19449 net.cpp:226] pool4 needs backward computation.
I0412 00:29:19.600241 19449 net.cpp:226] relu4b needs backward computation.
I0412 00:29:19.600246 19449 net.cpp:226] conv4b needs backward computation.
I0412 00:29:19.600250 19449 net.cpp:226] relu4a needs backward computation.
I0412 00:29:19.600257 19449 net.cpp:226] conv4a needs backward computation.
I0412 00:29:19.600262 19449 net.cpp:226] pool3 needs backward computation.
I0412 00:29:19.600266 19449 net.cpp:226] relu3b needs backward computation.
I0412 00:29:19.600271 19449 net.cpp:226] conv3b needs backward computation.
I0412 00:29:19.600275 19449 net.cpp:226] relu3a needs backward computation.
I0412 00:29:19.600281 19449 net.cpp:226] conv3a needs backward computation.
I0412 00:29:19.600287 19449 net.cpp:228] pool2 does not need backward computation.
I0412 00:29:19.600291 19449 net.cpp:228] relu2a does not need backward computation.
I0412 00:29:19.600297 19449 net.cpp:228] conv2a does not need backward computation.
I0412 00:29:19.600302 19449 net.cpp:228] pool1 does not need backward computation.
I0412 00:29:19.600307 19449 net.cpp:228] relu1a does not need backward computation.
I0412 00:29:19.600314 19449 net.cpp:228] conv1a does not need backward computation.
I0412 00:29:19.600320 19449 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 00:29:19.600358 19449 net.cpp:228] data_data_0_split does not need backward computation.
I0412 00:29:19.600364 19449 net.cpp:228] data does not need backward computation.
I0412 00:29:19.600368 19449 net.cpp:270] This network produces output accuarcy
I0412 00:29:19.600373 19449 net.cpp:270] This network produces output loss_cls
I0412 00:29:19.600389 19449 net.cpp:270] This network produces output loss_twin
I0412 00:29:19.600394 19449 net.cpp:270] This network produces output rpn_accuarcy
I0412 00:29:19.600399 19449 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 00:29:19.600404 19449 net.cpp:270] This network produces output rpn_cls_loss
I0412 00:29:19.600410 19449 net.cpp:270] This network produces output rpn_loss_twin
I0412 00:29:19.600463 19449 net.cpp:283] Network initialization done.
I0412 00:29:19.600612 19449 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 00:29:19.762156 19449 net.cpp:761] Ignoring source layer pool5
I0412 00:29:19.788131 19449 net.cpp:761] Ignoring source layer fc7
I0412 00:29:19.788208 19449 net.cpp:761] Ignoring source layer relu7
I0412 00:29:19.788225 19449 net.cpp:761] Ignoring source layer drop7
I0412 00:29:19.788241 19449 net.cpp:761] Ignoring source layer fc8-200
I0412 00:29:19.788256 19449 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
99
(array([0]), array([97]))
(array([[3.1250000e-02, 3.8569803e+02]], dtype=float32), array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 0.]], dtype=float32))
(1, 101)
[[3.1250000e-02 3.8569803e+02]]
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 95, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 135, in forward
    print(np.concatenate(blob1, blob2))
TypeError: only integer scalar arrays can be converted to a scalar index
Terminating BlobFetcher
