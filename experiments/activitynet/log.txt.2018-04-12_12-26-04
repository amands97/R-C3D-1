Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=0, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 0,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
print done
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}]
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 12:26:06.319272 19926 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 12:26:06.319373 19926 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 12:26:06.320060 19926 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 12:26:06.320390 19926 layer_factory.hpp:77] Creating layer data
I0412 12:26:06.335530 19926 net.cpp:100] Creating Layer data
I0412 12:26:06.335562 19926 net.cpp:408] data -> data
I0412 12:26:06.335577 19926 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 12:26:06.346352 19926 net.cpp:150] Setting up data
I0412 12:26:06.346390 19926 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 12:26:06.346397 19926 net.cpp:157] Top shape: 1 3 (3)
I0412 12:26:06.346401 19926 net.cpp:165] Memory required for data: 115605516
I0412 12:26:06.346410 19926 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 12:26:06.346426 19926 net.cpp:100] Creating Layer data_data_0_split
I0412 12:26:06.346432 19926 net.cpp:434] data_data_0_split <- data
I0412 12:26:06.346446 19926 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 12:26:06.346458 19926 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 12:26:06.346499 19926 net.cpp:150] Setting up data_data_0_split
I0412 12:26:06.346509 19926 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 12:26:06.346515 19926 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 12:26:06.346520 19926 net.cpp:165] Memory required for data: 346816524
I0412 12:26:06.346524 19926 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 12:26:06.346532 19926 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 12:26:06.346539 19926 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 12:26:06.346549 19926 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 12:26:06.346560 19926 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 12:26:06.346596 19926 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 12:26:06.346602 19926 net.cpp:157] Top shape: 1 3 (3)
I0412 12:26:06.346607 19926 net.cpp:157] Top shape: 1 3 (3)
I0412 12:26:06.346611 19926 net.cpp:165] Memory required for data: 346816548
I0412 12:26:06.346616 19926 layer_factory.hpp:77] Creating layer conv1a
I0412 12:26:06.346640 19926 net.cpp:100] Creating Layer conv1a
I0412 12:26:06.346647 19926 net.cpp:434] conv1a <- data_data_0_split_0
I0412 12:26:06.346657 19926 net.cpp:408] conv1a -> conv1a
I0412 12:26:06.371017 19926 net.cpp:150] Setting up conv1a
I0412 12:26:06.371052 19926 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 12:26:06.371057 19926 net.cpp:165] Memory required for data: 2813067300
I0412 12:26:06.371094 19926 layer_factory.hpp:77] Creating layer relu1a
I0412 12:26:06.371130 19926 net.cpp:100] Creating Layer relu1a
I0412 12:26:06.371140 19926 net.cpp:434] relu1a <- conv1a
I0412 12:26:06.371151 19926 net.cpp:395] relu1a -> conv1a (in-place)
I0412 12:26:06.371178 19926 net.cpp:150] Setting up relu1a
I0412 12:26:06.371184 19926 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 12:26:06.371188 19926 net.cpp:165] Memory required for data: 5279318052
I0412 12:26:06.371192 19926 layer_factory.hpp:77] Creating layer pool1
I0412 12:26:06.371212 19926 net.cpp:100] Creating Layer pool1
I0412 12:26:06.371217 19926 net.cpp:434] pool1 <- conv1a
I0412 12:26:06.371224 19926 net.cpp:408] pool1 -> pool1
I0412 12:26:06.371340 19926 net.cpp:150] Setting up pool1
I0412 12:26:06.371351 19926 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 12:26:06.371356 19926 net.cpp:165] Memory required for data: 5895880740
I0412 12:26:06.371361 19926 layer_factory.hpp:77] Creating layer conv2a
I0412 12:26:06.371376 19926 net.cpp:100] Creating Layer conv2a
I0412 12:26:06.371382 19926 net.cpp:434] conv2a <- pool1
I0412 12:26:06.371390 19926 net.cpp:408] conv2a -> conv2a
I0412 12:26:06.380414 19926 net.cpp:150] Setting up conv2a
I0412 12:26:06.380450 19926 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 12:26:06.380453 19926 net.cpp:165] Memory required for data: 7129006116
I0412 12:26:06.380473 19926 layer_factory.hpp:77] Creating layer relu2a
I0412 12:26:06.380484 19926 net.cpp:100] Creating Layer relu2a
I0412 12:26:06.380489 19926 net.cpp:434] relu2a <- conv2a
I0412 12:26:06.380501 19926 net.cpp:395] relu2a -> conv2a (in-place)
I0412 12:26:06.380511 19926 net.cpp:150] Setting up relu2a
I0412 12:26:06.380517 19926 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 12:26:06.380520 19926 net.cpp:165] Memory required for data: 8362131492
I0412 12:26:06.380523 19926 layer_factory.hpp:77] Creating layer pool2
I0412 12:26:06.380539 19926 net.cpp:100] Creating Layer pool2
I0412 12:26:06.380545 19926 net.cpp:434] pool2 <- conv2a
I0412 12:26:06.380551 19926 net.cpp:408] pool2 -> pool2
I0412 12:26:06.380656 19926 net.cpp:150] Setting up pool2
I0412 12:26:06.380669 19926 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 12:26:06.380673 19926 net.cpp:165] Memory required for data: 8516272164
I0412 12:26:06.380677 19926 layer_factory.hpp:77] Creating layer conv3a
I0412 12:26:06.380707 19926 net.cpp:100] Creating Layer conv3a
I0412 12:26:06.380712 19926 net.cpp:434] conv3a <- pool2
I0412 12:26:06.380720 19926 net.cpp:408] conv3a -> conv3a
I0412 12:26:06.389721 19926 net.cpp:150] Setting up conv3a
I0412 12:26:06.389770 19926 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 12:26:06.389775 19926 net.cpp:165] Memory required for data: 8824553508
I0412 12:26:06.389792 19926 layer_factory.hpp:77] Creating layer relu3a
I0412 12:26:06.389804 19926 net.cpp:100] Creating Layer relu3a
I0412 12:26:06.389809 19926 net.cpp:434] relu3a <- conv3a
I0412 12:26:06.389819 19926 net.cpp:395] relu3a -> conv3a (in-place)
I0412 12:26:06.389837 19926 net.cpp:150] Setting up relu3a
I0412 12:26:06.389842 19926 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 12:26:06.389847 19926 net.cpp:165] Memory required for data: 9132834852
I0412 12:26:06.389852 19926 layer_factory.hpp:77] Creating layer conv3b
I0412 12:26:06.389873 19926 net.cpp:100] Creating Layer conv3b
I0412 12:26:06.389876 19926 net.cpp:434] conv3b <- conv3a
I0412 12:26:06.389883 19926 net.cpp:408] conv3b -> conv3b
I0412 12:26:06.413360 19926 net.cpp:150] Setting up conv3b
I0412 12:26:06.413400 19926 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 12:26:06.413405 19926 net.cpp:165] Memory required for data: 9441116196
I0412 12:26:06.413419 19926 layer_factory.hpp:77] Creating layer relu3b
I0412 12:26:06.413431 19926 net.cpp:100] Creating Layer relu3b
I0412 12:26:06.413441 19926 net.cpp:434] relu3b <- conv3b
I0412 12:26:06.413456 19926 net.cpp:395] relu3b -> conv3b (in-place)
I0412 12:26:06.413478 19926 net.cpp:150] Setting up relu3b
I0412 12:26:06.413485 19926 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 12:26:06.413488 19926 net.cpp:165] Memory required for data: 9749397540
I0412 12:26:06.413492 19926 layer_factory.hpp:77] Creating layer pool3
I0412 12:26:06.413508 19926 net.cpp:100] Creating Layer pool3
I0412 12:26:06.413512 19926 net.cpp:434] pool3 <- conv3b
I0412 12:26:06.413520 19926 net.cpp:408] pool3 -> pool3
I0412 12:26:06.413674 19926 net.cpp:150] Setting up pool3
I0412 12:26:06.413684 19926 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 12:26:06.413688 19926 net.cpp:165] Memory required for data: 9787932708
I0412 12:26:06.413694 19926 layer_factory.hpp:77] Creating layer conv4a
I0412 12:26:06.413724 19926 net.cpp:100] Creating Layer conv4a
I0412 12:26:06.413776 19926 net.cpp:434] conv4a <- pool3
I0412 12:26:06.413833 19926 net.cpp:408] conv4a -> conv4a
I0412 12:26:06.464736 19926 net.cpp:150] Setting up conv4a
I0412 12:26:06.464773 19926 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 12:26:06.464779 19926 net.cpp:165] Memory required for data: 9865003044
I0412 12:26:06.464808 19926 layer_factory.hpp:77] Creating layer relu4a
I0412 12:26:06.464823 19926 net.cpp:100] Creating Layer relu4a
I0412 12:26:06.464829 19926 net.cpp:434] relu4a <- conv4a
I0412 12:26:06.464840 19926 net.cpp:395] relu4a -> conv4a (in-place)
I0412 12:26:06.464854 19926 net.cpp:150] Setting up relu4a
I0412 12:26:06.464859 19926 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 12:26:06.464864 19926 net.cpp:165] Memory required for data: 9942073380
I0412 12:26:06.464867 19926 layer_factory.hpp:77] Creating layer conv4b
I0412 12:26:06.464887 19926 net.cpp:100] Creating Layer conv4b
I0412 12:26:06.464891 19926 net.cpp:434] conv4b <- conv4a
I0412 12:26:06.464900 19926 net.cpp:408] conv4b -> conv4b
I0412 12:26:06.561347 19926 net.cpp:150] Setting up conv4b
I0412 12:26:06.561555 19926 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 12:26:06.561605 19926 net.cpp:165] Memory required for data: 10019143716
I0412 12:26:06.561663 19926 layer_factory.hpp:77] Creating layer relu4b
I0412 12:26:06.561725 19926 net.cpp:100] Creating Layer relu4b
I0412 12:26:06.561787 19926 net.cpp:434] relu4b <- conv4b
I0412 12:26:06.561837 19926 net.cpp:395] relu4b -> conv4b (in-place)
I0412 12:26:06.561899 19926 net.cpp:150] Setting up relu4b
I0412 12:26:06.561951 19926 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 12:26:06.562000 19926 net.cpp:165] Memory required for data: 10096214052
I0412 12:26:06.562057 19926 layer_factory.hpp:77] Creating layer pool4
I0412 12:26:06.562129 19926 net.cpp:100] Creating Layer pool4
I0412 12:26:06.562180 19926 net.cpp:434] pool4 <- conv4b
I0412 12:26:06.562237 19926 net.cpp:408] pool4 -> pool4
I0412 12:26:06.562376 19926 net.cpp:150] Setting up pool4
I0412 12:26:06.562428 19926 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:26:06.562472 19926 net.cpp:165] Memory required for data: 10105847844
I0412 12:26:06.562520 19926 layer_factory.hpp:77] Creating layer conv5a
I0412 12:26:06.562579 19926 net.cpp:100] Creating Layer conv5a
I0412 12:26:06.562625 19926 net.cpp:434] conv5a <- pool4
I0412 12:26:06.562640 19926 net.cpp:408] conv5a -> conv5a
I0412 12:26:06.644445 19926 net.cpp:150] Setting up conv5a
I0412 12:26:06.644582 19926 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:26:06.644603 19926 net.cpp:165] Memory required for data: 10115481636
I0412 12:26:06.644634 19926 layer_factory.hpp:77] Creating layer relu5a
I0412 12:26:06.644664 19926 net.cpp:100] Creating Layer relu5a
I0412 12:26:06.644690 19926 net.cpp:434] relu5a <- conv5a
I0412 12:26:06.644722 19926 net.cpp:395] relu5a -> conv5a (in-place)
I0412 12:26:06.644754 19926 net.cpp:150] Setting up relu5a
I0412 12:26:06.644784 19926 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:26:06.644804 19926 net.cpp:165] Memory required for data: 10125115428
I0412 12:26:06.644822 19926 layer_factory.hpp:77] Creating layer conv5b
I0412 12:26:06.644855 19926 net.cpp:100] Creating Layer conv5b
I0412 12:26:06.644876 19926 net.cpp:434] conv5b <- conv5a
I0412 12:26:06.644898 19926 net.cpp:408] conv5b -> conv5b
I0412 12:26:06.726543 19926 net.cpp:150] Setting up conv5b
I0412 12:26:06.726579 19926 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:26:06.726584 19926 net.cpp:165] Memory required for data: 10134749220
I0412 12:26:06.726596 19926 layer_factory.hpp:77] Creating layer relu5b
I0412 12:26:06.726608 19926 net.cpp:100] Creating Layer relu5b
I0412 12:26:06.726614 19926 net.cpp:434] relu5b <- conv5b
I0412 12:26:06.726624 19926 net.cpp:395] relu5b -> conv5b (in-place)
I0412 12:26:06.726637 19926 net.cpp:150] Setting up relu5b
I0412 12:26:06.726646 19926 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:26:06.726649 19926 net.cpp:165] Memory required for data: 10144383012
I0412 12:26:06.726655 19926 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 12:26:06.726667 19926 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 12:26:06.726671 19926 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 12:26:06.726678 19926 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 12:26:06.726688 19926 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 12:26:06.726727 19926 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 12:26:06.726737 19926 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:26:06.726742 19926 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 12:26:06.726747 19926 net.cpp:165] Memory required for data: 10163650596
I0412 12:26:06.726752 19926 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 12:26:06.726768 19926 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 12:26:06.726774 19926 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 12:26:06.726783 19926 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 12:26:06.826020 19926 net.cpp:150] Setting up rpn_conv/3x3
I0412 12:26:06.826251 19926 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 12:26:06.826280 19926 net.cpp:165] Memory required for data: 10166796324
I0412 12:26:06.826339 19926 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 12:26:06.826387 19926 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 12:26:06.826413 19926 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 12:26:06.826432 19926 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 12:26:06.826453 19926 net.cpp:150] Setting up rpn_relu/3x3
I0412 12:26:06.826460 19926 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 12:26:06.826463 19926 net.cpp:165] Memory required for data: 10169942052
I0412 12:26:06.826467 19926 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 12:26:06.826481 19926 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 12:26:06.826485 19926 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 12:26:06.826493 19926 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 12:26:06.929846 19926 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 12:26:06.930035 19926 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 12:26:06.930081 19926 net.cpp:165] Memory required for data: 10170728484
I0412 12:26:06.930131 19926 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 12:26:06.930183 19926 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 12:26:06.930227 19926 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 12:26:06.930274 19926 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 12:26:06.930323 19926 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 12:26:06.930372 19926 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 12:26:06.930413 19926 net.cpp:165] Memory required for data: 10171514916
I0412 12:26:06.930454 19926 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 12:26:06.930498 19926 net.cpp:100] Creating Layer rpn/output_pool
I0412 12:26:06.930541 19926 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 12:26:06.930580 19926 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 12:26:06.930665 19926 net.cpp:150] Setting up rpn/output_pool
I0412 12:26:06.930716 19926 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 12:26:06.930757 19926 net.cpp:165] Memory required for data: 10171711524
I0412 12:26:06.930796 19926 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 12:26:06.930843 19926 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 12:26:06.930887 19926 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 12:26:06.930932 19926 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 12:26:06.930979 19926 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 12:26:06.931054 19926 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 12:26:06.931104 19926 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 12:26:06.931147 19926 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 12:26:06.931183 19926 net.cpp:165] Memory required for data: 10172104740
I0412 12:26:06.931228 19926 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 12:26:06.931274 19926 net.cpp:100] Creating Layer rpn_cls_score
I0412 12:26:06.931311 19926 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 12:26:06.931351 19926 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 12:26:06.932124 19926 net.cpp:150] Setting up rpn_cls_score
I0412 12:26:06.932188 19926 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:26:06.932220 19926 net.cpp:165] Memory required for data: 10172133156
I0412 12:26:06.932258 19926 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 12:26:06.932296 19926 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 12:26:06.932365 19926 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 12:26:06.932412 19926 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 12:26:06.932454 19926 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 12:26:06.932533 19926 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 12:26:06.932576 19926 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:26:06.932612 19926 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:26:06.932644 19926 net.cpp:165] Memory required for data: 10172189988
I0412 12:26:06.932677 19926 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 12:26:06.932729 19926 net.cpp:100] Creating Layer rpn_twin_pred
I0412 12:26:06.932767 19926 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 12:26:06.932806 19926 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 12:26:06.933569 19926 net.cpp:150] Setting up rpn_twin_pred
I0412 12:26:06.933631 19926 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:26:06.933665 19926 net.cpp:165] Memory required for data: 10172218404
I0412 12:26:06.933703 19926 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 12:26:06.933742 19926 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 12:26:06.933775 19926 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 12:26:06.933815 19926 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 12:26:06.933856 19926 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 12:26:06.933931 19926 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 12:26:06.933987 19926 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:26:06.934022 19926 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:26:06.934056 19926 net.cpp:165] Memory required for data: 10172275236
I0412 12:26:06.934089 19926 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 12:26:06.934128 19926 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 12:26:06.934165 19926 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 12:26:06.934206 19926 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 12:26:06.934273 19926 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 12:26:06.934329 19926 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 12:26:06.934361 19926 net.cpp:165] Memory required for data: 10172303652
I0412 12:26:06.934394 19926 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 12:26:06.934432 19926 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 12:26:06.934466 19926 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 12:26:06.934505 19926 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 12:26:06.934554 19926 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 12:26:06.934597 19926 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 12:26:06.934692 19926 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 12:26:06.934752 19926 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 12:26:06.934789 19926 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 12:26:06.934824 19926 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 12:26:06.934856 19926 net.cpp:165] Memory required for data: 10172388900
I0412 12:26:06.934890 19926 layer_factory.hpp:77] Creating layer rpn-data
I0412 12:26:06.935485 19926 net.cpp:100] Creating Layer rpn-data
I0412 12:26:06.935560 19926 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 12:26:06.935601 19926 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 12:26:06.935640 19926 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 12:26:06.935681 19926 net.cpp:408] rpn-data -> rpn_labels
I0412 12:26:06.935724 19926 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 12:26:06.935765 19926 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 12:26:06.935808 19926 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 12:26:06.939795 19926 net.cpp:150] Setting up rpn-data
I0412 12:26:06.939913 19926 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 12:26:06.939954 19926 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:26:06.939990 19926 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:26:06.940026 19926 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:26:06.940058 19926 net.cpp:165] Memory required for data: 10172488356
I0412 12:26:06.940093 19926 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 12:26:06.940135 19926 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 12:26:06.940171 19926 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 12:26:06.940209 19926 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 12:26:06.940253 19926 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 12:26:06.940366 19926 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 12:26:06.940426 19926 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 12:26:06.940462 19926 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 12:26:06.940500 19926 net.cpp:165] Memory required for data: 10172516772
I0412 12:26:06.940533 19926 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 12:26:06.940573 19926 net.cpp:100] Creating Layer rpn_loss_cls
I0412 12:26:06.940609 19926 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 12:26:06.940645 19926 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 12:26:06.940685 19926 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 12:26:06.940728 19926 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 12:26:06.940868 19926 net.cpp:150] Setting up rpn_loss_cls
I0412 12:26:06.940927 19926 net.cpp:157] Top shape: (1)
I0412 12:26:06.940961 19926 net.cpp:160]     with loss weight 1
I0412 12:26:06.941030 19926 net.cpp:165] Memory required for data: 10172516776
I0412 12:26:06.941063 19926 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 12:26:06.941102 19926 net.cpp:100] Creating Layer rpn_loss_twin
I0412 12:26:06.941138 19926 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 12:26:06.941175 19926 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 12:26:06.941211 19926 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 12:26:06.941247 19926 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 12:26:06.941285 19926 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 12:26:06.941401 19926 net.cpp:150] Setting up rpn_loss_twin
I0412 12:26:06.941458 19926 net.cpp:157] Top shape: (1)
I0412 12:26:06.941493 19926 net.cpp:160]     with loss weight 1
I0412 12:26:06.941529 19926 net.cpp:165] Memory required for data: 10172516780
I0412 12:26:06.941565 19926 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 12:26:06.941602 19926 net.cpp:100] Creating Layer rpn_accuarcy
I0412 12:26:06.941638 19926 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 12:26:06.941686 19926 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 12:26:06.941726 19926 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 12:26:06.941767 19926 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 12:26:06.941848 19926 net.cpp:150] Setting up rpn_accuarcy
I0412 12:26:06.941903 19926 net.cpp:157] Top shape: (1)
I0412 12:26:06.941939 19926 net.cpp:157] Top shape: 2 (2)
I0412 12:26:06.941972 19926 net.cpp:165] Memory required for data: 10172516792
I0412 12:26:06.942004 19926 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 12:26:06.942040 19926 net.cpp:100] Creating Layer rpn_cls_prob
I0412 12:26:06.942076 19926 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 12:26:06.942114 19926 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 12:26:06.942209 19926 net.cpp:150] Setting up rpn_cls_prob
I0412 12:26:06.942267 19926 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 12:26:06.942301 19926 net.cpp:165] Memory required for data: 10172545208
I0412 12:26:06.942335 19926 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 12:26:06.942374 19926 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 12:26:06.942409 19926 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 12:26:06.942448 19926 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 12:26:06.942517 19926 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 12:26:06.942574 19926 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 12:26:06.942608 19926 net.cpp:165] Memory required for data: 10172573624
I0412 12:26:06.942642 19926 layer_factory.hpp:77] Creating layer proposal
I0412 12:26:06.943555 19926 net.cpp:100] Creating Layer proposal
I0412 12:26:06.943632 19926 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 12:26:06.943675 19926 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 12:26:06.943717 19926 net.cpp:408] proposal -> rpn_rois
I0412 12:26:06.969461 19926 net.cpp:150] Setting up proposal
I0412 12:26:06.969501 19926 net.cpp:157] Top shape: 1 3 (3)
I0412 12:26:06.969506 19926 net.cpp:165] Memory required for data: 10172573636
I0412 12:26:06.969514 19926 layer_factory.hpp:77] Creating layer roi-data
I0412 12:26:06.969802 19926 net.cpp:100] Creating Layer roi-data
I0412 12:26:06.969818 19926 net.cpp:434] roi-data <- rpn_rois
I0412 12:26:06.969828 19926 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 12:26:06.969840 19926 net.cpp:408] roi-data -> rois
I0412 12:26:06.969853 19926 net.cpp:408] roi-data -> labels
I0412 12:26:06.969863 19926 net.cpp:408] roi-data -> twin_targets
I0412 12:26:06.969871 19926 net.cpp:408] roi-data -> twin_inside_weights
I0412 12:26:06.969880 19926 net.cpp:408] roi-data -> twin_outside_weights
I0412 12:26:06.970525 19926 net.cpp:150] Setting up roi-data
I0412 12:26:06.970543 19926 net.cpp:157] Top shape: 1 3 (3)
I0412 12:26:06.970551 19926 net.cpp:157] Top shape: 1 1 (1)
I0412 12:26:06.970556 19926 net.cpp:157] Top shape: 1 402 (402)
I0412 12:26:06.970561 19926 net.cpp:157] Top shape: 1 402 (402)
I0412 12:26:06.970564 19926 net.cpp:157] Top shape: 1 402 (402)
I0412 12:26:06.970568 19926 net.cpp:165] Memory required for data: 10172578476
I0412 12:26:06.970574 19926 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 12:26:06.970583 19926 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 12:26:06.970588 19926 net.cpp:434] labels_roi-data_1_split <- labels
I0412 12:26:06.970597 19926 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 12:26:06.970607 19926 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 12:26:06.970649 19926 net.cpp:150] Setting up labels_roi-data_1_split
I0412 12:26:06.970659 19926 net.cpp:157] Top shape: 1 1 (1)
I0412 12:26:06.970664 19926 net.cpp:157] Top shape: 1 1 (1)
I0412 12:26:06.970669 19926 net.cpp:165] Memory required for data: 10172578484
I0412 12:26:06.970674 19926 layer_factory.hpp:77] Creating layer roi_pool5
I0412 12:26:06.970681 19926 net.cpp:100] Creating Layer roi_pool5
I0412 12:26:06.970687 19926 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 12:26:06.970695 19926 net.cpp:434] roi_pool5 <- rois
I0412 12:26:06.970700 19926 net.cpp:408] roi_pool5 -> pool5
I0412 12:26:06.970710 19926 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 12:26:06.970726 19926 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 12:26:06.970770 19926 net.cpp:150] Setting up roi_pool5
I0412 12:26:06.970780 19926 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 12:26:06.970784 19926 net.cpp:165] Memory required for data: 10172611252
I0412 12:26:06.970789 19926 layer_factory.hpp:77] Creating layer fc6
I0412 12:26:06.970804 19926 net.cpp:100] Creating Layer fc6
I0412 12:26:06.970811 19926 net.cpp:434] fc6 <- pool5
I0412 12:26:06.970819 19926 net.cpp:408] fc6 -> fc6
I0412 12:26:07.389389 19926 net.cpp:150] Setting up fc6
I0412 12:26:07.389420 19926 net.cpp:157] Top shape: 1 4096 (4096)
I0412 12:26:07.389423 19926 net.cpp:165] Memory required for data: 10172627636
I0412 12:26:07.389432 19926 layer_factory.hpp:77] Creating layer relu6
I0412 12:26:07.389446 19926 net.cpp:100] Creating Layer relu6
I0412 12:26:07.389452 19926 net.cpp:434] relu6 <- fc6
I0412 12:26:07.389461 19926 net.cpp:395] relu6 -> fc6 (in-place)
I0412 12:26:07.389473 19926 net.cpp:150] Setting up relu6
I0412 12:26:07.389480 19926 net.cpp:157] Top shape: 1 4096 (4096)
I0412 12:26:07.389485 19926 net.cpp:165] Memory required for data: 10172644020
I0412 12:26:07.389489 19926 layer_factory.hpp:77] Creating layer drop6
I0412 12:26:07.389497 19926 net.cpp:100] Creating Layer drop6
I0412 12:26:07.389503 19926 net.cpp:434] drop6 <- fc6
I0412 12:26:07.389509 19926 net.cpp:395] drop6 -> fc6 (in-place)
I0412 12:26:07.389533 19926 net.cpp:150] Setting up drop6
I0412 12:26:07.389541 19926 net.cpp:157] Top shape: 1 4096 (4096)
I0412 12:26:07.389545 19926 net.cpp:165] Memory required for data: 10172660404
I0412 12:26:07.389552 19926 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 12:26:07.389559 19926 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 12:26:07.389564 19926 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 12:26:07.389570 19926 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 12:26:07.389580 19926 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 12:26:07.389611 19926 net.cpp:150] Setting up fc6_drop6_0_split
I0412 12:26:07.389617 19926 net.cpp:157] Top shape: 1 4096 (4096)
I0412 12:26:07.389622 19926 net.cpp:157] Top shape: 1 4096 (4096)
I0412 12:26:07.389627 19926 net.cpp:165] Memory required for data: 10172693172
I0412 12:26:07.389633 19926 layer_factory.hpp:77] Creating layer cls_score
I0412 12:26:07.389643 19926 net.cpp:100] Creating Layer cls_score
I0412 12:26:07.389654 19926 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 12:26:07.389664 19926 net.cpp:408] cls_score -> cls_score
I0412 12:26:07.398793 19926 net.cpp:150] Setting up cls_score
I0412 12:26:07.398826 19926 net.cpp:157] Top shape: 1 201 (201)
I0412 12:26:07.398830 19926 net.cpp:165] Memory required for data: 10172693976
I0412 12:26:07.398844 19926 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 12:26:07.398856 19926 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 12:26:07.398862 19926 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 12:26:07.398874 19926 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 12:26:07.398886 19926 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 12:26:07.398919 19926 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 12:26:07.398926 19926 net.cpp:157] Top shape: 1 201 (201)
I0412 12:26:07.398931 19926 net.cpp:157] Top shape: 1 201 (201)
I0412 12:26:07.398936 19926 net.cpp:165] Memory required for data: 10172695584
I0412 12:26:07.398939 19926 layer_factory.hpp:77] Creating layer twin_pred
I0412 12:26:07.398952 19926 net.cpp:100] Creating Layer twin_pred
I0412 12:26:07.398957 19926 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 12:26:07.398964 19926 net.cpp:408] twin_pred -> twin_pred
I0412 12:26:07.416031 19926 net.cpp:150] Setting up twin_pred
I0412 12:26:07.416062 19926 net.cpp:157] Top shape: 1 402 (402)
I0412 12:26:07.416067 19926 net.cpp:165] Memory required for data: 10172697192
I0412 12:26:07.416080 19926 layer_factory.hpp:77] Creating layer loss_cls
I0412 12:26:07.416096 19926 net.cpp:100] Creating Layer loss_cls
I0412 12:26:07.416103 19926 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 12:26:07.416111 19926 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 12:26:07.416119 19926 net.cpp:408] loss_cls -> loss_cls
I0412 12:26:07.416133 19926 layer_factory.hpp:77] Creating layer loss_cls
I0412 12:26:07.416231 19926 net.cpp:150] Setting up loss_cls
I0412 12:26:07.416258 19926 net.cpp:157] Top shape: (1)
I0412 12:26:07.416275 19926 net.cpp:160]     with loss weight 1
I0412 12:26:07.416293 19926 net.cpp:165] Memory required for data: 10172697196
I0412 12:26:07.416299 19926 layer_factory.hpp:77] Creating layer loss_twin
I0412 12:26:07.416307 19926 net.cpp:100] Creating Layer loss_twin
I0412 12:26:07.416313 19926 net.cpp:434] loss_twin <- twin_pred
I0412 12:26:07.416319 19926 net.cpp:434] loss_twin <- twin_targets
I0412 12:26:07.416326 19926 net.cpp:434] loss_twin <- twin_inside_weights
I0412 12:26:07.416394 19926 net.cpp:434] loss_twin <- twin_outside_weights
I0412 12:26:07.416416 19926 net.cpp:408] loss_twin -> loss_twin
I0412 12:26:07.416501 19926 net.cpp:150] Setting up loss_twin
I0412 12:26:07.416509 19926 net.cpp:157] Top shape: (1)
I0412 12:26:07.416514 19926 net.cpp:160]     with loss weight 1
I0412 12:26:07.416523 19926 net.cpp:165] Memory required for data: 10172697200
I0412 12:26:07.416527 19926 layer_factory.hpp:77] Creating layer accuarcy
I0412 12:26:07.416533 19926 net.cpp:100] Creating Layer accuarcy
I0412 12:26:07.416540 19926 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 12:26:07.416546 19926 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 12:26:07.416556 19926 net.cpp:408] accuarcy -> accuarcy
I0412 12:26:07.416566 19926 net.cpp:150] Setting up accuarcy
I0412 12:26:07.416573 19926 net.cpp:157] Top shape: (1)
I0412 12:26:07.416576 19926 net.cpp:165] Memory required for data: 10172697204
I0412 12:26:07.416581 19926 net.cpp:228] accuarcy does not need backward computation.
I0412 12:26:07.416586 19926 net.cpp:226] loss_twin needs backward computation.
I0412 12:26:07.416591 19926 net.cpp:226] loss_cls needs backward computation.
I0412 12:26:07.416600 19926 net.cpp:226] twin_pred needs backward computation.
I0412 12:26:07.416605 19926 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 12:26:07.416610 19926 net.cpp:226] cls_score needs backward computation.
I0412 12:26:07.416615 19926 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 12:26:07.416621 19926 net.cpp:226] drop6 needs backward computation.
I0412 12:26:07.416626 19926 net.cpp:226] relu6 needs backward computation.
I0412 12:26:07.416630 19926 net.cpp:226] fc6 needs backward computation.
I0412 12:26:07.416635 19926 net.cpp:226] roi_pool5 needs backward computation.
I0412 12:26:07.416640 19926 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 12:26:07.416648 19926 net.cpp:226] roi-data needs backward computation.
I0412 12:26:07.416656 19926 net.cpp:226] proposal needs backward computation.
I0412 12:26:07.416659 19926 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 12:26:07.416667 19926 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 12:26:07.416673 19926 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 12:26:07.416678 19926 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 12:26:07.416687 19926 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 12:26:07.416694 19926 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 12:26:07.416702 19926 net.cpp:226] rpn-data needs backward computation.
I0412 12:26:07.416708 19926 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 12:26:07.416716 19926 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 12:26:07.416723 19926 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 12:26:07.416729 19926 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 12:26:07.416736 19926 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 12:26:07.416741 19926 net.cpp:226] rpn_cls_score needs backward computation.
I0412 12:26:07.416750 19926 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 12:26:07.416755 19926 net.cpp:226] rpn/output_pool needs backward computation.
I0412 12:26:07.416760 19926 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 12:26:07.416765 19926 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 12:26:07.416772 19926 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 12:26:07.416777 19926 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 12:26:07.416782 19926 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 12:26:07.416787 19926 net.cpp:226] relu5b needs backward computation.
I0412 12:26:07.416793 19926 net.cpp:226] conv5b needs backward computation.
I0412 12:26:07.416797 19926 net.cpp:226] relu5a needs backward computation.
I0412 12:26:07.416803 19926 net.cpp:226] conv5a needs backward computation.
I0412 12:26:07.416808 19926 net.cpp:226] pool4 needs backward computation.
I0412 12:26:07.416815 19926 net.cpp:226] relu4b needs backward computation.
I0412 12:26:07.416822 19926 net.cpp:226] conv4b needs backward computation.
I0412 12:26:07.416827 19926 net.cpp:226] relu4a needs backward computation.
I0412 12:26:07.416831 19926 net.cpp:226] conv4a needs backward computation.
I0412 12:26:07.416837 19926 net.cpp:226] pool3 needs backward computation.
I0412 12:26:07.416841 19926 net.cpp:226] relu3b needs backward computation.
I0412 12:26:07.416846 19926 net.cpp:226] conv3b needs backward computation.
I0412 12:26:07.416851 19926 net.cpp:226] relu3a needs backward computation.
I0412 12:26:07.416857 19926 net.cpp:226] conv3a needs backward computation.
I0412 12:26:07.416862 19926 net.cpp:228] pool2 does not need backward computation.
I0412 12:26:07.416867 19926 net.cpp:228] relu2a does not need backward computation.
I0412 12:26:07.416874 19926 net.cpp:228] conv2a does not need backward computation.
I0412 12:26:07.416879 19926 net.cpp:228] pool1 does not need backward computation.
I0412 12:26:07.416884 19926 net.cpp:228] relu1a does not need backward computation.
I0412 12:26:07.416889 19926 net.cpp:228] conv1a does not need backward computation.
I0412 12:26:07.416895 19926 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 12:26:07.416903 19926 net.cpp:228] data_data_0_split does not need backward computation.
I0412 12:26:07.416909 19926 net.cpp:228] data does not need backward computation.
I0412 12:26:07.416915 19926 net.cpp:270] This network produces output accuarcy
I0412 12:26:07.416920 19926 net.cpp:270] This network produces output loss_cls
I0412 12:26:07.416925 19926 net.cpp:270] This network produces output loss_twin
I0412 12:26:07.416929 19926 net.cpp:270] This network produces output rpn_accuarcy
I0412 12:26:07.416934 19926 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 12:26:07.416939 19926 net.cpp:270] This network produces output rpn_cls_loss
I0412 12:26:07.416944 19926 net.cpp:270] This network produces output rpn_loss_twin
I0412 12:26:07.416987 19926 net.cpp:283] Network initialization done.
I0412 12:26:07.417114 19926 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 12:26:07.649417 19926 net.cpp:761] Ignoring source layer pool5
I0412 12:26:07.677687 19926 net.cpp:761] Ignoring source layer fc7
I0412 12:26:07.677851 19926 net.cpp:761] Ignoring source layer relu7
I0412 12:26:07.677892 19926 net.cpp:761] Ignoring source layer drop7
I0412 12:26:07.677929 19926 net.cpp:761] Ignoring source layer fc8-200
I0412 12:26:07.677968 19926 net.cpp:761] Ignoring source layer loss
Solving...
F0412 12:26:09.156919 19926 syncedmem.cpp:56] Check failed: error == cudaSuccess (2 vs. 0)  out of memory
*** Check failure stack trace: ***
