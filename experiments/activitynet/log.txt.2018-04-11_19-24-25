Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0411 19:24:27.039808  8589 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0411 19:24:27.039837  8589 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0411 19:24:27.040794  8589 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0411 19:24:27.041074  8589 layer_factory.hpp:77] Creating layer data
I0411 19:24:27.056291  8589 net.cpp:100] Creating Layer data
I0411 19:24:27.056355  8589 net.cpp:408] data -> data
I0411 19:24:27.056370  8589 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0411 19:24:27.066694  8589 net.cpp:150] Setting up data
I0411 19:24:27.066720  8589 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0411 19:24:27.066728  8589 net.cpp:157] Top shape: 1 3 (3)
I0411 19:24:27.066732  8589 net.cpp:165] Memory required for data: 115605516
I0411 19:24:27.066740  8589 layer_factory.hpp:77] Creating layer data_data_0_split
I0411 19:24:27.066758  8589 net.cpp:100] Creating Layer data_data_0_split
I0411 19:24:27.066764  8589 net.cpp:434] data_data_0_split <- data
I0411 19:24:27.066774  8589 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0411 19:24:27.066789  8589 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0411 19:24:27.066838  8589 net.cpp:150] Setting up data_data_0_split
I0411 19:24:27.066848  8589 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0411 19:24:27.066854  8589 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0411 19:24:27.066859  8589 net.cpp:165] Memory required for data: 346816524
I0411 19:24:27.066864  8589 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0411 19:24:27.066872  8589 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0411 19:24:27.066877  8589 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0411 19:24:27.066885  8589 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0411 19:24:27.066896  8589 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0411 19:24:27.066938  8589 net.cpp:150] Setting up gt_boxes_data_1_split
I0411 19:24:27.066946  8589 net.cpp:157] Top shape: 1 3 (3)
I0411 19:24:27.066951  8589 net.cpp:157] Top shape: 1 3 (3)
I0411 19:24:27.066956  8589 net.cpp:165] Memory required for data: 346816548
I0411 19:24:27.066961  8589 layer_factory.hpp:77] Creating layer conv1a
I0411 19:24:27.066977  8589 net.cpp:100] Creating Layer conv1a
I0411 19:24:27.066982  8589 net.cpp:434] conv1a <- data_data_0_split_0
I0411 19:24:27.066992  8589 net.cpp:408] conv1a -> conv1a
I0411 19:24:27.085690  8589 net.cpp:150] Setting up conv1a
I0411 19:24:27.085726  8589 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0411 19:24:27.085731  8589 net.cpp:165] Memory required for data: 2813067300
I0411 19:24:27.085749  8589 layer_factory.hpp:77] Creating layer relu1a
I0411 19:24:27.085765  8589 net.cpp:100] Creating Layer relu1a
I0411 19:24:27.085770  8589 net.cpp:434] relu1a <- conv1a
I0411 19:24:27.085781  8589 net.cpp:395] relu1a -> conv1a (in-place)
I0411 19:24:27.085795  8589 net.cpp:150] Setting up relu1a
I0411 19:24:27.085821  8589 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0411 19:24:27.085825  8589 net.cpp:165] Memory required for data: 5279318052
I0411 19:24:27.085830  8589 layer_factory.hpp:77] Creating layer pool1
I0411 19:24:27.085839  8589 net.cpp:100] Creating Layer pool1
I0411 19:24:27.085844  8589 net.cpp:434] pool1 <- conv1a
I0411 19:24:27.085853  8589 net.cpp:408] pool1 -> pool1
I0411 19:24:27.085964  8589 net.cpp:150] Setting up pool1
I0411 19:24:27.085973  8589 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0411 19:24:27.085978  8589 net.cpp:165] Memory required for data: 5895880740
I0411 19:24:27.085983  8589 layer_factory.hpp:77] Creating layer conv2a
I0411 19:24:27.085997  8589 net.cpp:100] Creating Layer conv2a
I0411 19:24:27.086006  8589 net.cpp:434] conv2a <- pool1
I0411 19:24:27.086017  8589 net.cpp:408] conv2a -> conv2a
I0411 19:24:27.093832  8589 net.cpp:150] Setting up conv2a
I0411 19:24:27.093869  8589 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0411 19:24:27.093873  8589 net.cpp:165] Memory required for data: 7129006116
I0411 19:24:27.093894  8589 layer_factory.hpp:77] Creating layer relu2a
I0411 19:24:27.093907  8589 net.cpp:100] Creating Layer relu2a
I0411 19:24:27.093912  8589 net.cpp:434] relu2a <- conv2a
I0411 19:24:27.093922  8589 net.cpp:395] relu2a -> conv2a (in-place)
I0411 19:24:27.093937  8589 net.cpp:150] Setting up relu2a
I0411 19:24:27.093943  8589 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0411 19:24:27.093946  8589 net.cpp:165] Memory required for data: 8362131492
I0411 19:24:27.093950  8589 layer_factory.hpp:77] Creating layer pool2
I0411 19:24:27.093961  8589 net.cpp:100] Creating Layer pool2
I0411 19:24:27.093966  8589 net.cpp:434] pool2 <- conv2a
I0411 19:24:27.093974  8589 net.cpp:408] pool2 -> pool2
I0411 19:24:27.094099  8589 net.cpp:150] Setting up pool2
I0411 19:24:27.094110  8589 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0411 19:24:27.094115  8589 net.cpp:165] Memory required for data: 8516272164
I0411 19:24:27.094120  8589 layer_factory.hpp:77] Creating layer conv3a
I0411 19:24:27.094135  8589 net.cpp:100] Creating Layer conv3a
I0411 19:24:27.094141  8589 net.cpp:434] conv3a <- pool2
I0411 19:24:27.094148  8589 net.cpp:408] conv3a -> conv3a
I0411 19:24:27.102576  8589 net.cpp:150] Setting up conv3a
I0411 19:24:27.102607  8589 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 19:24:27.102612  8589 net.cpp:165] Memory required for data: 8824553508
I0411 19:24:27.102627  8589 layer_factory.hpp:77] Creating layer relu3a
I0411 19:24:27.102641  8589 net.cpp:100] Creating Layer relu3a
I0411 19:24:27.102648  8589 net.cpp:434] relu3a <- conv3a
I0411 19:24:27.102655  8589 net.cpp:395] relu3a -> conv3a (in-place)
I0411 19:24:27.102665  8589 net.cpp:150] Setting up relu3a
I0411 19:24:27.102671  8589 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 19:24:27.102674  8589 net.cpp:165] Memory required for data: 9132834852
I0411 19:24:27.102679  8589 layer_factory.hpp:77] Creating layer conv3b
I0411 19:24:27.102692  8589 net.cpp:100] Creating Layer conv3b
I0411 19:24:27.102697  8589 net.cpp:434] conv3b <- conv3a
I0411 19:24:27.102705  8589 net.cpp:408] conv3b -> conv3b
I0411 19:24:27.119591  8589 net.cpp:150] Setting up conv3b
I0411 19:24:27.119619  8589 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 19:24:27.119623  8589 net.cpp:165] Memory required for data: 9441116196
I0411 19:24:27.119635  8589 layer_factory.hpp:77] Creating layer relu3b
I0411 19:24:27.119649  8589 net.cpp:100] Creating Layer relu3b
I0411 19:24:27.119655  8589 net.cpp:434] relu3b <- conv3b
I0411 19:24:27.119664  8589 net.cpp:395] relu3b -> conv3b (in-place)
I0411 19:24:27.119675  8589 net.cpp:150] Setting up relu3b
I0411 19:24:27.119681  8589 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0411 19:24:27.119685  8589 net.cpp:165] Memory required for data: 9749397540
I0411 19:24:27.119689  8589 layer_factory.hpp:77] Creating layer pool3
I0411 19:24:27.119699  8589 net.cpp:100] Creating Layer pool3
I0411 19:24:27.119702  8589 net.cpp:434] pool3 <- conv3b
I0411 19:24:27.119709  8589 net.cpp:408] pool3 -> pool3
I0411 19:24:27.119782  8589 net.cpp:150] Setting up pool3
I0411 19:24:27.119808  8589 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0411 19:24:27.119827  8589 net.cpp:165] Memory required for data: 9787932708
I0411 19:24:27.119854  8589 layer_factory.hpp:77] Creating layer conv4a
I0411 19:24:27.119891  8589 net.cpp:100] Creating Layer conv4a
I0411 19:24:27.119899  8589 net.cpp:434] conv4a <- pool3
I0411 19:24:27.119910  8589 net.cpp:408] conv4a -> conv4a
I0411 19:24:27.160629  8589 net.cpp:150] Setting up conv4a
I0411 19:24:27.160655  8589 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 19:24:27.160660  8589 net.cpp:165] Memory required for data: 9865003044
I0411 19:24:27.160678  8589 layer_factory.hpp:77] Creating layer relu4a
I0411 19:24:27.160692  8589 net.cpp:100] Creating Layer relu4a
I0411 19:24:27.160699  8589 net.cpp:434] relu4a <- conv4a
I0411 19:24:27.160708  8589 net.cpp:395] relu4a -> conv4a (in-place)
I0411 19:24:27.160722  8589 net.cpp:150] Setting up relu4a
I0411 19:24:27.160728  8589 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 19:24:27.160732  8589 net.cpp:165] Memory required for data: 9942073380
I0411 19:24:27.160738  8589 layer_factory.hpp:77] Creating layer conv4b
I0411 19:24:27.160755  8589 net.cpp:100] Creating Layer conv4b
I0411 19:24:27.160761  8589 net.cpp:434] conv4b <- conv4a
I0411 19:24:27.160768  8589 net.cpp:408] conv4b -> conv4b
I0411 19:24:27.238679  8589 net.cpp:150] Setting up conv4b
I0411 19:24:27.238713  8589 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 19:24:27.238718  8589 net.cpp:165] Memory required for data: 10019143716
I0411 19:24:27.238729  8589 layer_factory.hpp:77] Creating layer relu4b
I0411 19:24:27.238744  8589 net.cpp:100] Creating Layer relu4b
I0411 19:24:27.238749  8589 net.cpp:434] relu4b <- conv4b
I0411 19:24:27.238757  8589 net.cpp:395] relu4b -> conv4b (in-place)
I0411 19:24:27.238768  8589 net.cpp:150] Setting up relu4b
I0411 19:24:27.238773  8589 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0411 19:24:27.238777  8589 net.cpp:165] Memory required for data: 10096214052
I0411 19:24:27.238781  8589 layer_factory.hpp:77] Creating layer pool4
I0411 19:24:27.238790  8589 net.cpp:100] Creating Layer pool4
I0411 19:24:27.238795  8589 net.cpp:434] pool4 <- conv4b
I0411 19:24:27.238802  8589 net.cpp:408] pool4 -> pool4
I0411 19:24:27.238867  8589 net.cpp:150] Setting up pool4
I0411 19:24:27.238878  8589 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:24:27.238883  8589 net.cpp:165] Memory required for data: 10105847844
I0411 19:24:27.238886  8589 layer_factory.hpp:77] Creating layer conv5a
I0411 19:24:27.238898  8589 net.cpp:100] Creating Layer conv5a
I0411 19:24:27.238903  8589 net.cpp:434] conv5a <- pool4
I0411 19:24:27.238914  8589 net.cpp:408] conv5a -> conv5a
I0411 19:24:27.298373  8589 net.cpp:150] Setting up conv5a
I0411 19:24:27.298406  8589 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:24:27.298411  8589 net.cpp:165] Memory required for data: 10115481636
I0411 19:24:27.298422  8589 layer_factory.hpp:77] Creating layer relu5a
I0411 19:24:27.298434  8589 net.cpp:100] Creating Layer relu5a
I0411 19:24:27.298439  8589 net.cpp:434] relu5a <- conv5a
I0411 19:24:27.298447  8589 net.cpp:395] relu5a -> conv5a (in-place)
I0411 19:24:27.298460  8589 net.cpp:150] Setting up relu5a
I0411 19:24:27.298465  8589 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:24:27.298470  8589 net.cpp:165] Memory required for data: 10125115428
I0411 19:24:27.298475  8589 layer_factory.hpp:77] Creating layer conv5b
I0411 19:24:27.298490  8589 net.cpp:100] Creating Layer conv5b
I0411 19:24:27.298512  8589 net.cpp:434] conv5b <- conv5a
I0411 19:24:27.298521  8589 net.cpp:408] conv5b -> conv5b
I0411 19:24:27.374722  8589 net.cpp:150] Setting up conv5b
I0411 19:24:27.374760  8589 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:24:27.374765  8589 net.cpp:165] Memory required for data: 10134749220
I0411 19:24:27.374776  8589 layer_factory.hpp:77] Creating layer relu5b
I0411 19:24:27.374788  8589 net.cpp:100] Creating Layer relu5b
I0411 19:24:27.374795  8589 net.cpp:434] relu5b <- conv5b
I0411 19:24:27.374805  8589 net.cpp:395] relu5b -> conv5b (in-place)
I0411 19:24:27.374819  8589 net.cpp:150] Setting up relu5b
I0411 19:24:27.374825  8589 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:24:27.374830  8589 net.cpp:165] Memory required for data: 10144383012
I0411 19:24:27.374835  8589 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0411 19:24:27.374841  8589 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0411 19:24:27.374860  8589 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0411 19:24:27.374867  8589 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0411 19:24:27.374877  8589 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0411 19:24:27.374941  8589 net.cpp:150] Setting up conv5b_relu5b_0_split
I0411 19:24:27.374951  8589 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:24:27.374958  8589 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0411 19:24:27.374963  8589 net.cpp:165] Memory required for data: 10163650596
I0411 19:24:27.374967  8589 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0411 19:24:27.374981  8589 net.cpp:100] Creating Layer rpn_conv/3x3
I0411 19:24:27.374987  8589 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0411 19:24:27.374995  8589 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0411 19:24:27.444437  8589 net.cpp:150] Setting up rpn_conv/3x3
I0411 19:24:27.444464  8589 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0411 19:24:27.444468  8589 net.cpp:165] Memory required for data: 10166796324
I0411 19:24:27.444483  8589 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0411 19:24:27.444491  8589 net.cpp:100] Creating Layer rpn_relu/3x3
I0411 19:24:27.444497  8589 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0411 19:24:27.444504  8589 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0411 19:24:27.444511  8589 net.cpp:150] Setting up rpn_relu/3x3
I0411 19:24:27.444517  8589 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0411 19:24:27.444519  8589 net.cpp:165] Memory required for data: 10169942052
I0411 19:24:27.444522  8589 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0411 19:24:27.444533  8589 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0411 19:24:27.444538  8589 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0411 19:24:27.444542  8589 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0411 19:24:27.513011  8589 net.cpp:150] Setting up rpn_conv/3x3_2
I0411 19:24:27.513044  8589 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0411 19:24:27.513048  8589 net.cpp:165] Memory required for data: 10170728484
I0411 19:24:27.513059  8589 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0411 19:24:27.513070  8589 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0411 19:24:27.513089  8589 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0411 19:24:27.513105  8589 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0411 19:24:27.513118  8589 net.cpp:150] Setting up rpn_relu/3x3_2
I0411 19:24:27.513125  8589 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0411 19:24:27.513131  8589 net.cpp:165] Memory required for data: 10171514916
I0411 19:24:27.513136  8589 layer_factory.hpp:77] Creating layer rpn/output_pool
I0411 19:24:27.513144  8589 net.cpp:100] Creating Layer rpn/output_pool
I0411 19:24:27.513150  8589 net.cpp:434] rpn/output_pool <- rpn/output_2
I0411 19:24:27.513159  8589 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0411 19:24:27.513213  8589 net.cpp:150] Setting up rpn/output_pool
I0411 19:24:27.513221  8589 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0411 19:24:27.513226  8589 net.cpp:165] Memory required for data: 10171711524
I0411 19:24:27.513229  8589 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0411 19:24:27.513237  8589 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0411 19:24:27.513242  8589 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0411 19:24:27.513249  8589 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0411 19:24:27.513257  8589 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0411 19:24:27.513303  8589 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0411 19:24:27.513309  8589 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0411 19:24:27.513315  8589 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0411 19:24:27.513319  8589 net.cpp:165] Memory required for data: 10172104740
I0411 19:24:27.513324  8589 layer_factory.hpp:77] Creating layer rpn_cls_score
I0411 19:24:27.513336  8589 net.cpp:100] Creating Layer rpn_cls_score
I0411 19:24:27.513341  8589 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0411 19:24:27.513350  8589 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0411 19:24:27.513903  8589 net.cpp:150] Setting up rpn_cls_score
I0411 19:24:27.513912  8589 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:24:27.513916  8589 net.cpp:165] Memory required for data: 10172133156
I0411 19:24:27.513923  8589 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0411 19:24:27.513931  8589 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0411 19:24:27.513936  8589 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0411 19:24:27.513945  8589 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0411 19:24:27.513953  8589 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0411 19:24:27.514010  8589 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0411 19:24:27.514017  8589 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:24:27.514024  8589 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:24:27.514027  8589 net.cpp:165] Memory required for data: 10172189988
I0411 19:24:27.514031  8589 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0411 19:24:27.514048  8589 net.cpp:100] Creating Layer rpn_twin_pred
I0411 19:24:27.514053  8589 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0411 19:24:27.514061  8589 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0411 19:24:27.514593  8589 net.cpp:150] Setting up rpn_twin_pred
I0411 19:24:27.514602  8589 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:24:27.514606  8589 net.cpp:165] Memory required for data: 10172218404
I0411 19:24:27.514614  8589 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0411 19:24:27.514623  8589 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0411 19:24:27.514629  8589 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0411 19:24:27.514636  8589 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0411 19:24:27.514644  8589 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0411 19:24:27.514688  8589 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0411 19:24:27.514696  8589 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:24:27.514701  8589 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:24:27.514706  8589 net.cpp:165] Memory required for data: 10172275236
I0411 19:24:27.514710  8589 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0411 19:24:27.514720  8589 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0411 19:24:27.514726  8589 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0411 19:24:27.514734  8589 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0411 19:24:27.514768  8589 net.cpp:150] Setting up rpn_cls_score_reshape
I0411 19:24:27.514776  8589 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 19:24:27.514780  8589 net.cpp:165] Memory required for data: 10172303652
I0411 19:24:27.514784  8589 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 19:24:27.514791  8589 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 19:24:27.514796  8589 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0411 19:24:27.514806  8589 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0411 19:24:27.514822  8589 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0411 19:24:27.514830  8589 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0411 19:24:27.514889  8589 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0411 19:24:27.514897  8589 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 19:24:27.514904  8589 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 19:24:27.514909  8589 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 19:24:27.514914  8589 net.cpp:165] Memory required for data: 10172388900
I0411 19:24:27.514919  8589 layer_factory.hpp:77] Creating layer rpn-data
I0411 19:24:27.515292  8589 net.cpp:100] Creating Layer rpn-data
I0411 19:24:27.515303  8589 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0411 19:24:27.515311  8589 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0411 19:24:27.515316  8589 net.cpp:434] rpn-data <- data_data_0_split_1
I0411 19:24:27.515326  8589 net.cpp:408] rpn-data -> rpn_labels
I0411 19:24:27.515336  8589 net.cpp:408] rpn-data -> rpn_twin_targets
I0411 19:24:27.515346  8589 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0411 19:24:27.515354  8589 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0411 19:24:27.517616  8589 net.cpp:150] Setting up rpn-data
I0411 19:24:27.517632  8589 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0411 19:24:27.517637  8589 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:24:27.517643  8589 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:24:27.517648  8589 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:24:27.517653  8589 net.cpp:165] Memory required for data: 10172488356
I0411 19:24:27.517658  8589 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0411 19:24:27.517666  8589 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0411 19:24:27.517673  8589 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0411 19:24:27.517680  8589 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0411 19:24:27.517689  8589 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0411 19:24:27.517736  8589 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0411 19:24:27.517745  8589 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0411 19:24:27.517750  8589 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0411 19:24:27.517755  8589 net.cpp:165] Memory required for data: 10172516772
I0411 19:24:27.517760  8589 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0411 19:24:27.517768  8589 net.cpp:100] Creating Layer rpn_loss_cls
I0411 19:24:27.517773  8589 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0411 19:24:27.517781  8589 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0411 19:24:27.517787  8589 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0411 19:24:27.517798  8589 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0411 19:24:27.517912  8589 net.cpp:150] Setting up rpn_loss_cls
I0411 19:24:27.517920  8589 net.cpp:157] Top shape: (1)
I0411 19:24:27.517925  8589 net.cpp:160]     with loss weight 1
I0411 19:24:27.517937  8589 net.cpp:165] Memory required for data: 10172516776
I0411 19:24:27.517942  8589 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0411 19:24:27.517951  8589 net.cpp:100] Creating Layer rpn_loss_twin
I0411 19:24:27.517957  8589 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0411 19:24:27.517964  8589 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0411 19:24:27.517971  8589 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0411 19:24:27.517976  8589 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0411 19:24:27.517982  8589 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0411 19:24:27.518075  8589 net.cpp:150] Setting up rpn_loss_twin
I0411 19:24:27.518084  8589 net.cpp:157] Top shape: (1)
I0411 19:24:27.518087  8589 net.cpp:160]     with loss weight 1
I0411 19:24:27.518095  8589 net.cpp:165] Memory required for data: 10172516780
I0411 19:24:27.518100  8589 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0411 19:24:27.518107  8589 net.cpp:100] Creating Layer rpn_accuarcy
I0411 19:24:27.518112  8589 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0411 19:24:27.518118  8589 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0411 19:24:27.518128  8589 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0411 19:24:27.518139  8589 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0411 19:24:27.518185  8589 net.cpp:150] Setting up rpn_accuarcy
I0411 19:24:27.518193  8589 net.cpp:157] Top shape: (1)
I0411 19:24:27.518198  8589 net.cpp:157] Top shape: 2 (2)
I0411 19:24:27.518203  8589 net.cpp:165] Memory required for data: 10172516792
I0411 19:24:27.518206  8589 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0411 19:24:27.518213  8589 net.cpp:100] Creating Layer rpn_cls_prob
I0411 19:24:27.518218  8589 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0411 19:24:27.518230  8589 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0411 19:24:27.518306  8589 net.cpp:150] Setting up rpn_cls_prob
I0411 19:24:27.518313  8589 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0411 19:24:27.518317  8589 net.cpp:165] Memory required for data: 10172545208
I0411 19:24:27.518322  8589 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0411 19:24:27.518330  8589 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0411 19:24:27.518335  8589 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0411 19:24:27.518344  8589 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0411 19:24:27.518379  8589 net.cpp:150] Setting up rpn_cls_prob_reshape
I0411 19:24:27.518388  8589 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0411 19:24:27.518391  8589 net.cpp:165] Memory required for data: 10172573624
I0411 19:24:27.518396  8589 layer_factory.hpp:77] Creating layer proposal
I0411 19:24:27.518923  8589 net.cpp:100] Creating Layer proposal
I0411 19:24:27.518934  8589 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0411 19:24:27.518941  8589 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0411 19:24:27.518950  8589 net.cpp:408] proposal -> rpn_rois
I0411 19:24:27.522425  8589 net.cpp:150] Setting up proposal
I0411 19:24:27.522439  8589 net.cpp:157] Top shape: 1 3 (3)
I0411 19:24:27.522444  8589 net.cpp:165] Memory required for data: 10172573636
I0411 19:24:27.522449  8589 layer_factory.hpp:77] Creating layer roi-data
I0411 19:24:27.522584  8589 net.cpp:100] Creating Layer roi-data
I0411 19:24:27.522593  8589 net.cpp:434] roi-data <- rpn_rois
I0411 19:24:27.522600  8589 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0411 19:24:27.522609  8589 net.cpp:408] roi-data -> rois
I0411 19:24:27.522619  8589 net.cpp:408] roi-data -> labels
I0411 19:24:27.522627  8589 net.cpp:408] roi-data -> twin_targets
I0411 19:24:27.522636  8589 net.cpp:408] roi-data -> twin_inside_weights
I0411 19:24:27.522651  8589 net.cpp:408] roi-data -> twin_outside_weights
I0411 19:24:27.522961  8589 net.cpp:150] Setting up roi-data
I0411 19:24:27.522972  8589 net.cpp:157] Top shape: 1 3 (3)
I0411 19:24:27.522979  8589 net.cpp:157] Top shape: 1 1 (1)
I0411 19:24:27.522984  8589 net.cpp:157] Top shape: 1 402 (402)
I0411 19:24:27.522989  8589 net.cpp:157] Top shape: 1 402 (402)
I0411 19:24:27.522994  8589 net.cpp:157] Top shape: 1 402 (402)
I0411 19:24:27.522999  8589 net.cpp:165] Memory required for data: 10172578476
I0411 19:24:27.523003  8589 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0411 19:24:27.523010  8589 net.cpp:100] Creating Layer labels_roi-data_1_split
I0411 19:24:27.523016  8589 net.cpp:434] labels_roi-data_1_split <- labels
I0411 19:24:27.523023  8589 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0411 19:24:27.523033  8589 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0411 19:24:27.523080  8589 net.cpp:150] Setting up labels_roi-data_1_split
I0411 19:24:27.523088  8589 net.cpp:157] Top shape: 1 1 (1)
I0411 19:24:27.523093  8589 net.cpp:157] Top shape: 1 1 (1)
I0411 19:24:27.523098  8589 net.cpp:165] Memory required for data: 10172578484
I0411 19:24:27.523102  8589 layer_factory.hpp:77] Creating layer roi_pool5
I0411 19:24:27.523110  8589 net.cpp:100] Creating Layer roi_pool5
I0411 19:24:27.523116  8589 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0411 19:24:27.523123  8589 net.cpp:434] roi_pool5 <- rois
I0411 19:24:27.523129  8589 net.cpp:408] roi_pool5 -> pool5
I0411 19:24:27.523138  8589 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0411 19:24:27.523147  8589 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0411 19:24:27.523195  8589 net.cpp:150] Setting up roi_pool5
I0411 19:24:27.523203  8589 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0411 19:24:27.523207  8589 net.cpp:165] Memory required for data: 10172611252
I0411 19:24:27.523211  8589 layer_factory.hpp:77] Creating layer fc6
I0411 19:24:27.523221  8589 net.cpp:100] Creating Layer fc6
I0411 19:24:27.523226  8589 net.cpp:434] fc6 <- pool5
I0411 19:24:27.523233  8589 net.cpp:408] fc6 -> fc6
I0411 19:24:27.799204  8589 net.cpp:150] Setting up fc6
I0411 19:24:27.799235  8589 net.cpp:157] Top shape: 1 4096 (4096)
I0411 19:24:27.799240  8589 net.cpp:165] Memory required for data: 10172627636
I0411 19:24:27.799253  8589 layer_factory.hpp:77] Creating layer relu6
I0411 19:24:27.799264  8589 net.cpp:100] Creating Layer relu6
I0411 19:24:27.799270  8589 net.cpp:434] relu6 <- fc6
I0411 19:24:27.799281  8589 net.cpp:395] relu6 -> fc6 (in-place)
I0411 19:24:27.799293  8589 net.cpp:150] Setting up relu6
I0411 19:24:27.799298  8589 net.cpp:157] Top shape: 1 4096 (4096)
I0411 19:24:27.799301  8589 net.cpp:165] Memory required for data: 10172644020
I0411 19:24:27.799304  8589 layer_factory.hpp:77] Creating layer drop6
I0411 19:24:27.799312  8589 net.cpp:100] Creating Layer drop6
I0411 19:24:27.799316  8589 net.cpp:434] drop6 <- fc6
I0411 19:24:27.799322  8589 net.cpp:395] drop6 -> fc6 (in-place)
I0411 19:24:27.799360  8589 net.cpp:150] Setting up drop6
I0411 19:24:27.799369  8589 net.cpp:157] Top shape: 1 4096 (4096)
I0411 19:24:27.799373  8589 net.cpp:165] Memory required for data: 10172660404
I0411 19:24:27.799378  8589 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0411 19:24:27.799386  8589 net.cpp:100] Creating Layer fc6_drop6_0_split
I0411 19:24:27.799392  8589 net.cpp:434] fc6_drop6_0_split <- fc6
I0411 19:24:27.799398  8589 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0411 19:24:27.799408  8589 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0411 19:24:27.799470  8589 net.cpp:150] Setting up fc6_drop6_0_split
I0411 19:24:27.799496  8589 net.cpp:157] Top shape: 1 4096 (4096)
I0411 19:24:27.799528  8589 net.cpp:157] Top shape: 1 4096 (4096)
I0411 19:24:27.799545  8589 net.cpp:165] Memory required for data: 10172693172
I0411 19:24:27.799561  8589 layer_factory.hpp:77] Creating layer cls_score
I0411 19:24:27.799583  8589 net.cpp:100] Creating Layer cls_score
I0411 19:24:27.799592  8589 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0411 19:24:27.799600  8589 net.cpp:408] cls_score -> cls_score
I0411 19:24:27.807976  8589 net.cpp:150] Setting up cls_score
I0411 19:24:27.808004  8589 net.cpp:157] Top shape: 1 201 (201)
I0411 19:24:27.808009  8589 net.cpp:165] Memory required for data: 10172693976
I0411 19:24:27.808022  8589 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0411 19:24:27.808032  8589 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0411 19:24:27.808038  8589 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0411 19:24:27.808050  8589 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0411 19:24:27.808063  8589 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0411 19:24:27.808142  8589 net.cpp:150] Setting up cls_score_cls_score_0_split
I0411 19:24:27.808153  8589 net.cpp:157] Top shape: 1 201 (201)
I0411 19:24:27.808158  8589 net.cpp:157] Top shape: 1 201 (201)
I0411 19:24:27.808162  8589 net.cpp:165] Memory required for data: 10172695584
I0411 19:24:27.808167  8589 layer_factory.hpp:77] Creating layer twin_pred
I0411 19:24:27.808181  8589 net.cpp:100] Creating Layer twin_pred
I0411 19:24:27.808185  8589 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0411 19:24:27.808195  8589 net.cpp:408] twin_pred -> twin_pred
I0411 19:24:27.829730  8589 net.cpp:150] Setting up twin_pred
I0411 19:24:27.829758  8589 net.cpp:157] Top shape: 1 402 (402)
I0411 19:24:27.829762  8589 net.cpp:165] Memory required for data: 10172697192
I0411 19:24:27.829774  8589 layer_factory.hpp:77] Creating layer loss_cls
I0411 19:24:27.829787  8589 net.cpp:100] Creating Layer loss_cls
I0411 19:24:27.829797  8589 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0411 19:24:27.829808  8589 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0411 19:24:27.829818  8589 net.cpp:408] loss_cls -> loss_cls
I0411 19:24:27.829833  8589 layer_factory.hpp:77] Creating layer loss_cls
I0411 19:24:27.829968  8589 net.cpp:150] Setting up loss_cls
I0411 19:24:27.829977  8589 net.cpp:157] Top shape: (1)
I0411 19:24:27.829982  8589 net.cpp:160]     with loss weight 1
I0411 19:24:27.829996  8589 net.cpp:165] Memory required for data: 10172697196
I0411 19:24:27.830003  8589 layer_factory.hpp:77] Creating layer loss_twin
I0411 19:24:27.830011  8589 net.cpp:100] Creating Layer loss_twin
I0411 19:24:27.830020  8589 net.cpp:434] loss_twin <- twin_pred
I0411 19:24:27.830026  8589 net.cpp:434] loss_twin <- twin_targets
I0411 19:24:27.830032  8589 net.cpp:434] loss_twin <- twin_inside_weights
I0411 19:24:27.830039  8589 net.cpp:434] loss_twin <- twin_outside_weights
I0411 19:24:27.830050  8589 net.cpp:408] loss_twin -> loss_twin
I0411 19:24:27.830170  8589 net.cpp:150] Setting up loss_twin
I0411 19:24:27.830178  8589 net.cpp:157] Top shape: (1)
I0411 19:24:27.830184  8589 net.cpp:160]     with loss weight 1
I0411 19:24:27.830193  8589 net.cpp:165] Memory required for data: 10172697200
I0411 19:24:27.830198  8589 layer_factory.hpp:77] Creating layer accuarcy
I0411 19:24:27.830207  8589 net.cpp:100] Creating Layer accuarcy
I0411 19:24:27.830214  8589 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0411 19:24:27.830224  8589 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0411 19:24:27.830233  8589 net.cpp:408] accuarcy -> accuarcy
I0411 19:24:27.830245  8589 net.cpp:150] Setting up accuarcy
I0411 19:24:27.830252  8589 net.cpp:157] Top shape: (1)
I0411 19:24:27.830260  8589 net.cpp:165] Memory required for data: 10172697204
I0411 19:24:27.830265  8589 net.cpp:228] accuarcy does not need backward computation.
I0411 19:24:27.830271  8589 net.cpp:226] loss_twin needs backward computation.
I0411 19:24:27.830276  8589 net.cpp:226] loss_cls needs backward computation.
I0411 19:24:27.830283  8589 net.cpp:226] twin_pred needs backward computation.
I0411 19:24:27.830291  8589 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0411 19:24:27.830296  8589 net.cpp:226] cls_score needs backward computation.
I0411 19:24:27.830302  8589 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0411 19:24:27.830308  8589 net.cpp:226] drop6 needs backward computation.
I0411 19:24:27.830312  8589 net.cpp:226] relu6 needs backward computation.
I0411 19:24:27.830318  8589 net.cpp:226] fc6 needs backward computation.
I0411 19:24:27.830322  8589 net.cpp:226] roi_pool5 needs backward computation.
I0411 19:24:27.830329  8589 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0411 19:24:27.830337  8589 net.cpp:226] roi-data needs backward computation.
I0411 19:24:27.830343  8589 net.cpp:226] proposal needs backward computation.
I0411 19:24:27.830350  8589 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0411 19:24:27.830358  8589 net.cpp:226] rpn_cls_prob needs backward computation.
I0411 19:24:27.830363  8589 net.cpp:228] rpn_accuarcy does not need backward computation.
I0411 19:24:27.830368  8589 net.cpp:226] rpn_loss_twin needs backward computation.
I0411 19:24:27.830374  8589 net.cpp:226] rpn_loss_cls needs backward computation.
I0411 19:24:27.830382  8589 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0411 19:24:27.830389  8589 net.cpp:226] rpn-data needs backward computation.
I0411 19:24:27.830400  8589 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0411 19:24:27.830407  8589 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0411 19:24:27.830413  8589 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0411 19:24:27.830420  8589 net.cpp:226] rpn_twin_pred needs backward computation.
I0411 19:24:27.830426  8589 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0411 19:24:27.830432  8589 net.cpp:226] rpn_cls_score needs backward computation.
I0411 19:24:27.830437  8589 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0411 19:24:27.830443  8589 net.cpp:226] rpn/output_pool needs backward computation.
I0411 19:24:27.830449  8589 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0411 19:24:27.830456  8589 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0411 19:24:27.830462  8589 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0411 19:24:27.830467  8589 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0411 19:24:27.830474  8589 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0411 19:24:27.830479  8589 net.cpp:226] relu5b needs backward computation.
I0411 19:24:27.830485  8589 net.cpp:226] conv5b needs backward computation.
I0411 19:24:27.830490  8589 net.cpp:226] relu5a needs backward computation.
I0411 19:24:27.830495  8589 net.cpp:226] conv5a needs backward computation.
I0411 19:24:27.830500  8589 net.cpp:226] pool4 needs backward computation.
I0411 19:24:27.830507  8589 net.cpp:226] relu4b needs backward computation.
I0411 19:24:27.830512  8589 net.cpp:226] conv4b needs backward computation.
I0411 19:24:27.830515  8589 net.cpp:226] relu4a needs backward computation.
I0411 19:24:27.830520  8589 net.cpp:226] conv4a needs backward computation.
I0411 19:24:27.830526  8589 net.cpp:226] pool3 needs backward computation.
I0411 19:24:27.830533  8589 net.cpp:226] relu3b needs backward computation.
I0411 19:24:27.830538  8589 net.cpp:226] conv3b needs backward computation.
I0411 19:24:27.830544  8589 net.cpp:226] relu3a needs backward computation.
I0411 19:24:27.830549  8589 net.cpp:226] conv3a needs backward computation.
I0411 19:24:27.830555  8589 net.cpp:228] pool2 does not need backward computation.
I0411 19:24:27.830561  8589 net.cpp:228] relu2a does not need backward computation.
I0411 19:24:27.830566  8589 net.cpp:228] conv2a does not need backward computation.
I0411 19:24:27.830572  8589 net.cpp:228] pool1 does not need backward computation.
I0411 19:24:27.830577  8589 net.cpp:228] relu1a does not need backward computation.
I0411 19:24:27.830584  8589 net.cpp:228] conv1a does not need backward computation.
I0411 19:24:27.830588  8589 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0411 19:24:27.830595  8589 net.cpp:228] data_data_0_split does not need backward computation.
I0411 19:24:27.830601  8589 net.cpp:228] data does not need backward computation.
I0411 19:24:27.830605  8589 net.cpp:270] This network produces output accuarcy
I0411 19:24:27.830612  8589 net.cpp:270] This network produces output loss_cls
I0411 19:24:27.830618  8589 net.cpp:270] This network produces output loss_twin
I0411 19:24:27.830623  8589 net.cpp:270] This network produces output rpn_accuarcy
I0411 19:24:27.830627  8589 net.cpp:270] This network produces output rpn_accuarcy_class
I0411 19:24:27.830633  8589 net.cpp:270] This network produces output rpn_cls_loss
I0411 19:24:27.830638  8589 net.cpp:270] This network produces output rpn_loss_twin
I0411 19:24:27.830682  8589 net.cpp:283] Network initialization done.
I0411 19:24:27.830806  8589 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0411 19:24:27.993438  8589 net.cpp:761] Ignoring source layer pool5
I0411 19:24:28.016785  8589 net.cpp:761] Ignoring source layer fc7
I0411 19:24:28.016808  8589 net.cpp:761] Ignoring source layer relu7
I0411 19:24:28.016813  8589 net.cpp:761] Ignoring source layer drop7
I0411 19:24:28.016815  8589 net.cpp:761] Ignoring source layer fc8-200
I0411 19:24:28.016819  8589 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
99
(array([0]), array([97]))
(array([[3.1250000e-02, 3.8569803e+02]], dtype=float32), array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 0.]], dtype=float32))
(1, 101)
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 95, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 133, in forward
    top[top_ind].reshape(*(blob.shape))
AttributeError: 'tuple' object has no attribute 'shape'
Terminating BlobFetcher
