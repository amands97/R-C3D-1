Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=0, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 0,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': False,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
[{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  3.12500000e-02,   1.00000000e+02]]), 'durations': array([ 99.96875]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[  0,   0, 800,   8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  3.12500000e-02,   1.00000000e+02]]), 'durations': array([ 99.96875]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[  0,   0, 800,   8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  200, 1000,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  200, 1000,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  400, 1200,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  400, 1200,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  600, 1400,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  600, 1400,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  800, 1600,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  800, 1600,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1000, 1800,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1000, 1800,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1200, 2000,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1200, 2000,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1400, 2200,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1400, 2200,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1600, 2400,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1600, 2400,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1800, 2600,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1800, 2600,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2000, 2800,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2000, 2800,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2200, 3000,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2200, 3000,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  85.69802312]]), 'durations': array([ 85.69802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2400, 3200,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  85.69802312]]), 'durations': array([ 85.69802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2400, 3200,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  60.69802312]]), 'durations': array([ 60.69802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2600, 3400,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  60.69802312]]), 'durations': array([ 60.69802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2600, 3400,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  51.19802312]]), 'durations': array([ 51.19802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2676, 3476,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  51.19802312]]), 'durations': array([ 51.19802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2676, 3476,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  76.19802312]]), 'durations': array([ 76.19802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2476, 3276,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[  0.        ,  76.19802312]]), 'durations': array([ 76.19802312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2476, 3276,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2276, 3076,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2276, 3076,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 2076, 2876,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 2076, 2876,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1876, 2676,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1876, 2676,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1676, 2476,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1676, 2476,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1476, 2276,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1476, 2276,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1276, 2076,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1276, 2076,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0, 1076, 1876,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0, 1076, 1876,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  876, 1676,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  876, 1676,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  676, 1476,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  676, 1476,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  476, 1276,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  476, 1276,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,  276, 1076,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[   0,  276, 1076,    8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[  0,  76, 876,   8]]), 'max_overlaps': array([ 1.])}, {'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[   0.,  100.]]), 'durations': array([ 100.]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': True, 'frames': array([[  0,  76, 876,   8]]), 'max_overlaps': array([ 1.])}]
56 roidb entries
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
precimputed
twin target means:
twin target stdevs:
NOT normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0418 04:56:04.484995  5947 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0418 04:56:04.485028  5947 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0418 04:56:04.485905  5947 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuarcy
I0418 04:56:04.486142  5947 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 100"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 99"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 99
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 198
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SigmoidCrossEntropyLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
I0418 04:56:04.486348  5947 layer_factory.hpp:77] Creating layer data
I0418 04:56:04.511983  5947 net.cpp:100] Creating Layer data
I0418 04:56:04.512006  5947 net.cpp:408] data -> data
I0418 04:56:04.512019  5947 net.cpp:408] data -> gt_boxes
setting up
has rpn
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0418 04:56:04.526055  5947 net.cpp:150] Setting up data
I0418 04:56:04.526078  5947 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0418 04:56:04.526087  5947 net.cpp:157] Top shape: 1 101 (101)
I0418 04:56:04.526091  5947 net.cpp:165] Memory required for data: 115605908
I0418 04:56:04.526099  5947 layer_factory.hpp:77] Creating layer data_data_0_split
I0418 04:56:04.526111  5947 net.cpp:100] Creating Layer data_data_0_split
I0418 04:56:04.526118  5947 net.cpp:434] data_data_0_split <- data
I0418 04:56:04.526125  5947 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0418 04:56:04.526136  5947 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0418 04:56:04.526170  5947 net.cpp:150] Setting up data_data_0_split
I0418 04:56:04.526180  5947 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0418 04:56:04.526183  5947 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0418 04:56:04.526186  5947 net.cpp:165] Memory required for data: 346816916
I0418 04:56:04.526192  5947 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0418 04:56:04.526197  5947 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0418 04:56:04.526201  5947 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0418 04:56:04.526206  5947 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0418 04:56:04.526211  5947 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0418 04:56:04.526233  5947 net.cpp:150] Setting up gt_boxes_data_1_split
I0418 04:56:04.526247  5947 net.cpp:157] Top shape: 1 101 (101)
I0418 04:56:04.526252  5947 net.cpp:157] Top shape: 1 101 (101)
I0418 04:56:04.526254  5947 net.cpp:165] Memory required for data: 346817724
I0418 04:56:04.526257  5947 layer_factory.hpp:77] Creating layer conv1a
I0418 04:56:04.526273  5947 net.cpp:100] Creating Layer conv1a
I0418 04:56:04.526276  5947 net.cpp:434] conv1a <- data_data_0_split_0
I0418 04:56:04.526281  5947 net.cpp:408] conv1a -> conv1a
I0418 04:56:04.734346  5947 net.cpp:150] Setting up conv1a
I0418 04:56:04.734375  5947 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0418 04:56:04.734380  5947 net.cpp:165] Memory required for data: 2813068476
I0418 04:56:04.734400  5947 layer_factory.hpp:77] Creating layer relu1a
I0418 04:56:04.734413  5947 net.cpp:100] Creating Layer relu1a
I0418 04:56:04.734418  5947 net.cpp:434] relu1a <- conv1a
I0418 04:56:04.734424  5947 net.cpp:395] relu1a -> conv1a (in-place)
I0418 04:56:04.734917  5947 net.cpp:150] Setting up relu1a
I0418 04:56:04.734931  5947 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0418 04:56:04.734935  5947 net.cpp:165] Memory required for data: 5279319228
I0418 04:56:04.734941  5947 layer_factory.hpp:77] Creating layer pool1
I0418 04:56:04.734951  5947 net.cpp:100] Creating Layer pool1
I0418 04:56:04.734954  5947 net.cpp:434] pool1 <- conv1a
I0418 04:56:04.734961  5947 net.cpp:408] pool1 -> pool1
I0418 04:56:04.735167  5947 net.cpp:150] Setting up pool1
I0418 04:56:04.735178  5947 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0418 04:56:04.735182  5947 net.cpp:165] Memory required for data: 5895881916
I0418 04:56:04.735185  5947 layer_factory.hpp:77] Creating layer conv2a
I0418 04:56:04.735198  5947 net.cpp:100] Creating Layer conv2a
I0418 04:56:04.735205  5947 net.cpp:434] conv2a <- pool1
I0418 04:56:04.735211  5947 net.cpp:408] conv2a -> conv2a
I0418 04:56:04.747391  5947 net.cpp:150] Setting up conv2a
I0418 04:56:04.747418  5947 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0418 04:56:04.747423  5947 net.cpp:165] Memory required for data: 7129007292
I0418 04:56:04.747438  5947 layer_factory.hpp:77] Creating layer relu2a
I0418 04:56:04.747448  5947 net.cpp:100] Creating Layer relu2a
I0418 04:56:04.747453  5947 net.cpp:434] relu2a <- conv2a
I0418 04:56:04.747460  5947 net.cpp:395] relu2a -> conv2a (in-place)
I0418 04:56:04.747822  5947 net.cpp:150] Setting up relu2a
I0418 04:56:04.747836  5947 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0418 04:56:04.747840  5947 net.cpp:165] Memory required for data: 8362132668
I0418 04:56:04.747844  5947 layer_factory.hpp:77] Creating layer pool2
I0418 04:56:04.747853  5947 net.cpp:100] Creating Layer pool2
I0418 04:56:04.747858  5947 net.cpp:434] pool2 <- conv2a
I0418 04:56:04.747865  5947 net.cpp:408] pool2 -> pool2
I0418 04:56:04.748066  5947 net.cpp:150] Setting up pool2
I0418 04:56:04.748077  5947 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0418 04:56:04.748081  5947 net.cpp:165] Memory required for data: 8516273340
I0418 04:56:04.748085  5947 layer_factory.hpp:77] Creating layer conv3a
I0418 04:56:04.748098  5947 net.cpp:100] Creating Layer conv3a
I0418 04:56:04.748105  5947 net.cpp:434] conv3a <- pool2
I0418 04:56:04.748111  5947 net.cpp:408] conv3a -> conv3a
I0418 04:56:04.774157  5947 net.cpp:150] Setting up conv3a
I0418 04:56:04.774180  5947 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0418 04:56:04.774184  5947 net.cpp:165] Memory required for data: 8824554684
I0418 04:56:04.774197  5947 layer_factory.hpp:77] Creating layer relu3a
I0418 04:56:04.774206  5947 net.cpp:100] Creating Layer relu3a
I0418 04:56:04.774210  5947 net.cpp:434] relu3a <- conv3a
I0418 04:56:04.774216  5947 net.cpp:395] relu3a -> conv3a (in-place)
I0418 04:56:04.774551  5947 net.cpp:150] Setting up relu3a
I0418 04:56:04.774575  5947 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0418 04:56:04.774580  5947 net.cpp:165] Memory required for data: 9132836028
I0418 04:56:04.774583  5947 layer_factory.hpp:77] Creating layer conv3b
I0418 04:56:04.774596  5947 net.cpp:100] Creating Layer conv3b
I0418 04:56:04.774602  5947 net.cpp:434] conv3b <- conv3a
I0418 04:56:04.774608  5947 net.cpp:408] conv3b -> conv3b
I0418 04:56:04.824643  5947 net.cpp:150] Setting up conv3b
I0418 04:56:04.824669  5947 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0418 04:56:04.824673  5947 net.cpp:165] Memory required for data: 9441117372
I0418 04:56:04.824687  5947 layer_factory.hpp:77] Creating layer relu3b
I0418 04:56:04.824697  5947 net.cpp:100] Creating Layer relu3b
I0418 04:56:04.824702  5947 net.cpp:434] relu3b <- conv3b
I0418 04:56:04.824710  5947 net.cpp:395] relu3b -> conv3b (in-place)
I0418 04:56:04.825037  5947 net.cpp:150] Setting up relu3b
I0418 04:56:04.825050  5947 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0418 04:56:04.825054  5947 net.cpp:165] Memory required for data: 9749398716
I0418 04:56:04.825058  5947 layer_factory.hpp:77] Creating layer pool3
I0418 04:56:04.825067  5947 net.cpp:100] Creating Layer pool3
I0418 04:56:04.825072  5947 net.cpp:434] pool3 <- conv3b
I0418 04:56:04.825078  5947 net.cpp:408] pool3 -> pool3
I0418 04:56:04.825261  5947 net.cpp:150] Setting up pool3
I0418 04:56:04.825273  5947 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0418 04:56:04.825278  5947 net.cpp:165] Memory required for data: 9787933884
I0418 04:56:04.825280  5947 layer_factory.hpp:77] Creating layer conv4a
I0418 04:56:04.825294  5947 net.cpp:100] Creating Layer conv4a
I0418 04:56:04.825299  5947 net.cpp:434] conv4a <- pool3
I0418 04:56:04.825306  5947 net.cpp:408] conv4a -> conv4a
I0418 04:56:04.925021  5947 net.cpp:150] Setting up conv4a
I0418 04:56:04.925050  5947 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0418 04:56:04.925056  5947 net.cpp:165] Memory required for data: 9865004220
I0418 04:56:04.925072  5947 layer_factory.hpp:77] Creating layer relu4a
I0418 04:56:04.925083  5947 net.cpp:100] Creating Layer relu4a
I0418 04:56:04.925087  5947 net.cpp:434] relu4a <- conv4a
I0418 04:56:04.925096  5947 net.cpp:395] relu4a -> conv4a (in-place)
I0418 04:56:04.925428  5947 net.cpp:150] Setting up relu4a
I0418 04:56:04.925442  5947 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0418 04:56:04.925446  5947 net.cpp:165] Memory required for data: 9942074556
I0418 04:56:04.925451  5947 layer_factory.hpp:77] Creating layer conv4b
I0418 04:56:04.925465  5947 net.cpp:100] Creating Layer conv4b
I0418 04:56:04.925472  5947 net.cpp:434] conv4b <- conv4a
I0418 04:56:04.925479  5947 net.cpp:408] conv4b -> conv4b
I0418 04:56:05.119395  5947 net.cpp:150] Setting up conv4b
I0418 04:56:05.119421  5947 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0418 04:56:05.119426  5947 net.cpp:165] Memory required for data: 10019144892
I0418 04:56:05.119434  5947 layer_factory.hpp:77] Creating layer relu4b
I0418 04:56:05.119447  5947 net.cpp:100] Creating Layer relu4b
I0418 04:56:05.119451  5947 net.cpp:434] relu4b <- conv4b
I0418 04:56:05.119457  5947 net.cpp:395] relu4b -> conv4b (in-place)
I0418 04:56:05.119619  5947 net.cpp:150] Setting up relu4b
I0418 04:56:05.119630  5947 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0418 04:56:05.119634  5947 net.cpp:165] Memory required for data: 10096215228
I0418 04:56:05.119638  5947 layer_factory.hpp:77] Creating layer pool4
I0418 04:56:05.119648  5947 net.cpp:100] Creating Layer pool4
I0418 04:56:05.119652  5947 net.cpp:434] pool4 <- conv4b
I0418 04:56:05.119658  5947 net.cpp:408] pool4 -> pool4
I0418 04:56:05.120007  5947 net.cpp:150] Setting up pool4
I0418 04:56:05.120020  5947 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 04:56:05.120023  5947 net.cpp:165] Memory required for data: 10105849020
I0418 04:56:05.120028  5947 layer_factory.hpp:77] Creating layer conv5a
I0418 04:56:05.120039  5947 net.cpp:100] Creating Layer conv5a
I0418 04:56:05.120043  5947 net.cpp:434] conv5a <- pool4
I0418 04:56:05.120051  5947 net.cpp:408] conv5a -> conv5a
I0418 04:56:05.313462  5947 net.cpp:150] Setting up conv5a
I0418 04:56:05.313489  5947 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 04:56:05.313494  5947 net.cpp:165] Memory required for data: 10115482812
I0418 04:56:05.313504  5947 layer_factory.hpp:77] Creating layer relu5a
I0418 04:56:05.313514  5947 net.cpp:100] Creating Layer relu5a
I0418 04:56:05.313521  5947 net.cpp:434] relu5a <- conv5a
I0418 04:56:05.313529  5947 net.cpp:395] relu5a -> conv5a (in-place)
I0418 04:56:05.313977  5947 net.cpp:150] Setting up relu5a
I0418 04:56:05.313990  5947 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 04:56:05.313994  5947 net.cpp:165] Memory required for data: 10125116604
I0418 04:56:05.313998  5947 layer_factory.hpp:77] Creating layer conv5b
I0418 04:56:05.314011  5947 net.cpp:100] Creating Layer conv5b
I0418 04:56:05.314015  5947 net.cpp:434] conv5b <- conv5a
I0418 04:56:05.314023  5947 net.cpp:408] conv5b -> conv5b
I0418 04:56:05.510265  5947 net.cpp:150] Setting up conv5b
I0418 04:56:05.510291  5947 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 04:56:05.510295  5947 net.cpp:165] Memory required for data: 10134750396
I0418 04:56:05.510305  5947 layer_factory.hpp:77] Creating layer relu5b
I0418 04:56:05.510316  5947 net.cpp:100] Creating Layer relu5b
I0418 04:56:05.510321  5947 net.cpp:434] relu5b <- conv5b
I0418 04:56:05.510327  5947 net.cpp:395] relu5b -> conv5b (in-place)
I0418 04:56:05.510473  5947 net.cpp:150] Setting up relu5b
I0418 04:56:05.510483  5947 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 04:56:05.510488  5947 net.cpp:165] Memory required for data: 10144384188
I0418 04:56:05.510490  5947 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0418 04:56:05.510498  5947 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0418 04:56:05.510501  5947 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0418 04:56:05.510507  5947 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0418 04:56:05.510514  5947 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0418 04:56:05.510550  5947 net.cpp:150] Setting up conv5b_relu5b_0_split
I0418 04:56:05.510558  5947 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 04:56:05.510562  5947 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0418 04:56:05.510565  5947 net.cpp:165] Memory required for data: 10163651772
I0418 04:56:05.510570  5947 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0418 04:56:05.510581  5947 net.cpp:100] Creating Layer rpn_conv/3x3
I0418 04:56:05.510584  5947 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0418 04:56:05.510591  5947 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0418 04:56:05.698386  5947 net.cpp:150] Setting up rpn_conv/3x3
I0418 04:56:05.698421  5947 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0418 04:56:05.698426  5947 net.cpp:165] Memory required for data: 10166797500
I0418 04:56:05.698437  5947 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0418 04:56:05.698448  5947 net.cpp:100] Creating Layer rpn_relu/3x3
I0418 04:56:05.698453  5947 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0418 04:56:05.698458  5947 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0418 04:56:05.698750  5947 net.cpp:150] Setting up rpn_relu/3x3
I0418 04:56:05.698776  5947 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0418 04:56:05.698782  5947 net.cpp:165] Memory required for data: 10169943228
I0418 04:56:05.698786  5947 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0418 04:56:05.698798  5947 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0418 04:56:05.698804  5947 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0418 04:56:05.698810  5947 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0418 04:56:05.885001  5947 net.cpp:150] Setting up rpn_conv/3x3_2
I0418 04:56:05.885025  5947 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0418 04:56:05.885028  5947 net.cpp:165] Memory required for data: 10170729660
I0418 04:56:05.885037  5947 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0418 04:56:05.885046  5947 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0418 04:56:05.885051  5947 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0418 04:56:05.885058  5947 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0418 04:56:05.885367  5947 net.cpp:150] Setting up rpn_relu/3x3_2
I0418 04:56:05.885380  5947 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0418 04:56:05.885383  5947 net.cpp:165] Memory required for data: 10171516092
I0418 04:56:05.885387  5947 layer_factory.hpp:77] Creating layer rpn/output_pool
I0418 04:56:05.885396  5947 net.cpp:100] Creating Layer rpn/output_pool
I0418 04:56:05.885399  5947 net.cpp:434] rpn/output_pool <- rpn/output_2
I0418 04:56:05.885404  5947 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0418 04:56:05.885596  5947 net.cpp:150] Setting up rpn/output_pool
I0418 04:56:05.885607  5947 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0418 04:56:05.885610  5947 net.cpp:165] Memory required for data: 10171712700
I0418 04:56:05.885614  5947 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0418 04:56:05.885619  5947 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0418 04:56:05.885622  5947 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0418 04:56:05.885627  5947 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0418 04:56:05.885632  5947 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0418 04:56:05.885664  5947 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0418 04:56:05.885671  5947 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0418 04:56:05.885675  5947 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0418 04:56:05.885679  5947 net.cpp:165] Memory required for data: 10172105916
I0418 04:56:05.885681  5947 layer_factory.hpp:77] Creating layer rpn_cls_score
I0418 04:56:05.885691  5947 net.cpp:100] Creating Layer rpn_cls_score
I0418 04:56:05.885699  5947 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0418 04:56:05.885704  5947 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0418 04:56:05.887732  5947 net.cpp:150] Setting up rpn_cls_score
I0418 04:56:05.887747  5947 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 04:56:05.887750  5947 net.cpp:165] Memory required for data: 10172134332
I0418 04:56:05.887756  5947 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0418 04:56:05.887761  5947 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0418 04:56:05.887765  5947 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0418 04:56:05.887771  5947 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0418 04:56:05.887778  5947 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0418 04:56:05.887817  5947 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0418 04:56:05.887825  5947 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 04:56:05.887830  5947 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 04:56:05.887832  5947 net.cpp:165] Memory required for data: 10172191164
I0418 04:56:05.887835  5947 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0418 04:56:05.887848  5947 net.cpp:100] Creating Layer rpn_twin_pred
I0418 04:56:05.887854  5947 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0418 04:56:05.887861  5947 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0418 04:56:05.889760  5947 net.cpp:150] Setting up rpn_twin_pred
I0418 04:56:05.889772  5947 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 04:56:05.889776  5947 net.cpp:165] Memory required for data: 10172219580
I0418 04:56:05.889782  5947 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0418 04:56:05.889788  5947 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0418 04:56:05.889792  5947 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0418 04:56:05.889798  5947 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0418 04:56:05.889804  5947 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0418 04:56:05.889839  5947 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0418 04:56:05.889847  5947 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 04:56:05.889852  5947 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 04:56:05.889854  5947 net.cpp:165] Memory required for data: 10172276412
I0418 04:56:05.889858  5947 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0418 04:56:05.889870  5947 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0418 04:56:05.889876  5947 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0418 04:56:05.889883  5947 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0418 04:56:05.889912  5947 net.cpp:150] Setting up rpn_cls_score_reshape
I0418 04:56:05.889920  5947 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0418 04:56:05.889924  5947 net.cpp:165] Memory required for data: 10172304828
I0418 04:56:05.889926  5947 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0418 04:56:05.889931  5947 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0418 04:56:05.889935  5947 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0418 04:56:05.889941  5947 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0418 04:56:05.889950  5947 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0418 04:56:05.889957  5947 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0418 04:56:05.889997  5947 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0418 04:56:05.890005  5947 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0418 04:56:05.890009  5947 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0418 04:56:05.890012  5947 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0418 04:56:05.890015  5947 net.cpp:165] Memory required for data: 10172390076
I0418 04:56:05.890018  5947 layer_factory.hpp:77] Creating layer rpn-data
I0418 04:56:05.890416  5947 net.cpp:100] Creating Layer rpn-data
I0418 04:56:05.890429  5947 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0418 04:56:05.890434  5947 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0418 04:56:05.890439  5947 net.cpp:434] rpn-data <- data_data_0_split_1
I0418 04:56:05.890444  5947 net.cpp:408] rpn-data -> rpn_labels
I0418 04:56:05.890450  5947 net.cpp:408] rpn-data -> rpn_twin_targets
I0418 04:56:05.890456  5947 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0418 04:56:05.890461  5947 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0418 04:56:05.892741  5947 net.cpp:150] Setting up rpn-data
I0418 04:56:05.892755  5947 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0418 04:56:05.892760  5947 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 04:56:05.892765  5947 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 04:56:05.892767  5947 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 04:56:05.892771  5947 net.cpp:165] Memory required for data: 10172489532
I0418 04:56:05.892774  5947 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0418 04:56:05.892781  5947 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0418 04:56:05.892783  5947 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0418 04:56:05.892789  5947 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0418 04:56:05.892796  5947 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0418 04:56:05.892829  5947 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0418 04:56:05.892838  5947 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0418 04:56:05.892840  5947 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0418 04:56:05.892844  5947 net.cpp:165] Memory required for data: 10172517948
I0418 04:56:05.892848  5947 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0418 04:56:05.892861  5947 net.cpp:100] Creating Layer rpn_loss_cls
I0418 04:56:05.892865  5947 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0418 04:56:05.892869  5947 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0418 04:56:05.892875  5947 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0418 04:56:05.892885  5947 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0418 04:56:05.893265  5947 net.cpp:150] Setting up rpn_loss_cls
I0418 04:56:05.893278  5947 net.cpp:157] Top shape: (1)
I0418 04:56:05.893281  5947 net.cpp:160]     with loss weight 1
I0418 04:56:05.893295  5947 net.cpp:165] Memory required for data: 10172517952
I0418 04:56:05.893298  5947 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0418 04:56:05.893307  5947 net.cpp:100] Creating Layer rpn_loss_twin
I0418 04:56:05.893311  5947 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0418 04:56:05.893316  5947 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0418 04:56:05.893321  5947 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0418 04:56:05.893323  5947 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0418 04:56:05.893329  5947 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0418 04:56:05.893402  5947 net.cpp:150] Setting up rpn_loss_twin
I0418 04:56:05.893411  5947 net.cpp:157] Top shape: (1)
I0418 04:56:05.893414  5947 net.cpp:160]     with loss weight 1
I0418 04:56:05.893419  5947 net.cpp:165] Memory required for data: 10172517956
I0418 04:56:05.893422  5947 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0418 04:56:05.893429  5947 net.cpp:100] Creating Layer rpn_accuarcy
I0418 04:56:05.893435  5947 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0418 04:56:05.893440  5947 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0418 04:56:05.893443  5947 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0418 04:56:05.893450  5947 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0418 04:56:05.893489  5947 net.cpp:150] Setting up rpn_accuarcy
I0418 04:56:05.893496  5947 net.cpp:157] Top shape: (1)
I0418 04:56:05.893506  5947 net.cpp:157] Top shape: 2 (2)
I0418 04:56:05.893508  5947 net.cpp:165] Memory required for data: 10172517968
I0418 04:56:05.893512  5947 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0418 04:56:05.893517  5947 net.cpp:100] Creating Layer rpn_cls_prob
I0418 04:56:05.893520  5947 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0418 04:56:05.893527  5947 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0418 04:56:05.893720  5947 net.cpp:150] Setting up rpn_cls_prob
I0418 04:56:05.893731  5947 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0418 04:56:05.893734  5947 net.cpp:165] Memory required for data: 10172546384
I0418 04:56:05.893738  5947 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0418 04:56:05.893743  5947 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0418 04:56:05.893748  5947 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0418 04:56:05.893752  5947 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0418 04:56:05.893777  5947 net.cpp:150] Setting up rpn_cls_prob_reshape
I0418 04:56:05.893785  5947 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0418 04:56:05.893787  5947 net.cpp:165] Memory required for data: 10172574800
I0418 04:56:05.893791  5947 layer_factory.hpp:77] Creating layer proposal
I0418 04:56:05.894333  5947 net.cpp:100] Creating Layer proposal
I0418 04:56:05.894346  5947 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0418 04:56:05.894351  5947 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0418 04:56:05.894356  5947 net.cpp:408] proposal -> rpn_rois
I0418 04:56:05.896586  5947 net.cpp:150] Setting up proposal
I0418 04:56:05.896600  5947 net.cpp:157] Top shape: 1 3 (3)
I0418 04:56:05.896605  5947 net.cpp:165] Memory required for data: 10172574812
I0418 04:56:05.896608  5947 layer_factory.hpp:77] Creating layer roi-data
I0418 04:56:05.896744  5947 net.cpp:100] Creating Layer roi-data
I0418 04:56:05.896756  5947 net.cpp:434] roi-data <- rpn_rois
I0418 04:56:05.896761  5947 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0418 04:56:05.896767  5947 net.cpp:408] roi-data -> rois
I0418 04:56:05.896773  5947 net.cpp:408] roi-data -> labels
I0418 04:56:05.896780  5947 net.cpp:408] roi-data -> twin_targets
I0418 04:56:05.896788  5947 net.cpp:408] roi-data -> twin_inside_weights
I0418 04:56:05.896793  5947 net.cpp:408] roi-data -> twin_outside_weights
I0418 04:56:05.897094  5947 net.cpp:150] Setting up roi-data
I0418 04:56:05.897107  5947 net.cpp:157] Top shape: 1 3 (3)
I0418 04:56:05.897111  5947 net.cpp:157] Top shape: 1 99 (99)
I0418 04:56:05.897115  5947 net.cpp:157] Top shape: 1 198 (198)
I0418 04:56:05.897119  5947 net.cpp:157] Top shape: 1 198 (198)
I0418 04:56:05.897121  5947 net.cpp:157] Top shape: 1 198 (198)
I0418 04:56:05.897125  5947 net.cpp:165] Memory required for data: 10172577596
I0418 04:56:05.897128  5947 layer_factory.hpp:77] Creating layer roi_pool5
I0418 04:56:05.897137  5947 net.cpp:100] Creating Layer roi_pool5
I0418 04:56:05.897141  5947 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0418 04:56:05.897146  5947 net.cpp:434] roi_pool5 <- rois
I0418 04:56:05.897150  5947 net.cpp:408] roi_pool5 -> pool5
I0418 04:56:05.897158  5947 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0418 04:56:05.897168  5947 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0418 04:56:05.897202  5947 net.cpp:150] Setting up roi_pool5
I0418 04:56:05.897207  5947 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0418 04:56:05.897209  5947 net.cpp:165] Memory required for data: 10172610364
I0418 04:56:05.897213  5947 layer_factory.hpp:77] Creating layer fc6
I0418 04:56:05.897222  5947 net.cpp:100] Creating Layer fc6
I0418 04:56:05.897225  5947 net.cpp:434] fc6 <- pool5
I0418 04:56:05.897230  5947 net.cpp:408] fc6 -> fc6
I0418 04:56:06.778363  5947 net.cpp:150] Setting up fc6
I0418 04:56:06.778388  5947 net.cpp:157] Top shape: 1 4096 (4096)
I0418 04:56:06.778403  5947 net.cpp:165] Memory required for data: 10172626748
I0418 04:56:06.778412  5947 layer_factory.hpp:77] Creating layer relu6
I0418 04:56:06.778421  5947 net.cpp:100] Creating Layer relu6
I0418 04:56:06.778426  5947 net.cpp:434] relu6 <- fc6
I0418 04:56:06.778434  5947 net.cpp:395] relu6 -> fc6 (in-place)
I0418 04:56:06.778849  5947 net.cpp:150] Setting up relu6
I0418 04:56:06.778863  5947 net.cpp:157] Top shape: 1 4096 (4096)
I0418 04:56:06.778868  5947 net.cpp:165] Memory required for data: 10172643132
I0418 04:56:06.778872  5947 layer_factory.hpp:77] Creating layer drop6
I0418 04:56:06.778883  5947 net.cpp:100] Creating Layer drop6
I0418 04:56:06.778887  5947 net.cpp:434] drop6 <- fc6
I0418 04:56:06.778893  5947 net.cpp:395] drop6 -> fc6 (in-place)
I0418 04:56:06.778920  5947 net.cpp:150] Setting up drop6
I0418 04:56:06.778928  5947 net.cpp:157] Top shape: 1 4096 (4096)
I0418 04:56:06.778931  5947 net.cpp:165] Memory required for data: 10172659516
I0418 04:56:06.778935  5947 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0418 04:56:06.778941  5947 net.cpp:100] Creating Layer fc6_drop6_0_split
I0418 04:56:06.778945  5947 net.cpp:434] fc6_drop6_0_split <- fc6
I0418 04:56:06.778949  5947 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0418 04:56:06.778955  5947 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0418 04:56:06.778988  5947 net.cpp:150] Setting up fc6_drop6_0_split
I0418 04:56:06.778995  5947 net.cpp:157] Top shape: 1 4096 (4096)
I0418 04:56:06.778998  5947 net.cpp:157] Top shape: 1 4096 (4096)
I0418 04:56:06.779001  5947 net.cpp:165] Memory required for data: 10172692284
I0418 04:56:06.779004  5947 layer_factory.hpp:77] Creating layer cls_score
I0418 04:56:06.779012  5947 net.cpp:100] Creating Layer cls_score
I0418 04:56:06.779016  5947 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0418 04:56:06.779021  5947 net.cpp:408] cls_score -> cls_score
I0418 04:56:06.789638  5947 net.cpp:150] Setting up cls_score
I0418 04:56:06.789650  5947 net.cpp:157] Top shape: 1 99 (99)
I0418 04:56:06.789654  5947 net.cpp:165] Memory required for data: 10172692680
I0418 04:56:06.789660  5947 layer_factory.hpp:77] Creating layer twin_pred
I0418 04:56:06.789667  5947 net.cpp:100] Creating Layer twin_pred
I0418 04:56:06.789671  5947 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0418 04:56:06.789677  5947 net.cpp:408] twin_pred -> twin_pred
I0418 04:56:06.810957  5947 net.cpp:150] Setting up twin_pred
I0418 04:56:06.810971  5947 net.cpp:157] Top shape: 1 198 (198)
I0418 04:56:06.810976  5947 net.cpp:165] Memory required for data: 10172693472
I0418 04:56:06.810981  5947 layer_factory.hpp:77] Creating layer loss_cls
I0418 04:56:06.810993  5947 net.cpp:100] Creating Layer loss_cls
I0418 04:56:06.810997  5947 net.cpp:434] loss_cls <- cls_score
I0418 04:56:06.811002  5947 net.cpp:434] loss_cls <- labels
I0418 04:56:06.811007  5947 net.cpp:408] loss_cls -> loss_cls
I0418 04:56:06.811064  5947 net.cpp:150] Setting up loss_cls
I0418 04:56:06.811071  5947 net.cpp:157] Top shape: (1)
I0418 04:56:06.811074  5947 net.cpp:160]     with loss weight 1
I0418 04:56:06.811082  5947 net.cpp:165] Memory required for data: 10172693476
I0418 04:56:06.811086  5947 layer_factory.hpp:77] Creating layer loss_twin
I0418 04:56:06.811094  5947 net.cpp:100] Creating Layer loss_twin
I0418 04:56:06.811096  5947 net.cpp:434] loss_twin <- twin_pred
I0418 04:56:06.811101  5947 net.cpp:434] loss_twin <- twin_targets
I0418 04:56:06.811105  5947 net.cpp:434] loss_twin <- twin_inside_weights
I0418 04:56:06.811108  5947 net.cpp:434] loss_twin <- twin_outside_weights
I0418 04:56:06.811112  5947 net.cpp:408] loss_twin -> loss_twin
I0418 04:56:06.811177  5947 net.cpp:150] Setting up loss_twin
I0418 04:56:06.811185  5947 net.cpp:157] Top shape: (1)
I0418 04:56:06.811188  5947 net.cpp:160]     with loss weight 1
I0418 04:56:06.811192  5947 net.cpp:165] Memory required for data: 10172693480
I0418 04:56:06.811195  5947 net.cpp:226] loss_twin needs backward computation.
I0418 04:56:06.811199  5947 net.cpp:226] loss_cls needs backward computation.
I0418 04:56:06.811203  5947 net.cpp:226] twin_pred needs backward computation.
I0418 04:56:06.811206  5947 net.cpp:226] cls_score needs backward computation.
I0418 04:56:06.811209  5947 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0418 04:56:06.811213  5947 net.cpp:226] drop6 needs backward computation.
I0418 04:56:06.811215  5947 net.cpp:226] relu6 needs backward computation.
I0418 04:56:06.811218  5947 net.cpp:226] fc6 needs backward computation.
I0418 04:56:06.811221  5947 net.cpp:226] roi_pool5 needs backward computation.
I0418 04:56:06.811225  5947 net.cpp:226] roi-data needs backward computation.
I0418 04:56:06.811229  5947 net.cpp:226] proposal needs backward computation.
I0418 04:56:06.811233  5947 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0418 04:56:06.811236  5947 net.cpp:226] rpn_cls_prob needs backward computation.
I0418 04:56:06.811240  5947 net.cpp:228] rpn_accuarcy does not need backward computation.
I0418 04:56:06.811244  5947 net.cpp:226] rpn_loss_twin needs backward computation.
I0418 04:56:06.811249  5947 net.cpp:226] rpn_loss_cls needs backward computation.
I0418 04:56:06.811254  5947 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0418 04:56:06.811257  5947 net.cpp:226] rpn-data needs backward computation.
I0418 04:56:06.811262  5947 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0418 04:56:06.811266  5947 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0418 04:56:06.811269  5947 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0418 04:56:06.811273  5947 net.cpp:226] rpn_twin_pred needs backward computation.
I0418 04:56:06.811277  5947 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0418 04:56:06.811282  5947 net.cpp:226] rpn_cls_score needs backward computation.
I0418 04:56:06.811285  5947 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0418 04:56:06.811290  5947 net.cpp:226] rpn/output_pool needs backward computation.
I0418 04:56:06.811293  5947 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0418 04:56:06.811296  5947 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0418 04:56:06.811300  5947 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0418 04:56:06.811305  5947 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0418 04:56:06.811307  5947 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0418 04:56:06.811311  5947 net.cpp:226] relu5b needs backward computation.
I0418 04:56:06.811316  5947 net.cpp:226] conv5b needs backward computation.
I0418 04:56:06.811318  5947 net.cpp:226] relu5a needs backward computation.
I0418 04:56:06.811321  5947 net.cpp:226] conv5a needs backward computation.
I0418 04:56:06.811326  5947 net.cpp:226] pool4 needs backward computation.
I0418 04:56:06.811328  5947 net.cpp:226] relu4b needs backward computation.
I0418 04:56:06.811332  5947 net.cpp:226] conv4b needs backward computation.
I0418 04:56:06.811336  5947 net.cpp:226] relu4a needs backward computation.
I0418 04:56:06.811338  5947 net.cpp:226] conv4a needs backward computation.
I0418 04:56:06.811342  5947 net.cpp:226] pool3 needs backward computation.
I0418 04:56:06.811345  5947 net.cpp:226] relu3b needs backward computation.
I0418 04:56:06.811349  5947 net.cpp:226] conv3b needs backward computation.
I0418 04:56:06.811352  5947 net.cpp:226] relu3a needs backward computation.
I0418 04:56:06.811355  5947 net.cpp:226] conv3a needs backward computation.
I0418 04:56:06.811359  5947 net.cpp:228] pool2 does not need backward computation.
I0418 04:56:06.811363  5947 net.cpp:228] relu2a does not need backward computation.
I0418 04:56:06.811367  5947 net.cpp:228] conv2a does not need backward computation.
I0418 04:56:06.811370  5947 net.cpp:228] pool1 does not need backward computation.
I0418 04:56:06.811373  5947 net.cpp:228] relu1a does not need backward computation.
I0418 04:56:06.811377  5947 net.cpp:228] conv1a does not need backward computation.
I0418 04:56:06.811381  5947 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0418 04:56:06.811385  5947 net.cpp:228] data_data_0_split does not need backward computation.
I0418 04:56:06.811389  5947 net.cpp:228] data does not need backward computation.
I0418 04:56:06.811393  5947 net.cpp:270] This network produces output loss_cls
I0418 04:56:06.811395  5947 net.cpp:270] This network produces output loss_twin
I0418 04:56:06.811399  5947 net.cpp:270] This network produces output rpn_accuarcy
I0418 04:56:06.811403  5947 net.cpp:270] This network produces output rpn_accuarcy_class
I0418 04:56:06.811405  5947 net.cpp:270] This network produces output rpn_cls_loss
I0418 04:56:06.811409  5947 net.cpp:270] This network produces output rpn_loss_twin
I0418 04:56:06.811441  5947 net.cpp:283] Network initialization done.
I0418 04:56:06.811578  5947 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0418 04:56:09.919276  5947 net.cpp:761] Ignoring source layer pool5
I0418 04:56:09.939311  5947 net.cpp:761] Ignoring source layer fc7
I0418 04:56:09.939332  5947 net.cpp:761] Ignoring source layer relu7
I0418 04:56:09.939335  5947 net.cpp:761] Ignoring source layer drop7
I0418 04:56:09.939338  5947 net.cpp:761] Ignoring source layer fc8-200
I0418 04:56:09.939342  5947 net.cpp:761] Ignoring source layer loss
Solving...
rpn: num_positive 15
rpn: num_negative 49
I0418 04:56:13.917557  5947 accuracy_layer.cpp:96] Accuracy: 0.515625
I0418 04:56:13.917580  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.428571
I0418 04:56:13.917585  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 11
num bg: 93
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(104, 99)
this part is done
I0418 04:56:13.981614  5947 solver.cpp:228] Iteration 0, loss = 89.5727
I0418 04:56:13.981647  5947 solver.cpp:244]     Train net output #0: loss_cls = 88.7826 (* 1 = 88.7826 loss)
I0418 04:56:13.981655  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:56:13.981660  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.515625
I0418 04:56:13.981667  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.428571
I0418 04:56:13.981670  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 04:56:13.981676  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.682468 (* 1 = 0.682468 loss)
I0418 04:56:13.981683  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.107608 (* 1 = 0.107608 loss)
I0418 04:56:13.981693  5947 sgd_solver.cpp:106] Iteration 0, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:56:18.200667  5947 accuracy_layer.cpp:96] Accuracy: 0.46875
I0418 04:56:18.200691  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.387755
I0418 04:56:18.200695  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.733333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 13
num bg: 86
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(99, 99)
this part is done
I0418 04:56:18.227800  5947 solver.cpp:228] Iteration 1, loss = 62.452
I0418 04:56:18.227828  5947 solver.cpp:244]     Train net output #0: loss_cls = 61.6946 (* 1 = 61.6946 loss)
I0418 04:56:18.227834  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:56:18.227843  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.46875
I0418 04:56:18.227847  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.387755
I0418 04:56:18.227851  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.733333
I0418 04:56:18.227855  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.688692 (* 1 = 0.688692 loss)
I0418 04:56:18.227860  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0687435 (* 1 = 0.0687435 loss)
I0418 04:56:18.227865  5947 sgd_solver.cpp:106] Iteration 1, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:56:22.443950  5947 accuracy_layer.cpp:96] Accuracy: 0.53125
I0418 04:56:22.443971  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.469388
I0418 04:56:22.443976  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.733333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 85
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(97, 99)
this part is done
I0418 04:56:22.470829  5947 solver.cpp:228] Iteration 2, loss = 52.8828
I0418 04:56:22.470857  5947 solver.cpp:244]     Train net output #0: loss_cls = 52.1089 (* 1 = 52.1089 loss)
I0418 04:56:22.470870  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:56:22.470880  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.53125
I0418 04:56:22.470887  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.469388
I0418 04:56:22.470892  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.733333
I0418 04:56:22.470898  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.686943 (* 1 = 0.686943 loss)
I0418 04:56:22.470904  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0869468 (* 1 = 0.0869468 loss)
I0418 04:56:22.470911  5947 sgd_solver.cpp:106] Iteration 2, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:56:26.699697  5947 accuracy_layer.cpp:96] Accuracy: 0.5625
I0418 04:56:26.699717  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.489796
I0418 04:56:26.699723  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 85
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(97, 99)
this part is done
I0418 04:56:26.726718  5947 solver.cpp:228] Iteration 3, loss = 34.0153
I0418 04:56:26.726743  5947 solver.cpp:244]     Train net output #0: loss_cls = 33.2531 (* 1 = 33.2531 loss)
I0418 04:56:26.726750  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:56:26.726755  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.5625
I0418 04:56:26.726766  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.489796
I0418 04:56:26.726771  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 04:56:26.726776  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.679384 (* 1 = 0.679384 loss)
I0418 04:56:26.726783  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0828306 (* 1 = 0.0828306 loss)
I0418 04:56:26.726789  5947 sgd_solver.cpp:106] Iteration 3, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:56:30.955250  5947 accuracy_layer.cpp:96] Accuracy: 0.453125
I0418 04:56:30.955271  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.367347
I0418 04:56:30.955276  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.733333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 10)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 10
num bg: 77
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(87, 99)
this part is done
I0418 04:56:30.981747  5947 solver.cpp:228] Iteration 4, loss = 6.61958
I0418 04:56:30.981768  5947 solver.cpp:244]     Train net output #0: loss_cls = 5.69533 (* 1 = 5.69533 loss)
I0418 04:56:30.981775  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:56:30.981781  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.453125
I0418 04:56:30.981786  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.367347
I0418 04:56:30.981789  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.733333
I0418 04:56:30.981794  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.643666 (* 1 = 0.643666 loss)
I0418 04:56:30.981801  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.280581 (* 1 = 0.280581 loss)
I0418 04:56:30.981807  5947 sgd_solver.cpp:106] Iteration 4, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:56:35.214046  5947 accuracy_layer.cpp:96] Accuracy: 0.5625
I0418 04:56:35.214068  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.510204
I0418 04:56:35.214073  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.733333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 9)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]
num fg: 9
num bg: 70
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(79, 99)
this part is done
I0418 04:56:35.239909  5947 solver.cpp:228] Iteration 5, loss = 2.55258
I0418 04:56:35.239929  5947 solver.cpp:244]     Train net output #0: loss_cls = 1.33106 (* 1 = 1.33106 loss)
I0418 04:56:35.239936  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:56:35.239940  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.5625
I0418 04:56:35.239955  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.510204
I0418 04:56:35.239959  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.733333
I0418 04:56:35.239965  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.83719 (* 1 = 0.83719 loss)
I0418 04:56:35.239969  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.384334 (* 1 = 0.384334 loss)
I0418 04:56:35.239975  5947 sgd_solver.cpp:106] Iteration 5, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:56:39.477565  5947 accuracy_layer.cpp:96] Accuracy: 0.484375
I0418 04:56:39.477586  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.387755
I0418 04:56:39.477591  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 9)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]
num fg: 9
num bg: 52
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(61, 99)
this part is done
I0418 04:56:39.500303  5947 solver.cpp:228] Iteration 6, loss = 3.87798
I0418 04:56:39.500324  5947 solver.cpp:244]     Train net output #0: loss_cls = 2.10131 (* 1 = 2.10131 loss)
I0418 04:56:39.500330  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:56:39.500334  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.484375
I0418 04:56:39.500339  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.387755
I0418 04:56:39.500342  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 04:56:39.500347  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.898189 (* 1 = 0.898189 loss)
I0418 04:56:39.500352  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.878475 (* 1 = 0.878475 loss)
I0418 04:56:39.500357  5947 sgd_solver.cpp:106] Iteration 6, lr = 0.0001
rpn: num_positive 12
rpn: num_negative 52
I0418 04:56:43.730162  5947 accuracy_layer.cpp:96] Accuracy: 0.53125
I0418 04:56:43.730185  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.480769
I0418 04:56:43.730192  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.75
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 9)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 9
num bg: 39
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(48, 99)
this part is done
I0418 04:56:43.749361  5947 solver.cpp:228] Iteration 7, loss = 7.37133
I0418 04:56:43.749387  5947 solver.cpp:244]     Train net output #0: loss_cls = 5.10224 (* 1 = 5.10224 loss)
I0418 04:56:43.749398  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:56:43.749406  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.53125
I0418 04:56:43.749414  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.480769
I0418 04:56:43.749421  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.75
I0418 04:56:43.749429  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 1.40551 (* 1 = 1.40551 loss)
I0418 04:56:43.749439  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.863584 (* 1 = 0.863584 loss)
I0418 04:56:43.749447  5947 sgd_solver.cpp:106] Iteration 7, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:56:47.999068  5947 accuracy_layer.cpp:96] Accuracy: 0.625
I0418 04:56:47.999091  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.510204
I0418 04:56:47.999095  5947 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 54
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(66, 99)
this part is done
I0418 04:56:48.023813  5947 solver.cpp:228] Iteration 8, loss = 14.8454
I0418 04:56:48.023847  5947 solver.cpp:244]     Train net output #0: loss_cls = 12.5405 (* 1 = 12.5405 loss)
I0418 04:56:48.023854  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:56:48.023859  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.625
I0418 04:56:48.023864  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.510204
I0418 04:56:48.023867  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 04:56:48.023871  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 1.84228 (* 1 = 1.84228 loss)
I0418 04:56:48.023876  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.46263 (* 1 = 0.46263 loss)
I0418 04:56:48.023881  5947 sgd_solver.cpp:106] Iteration 8, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:56:52.270331  5947 accuracy_layer.cpp:96] Accuracy: 0.734375
I0418 04:56:52.270355  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.673469
I0418 04:56:52.270360  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.933333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 10)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 10
num bg: 57
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(67, 99)
this part is done
I0418 04:56:52.295066  5947 solver.cpp:228] Iteration 9, loss = 9.02299
I0418 04:56:52.295094  5947 solver.cpp:244]     Train net output #0: loss_cls = 7.78577 (* 1 = 7.78577 loss)
I0418 04:56:52.295101  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:56:52.295105  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.734375
I0418 04:56:52.295109  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.673469
I0418 04:56:52.295114  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.933333
I0418 04:56:52.295117  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.769234 (* 1 = 0.769234 loss)
I0418 04:56:52.295122  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.467982 (* 1 = 0.467982 loss)
I0418 04:56:52.295128  5947 sgd_solver.cpp:106] Iteration 9, lr = 0.0001
speed: 4.234s / iter
rpn: num_positive 15
rpn: num_negative 49
I0418 04:56:56.698184  5947 accuracy_layer.cpp:96] Accuracy: 0.671875
I0418 04:56:56.698205  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.653061
I0418 04:56:56.698210  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.733333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 7)
[ 1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 7
num bg: 73
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(80, 99)
this part is done
I0418 04:56:56.725473  5947 solver.cpp:228] Iteration 10, loss = 2.65891
I0418 04:56:56.725495  5947 solver.cpp:244]     Train net output #0: loss_cls = 1.62187 (* 1 = 1.62187 loss)
I0418 04:56:56.725502  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:56:56.725507  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.671875
I0418 04:56:56.725512  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.653061
I0418 04:56:56.725515  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.733333
I0418 04:56:56.725519  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.655914 (* 1 = 0.655914 loss)
I0418 04:56:56.725524  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.381131 (* 1 = 0.381131 loss)
I0418 04:56:56.725529  5947 sgd_solver.cpp:106] Iteration 10, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:57:01.207710  5947 accuracy_layer.cpp:96] Accuracy: 0.640625
I0418 04:57:01.207732  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.612245
I0418 04:57:01.207736  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.733333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 11
num bg: 89
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(100, 99)
this part is done
I0418 04:57:01.236438  5947 solver.cpp:228] Iteration 11, loss = 1.26841
I0418 04:57:01.236466  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.487071 (* 1 = 0.487071 loss)
I0418 04:57:01.236479  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:57:01.236488  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.640625
I0418 04:57:01.236495  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.612245
I0418 04:57:01.236500  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.733333
I0418 04:57:01.236505  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.654086 (* 1 = 0.654086 loss)
I0418 04:57:01.236510  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.127252 (* 1 = 0.127252 loss)
I0418 04:57:01.236515  5947 sgd_solver.cpp:106] Iteration 11, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:57:05.709210  5947 accuracy_layer.cpp:96] Accuracy: 0.625
I0418 04:57:05.709233  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.55102
I0418 04:57:05.709237  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.866667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.]
num fg: 11
num bg: 85
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(96, 99)
this part is done
I0418 04:57:05.737380  5947 solver.cpp:228] Iteration 12, loss = 1.94237
I0418 04:57:05.737412  5947 solver.cpp:244]     Train net output #0: loss_cls = 1.26143 (* 1 = 1.26143 loss)
I0418 04:57:05.737419  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:57:05.737423  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.625
I0418 04:57:05.737427  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.55102
I0418 04:57:05.737432  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.866667
I0418 04:57:05.737438  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.618522 (* 1 = 0.618522 loss)
I0418 04:57:05.737443  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0624136 (* 1 = 0.0624136 loss)
I0418 04:57:05.737448  5947 sgd_solver.cpp:106] Iteration 12, lr = 0.0001
rpn: num_positive 12
rpn: num_negative 52
I0418 04:57:10.132494  5947 accuracy_layer.cpp:96] Accuracy: 0.71875
I0418 04:57:10.132515  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.730769
I0418 04:57:10.132520  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.]
num fg: 12
num bg: 64
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(76, 99)
this part is done
I0418 04:57:10.158450  5947 solver.cpp:228] Iteration 13, loss = 2.07547
I0418 04:57:10.158471  5947 solver.cpp:244]     Train net output #0: loss_cls = 1.34116 (* 1 = 1.34116 loss)
I0418 04:57:10.158478  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:57:10.158483  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.71875
I0418 04:57:10.158488  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.730769
I0418 04:57:10.158490  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.666667
I0418 04:57:10.158495  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.665074 (* 1 = 0.665074 loss)
I0418 04:57:10.158500  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0692376 (* 1 = 0.0692376 loss)
I0418 04:57:10.158506  5947 sgd_solver.cpp:106] Iteration 13, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:57:14.565064  5947 accuracy_layer.cpp:96] Accuracy: 0.5625
I0418 04:57:14.565084  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.55102
I0418 04:57:14.565089  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.6
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 10)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.]
num fg: 10
num bg: 83
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(93, 99)
this part is done
I0418 04:57:14.592934  5947 solver.cpp:228] Iteration 14, loss = 1.83347
I0418 04:57:14.592957  5947 solver.cpp:244]     Train net output #0: loss_cls = 1.10855 (* 1 = 1.10855 loss)
I0418 04:57:14.592963  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:57:14.592967  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.5625
I0418 04:57:14.592972  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.55102
I0418 04:57:14.592975  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.6
I0418 04:57:14.592980  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.659477 (* 1 = 0.659477 loss)
I0418 04:57:14.592985  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0654447 (* 1 = 0.0654447 loss)
I0418 04:57:14.592990  5947 sgd_solver.cpp:106] Iteration 14, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:57:18.948529  5947 accuracy_layer.cpp:96] Accuracy: 0.75
I0418 04:57:18.948551  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.795918
I0418 04:57:18.948556  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.6
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.]
num fg: 13
num bg: 79
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(92, 99)
this part is done
I0418 04:57:18.976579  5947 solver.cpp:228] Iteration 15, loss = 1.38459
I0418 04:57:18.976611  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.636376 (* 1 = 0.636376 loss)
I0418 04:57:18.976619  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:57:18.976622  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.75
I0418 04:57:18.976627  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.795918
I0418 04:57:18.976631  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.6
I0418 04:57:18.976635  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.605435 (* 1 = 0.605435 loss)
I0418 04:57:18.976640  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.142774 (* 1 = 0.142774 loss)
I0418 04:57:18.976645  5947 sgd_solver.cpp:106] Iteration 15, lr = 0.0001
rpn: num_positive 9
rpn: num_negative 55
I0418 04:57:23.374486  5947 accuracy_layer.cpp:96] Accuracy: 0.6875
I0418 04:57:23.374508  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.763636
I0418 04:57:23.374513  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.222222
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 11
num bg: 61
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(72, 99)
this part is done
I0418 04:57:23.400027  5947 solver.cpp:228] Iteration 16, loss = 1.59534
I0418 04:57:23.400048  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.787949 (* 1 = 0.787949 loss)
I0418 04:57:23.400055  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:57:23.400060  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.6875
I0418 04:57:23.400064  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.763636
I0418 04:57:23.400068  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.222222
I0418 04:57:23.400072  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.686592 (* 1 = 0.686592 loss)
I0418 04:57:23.400077  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.120794 (* 1 = 0.120794 loss)
I0418 04:57:23.400082  5947 sgd_solver.cpp:106] Iteration 16, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:57:27.778331  5947 accuracy_layer.cpp:96] Accuracy: 0.71875
I0418 04:57:27.778354  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.795918
I0418 04:57:27.778367  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.466667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 13
num bg: 72
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(85, 99)
this part is done
I0418 04:57:27.806165  5947 solver.cpp:228] Iteration 17, loss = 1.79447
I0418 04:57:27.806187  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.972654 (* 1 = 0.972654 loss)
I0418 04:57:27.806195  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:57:27.806198  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.71875
I0418 04:57:27.806202  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.795918
I0418 04:57:27.806206  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.466667
I0418 04:57:27.806210  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.636594 (* 1 = 0.636594 loss)
I0418 04:57:27.806216  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.185221 (* 1 = 0.185221 loss)
I0418 04:57:27.806221  5947 sgd_solver.cpp:106] Iteration 17, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:57:32.172766  5947 accuracy_layer.cpp:96] Accuracy: 0.78125
I0418 04:57:32.172788  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.877551
I0418 04:57:32.172793  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.466667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.]
num fg: 13
num bg: 78
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(91, 99)
this part is done
I0418 04:57:32.200295  5947 solver.cpp:228] Iteration 18, loss = 1.39414
I0418 04:57:32.200317  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.670074 (* 1 = 0.670074 loss)
I0418 04:57:32.200325  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:57:32.200330  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.78125
I0418 04:57:32.200333  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.877551
I0418 04:57:32.200337  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.466667
I0418 04:57:32.200341  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.575743 (* 1 = 0.575743 loss)
I0418 04:57:32.200346  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.148326 (* 1 = 0.148326 loss)
I0418 04:57:32.200352  5947 sgd_solver.cpp:106] Iteration 18, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:57:36.546880  5947 accuracy_layer.cpp:96] Accuracy: 0.6875
I0418 04:57:36.546910  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.755102
I0418 04:57:36.546926  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.466667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 10)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 10
num bg: 79
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(89, 99)
this part is done
I0418 04:57:36.574934  5947 solver.cpp:228] Iteration 19, loss = 1.3717
I0418 04:57:36.574954  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.641428 (* 1 = 0.641428 loss)
I0418 04:57:36.574960  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:57:36.574965  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.6875
I0418 04:57:36.574968  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.755102
I0418 04:57:36.574972  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.466667
I0418 04:57:36.574977  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.617715 (* 1 = 0.617715 loss)
I0418 04:57:36.574981  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.112554 (* 1 = 0.112554 loss)
I0418 04:57:36.574987  5947 sgd_solver.cpp:106] Iteration 19, lr = 0.0001
speed: 4.331s / iter
rpn: num_positive 15
rpn: num_negative 49
I0418 04:57:40.959164  5947 accuracy_layer.cpp:96] Accuracy: 0.78125
I0418 04:57:40.959187  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.877551
I0418 04:57:40.959192  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.466667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.]
num fg: 13
num bg: 81
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(94, 99)
this part is done
I0418 04:57:40.987143  5947 solver.cpp:228] Iteration 20, loss = 1.2138
I0418 04:57:40.987166  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.556517 (* 1 = 0.556517 loss)
I0418 04:57:40.987174  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:57:40.987177  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.78125
I0418 04:57:40.987182  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.877551
I0418 04:57:40.987185  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.466667
I0418 04:57:40.987190  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.586376 (* 1 = 0.586376 loss)
I0418 04:57:40.987195  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.07091 (* 1 = 0.07091 loss)
I0418 04:57:40.987201  5947 sgd_solver.cpp:106] Iteration 20, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:57:45.365701  5947 accuracy_layer.cpp:96] Accuracy: 0.71875
I0418 04:57:45.365725  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.795918
I0418 04:57:45.365730  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.466667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 10)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 10
num bg: 79
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(89, 99)
this part is done
I0418 04:57:45.393692  5947 solver.cpp:228] Iteration 21, loss = 1.19793
I0418 04:57:45.393712  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.517935 (* 1 = 0.517935 loss)
I0418 04:57:45.393719  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:57:45.393724  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.71875
I0418 04:57:45.393728  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.795918
I0418 04:57:45.393731  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.466667
I0418 04:57:45.393736  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.605977 (* 1 = 0.605977 loss)
I0418 04:57:45.393741  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0740228 (* 1 = 0.0740228 loss)
I0418 04:57:45.393746  5947 sgd_solver.cpp:106] Iteration 21, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:57:49.762646  5947 accuracy_layer.cpp:96] Accuracy: 0.6875
I0418 04:57:49.762670  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.693878
I0418 04:57:49.762675  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 14)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 14
num bg: 84
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(98, 99)
this part is done
I0418 04:57:49.790895  5947 solver.cpp:228] Iteration 22, loss = 1.22047
I0418 04:57:49.790920  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.555143 (* 1 = 0.555143 loss)
I0418 04:57:49.790927  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:57:49.790931  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.6875
I0418 04:57:49.790935  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.693878
I0418 04:57:49.790938  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.666667
I0418 04:57:49.790943  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.617961 (* 1 = 0.617961 loss)
I0418 04:57:49.790948  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0473622 (* 1 = 0.0473622 loss)
I0418 04:57:49.790954  5947 sgd_solver.cpp:106] Iteration 22, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:57:54.153372  5947 accuracy_layer.cpp:96] Accuracy: 0.796875
I0418 04:57:54.153394  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.836735
I0418 04:57:54.153399  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 10)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 10
num bg: 91
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(101, 99)
this part is done
I0418 04:57:54.182852  5947 solver.cpp:228] Iteration 23, loss = 0.962463
I0418 04:57:54.182878  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.375422 (* 1 = 0.375422 loss)
I0418 04:57:54.182884  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:57:54.182888  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.796875
I0418 04:57:54.182893  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.836735
I0418 04:57:54.182896  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.666667
I0418 04:57:54.182900  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.542673 (* 1 = 0.542673 loss)
I0418 04:57:54.182905  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0443681 (* 1 = 0.0443681 loss)
I0418 04:57:54.182914  5947 sgd_solver.cpp:106] Iteration 23, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:57:58.557224  5947 accuracy_layer.cpp:96] Accuracy: 0.796875
I0418 04:57:58.557245  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.836735
I0418 04:57:58.557250  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.]
num fg: 11
num bg: 85
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(96, 99)
this part is done
I0418 04:57:58.585240  5947 solver.cpp:228] Iteration 24, loss = 1.10077
I0418 04:57:58.585263  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.502823 (* 1 = 0.502823 loss)
I0418 04:57:58.585269  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:57:58.585273  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.796875
I0418 04:57:58.585278  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.836735
I0418 04:57:58.585281  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.666667
I0418 04:57:58.585285  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.554399 (* 1 = 0.554399 loss)
I0418 04:57:58.585290  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0435526 (* 1 = 0.0435526 loss)
I0418 04:57:58.585299  5947 sgd_solver.cpp:106] Iteration 24, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:58:02.938916  5947 accuracy_layer.cpp:96] Accuracy: 0.734375
I0418 04:58:02.938946  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.755102
I0418 04:58:02.938951  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 10)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.]
num fg: 10
num bg: 82
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(92, 99)
this part is done
I0418 04:58:02.968379  5947 solver.cpp:228] Iteration 25, loss = 1.17882
I0418 04:58:02.968400  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.548274 (* 1 = 0.548274 loss)
I0418 04:58:02.968407  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:58:02.968411  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.734375
I0418 04:58:02.968415  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.755102
I0418 04:58:02.968420  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.666667
I0418 04:58:02.968423  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.59232 (* 1 = 0.59232 loss)
I0418 04:58:02.968428  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0382215 (* 1 = 0.0382215 loss)
I0418 04:58:02.968433  5947 sgd_solver.cpp:106] Iteration 25, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:58:07.338482  5947 accuracy_layer.cpp:96] Accuracy: 0.859375
I0418 04:58:07.338511  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.918367
I0418 04:58:07.338517  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 10)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.]
num fg: 10
num bg: 82
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(92, 99)
this part is done
I0418 04:58:07.374112  5947 solver.cpp:228] Iteration 26, loss = 1.06293
I0418 04:58:07.374145  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.477961 (* 1 = 0.477961 loss)
I0418 04:58:07.374151  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:58:07.374156  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.859375
I0418 04:58:07.374161  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.918367
I0418 04:58:07.374166  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.666667
I0418 04:58:07.374171  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.54277 (* 1 = 0.54277 loss)
I0418 04:58:07.374176  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0421973 (* 1 = 0.0421973 loss)
I0418 04:58:07.374182  5947 sgd_solver.cpp:106] Iteration 26, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:58:11.722976  5947 accuracy_layer.cpp:96] Accuracy: 0.8125
I0418 04:58:11.722998  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.816327
I0418 04:58:11.723003  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 8)
[ 1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.]
num fg: 8
num bg: 85
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(93, 99)
this part is done
I0418 04:58:11.750598  5947 solver.cpp:228] Iteration 27, loss = 0.924009
I0418 04:58:11.750622  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.358671 (* 1 = 0.358671 loss)
I0418 04:58:11.750628  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:58:11.750633  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.8125
I0418 04:58:11.750638  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.816327
I0418 04:58:11.750640  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 04:58:11.750645  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.53393 (* 1 = 0.53393 loss)
I0418 04:58:11.750650  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0314081 (* 1 = 0.0314081 loss)
I0418 04:58:11.750656  5947 sgd_solver.cpp:106] Iteration 27, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:58:16.079761  5947 accuracy_layer.cpp:96] Accuracy: 0.875
I0418 04:58:16.079782  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.897959
I0418 04:58:16.079785  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 8)
[ 1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 8
num bg: 80
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(88, 99)
this part is done
I0418 04:58:16.107604  5947 solver.cpp:228] Iteration 28, loss = 0.889068
I0418 04:58:16.107626  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.308659 (* 1 = 0.308659 loss)
I0418 04:58:16.107633  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:58:16.107637  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.875
I0418 04:58:16.107641  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.897959
I0418 04:58:16.107645  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 04:58:16.107650  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.554999 (* 1 = 0.554999 loss)
I0418 04:58:16.107656  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0254096 (* 1 = 0.0254096 loss)
I0418 04:58:16.107661  5947 sgd_solver.cpp:106] Iteration 28, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:58:20.455726  5947 accuracy_layer.cpp:96] Accuracy: 0.796875
I0418 04:58:20.455749  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.795918
I0418 04:58:20.455752  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 8)
[ 1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]
num fg: 8
num bg: 89
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(97, 99)
this part is done
I0418 04:58:20.484014  5947 solver.cpp:228] Iteration 29, loss = 0.935533
I0418 04:58:20.484040  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.356295 (* 1 = 0.356295 loss)
I0418 04:58:20.484048  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:58:20.484052  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.796875
I0418 04:58:20.484056  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.795918
I0418 04:58:20.484061  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 04:58:20.484066  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.556562 (* 1 = 0.556562 loss)
I0418 04:58:20.484071  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0226765 (* 1 = 0.0226765 loss)
I0418 04:58:20.484076  5947 sgd_solver.cpp:106] Iteration 29, lr = 0.0001
speed: 4.351s / iter
rpn: num_positive 7
rpn: num_negative 57
I0418 04:58:24.843575  5947 accuracy_layer.cpp:96] Accuracy: 0.78125
I0418 04:58:24.843597  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.842105
I0418 04:58:24.843602  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.285714
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 11)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 11
num bg: 51
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(62, 99)
this part is done
I0418 04:58:24.867135  5947 solver.cpp:228] Iteration 30, loss = 1.23853
I0418 04:58:24.867156  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.510951 (* 1 = 0.510951 loss)
I0418 04:58:24.867166  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:58:24.867171  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.78125
I0418 04:58:24.867175  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.842105
I0418 04:58:24.867179  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.285714
I0418 04:58:24.867184  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.657142 (* 1 = 0.657142 loss)
I0418 04:58:24.867188  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0704387 (* 1 = 0.0704387 loss)
I0418 04:58:24.867194  5947 sgd_solver.cpp:106] Iteration 30, lr = 0.0001
rpn: num_positive 12
rpn: num_negative 52
I0418 04:58:29.250730  5947 accuracy_layer.cpp:96] Accuracy: 0.8125
I0418 04:58:29.250777  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.846154
I0418 04:58:29.250785  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.666667
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 13
num bg: 67
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(80, 99)
this part is done
I0418 04:58:29.277951  5947 solver.cpp:228] Iteration 31, loss = 1.14089
I0418 04:58:29.277971  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.42139 (* 1 = 0.42139 loss)
I0418 04:58:29.277979  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:58:29.277984  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.8125
I0418 04:58:29.277987  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.846154
I0418 04:58:29.277992  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.666667
I0418 04:58:29.277997  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.582443 (* 1 = 0.582443 loss)
I0418 04:58:29.278002  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.13706 (* 1 = 0.13706 loss)
I0418 04:58:29.278007  5947 sgd_solver.cpp:106] Iteration 31, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:58:33.618098  5947 accuracy_layer.cpp:96] Accuracy: 0.796875
I0418 04:58:33.618121  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.795918
I0418 04:58:33.618125  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 10)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.]
num fg: 10
num bg: 82
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(92, 99)
this part is done
I0418 04:58:33.645318  5947 solver.cpp:228] Iteration 32, loss = 0.912743
I0418 04:58:33.645339  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.38249 (* 1 = 0.38249 loss)
I0418 04:58:33.645345  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:58:33.645349  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.796875
I0418 04:58:33.645354  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.795918
I0418 04:58:33.645356  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 04:58:33.645361  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.494767 (* 1 = 0.494767 loss)
I0418 04:58:33.645365  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0354851 (* 1 = 0.0354851 loss)
I0418 04:58:33.645370  5947 sgd_solver.cpp:106] Iteration 32, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:58:37.992185  5947 accuracy_layer.cpp:96] Accuracy: 0.78125
I0418 04:58:37.992208  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.77551
I0418 04:58:37.992213  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.8
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 84
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(96, 99)
this part is done
I0418 04:58:38.020421  5947 solver.cpp:228] Iteration 33, loss = 1.01362
I0418 04:58:38.020444  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.488201 (* 1 = 0.488201 loss)
I0418 04:58:38.020452  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:58:38.020455  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.78125
I0418 04:58:38.020459  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.77551
I0418 04:58:38.020463  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.8
I0418 04:58:38.020468  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.493673 (* 1 = 0.493673 loss)
I0418 04:58:38.020473  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0317438 (* 1 = 0.0317438 loss)
I0418 04:58:38.020478  5947 sgd_solver.cpp:106] Iteration 33, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:58:42.360033  5947 accuracy_layer.cpp:96] Accuracy: 0.875
I0418 04:58:42.360056  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.857143
I0418 04:58:42.360062  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.933333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.]
num fg: 13
num bg: 81
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(94, 99)
this part is done
I0418 04:58:42.387738  5947 solver.cpp:228] Iteration 34, loss = 1.01714
I0418 04:58:42.387771  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.483357 (* 1 = 0.483357 loss)
I0418 04:58:42.387779  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:58:42.387784  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.875
I0418 04:58:42.387787  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.857143
I0418 04:58:42.387791  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.933333
I0418 04:58:42.387796  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.508822 (* 1 = 0.508822 loss)
I0418 04:58:42.387801  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.02496 (* 1 = 0.02496 loss)
I0418 04:58:42.387806  5947 sgd_solver.cpp:106] Iteration 34, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:58:46.705943  5947 accuracy_layer.cpp:96] Accuracy: 0.953125
I0418 04:58:46.705965  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.959184
I0418 04:58:46.705971  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.933333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.]
num fg: 13
num bg: 79
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(92, 99)
this part is done
I0418 04:58:46.733315  5947 solver.cpp:228] Iteration 35, loss = 1.0042
I0418 04:58:46.733337  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.550083 (* 1 = 0.550083 loss)
I0418 04:58:46.733345  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:58:46.733350  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.953125
I0418 04:58:46.733353  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.959184
I0418 04:58:46.733357  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.933333
I0418 04:58:46.733361  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.436616 (* 1 = 0.436616 loss)
I0418 04:58:46.733366  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0175058 (* 1 = 0.0175058 loss)
I0418 04:58:46.733372  5947 sgd_solver.cpp:106] Iteration 35, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:58:51.084524  5947 accuracy_layer.cpp:96] Accuracy: 0.828125
I0418 04:58:51.084547  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.795918
I0418 04:58:51.084552  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.933333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 14)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 14
num bg: 75
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(89, 99)
this part is done
I0418 04:58:51.112428  5947 solver.cpp:228] Iteration 36, loss = 1.09858
I0418 04:58:51.112448  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.595137 (* 1 = 0.595137 loss)
I0418 04:58:51.112455  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:58:51.112459  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.828125
I0418 04:58:51.112463  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.795918
I0418 04:58:51.112466  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.933333
I0418 04:58:51.112471  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.487638 (* 1 = 0.487638 loss)
I0418 04:58:51.112475  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.015806 (* 1 = 0.015806 loss)
I0418 04:58:51.112481  5947 sgd_solver.cpp:106] Iteration 36, lr = 0.0001
rpn: num_positive 9
rpn: num_negative 55
I0418 04:58:55.464076  5947 accuracy_layer.cpp:96] Accuracy: 0.703125
I0418 04:58:55.464099  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.781818
I0418 04:58:55.464113  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.222222
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 12)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 12
num bg: 57
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(69, 99)
this part is done
I0418 04:58:55.489270  5947 solver.cpp:228] Iteration 37, loss = 1.30886
I0418 04:58:55.489291  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.604299 (* 1 = 0.604299 loss)
I0418 04:58:55.489300  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:58:55.489303  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.703125
I0418 04:58:55.489307  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.781818
I0418 04:58:55.489311  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.222222
I0418 04:58:55.489316  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.61649 (* 1 = 0.61649 loss)
I0418 04:58:55.489321  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0880674 (* 1 = 0.0880674 loss)
I0418 04:58:55.489326  5947 sgd_solver.cpp:106] Iteration 37, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:58:59.820412  5947 accuracy_layer.cpp:96] Accuracy: 0.921875
I0418 04:58:59.820436  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.918367
I0418 04:58:59.820441  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.933333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 13
num bg: 75
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(88, 99)
this part is done
I0418 04:58:59.847678  5947 solver.cpp:228] Iteration 38, loss = 0.908771
I0418 04:58:59.847700  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.454912 (* 1 = 0.454912 loss)
I0418 04:58:59.847707  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:58:59.847712  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.921875
I0418 04:58:59.847717  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.918367
I0418 04:58:59.847719  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.933333
I0418 04:58:59.847724  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.427309 (* 1 = 0.427309 loss)
I0418 04:58:59.847729  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.02655 (* 1 = 0.02655 loss)
I0418 04:58:59.847734  5947 sgd_solver.cpp:106] Iteration 38, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:59:04.185367  5947 accuracy_layer.cpp:96] Accuracy: 0.859375
I0418 04:59:04.185389  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.836735
I0418 04:59:04.185395  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.933333
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 15)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 15
num bg: 85
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(100, 99)
this part is done
I0418 04:59:04.214119  5947 solver.cpp:228] Iteration 39, loss = 0.983724
I0418 04:59:04.214143  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.500125 (* 1 = 0.500125 loss)
I0418 04:59:04.214150  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:59:04.214154  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.859375
I0418 04:59:04.214159  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.836735
I0418 04:59:04.214162  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.933333
I0418 04:59:04.214166  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.428921 (* 1 = 0.428921 loss)
I0418 04:59:04.214171  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0546787 (* 1 = 0.0546787 loss)
I0418 04:59:04.214176  5947 sgd_solver.cpp:106] Iteration 39, lr = 0.0001
speed: 4.356s / iter
rpn: num_positive 7
rpn: num_negative 57
I0418 04:59:08.571678  5947 accuracy_layer.cpp:96] Accuracy: 0.703125
I0418 04:59:08.571702  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.77193
I0418 04:59:08.571705  5947 accuracy_layer.cpp:101] Class 1 accuracy : 0.142857
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 13)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 13
num bg: 55
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(68, 99)
this part is done
I0418 04:59:08.596680  5947 solver.cpp:228] Iteration 40, loss = 1.23405
I0418 04:59:08.596714  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.532889 (* 1 = 0.532889 loss)
I0418 04:59:08.596722  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:59:08.596726  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.703125
I0418 04:59:08.596731  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.77193
I0418 04:59:08.596735  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 0.142857
I0418 04:59:08.596740  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.638197 (* 1 = 0.638197 loss)
I0418 04:59:08.596745  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0629618 (* 1 = 0.0629618 loss)
I0418 04:59:08.596750  5947 sgd_solver.cpp:106] Iteration 40, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:59:12.953407  5947 accuracy_layer.cpp:96] Accuracy: 0.9375
I0418 04:59:12.953428  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.918367
I0418 04:59:12.953444  5947 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 14)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.]
num fg: 14
num bg: 83
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(97, 99)
this part is done
I0418 04:59:12.981390  5947 solver.cpp:228] Iteration 41, loss = 0.87386
I0418 04:59:12.981413  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.471816 (* 1 = 0.471816 loss)
I0418 04:59:12.981420  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:59:12.981426  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.9375
I0418 04:59:12.981429  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.918367
I0418 04:59:12.981433  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 04:59:12.981438  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.375149 (* 1 = 0.375149 loss)
I0418 04:59:12.981443  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0268956 (* 1 = 0.0268956 loss)
I0418 04:59:12.981449  5947 sgd_solver.cpp:106] Iteration 41, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:59:17.304272  5947 accuracy_layer.cpp:96] Accuracy: 0.859375
I0418 04:59:17.304296  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.816327
I0418 04:59:17.304299  5947 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 10)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 10
num bg: 77
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(87, 99)
this part is done
I0418 04:59:17.331408  5947 solver.cpp:228] Iteration 42, loss = 0.866096
I0418 04:59:17.331429  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.369932 (* 1 = 0.369932 loss)
I0418 04:59:17.331436  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:59:17.331440  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.859375
I0418 04:59:17.331444  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.816327
I0418 04:59:17.331449  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 04:59:17.331452  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.478276 (* 1 = 0.478276 loss)
I0418 04:59:17.331457  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0178881 (* 1 = 0.0178881 loss)
I0418 04:59:17.331465  5947 sgd_solver.cpp:106] Iteration 42, lr = 0.0001
rpn: num_positive 15
rpn: num_negative 49
I0418 04:59:21.681875  5947 accuracy_layer.cpp:96] Accuracy: 0.8125
I0418 04:59:21.681898  5947 accuracy_layer.cpp:101] Class 0 accuracy : 0.755102
I0418 04:59:21.681902  5947 accuracy_layer.cpp:101] Class 1 accuracy : 1
TRAIN
('labels we got', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
('a', 9)
[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
num fg: 9
num bg: 80
('labels-----', array([[ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       [ 0.,  0.,  0., ...,  0.,  1.,  0.],
       ..., 
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))
(89, 99)
this part is done
I0418 04:59:21.709591  5947 solver.cpp:228] Iteration 43, loss = 0.825921
I0418 04:59:21.709625  5947 solver.cpp:244]     Train net output #0: loss_cls = 0.30386 (* 1 = 0.30386 loss)
I0418 04:59:21.709632  5947 solver.cpp:244]     Train net output #1: loss_twin = 0 (* 1 = 0 loss)
I0418 04:59:21.709636  5947 solver.cpp:244]     Train net output #2: rpn_accuarcy = 0.8125
I0418 04:59:21.709641  5947 solver.cpp:244]     Train net output #3: rpn_accuarcy_class = 0.755102
I0418 04:59:21.709645  5947 solver.cpp:244]     Train net output #4: rpn_accuarcy_class = 1
I0418 04:59:21.709650  5947 solver.cpp:244]     Train net output #5: rpn_cls_loss = 0.503615 (* 1 = 0.503615 loss)
I0418 04:59:21.709656  5947 solver.cpp:244]     Train net output #6: rpn_loss_twin = 0.0184459 (* 1 = 0.0184459 loss)
I0418 04:59:21.709661  5947 sgd_solver.cpp:106] Iteration 43, lr = 0.0001
