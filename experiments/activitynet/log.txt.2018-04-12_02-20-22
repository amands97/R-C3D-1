Called with args:
Namespace(cfg_file='./experiments/activitynet/td_cnn_end2end.yml', gpu_id=1, max_iters=350000, pretrained_model='./pretrain/activitynet_iter_30000_3fps.caffemodel', randomize=False, set_cfgs=None, solver='./experiments/activitynet/solver.prototxt')
Using config:
{'DEDUP_BOXES': 0.125,
 'EPS': 1e-14,
 'FPS': 25,
 'GPU_ID': 1,
 'INPUT': 'video',
 'NUM_CLASSES': 201,
 'PIXEL_MEANS': array([[[ 90,  98, 102]]]),
 'PIXEL_MEANS_FLOW': array([128]),
 'RNG_SEED': 3,
 'TEST': {'CROP_SIZE': 112,
          'FRAME_SIZE': [128, 171],
          'HAS_RPN': True,
          'LENGTH': [768],
          'MAX_SIZE': 1000,
          'NMS': 0.4,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 0,
          'RPN_NMS_THRESH': 0.9,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SVM': False,
          'TWIN_REG': True},
 'TRAIN': {'BATCH_SIZE': 128,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.1,
           'CINPUT': False,
           'CROP_SIZE': 112,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'FRAME_SIZE': [128, 171],
           'HAS_RPN': True,
           'LENGTH': [768],
           'OHEM_LOSS_ONLY_CLASSIFICATION': False,
           'OHEM_LOSS_ONLY_LOCALIZATION': False,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RANDOM': False,
           'RPN_BATCHSIZE': 64,
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 0,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.8,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'RPN_TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 1000,
           'TWIN_INSIDE_WEIGHTS': [1.0, 1.0],
           'TWIN_NORMALIZE_MEANS': [0.0, 0.0],
           'TWIN_NORMALIZE_STDS': [0.1, 0.2],
           'TWIN_NORMALIZE_TARGETS': True,
           'TWIN_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'TWIN_REG': True,
           'TWIN_THRESH': 0.5,
           'USE_FLIPPED': True,
           'USE_PREFETCH': True,
           'VIDEO_BATCH': 1},
 'USE_GPU_NMS': True}
2 roidb entries
{'gt_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'fg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'max_classes': array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]), 'wins': array([[3.12500000e-02, 3.85698023e+02]]), 'durations': array([385.66677312]), 'bg_name': u'./preprocess/activityNet/frames/training/sJFgo9H6zNo', 'flipped': False, 'frames': array([[   0,    0, 3476,    8]]), 'max_overlaps': array([1.])}
print done
Output will be saved to `./experiments/best_activitynet/snapshot/`
Computing bounding-box regression targets...
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0412 02:20:24.447937 30588 solver.cpp:48] Initializing solver from parameters: 
train_net: "./experiments/activitynet/train.prototxt"
base_lr: 0.0001
display: 1
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 350000
snapshot: 0
snapshot_prefix: "./experiments/activitynet/snapshot/activitynet"
average_loss: 100
iter_size: 1
I0412 02:20:24.447980 30588 solver.cpp:81] Creating training net from train_net file: ./experiments/activitynet/train.prototxt
I0412 02:20:24.448971 30588 net.cpp:58] Initializing net from parameters: 
name: "activitynet"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data"
  top: "conv1a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
    stride: 1
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "conv3b"
  type: "Convolution"
  bottom: "conv3a"
  top: "conv3b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3b"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3b"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "conv4b"
  type: "Convolution"
  bottom: "conv4a"
  top: "conv4b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4b"
  type: "ReLU"
  bottom: "conv4b"
  top: "conv4b"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4b"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    kernel_size: 2
    kernel_size: 2
    stride: 2
    stride: 2
    stride: 2
  }
}
layer {
  name: "conv5a"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}
layer {
  name: "conv5b"
  type: "Convolution"
  bottom: "conv5a"
  top: "conv5b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5b"
  type: "ReLU"
  bottom: "conv5b"
  top: "conv5b"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5b"
  top: "rpn/output"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_conv/3x3_2"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn/output_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    pad: 1
    pad: 1
    kernel_size: 3
    kernel_size: 3
    kernel_size: 3
    stride: 1
    stride: 2
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3_2"
  type: "ReLU"
  bottom: "rpn/output_2"
  top: "rpn/output_2"
}
layer {
  name: "rpn/output_pool"
  type: "Pooling"
  bottom: "rpn/output_2"
  top: "rpn/output_pool"
  pooling_param {
    pool: MAX
    kernel_size: 1
    kernel_size: 2
    kernel_size: 2
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_twin_pred"
  type: "Convolution"
  bottom: "rpn/output_pool"
  top: "rpn_twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 74
    kernel_size: 1
    kernel_size: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_twin_targets"
  top: "rpn_twin_inside_weights"
  top: "rpn_twin_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_twin"
  type: "SmoothL1Loss"
  bottom: "rpn_twin_pred"
  bottom: "rpn_twin_targets"
  bottom: "rpn_twin_inside_weights"
  bottom: "rpn_twin_outside_weights"
  top: "rpn_loss_twin"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_accuarcy"
  type: "Accuracy"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_accuarcy"
  top: "rpn_accuarcy_class"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 74
      dim: -1
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_twin_pred"
  top: "rpn_rois"
  include {
    phase: TRAIN
  }
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 8 \n\'scales\': !!python/tuple [1,1.25, 1.5,1.75, 2,2.5, 3,3.5, 4,4.5, 5,5.5, 6,7, 8,9,10,11,12,14,16,18,20,22,24,28,32,36,40,44,52,60,68,76,84,92,100]"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "twin_targets"
  top: "twin_inside_weights"
  top: "twin_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 201"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5b"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 4
    pooled_w: 4
    spatial_scale: 0.0625
    pooled_l: 1
    temporal_scale: 0.125
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6"
  top: "cls_score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 201
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "twin_pred"
  type: "InnerProduct"
  bottom: "fc6"
  top: "twin_pred"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 402
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_twin"
  type: "SmoothL1Loss"
  bottom: "twin_pred"
  bottom: "twin_targets"
  bottom: "twin_inside_weights"
  bottom: "twin_outside_weights"
  top: "loss_twin"
  loss_weight: 1
}
layer {
  name: "accuarcy"
  type: "Accuracy"
  bottom: "cls_score"
  bottom: "labels"
  top: "accuarcy"
  propagate_down: false
  propagate_down: false
  accuracy_param {
    ignore_label: -1
  }
}
I0412 02:20:24.449288 30588 layer_factory.hpp:77] Creating layer data
I0412 02:20:24.466500 30588 net.cpp:100] Creating Layer data
I0412 02:20:24.466570 30588 net.cpp:408] data -> data
I0412 02:20:24.466614 30588 net.cpp:408] data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_windows': 1, 'data': 0}
I0412 02:20:24.480151 30588 net.cpp:150] Setting up data
I0412 02:20:24.480177 30588 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 02:20:24.480186 30588 net.cpp:157] Top shape: 1 3 (3)
I0412 02:20:24.480192 30588 net.cpp:165] Memory required for data: 115605516
I0412 02:20:24.480201 30588 layer_factory.hpp:77] Creating layer data_data_0_split
I0412 02:20:24.480217 30588 net.cpp:100] Creating Layer data_data_0_split
I0412 02:20:24.480224 30588 net.cpp:434] data_data_0_split <- data
I0412 02:20:24.480233 30588 net.cpp:408] data_data_0_split -> data_data_0_split_0
I0412 02:20:24.480248 30588 net.cpp:408] data_data_0_split -> data_data_0_split_1
I0412 02:20:24.480309 30588 net.cpp:150] Setting up data_data_0_split
I0412 02:20:24.480322 30588 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 02:20:24.480377 30588 net.cpp:157] Top shape: 1 3 768 112 112 (28901376)
I0412 02:20:24.480399 30588 net.cpp:165] Memory required for data: 346816524
I0412 02:20:24.480422 30588 layer_factory.hpp:77] Creating layer gt_boxes_data_1_split
I0412 02:20:24.480448 30588 net.cpp:100] Creating Layer gt_boxes_data_1_split
I0412 02:20:24.480459 30588 net.cpp:434] gt_boxes_data_1_split <- gt_boxes
I0412 02:20:24.480470 30588 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_0
I0412 02:20:24.480484 30588 net.cpp:408] gt_boxes_data_1_split -> gt_boxes_data_1_split_1
I0412 02:20:24.480557 30588 net.cpp:150] Setting up gt_boxes_data_1_split
I0412 02:20:24.480569 30588 net.cpp:157] Top shape: 1 3 (3)
I0412 02:20:24.480577 30588 net.cpp:157] Top shape: 1 3 (3)
I0412 02:20:24.480584 30588 net.cpp:165] Memory required for data: 346816548
I0412 02:20:24.480592 30588 layer_factory.hpp:77] Creating layer conv1a
I0412 02:20:24.480610 30588 net.cpp:100] Creating Layer conv1a
I0412 02:20:24.480618 30588 net.cpp:434] conv1a <- data_data_0_split_0
I0412 02:20:24.480631 30588 net.cpp:408] conv1a -> conv1a
I0412 02:20:24.504415 30588 net.cpp:150] Setting up conv1a
I0412 02:20:24.504457 30588 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 02:20:24.504464 30588 net.cpp:165] Memory required for data: 2813067300
I0412 02:20:24.504487 30588 layer_factory.hpp:77] Creating layer relu1a
I0412 02:20:24.504508 30588 net.cpp:100] Creating Layer relu1a
I0412 02:20:24.504518 30588 net.cpp:434] relu1a <- conv1a
I0412 02:20:24.504529 30588 net.cpp:395] relu1a -> conv1a (in-place)
I0412 02:20:24.504545 30588 net.cpp:150] Setting up relu1a
I0412 02:20:24.504555 30588 net.cpp:157] Top shape: 1 64 768 112 112 (616562688)
I0412 02:20:24.504562 30588 net.cpp:165] Memory required for data: 5279318052
I0412 02:20:24.504568 30588 layer_factory.hpp:77] Creating layer pool1
I0412 02:20:24.504581 30588 net.cpp:100] Creating Layer pool1
I0412 02:20:24.504590 30588 net.cpp:434] pool1 <- conv1a
I0412 02:20:24.504597 30588 net.cpp:408] pool1 -> pool1
I0412 02:20:24.504730 30588 net.cpp:150] Setting up pool1
I0412 02:20:24.504743 30588 net.cpp:157] Top shape: 1 64 768 56 56 (154140672)
I0412 02:20:24.504751 30588 net.cpp:165] Memory required for data: 5895880740
I0412 02:20:24.504756 30588 layer_factory.hpp:77] Creating layer conv2a
I0412 02:20:24.504775 30588 net.cpp:100] Creating Layer conv2a
I0412 02:20:24.504782 30588 net.cpp:434] conv2a <- pool1
I0412 02:20:24.504796 30588 net.cpp:408] conv2a -> conv2a
I0412 02:20:24.517633 30588 net.cpp:150] Setting up conv2a
I0412 02:20:24.517711 30588 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 02:20:24.517738 30588 net.cpp:165] Memory required for data: 7129006116
I0412 02:20:24.517774 30588 layer_factory.hpp:77] Creating layer relu2a
I0412 02:20:24.517803 30588 net.cpp:100] Creating Layer relu2a
I0412 02:20:24.517827 30588 net.cpp:434] relu2a <- conv2a
I0412 02:20:24.517851 30588 net.cpp:395] relu2a -> conv2a (in-place)
I0412 02:20:24.517880 30588 net.cpp:150] Setting up relu2a
I0412 02:20:24.517904 30588 net.cpp:157] Top shape: 1 128 768 56 56 (308281344)
I0412 02:20:24.517923 30588 net.cpp:165] Memory required for data: 8362131492
I0412 02:20:24.517953 30588 layer_factory.hpp:77] Creating layer pool2
I0412 02:20:24.517983 30588 net.cpp:100] Creating Layer pool2
I0412 02:20:24.518004 30588 net.cpp:434] pool2 <- conv2a
I0412 02:20:24.518028 30588 net.cpp:408] pool2 -> pool2
I0412 02:20:24.518173 30588 net.cpp:150] Setting up pool2
I0412 02:20:24.518203 30588 net.cpp:157] Top shape: 1 128 384 28 28 (38535168)
I0412 02:20:24.518219 30588 net.cpp:165] Memory required for data: 8516272164
I0412 02:20:24.518237 30588 layer_factory.hpp:77] Creating layer conv3a
I0412 02:20:24.518263 30588 net.cpp:100] Creating Layer conv3a
I0412 02:20:24.518280 30588 net.cpp:434] conv3a <- pool2
I0412 02:20:24.518301 30588 net.cpp:408] conv3a -> conv3a
I0412 02:20:24.538908 30588 net.cpp:150] Setting up conv3a
I0412 02:20:24.538935 30588 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 02:20:24.538941 30588 net.cpp:165] Memory required for data: 8824553508
I0412 02:20:24.538954 30588 layer_factory.hpp:77] Creating layer relu3a
I0412 02:20:24.538965 30588 net.cpp:100] Creating Layer relu3a
I0412 02:20:24.538970 30588 net.cpp:434] relu3a <- conv3a
I0412 02:20:24.538976 30588 net.cpp:395] relu3a -> conv3a (in-place)
I0412 02:20:24.538985 30588 net.cpp:150] Setting up relu3a
I0412 02:20:24.539006 30588 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 02:20:24.539010 30588 net.cpp:165] Memory required for data: 9132834852
I0412 02:20:24.539014 30588 layer_factory.hpp:77] Creating layer conv3b
I0412 02:20:24.539028 30588 net.cpp:100] Creating Layer conv3b
I0412 02:20:24.539047 30588 net.cpp:434] conv3b <- conv3a
I0412 02:20:24.539058 30588 net.cpp:408] conv3b -> conv3b
I0412 02:20:24.570760 30588 net.cpp:150] Setting up conv3b
I0412 02:20:24.570786 30588 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 02:20:24.570789 30588 net.cpp:165] Memory required for data: 9441116196
I0412 02:20:24.570799 30588 layer_factory.hpp:77] Creating layer relu3b
I0412 02:20:24.570809 30588 net.cpp:100] Creating Layer relu3b
I0412 02:20:24.570813 30588 net.cpp:434] relu3b <- conv3b
I0412 02:20:24.570819 30588 net.cpp:395] relu3b -> conv3b (in-place)
I0412 02:20:24.570828 30588 net.cpp:150] Setting up relu3b
I0412 02:20:24.570832 30588 net.cpp:157] Top shape: 1 256 384 28 28 (77070336)
I0412 02:20:24.570835 30588 net.cpp:165] Memory required for data: 9749397540
I0412 02:20:24.570838 30588 layer_factory.hpp:77] Creating layer pool3
I0412 02:20:24.570847 30588 net.cpp:100] Creating Layer pool3
I0412 02:20:24.570849 30588 net.cpp:434] pool3 <- conv3b
I0412 02:20:24.570853 30588 net.cpp:408] pool3 -> pool3
I0412 02:20:24.570924 30588 net.cpp:150] Setting up pool3
I0412 02:20:24.570930 30588 net.cpp:157] Top shape: 1 256 192 14 14 (9633792)
I0412 02:20:24.570933 30588 net.cpp:165] Memory required for data: 9787932708
I0412 02:20:24.570936 30588 layer_factory.hpp:77] Creating layer conv4a
I0412 02:20:24.570947 30588 net.cpp:100] Creating Layer conv4a
I0412 02:20:24.570950 30588 net.cpp:434] conv4a <- pool3
I0412 02:20:24.570955 30588 net.cpp:408] conv4a -> conv4a
I0412 02:20:24.607581 30588 net.cpp:150] Setting up conv4a
I0412 02:20:24.607614 30588 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 02:20:24.607620 30588 net.cpp:165] Memory required for data: 9865003044
I0412 02:20:24.607641 30588 layer_factory.hpp:77] Creating layer relu4a
I0412 02:20:24.607655 30588 net.cpp:100] Creating Layer relu4a
I0412 02:20:24.607661 30588 net.cpp:434] relu4a <- conv4a
I0412 02:20:24.607668 30588 net.cpp:395] relu4a -> conv4a (in-place)
I0412 02:20:24.607682 30588 net.cpp:150] Setting up relu4a
I0412 02:20:24.607688 30588 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 02:20:24.607692 30588 net.cpp:165] Memory required for data: 9942073380
I0412 02:20:24.607697 30588 layer_factory.hpp:77] Creating layer conv4b
I0412 02:20:24.607720 30588 net.cpp:100] Creating Layer conv4b
I0412 02:20:24.607726 30588 net.cpp:434] conv4b <- conv4a
I0412 02:20:24.607735 30588 net.cpp:408] conv4b -> conv4b
I0412 02:20:24.677053 30588 net.cpp:150] Setting up conv4b
I0412 02:20:24.677084 30588 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 02:20:24.677088 30588 net.cpp:165] Memory required for data: 10019143716
I0412 02:20:24.677098 30588 layer_factory.hpp:77] Creating layer relu4b
I0412 02:20:24.677111 30588 net.cpp:100] Creating Layer relu4b
I0412 02:20:24.677116 30588 net.cpp:434] relu4b <- conv4b
I0412 02:20:24.677124 30588 net.cpp:395] relu4b -> conv4b (in-place)
I0412 02:20:24.677134 30588 net.cpp:150] Setting up relu4b
I0412 02:20:24.677137 30588 net.cpp:157] Top shape: 1 512 192 14 14 (19267584)
I0412 02:20:24.677140 30588 net.cpp:165] Memory required for data: 10096214052
I0412 02:20:24.677143 30588 layer_factory.hpp:77] Creating layer pool4
I0412 02:20:24.677150 30588 net.cpp:100] Creating Layer pool4
I0412 02:20:24.677152 30588 net.cpp:434] pool4 <- conv4b
I0412 02:20:24.677157 30588 net.cpp:408] pool4 -> pool4
I0412 02:20:24.677202 30588 net.cpp:150] Setting up pool4
I0412 02:20:24.677208 30588 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:20:24.677211 30588 net.cpp:165] Memory required for data: 10105847844
I0412 02:20:24.677214 30588 layer_factory.hpp:77] Creating layer conv5a
I0412 02:20:24.677223 30588 net.cpp:100] Creating Layer conv5a
I0412 02:20:24.677227 30588 net.cpp:434] conv5a <- pool4
I0412 02:20:24.677232 30588 net.cpp:408] conv5a -> conv5a
I0412 02:20:24.740203 30588 net.cpp:150] Setting up conv5a
I0412 02:20:24.740242 30588 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:20:24.740247 30588 net.cpp:165] Memory required for data: 10115481636
I0412 02:20:24.740258 30588 layer_factory.hpp:77] Creating layer relu5a
I0412 02:20:24.740272 30588 net.cpp:100] Creating Layer relu5a
I0412 02:20:24.740278 30588 net.cpp:434] relu5a <- conv5a
I0412 02:20:24.740286 30588 net.cpp:395] relu5a -> conv5a (in-place)
I0412 02:20:24.740324 30588 net.cpp:150] Setting up relu5a
I0412 02:20:24.740381 30588 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:20:24.740398 30588 net.cpp:165] Memory required for data: 10125115428
I0412 02:20:24.740412 30588 layer_factory.hpp:77] Creating layer conv5b
I0412 02:20:24.740437 30588 net.cpp:100] Creating Layer conv5b
I0412 02:20:24.740454 30588 net.cpp:434] conv5b <- conv5a
I0412 02:20:24.740473 30588 net.cpp:408] conv5b -> conv5b
I0412 02:20:24.806491 30588 net.cpp:150] Setting up conv5b
I0412 02:20:24.806522 30588 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:20:24.806526 30588 net.cpp:165] Memory required for data: 10134749220
I0412 02:20:24.806535 30588 layer_factory.hpp:77] Creating layer relu5b
I0412 02:20:24.806543 30588 net.cpp:100] Creating Layer relu5b
I0412 02:20:24.806547 30588 net.cpp:434] relu5b <- conv5b
I0412 02:20:24.806555 30588 net.cpp:395] relu5b -> conv5b (in-place)
I0412 02:20:24.806563 30588 net.cpp:150] Setting up relu5b
I0412 02:20:24.806569 30588 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:20:24.806571 30588 net.cpp:165] Memory required for data: 10144383012
I0412 02:20:24.806574 30588 layer_factory.hpp:77] Creating layer conv5b_relu5b_0_split
I0412 02:20:24.806581 30588 net.cpp:100] Creating Layer conv5b_relu5b_0_split
I0412 02:20:24.806582 30588 net.cpp:434] conv5b_relu5b_0_split <- conv5b
I0412 02:20:24.806588 30588 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_0
I0412 02:20:24.806596 30588 net.cpp:408] conv5b_relu5b_0_split -> conv5b_relu5b_0_split_1
I0412 02:20:24.806638 30588 net.cpp:150] Setting up conv5b_relu5b_0_split
I0412 02:20:24.806644 30588 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:20:24.806648 30588 net.cpp:157] Top shape: 1 512 96 7 7 (2408448)
I0412 02:20:24.806650 30588 net.cpp:165] Memory required for data: 10163650596
I0412 02:20:24.806653 30588 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0412 02:20:24.806663 30588 net.cpp:100] Creating Layer rpn_conv/3x3
I0412 02:20:24.806668 30588 net.cpp:434] rpn_conv/3x3 <- conv5b_relu5b_0_split_0
I0412 02:20:24.806674 30588 net.cpp:408] rpn_conv/3x3 -> rpn/output
I0412 02:20:24.884552 30588 net.cpp:150] Setting up rpn_conv/3x3
I0412 02:20:24.884621 30588 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 02:20:24.884649 30588 net.cpp:165] Memory required for data: 10166796324
I0412 02:20:24.884687 30588 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0412 02:20:24.884711 30588 net.cpp:100] Creating Layer rpn_relu/3x3
I0412 02:20:24.884727 30588 net.cpp:434] rpn_relu/3x3 <- rpn/output
I0412 02:20:24.884744 30588 net.cpp:395] rpn_relu/3x3 -> rpn/output (in-place)
I0412 02:20:24.884766 30588 net.cpp:150] Setting up rpn_relu/3x3
I0412 02:20:24.884783 30588 net.cpp:157] Top shape: 1 512 96 4 4 (786432)
I0412 02:20:24.884796 30588 net.cpp:165] Memory required for data: 10169942052
I0412 02:20:24.884809 30588 layer_factory.hpp:77] Creating layer rpn_conv/3x3_2
I0412 02:20:24.884835 30588 net.cpp:100] Creating Layer rpn_conv/3x3_2
I0412 02:20:24.884850 30588 net.cpp:434] rpn_conv/3x3_2 <- rpn/output
I0412 02:20:24.884869 30588 net.cpp:408] rpn_conv/3x3_2 -> rpn/output_2
I0412 02:20:24.978785 30588 net.cpp:150] Setting up rpn_conv/3x3_2
I0412 02:20:24.978824 30588 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 02:20:24.978829 30588 net.cpp:165] Memory required for data: 10170728484
I0412 02:20:24.978840 30588 layer_factory.hpp:77] Creating layer rpn_relu/3x3_2
I0412 02:20:24.978852 30588 net.cpp:100] Creating Layer rpn_relu/3x3_2
I0412 02:20:24.978859 30588 net.cpp:434] rpn_relu/3x3_2 <- rpn/output_2
I0412 02:20:24.978871 30588 net.cpp:395] rpn_relu/3x3_2 -> rpn/output_2 (in-place)
I0412 02:20:24.978883 30588 net.cpp:150] Setting up rpn_relu/3x3_2
I0412 02:20:24.978902 30588 net.cpp:157] Top shape: 1 512 96 2 2 (196608)
I0412 02:20:24.978909 30588 net.cpp:165] Memory required for data: 10171514916
I0412 02:20:24.978912 30588 layer_factory.hpp:77] Creating layer rpn/output_pool
I0412 02:20:24.978921 30588 net.cpp:100] Creating Layer rpn/output_pool
I0412 02:20:24.978926 30588 net.cpp:434] rpn/output_pool <- rpn/output_2
I0412 02:20:24.978938 30588 net.cpp:408] rpn/output_pool -> rpn/output_pool
I0412 02:20:24.978996 30588 net.cpp:150] Setting up rpn/output_pool
I0412 02:20:24.979005 30588 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 02:20:24.979009 30588 net.cpp:165] Memory required for data: 10171711524
I0412 02:20:24.979013 30588 layer_factory.hpp:77] Creating layer rpn/output_pool_rpn/output_pool_0_split
I0412 02:20:24.979022 30588 net.cpp:100] Creating Layer rpn/output_pool_rpn/output_pool_0_split
I0412 02:20:24.979037 30588 net.cpp:434] rpn/output_pool_rpn/output_pool_0_split <- rpn/output_pool
I0412 02:20:24.979048 30588 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_0
I0412 02:20:24.979056 30588 net.cpp:408] rpn/output_pool_rpn/output_pool_0_split -> rpn/output_pool_rpn/output_pool_0_split_1
I0412 02:20:24.979105 30588 net.cpp:150] Setting up rpn/output_pool_rpn/output_pool_0_split
I0412 02:20:24.979112 30588 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 02:20:24.979118 30588 net.cpp:157] Top shape: 1 512 96 1 1 (49152)
I0412 02:20:24.979125 30588 net.cpp:165] Memory required for data: 10172104740
I0412 02:20:24.979130 30588 layer_factory.hpp:77] Creating layer rpn_cls_score
I0412 02:20:24.979141 30588 net.cpp:100] Creating Layer rpn_cls_score
I0412 02:20:24.979147 30588 net.cpp:434] rpn_cls_score <- rpn/output_pool_rpn/output_pool_0_split_0
I0412 02:20:24.979156 30588 net.cpp:408] rpn_cls_score -> rpn_cls_score
I0412 02:20:24.979801 30588 net.cpp:150] Setting up rpn_cls_score
I0412 02:20:24.979820 30588 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:20:24.979825 30588 net.cpp:165] Memory required for data: 10172133156
I0412 02:20:24.979833 30588 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0412 02:20:24.979842 30588 net.cpp:100] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0412 02:20:24.979847 30588 net.cpp:434] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0412 02:20:24.979856 30588 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0412 02:20:24.979866 30588 net.cpp:408] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0412 02:20:24.979926 30588 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0412 02:20:24.979933 30588 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:20:24.979939 30588 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:20:24.979944 30588 net.cpp:165] Memory required for data: 10172189988
I0412 02:20:24.979948 30588 layer_factory.hpp:77] Creating layer rpn_twin_pred
I0412 02:20:24.979965 30588 net.cpp:100] Creating Layer rpn_twin_pred
I0412 02:20:24.979970 30588 net.cpp:434] rpn_twin_pred <- rpn/output_pool_rpn/output_pool_0_split_1
I0412 02:20:24.979979 30588 net.cpp:408] rpn_twin_pred -> rpn_twin_pred
I0412 02:20:24.980545 30588 net.cpp:150] Setting up rpn_twin_pred
I0412 02:20:24.980559 30588 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:20:24.980563 30588 net.cpp:165] Memory required for data: 10172218404
I0412 02:20:24.980571 30588 layer_factory.hpp:77] Creating layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 02:20:24.980579 30588 net.cpp:100] Creating Layer rpn_twin_pred_rpn_twin_pred_0_split
I0412 02:20:24.980584 30588 net.cpp:434] rpn_twin_pred_rpn_twin_pred_0_split <- rpn_twin_pred
I0412 02:20:24.980592 30588 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 02:20:24.980602 30588 net.cpp:408] rpn_twin_pred_rpn_twin_pred_0_split -> rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 02:20:24.980648 30588 net.cpp:150] Setting up rpn_twin_pred_rpn_twin_pred_0_split
I0412 02:20:24.980657 30588 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:20:24.980662 30588 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:20:24.980669 30588 net.cpp:165] Memory required for data: 10172275236
I0412 02:20:24.980674 30588 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0412 02:20:24.980684 30588 net.cpp:100] Creating Layer rpn_cls_score_reshape
I0412 02:20:24.980689 30588 net.cpp:434] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0412 02:20:24.980698 30588 net.cpp:408] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0412 02:20:24.980733 30588 net.cpp:150] Setting up rpn_cls_score_reshape
I0412 02:20:24.980741 30588 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:20:24.980744 30588 net.cpp:165] Memory required for data: 10172303652
I0412 02:20:24.980749 30588 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 02:20:24.980756 30588 net.cpp:100] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 02:20:24.980762 30588 net.cpp:434] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0412 02:20:24.980772 30588 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 02:20:24.980788 30588 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 02:20:24.980796 30588 net.cpp:408] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 02:20:24.980852 30588 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0412 02:20:24.980860 30588 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:20:24.980865 30588 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:20:24.980871 30588 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:20:24.980876 30588 net.cpp:165] Memory required for data: 10172388900
I0412 02:20:24.980880 30588 layer_factory.hpp:77] Creating layer rpn-data
I0412 02:20:24.981303 30588 net.cpp:100] Creating Layer rpn-data
I0412 02:20:24.981334 30588 net.cpp:434] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0412 02:20:24.981353 30588 net.cpp:434] rpn-data <- gt_boxes_data_1_split_0
I0412 02:20:24.981360 30588 net.cpp:434] rpn-data <- data_data_0_split_1
I0412 02:20:24.981370 30588 net.cpp:408] rpn-data -> rpn_labels
I0412 02:20:24.981380 30588 net.cpp:408] rpn-data -> rpn_twin_targets
I0412 02:20:24.981390 30588 net.cpp:408] rpn-data -> rpn_twin_inside_weights
I0412 02:20:24.981400 30588 net.cpp:408] rpn-data -> rpn_twin_outside_weights
I0412 02:20:24.983979 30588 net.cpp:150] Setting up rpn-data
I0412 02:20:24.984004 30588 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 02:20:24.984011 30588 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:20:24.984016 30588 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:20:24.984021 30588 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:20:24.984025 30588 net.cpp:165] Memory required for data: 10172488356
I0412 02:20:24.984030 30588 layer_factory.hpp:77] Creating layer rpn_labels_rpn-data_0_split
I0412 02:20:24.984041 30588 net.cpp:100] Creating Layer rpn_labels_rpn-data_0_split
I0412 02:20:24.984048 30588 net.cpp:434] rpn_labels_rpn-data_0_split <- rpn_labels
I0412 02:20:24.984056 30588 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_0
I0412 02:20:24.984067 30588 net.cpp:408] rpn_labels_rpn-data_0_split -> rpn_labels_rpn-data_0_split_1
I0412 02:20:24.984112 30588 net.cpp:150] Setting up rpn_labels_rpn-data_0_split
I0412 02:20:24.984119 30588 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 02:20:24.984125 30588 net.cpp:157] Top shape: 1 1 3552 1 1 (3552)
I0412 02:20:24.984129 30588 net.cpp:165] Memory required for data: 10172516772
I0412 02:20:24.984133 30588 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 02:20:24.984143 30588 net.cpp:100] Creating Layer rpn_loss_cls
I0412 02:20:24.984148 30588 net.cpp:434] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0412 02:20:24.984153 30588 net.cpp:434] rpn_loss_cls <- rpn_labels_rpn-data_0_split_0
I0412 02:20:24.984160 30588 net.cpp:408] rpn_loss_cls -> rpn_cls_loss
I0412 02:20:24.984172 30588 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0412 02:20:24.984382 30588 net.cpp:150] Setting up rpn_loss_cls
I0412 02:20:24.984418 30588 net.cpp:157] Top shape: (1)
I0412 02:20:24.984426 30588 net.cpp:160]     with loss weight 1
I0412 02:20:24.984449 30588 net.cpp:165] Memory required for data: 10172516776
I0412 02:20:24.984454 30588 layer_factory.hpp:77] Creating layer rpn_loss_twin
I0412 02:20:24.984464 30588 net.cpp:100] Creating Layer rpn_loss_twin
I0412 02:20:24.984472 30588 net.cpp:434] rpn_loss_twin <- rpn_twin_pred_rpn_twin_pred_0_split_0
I0412 02:20:24.984477 30588 net.cpp:434] rpn_loss_twin <- rpn_twin_targets
I0412 02:20:24.984483 30588 net.cpp:434] rpn_loss_twin <- rpn_twin_inside_weights
I0412 02:20:24.984488 30588 net.cpp:434] rpn_loss_twin <- rpn_twin_outside_weights
I0412 02:20:24.984508 30588 net.cpp:408] rpn_loss_twin -> rpn_loss_twin
I0412 02:20:24.984632 30588 net.cpp:150] Setting up rpn_loss_twin
I0412 02:20:24.984639 30588 net.cpp:157] Top shape: (1)
I0412 02:20:24.984643 30588 net.cpp:160]     with loss weight 1
I0412 02:20:24.984650 30588 net.cpp:165] Memory required for data: 10172516780
I0412 02:20:24.984655 30588 layer_factory.hpp:77] Creating layer rpn_accuarcy
I0412 02:20:24.984664 30588 net.cpp:100] Creating Layer rpn_accuarcy
I0412 02:20:24.984670 30588 net.cpp:434] rpn_accuarcy <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0412 02:20:24.984676 30588 net.cpp:434] rpn_accuarcy <- rpn_labels_rpn-data_0_split_1
I0412 02:20:24.984688 30588 net.cpp:408] rpn_accuarcy -> rpn_accuarcy
I0412 02:20:24.984696 30588 net.cpp:408] rpn_accuarcy -> rpn_accuarcy_class
I0412 02:20:24.984745 30588 net.cpp:150] Setting up rpn_accuarcy
I0412 02:20:24.984751 30588 net.cpp:157] Top shape: (1)
I0412 02:20:24.984757 30588 net.cpp:157] Top shape: 2 (2)
I0412 02:20:24.984760 30588 net.cpp:165] Memory required for data: 10172516792
I0412 02:20:24.984766 30588 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0412 02:20:24.984771 30588 net.cpp:100] Creating Layer rpn_cls_prob
I0412 02:20:24.984778 30588 net.cpp:434] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_2
I0412 02:20:24.984786 30588 net.cpp:408] rpn_cls_prob -> rpn_cls_prob
I0412 02:20:24.984861 30588 net.cpp:150] Setting up rpn_cls_prob
I0412 02:20:24.984869 30588 net.cpp:157] Top shape: 1 2 3552 1 1 (7104)
I0412 02:20:24.984872 30588 net.cpp:165] Memory required for data: 10172545208
I0412 02:20:24.984877 30588 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0412 02:20:24.984886 30588 net.cpp:100] Creating Layer rpn_cls_prob_reshape
I0412 02:20:24.984890 30588 net.cpp:434] rpn_cls_prob_reshape <- rpn_cls_prob
I0412 02:20:24.984899 30588 net.cpp:408] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0412 02:20:24.984935 30588 net.cpp:150] Setting up rpn_cls_prob_reshape
I0412 02:20:24.984941 30588 net.cpp:157] Top shape: 1 74 96 1 1 (7104)
I0412 02:20:24.984946 30588 net.cpp:165] Memory required for data: 10172573624
I0412 02:20:24.984951 30588 layer_factory.hpp:77] Creating layer proposal
I0412 02:20:24.985539 30588 net.cpp:100] Creating Layer proposal
I0412 02:20:24.985569 30588 net.cpp:434] proposal <- rpn_cls_prob_reshape
I0412 02:20:24.985589 30588 net.cpp:434] proposal <- rpn_twin_pred_rpn_twin_pred_0_split_1
I0412 02:20:24.985604 30588 net.cpp:408] proposal -> rpn_rois
I0412 02:20:24.989642 30588 net.cpp:150] Setting up proposal
I0412 02:20:24.989665 30588 net.cpp:157] Top shape: 1 3 (3)
I0412 02:20:24.989668 30588 net.cpp:165] Memory required for data: 10172573636
I0412 02:20:24.989675 30588 layer_factory.hpp:77] Creating layer roi-data
I0412 02:20:24.989866 30588 net.cpp:100] Creating Layer roi-data
I0412 02:20:24.989877 30588 net.cpp:434] roi-data <- rpn_rois
I0412 02:20:24.989886 30588 net.cpp:434] roi-data <- gt_boxes_data_1_split_1
I0412 02:20:24.989895 30588 net.cpp:408] roi-data -> rois
I0412 02:20:24.989907 30588 net.cpp:408] roi-data -> labels
I0412 02:20:24.989931 30588 net.cpp:408] roi-data -> twin_targets
I0412 02:20:24.989958 30588 net.cpp:408] roi-data -> twin_inside_weights
I0412 02:20:24.989970 30588 net.cpp:408] roi-data -> twin_outside_weights
I0412 02:20:24.990383 30588 net.cpp:150] Setting up roi-data
I0412 02:20:24.990396 30588 net.cpp:157] Top shape: 1 3 (3)
I0412 02:20:24.990402 30588 net.cpp:157] Top shape: 1 1 (1)
I0412 02:20:24.990407 30588 net.cpp:157] Top shape: 1 402 (402)
I0412 02:20:24.990412 30588 net.cpp:157] Top shape: 1 402 (402)
I0412 02:20:24.990417 30588 net.cpp:157] Top shape: 1 402 (402)
I0412 02:20:24.990422 30588 net.cpp:165] Memory required for data: 10172578476
I0412 02:20:24.990427 30588 layer_factory.hpp:77] Creating layer labels_roi-data_1_split
I0412 02:20:24.990435 30588 net.cpp:100] Creating Layer labels_roi-data_1_split
I0412 02:20:24.990442 30588 net.cpp:434] labels_roi-data_1_split <- labels
I0412 02:20:24.990449 30588 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_0
I0412 02:20:24.990459 30588 net.cpp:408] labels_roi-data_1_split -> labels_roi-data_1_split_1
I0412 02:20:24.990530 30588 net.cpp:150] Setting up labels_roi-data_1_split
I0412 02:20:24.990540 30588 net.cpp:157] Top shape: 1 1 (1)
I0412 02:20:24.990545 30588 net.cpp:157] Top shape: 1 1 (1)
I0412 02:20:24.990550 30588 net.cpp:165] Memory required for data: 10172578484
I0412 02:20:24.990553 30588 layer_factory.hpp:77] Creating layer roi_pool5
I0412 02:20:24.990562 30588 net.cpp:100] Creating Layer roi_pool5
I0412 02:20:24.990568 30588 net.cpp:434] roi_pool5 <- conv5b_relu5b_0_split_1
I0412 02:20:24.990576 30588 net.cpp:434] roi_pool5 <- rois
I0412 02:20:24.990582 30588 net.cpp:408] roi_pool5 -> pool5
I0412 02:20:24.990592 30588 roi_pooling_layer.cpp:34] Temporal scale: 0.125
I0412 02:20:24.990617 30588 roi_pooling_layer.cpp:35] Spatial scale: 0.0625
I0412 02:20:24.990684 30588 net.cpp:150] Setting up roi_pool5
I0412 02:20:24.990692 30588 net.cpp:157] Top shape: 1 512 1 4 4 (8192)
I0412 02:20:24.990697 30588 net.cpp:165] Memory required for data: 10172611252
I0412 02:20:24.990701 30588 layer_factory.hpp:77] Creating layer fc6
I0412 02:20:24.990712 30588 net.cpp:100] Creating Layer fc6
I0412 02:20:24.990717 30588 net.cpp:434] fc6 <- pool5
I0412 02:20:24.990726 30588 net.cpp:408] fc6 -> fc6
I0412 02:20:25.310330 30588 net.cpp:150] Setting up fc6
I0412 02:20:25.310405 30588 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:20:25.310425 30588 net.cpp:165] Memory required for data: 10172627636
I0412 02:20:25.310449 30588 layer_factory.hpp:77] Creating layer relu6
I0412 02:20:25.310487 30588 net.cpp:100] Creating Layer relu6
I0412 02:20:25.310508 30588 net.cpp:434] relu6 <- fc6
I0412 02:20:25.310535 30588 net.cpp:395] relu6 -> fc6 (in-place)
I0412 02:20:25.310564 30588 net.cpp:150] Setting up relu6
I0412 02:20:25.310585 30588 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:20:25.310603 30588 net.cpp:165] Memory required for data: 10172644020
I0412 02:20:25.310622 30588 layer_factory.hpp:77] Creating layer drop6
I0412 02:20:25.310644 30588 net.cpp:100] Creating Layer drop6
I0412 02:20:25.310663 30588 net.cpp:434] drop6 <- fc6
I0412 02:20:25.310685 30588 net.cpp:395] drop6 -> fc6 (in-place)
I0412 02:20:25.310745 30588 net.cpp:150] Setting up drop6
I0412 02:20:25.310770 30588 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:20:25.310787 30588 net.cpp:165] Memory required for data: 10172660404
I0412 02:20:25.310806 30588 layer_factory.hpp:77] Creating layer fc6_drop6_0_split
I0412 02:20:25.310825 30588 net.cpp:100] Creating Layer fc6_drop6_0_split
I0412 02:20:25.310844 30588 net.cpp:434] fc6_drop6_0_split <- fc6
I0412 02:20:25.310865 30588 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_0
I0412 02:20:25.310890 30588 net.cpp:408] fc6_drop6_0_split -> fc6_drop6_0_split_1
I0412 02:20:25.310978 30588 net.cpp:150] Setting up fc6_drop6_0_split
I0412 02:20:25.311003 30588 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:20:25.311025 30588 net.cpp:157] Top shape: 1 4096 (4096)
I0412 02:20:25.311043 30588 net.cpp:165] Memory required for data: 10172693172
I0412 02:20:25.311060 30588 layer_factory.hpp:77] Creating layer cls_score
I0412 02:20:25.311087 30588 net.cpp:100] Creating Layer cls_score
I0412 02:20:25.311108 30588 net.cpp:434] cls_score <- fc6_drop6_0_split_0
I0412 02:20:25.311134 30588 net.cpp:408] cls_score -> cls_score
I0412 02:20:25.322922 30588 net.cpp:150] Setting up cls_score
I0412 02:20:25.322950 30588 net.cpp:157] Top shape: 1 201 (201)
I0412 02:20:25.322954 30588 net.cpp:165] Memory required for data: 10172693976
I0412 02:20:25.322966 30588 layer_factory.hpp:77] Creating layer cls_score_cls_score_0_split
I0412 02:20:25.322978 30588 net.cpp:100] Creating Layer cls_score_cls_score_0_split
I0412 02:20:25.322985 30588 net.cpp:434] cls_score_cls_score_0_split <- cls_score
I0412 02:20:25.322994 30588 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_0
I0412 02:20:25.323006 30588 net.cpp:408] cls_score_cls_score_0_split -> cls_score_cls_score_0_split_1
I0412 02:20:25.323062 30588 net.cpp:150] Setting up cls_score_cls_score_0_split
I0412 02:20:25.323071 30588 net.cpp:157] Top shape: 1 201 (201)
I0412 02:20:25.323077 30588 net.cpp:157] Top shape: 1 201 (201)
I0412 02:20:25.323081 30588 net.cpp:165] Memory required for data: 10172695584
I0412 02:20:25.323088 30588 layer_factory.hpp:77] Creating layer twin_pred
I0412 02:20:25.323099 30588 net.cpp:100] Creating Layer twin_pred
I0412 02:20:25.323103 30588 net.cpp:434] twin_pred <- fc6_drop6_0_split_1
I0412 02:20:25.323115 30588 net.cpp:408] twin_pred -> twin_pred
I0412 02:20:25.343621 30588 net.cpp:150] Setting up twin_pred
I0412 02:20:25.343647 30588 net.cpp:157] Top shape: 1 402 (402)
I0412 02:20:25.343650 30588 net.cpp:165] Memory required for data: 10172697192
I0412 02:20:25.343660 30588 layer_factory.hpp:77] Creating layer loss_cls
I0412 02:20:25.343670 30588 net.cpp:100] Creating Layer loss_cls
I0412 02:20:25.343677 30588 net.cpp:434] loss_cls <- cls_score_cls_score_0_split_0
I0412 02:20:25.343683 30588 net.cpp:434] loss_cls <- labels_roi-data_1_split_0
I0412 02:20:25.343689 30588 net.cpp:408] loss_cls -> loss_cls
I0412 02:20:25.343699 30588 layer_factory.hpp:77] Creating layer loss_cls
I0412 02:20:25.343812 30588 net.cpp:150] Setting up loss_cls
I0412 02:20:25.343819 30588 net.cpp:157] Top shape: (1)
I0412 02:20:25.343824 30588 net.cpp:160]     with loss weight 1
I0412 02:20:25.343837 30588 net.cpp:165] Memory required for data: 10172697196
I0412 02:20:25.343842 30588 layer_factory.hpp:77] Creating layer loss_twin
I0412 02:20:25.343850 30588 net.cpp:100] Creating Layer loss_twin
I0412 02:20:25.343876 30588 net.cpp:434] loss_twin <- twin_pred
I0412 02:20:25.343883 30588 net.cpp:434] loss_twin <- twin_targets
I0412 02:20:25.343888 30588 net.cpp:434] loss_twin <- twin_inside_weights
I0412 02:20:25.343894 30588 net.cpp:434] loss_twin <- twin_outside_weights
I0412 02:20:25.343904 30588 net.cpp:408] loss_twin -> loss_twin
I0412 02:20:25.344012 30588 net.cpp:150] Setting up loss_twin
I0412 02:20:25.344020 30588 net.cpp:157] Top shape: (1)
I0412 02:20:25.344024 30588 net.cpp:160]     with loss weight 1
I0412 02:20:25.344032 30588 net.cpp:165] Memory required for data: 10172697200
I0412 02:20:25.344036 30588 layer_factory.hpp:77] Creating layer accuarcy
I0412 02:20:25.344055 30588 net.cpp:100] Creating Layer accuarcy
I0412 02:20:25.344060 30588 net.cpp:434] accuarcy <- cls_score_cls_score_0_split_1
I0412 02:20:25.344066 30588 net.cpp:434] accuarcy <- labels_roi-data_1_split_1
I0412 02:20:25.344074 30588 net.cpp:408] accuarcy -> accuarcy
I0412 02:20:25.344084 30588 net.cpp:150] Setting up accuarcy
I0412 02:20:25.344094 30588 net.cpp:157] Top shape: (1)
I0412 02:20:25.344099 30588 net.cpp:165] Memory required for data: 10172697204
I0412 02:20:25.344105 30588 net.cpp:228] accuarcy does not need backward computation.
I0412 02:20:25.344113 30588 net.cpp:226] loss_twin needs backward computation.
I0412 02:20:25.344120 30588 net.cpp:226] loss_cls needs backward computation.
I0412 02:20:25.344126 30588 net.cpp:226] twin_pred needs backward computation.
I0412 02:20:25.344132 30588 net.cpp:226] cls_score_cls_score_0_split needs backward computation.
I0412 02:20:25.344137 30588 net.cpp:226] cls_score needs backward computation.
I0412 02:20:25.344142 30588 net.cpp:226] fc6_drop6_0_split needs backward computation.
I0412 02:20:25.344149 30588 net.cpp:226] drop6 needs backward computation.
I0412 02:20:25.344153 30588 net.cpp:226] relu6 needs backward computation.
I0412 02:20:25.344158 30588 net.cpp:226] fc6 needs backward computation.
I0412 02:20:25.344166 30588 net.cpp:226] roi_pool5 needs backward computation.
I0412 02:20:25.344172 30588 net.cpp:228] labels_roi-data_1_split does not need backward computation.
I0412 02:20:25.344179 30588 net.cpp:226] roi-data needs backward computation.
I0412 02:20:25.344184 30588 net.cpp:226] proposal needs backward computation.
I0412 02:20:25.344192 30588 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0412 02:20:25.344197 30588 net.cpp:226] rpn_cls_prob needs backward computation.
I0412 02:20:25.344203 30588 net.cpp:228] rpn_accuarcy does not need backward computation.
I0412 02:20:25.344208 30588 net.cpp:226] rpn_loss_twin needs backward computation.
I0412 02:20:25.344218 30588 net.cpp:226] rpn_loss_cls needs backward computation.
I0412 02:20:25.344224 30588 net.cpp:228] rpn_labels_rpn-data_0_split does not need backward computation.
I0412 02:20:25.344231 30588 net.cpp:226] rpn-data needs backward computation.
I0412 02:20:25.344239 30588 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0412 02:20:25.344245 30588 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0412 02:20:25.344251 30588 net.cpp:226] rpn_twin_pred_rpn_twin_pred_0_split needs backward computation.
I0412 02:20:25.344257 30588 net.cpp:226] rpn_twin_pred needs backward computation.
I0412 02:20:25.344264 30588 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0412 02:20:25.344269 30588 net.cpp:226] rpn_cls_score needs backward computation.
I0412 02:20:25.344280 30588 net.cpp:226] rpn/output_pool_rpn/output_pool_0_split needs backward computation.
I0412 02:20:25.344285 30588 net.cpp:226] rpn/output_pool needs backward computation.
I0412 02:20:25.344291 30588 net.cpp:226] rpn_relu/3x3_2 needs backward computation.
I0412 02:20:25.344296 30588 net.cpp:226] rpn_conv/3x3_2 needs backward computation.
I0412 02:20:25.344303 30588 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0412 02:20:25.344308 30588 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0412 02:20:25.344316 30588 net.cpp:226] conv5b_relu5b_0_split needs backward computation.
I0412 02:20:25.344321 30588 net.cpp:226] relu5b needs backward computation.
I0412 02:20:25.344347 30588 net.cpp:226] conv5b needs backward computation.
I0412 02:20:25.344352 30588 net.cpp:226] relu5a needs backward computation.
I0412 02:20:25.344357 30588 net.cpp:226] conv5a needs backward computation.
I0412 02:20:25.344362 30588 net.cpp:226] pool4 needs backward computation.
I0412 02:20:25.344368 30588 net.cpp:226] relu4b needs backward computation.
I0412 02:20:25.344374 30588 net.cpp:226] conv4b needs backward computation.
I0412 02:20:25.344382 30588 net.cpp:226] relu4a needs backward computation.
I0412 02:20:25.344385 30588 net.cpp:226] conv4a needs backward computation.
I0412 02:20:25.344390 30588 net.cpp:226] pool3 needs backward computation.
I0412 02:20:25.344395 30588 net.cpp:226] relu3b needs backward computation.
I0412 02:20:25.344401 30588 net.cpp:226] conv3b needs backward computation.
I0412 02:20:25.344406 30588 net.cpp:226] relu3a needs backward computation.
I0412 02:20:25.344411 30588 net.cpp:226] conv3a needs backward computation.
I0412 02:20:25.344419 30588 net.cpp:228] pool2 does not need backward computation.
I0412 02:20:25.344424 30588 net.cpp:228] relu2a does not need backward computation.
I0412 02:20:25.344429 30588 net.cpp:228] conv2a does not need backward computation.
I0412 02:20:25.344434 30588 net.cpp:228] pool1 does not need backward computation.
I0412 02:20:25.344440 30588 net.cpp:228] relu1a does not need backward computation.
I0412 02:20:25.344445 30588 net.cpp:228] conv1a does not need backward computation.
I0412 02:20:25.344451 30588 net.cpp:228] gt_boxes_data_1_split does not need backward computation.
I0412 02:20:25.344458 30588 net.cpp:228] data_data_0_split does not need backward computation.
I0412 02:20:25.344465 30588 net.cpp:228] data does not need backward computation.
I0412 02:20:25.344471 30588 net.cpp:270] This network produces output accuarcy
I0412 02:20:25.344478 30588 net.cpp:270] This network produces output loss_cls
I0412 02:20:25.344485 30588 net.cpp:270] This network produces output loss_twin
I0412 02:20:25.344491 30588 net.cpp:270] This network produces output rpn_accuarcy
I0412 02:20:25.344496 30588 net.cpp:270] This network produces output rpn_accuarcy_class
I0412 02:20:25.344502 30588 net.cpp:270] This network produces output rpn_cls_loss
I0412 02:20:25.344506 30588 net.cpp:270] This network produces output rpn_loss_twin
I0412 02:20:25.344547 30588 net.cpp:283] Network initialization done.
I0412 02:20:25.344677 30588 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ./pretrain/activitynet_iter_30000_3fps.caffemodel
I0412 02:20:25.520598 30588 net.cpp:761] Ignoring source layer pool5
I0412 02:20:25.543684 30588 net.cpp:761] Ignoring source layer fc7
I0412 02:20:25.543742 30588 net.cpp:761] Ignoring source layer relu7
I0412 02:20:25.543757 30588 net.cpp:761] Ignoring source layer drop7
I0412 02:20:25.543772 30588 net.cpp:761] Ignoring source layer fc8-200
I0412 02:20:25.543787 30588 net.cpp:761] Ignoring source layer loss
Solving...
BlobFetcher started
99
(array([0]), array([97]))
Traceback (most recent call last):
  File "./experiments/activitynet/train_net.py", line 95, in <module>
    max_iters=args.max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 123, in train_net
    model_paths = sw.train_model(max_iters)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/tdcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/data/aman/R-C3D/experiments/activitynet/../../lib/roi_data_layer/layer.py", line 130, in forward
    blob1, blob2 = blob
ValueError: need more than 1 value to unpack
Terminating BlobFetcher
